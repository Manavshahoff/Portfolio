{"version":3,"file":"static/js/main.8422f7c5.js","mappings":"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","sources":["../node_modules/invariant/browser.js","../node_modules/jsonp/index.js","../node_modules/jsonp/node_modules/debug/src/browser.js","../node_modules/jsonp/node_modules/debug/src/debug.js","../node_modules/jsonp/node_modules/ms/index.js","../node_modules/lodash.throttle/index.js","../node_modules/prop-types-extra/lib/all.js","../node_modules/prop-types-extra/lib/utils/createChainableTypeChecker.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../node_modules/react-multi-carousel/index.js","../node_modules/react-multi-carousel/lib/Arrows.js","../node_modules/react-multi-carousel/lib/Carousel.js","../node_modules/react-multi-carousel/lib/CarouselItems.js","../node_modules/react-multi-carousel/lib/Dots.js","../node_modules/react-multi-carousel/lib/index.js","../node_modules/react-multi-carousel/lib/types.js","../node_modules/react-multi-carousel/lib/utils/clones.js","../node_modules/react-multi-carousel/lib/utils/common.js","../node_modules/react-multi-carousel/lib/utils/dots.js","../node_modules/react-multi-carousel/lib/utils/elementWidth.js","../node_modules/react-multi-carousel/lib/utils/index.js","../node_modules/react-multi-carousel/lib/utils/mouseOrTouchMove.js","../node_modules/react-multi-carousel/lib/utils/next.js","../node_modules/react-multi-carousel/lib/utils/previous.js","../node_modules/react-multi-carousel/lib/utils/throttle.js","../node_modules/react-multi-carousel/lib/utils/throwError.js","../node_modules/react-on-screen/lib/TrackVisibility.js","../node_modules/react-on-screen/lib/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../node_modules/shallowequal/index.js","../node_modules/to-querystring/lib/to-querystring.min.js","../node_modules/classnames/index.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","logo.svg","../node_modules/@restart/ui/esm/SelectableContext.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/uncontrollable/lib/esm/utils.js","../node_modules/uncontrollable/lib/esm/hook.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/react-bootstrap/esm/ThemeProvider.js","../node_modules/react-bootstrap/esm/NavbarBrand.js","../node_modules/dom-helpers/esm/ownerDocument.js","../node_modules/dom-helpers/esm/getComputedStyle.js","../node_modules/dom-helpers/esm/ownerWindow.js","../node_modules/dom-helpers/esm/hyphenate.js","../node_modules/dom-helpers/esm/hyphenateStyle.js","../node_modules/dom-helpers/esm/isTransform.js","../node_modules/dom-helpers/esm/css.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/react-transition-group/esm/utils/reflow.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/addEventListener.js","../node_modules/dom-helpers/esm/removeEventListener.js","../node_modules/dom-helpers/esm/listen.js","../node_modules/dom-helpers/esm/transitionEnd.js","../node_modules/dom-helpers/esm/triggerEvent.js","../node_modules/react-bootstrap/esm/transitionEndListener.js","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/triggerBrowserReflow.js","../node_modules/@restart/hooks/esm/useMergedRefs.js","../node_modules/react-bootstrap/esm/TransitionWrapper.js","../node_modules/react-bootstrap/esm/safeFindDOMNode.js","../node_modules/react-bootstrap/esm/Collapse.js","../node_modules/react-bootstrap/esm/NavbarContext.js","../node_modules/react-bootstrap/esm/NavbarCollapse.js","../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/react-bootstrap/esm/NavbarToggle.js","../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/@restart/hooks/esm/useMediaQuery.js","../node_modules/@restart/hooks/esm/useBreakpoint.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/NoopTransition.js","../node_modules/@restart/ui/esm/useRTGTransitionProps.js","../node_modules/@restart/ui/esm/utils.js","../node_modules/@restart/ui/esm/RTGTransition.js","../node_modules/@restart/ui/esm/ImperativeTransition.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/react-bootstrap/esm/OffcanvasBody.js","../node_modules/react-bootstrap/esm/OffcanvasToggling.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/OffcanvasHeader.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/OffcanvasTitle.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/Offcanvas.js","../node_modules/react-bootstrap/esm/NavbarOffcanvas.js","../node_modules/react-bootstrap/esm/NavbarText.js","../node_modules/react-bootstrap/esm/Navbar.js","../node_modules/react-bootstrap/esm/Container.js","../node_modules/@restart/ui/esm/NavContext.js","../node_modules/@restart/ui/esm/TabContext.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/@restart/ui/esm/NavItem.js","../node_modules/@restart/ui/esm/Nav.js","../node_modules/@restart/hooks/esm/useForceUpdate.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/NavItem.js","../node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/react-bootstrap/esm/NavLink.js","../node_modules/react-bootstrap/esm/Nav.js","assets/img/logo.svg","assets/img/nav-icon1.svg","assets/img/nav-icon2.svg","assets/img/nav-icon3.svg","../node_modules/@remix-run/router/history.ts","../node_modules/@remix-run/router/utils.ts","../node_modules/@remix-run/router/router.ts","../node_modules/react-router/lib/context.ts","../node_modules/react-router/lib/hooks.tsx","../node_modules/react-router/lib/components.tsx","../node_modules/react-router-dom/dom.ts","../node_modules/react-router-dom/index.tsx","../node_modules/react-router-hash-link/node_modules/tslib/tslib.es6.js","../node_modules/react-router-hash-link/src/HashLink.jsx","Components/NavBar.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/Col.js","assets/img/header-img.svg","../node_modules/react-bootstrap-icons/dist/icons/arrow-right-circle.js","Components/Banner.js","assets/img/meter1.svg","assets/img/meter2.svg","assets/img/meter3.svg","assets/img/arrow1.svg","assets/img/arrow2.svg","Components/Skills.js","../node_modules/@restart/ui/node_modules/uncontrollable/lib/esm/index.js","../packages/@react-aria/ssr/src/SSRProvider.tsx","../node_modules/@restart/ui/esm/TabPanel.js","../node_modules/@restart/ui/esm/Tabs.js","../node_modules/react-bootstrap/esm/getTabTransitionComponent.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Tab.js","Components/ProjectCard.js","Components/Projects.js","assets/img/contact-img.svg","Components/Contact.js","../node_modules/react-mailchimp-subscribe/es/SimpleForm.js","../node_modules/react-mailchimp-subscribe/es/index.js","../node_modules/react-bootstrap/esm/AlertHeading.js","../node_modules/react-bootstrap/esm/AlertLink.js","../node_modules/react-bootstrap/esm/Alert.js","Components/Newsletter.js","Components/MailchimpForm.js","Components/Footer.js","App.js","reportWebVitals.js","index.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","/**\n * Module dependencies\n */\n\nvar debug = require('debug')('jsonp');\n\n/**\n * Module exports.\n */\n\nmodule.exports = jsonp;\n\n/**\n * Callback index.\n */\n\nvar count = 0;\n\n/**\n * Noop function.\n */\n\nfunction noop(){}\n\n/**\n * JSONP handler\n *\n * Options:\n *  - param {String} qs parameter (`callback`)\n *  - prefix {String} qs parameter (`__jp`)\n *  - name {String} qs parameter (`prefix` + incr)\n *  - timeout {Number} how long after a timeout error is emitted (`60000`)\n *\n * @param {String} url\n * @param {Object|Function} optional options / callback\n * @param {Function} optional callback\n */\n\nfunction jsonp(url, opts, fn){\n  if ('function' == typeof opts) {\n    fn = opts;\n    opts = {};\n  }\n  if (!opts) opts = {};\n\n  var prefix = opts.prefix || '__jp';\n\n  // use the callback name that was passed if one was provided.\n  // otherwise generate a unique name by incrementing our counter.\n  var id = opts.name || (prefix + (count++));\n\n  var param = opts.param || 'callback';\n  var timeout = null != opts.timeout ? opts.timeout : 60000;\n  var enc = encodeURIComponent;\n  var target = document.getElementsByTagName('script')[0] || document.head;\n  var script;\n  var timer;\n\n\n  if (timeout) {\n    timer = setTimeout(function(){\n      cleanup();\n      if (fn) fn(new Error('Timeout'));\n    }, timeout);\n  }\n\n  function cleanup(){\n    if (script.parentNode) script.parentNode.removeChild(script);\n    window[id] = noop;\n    if (timer) clearTimeout(timer);\n  }\n\n  function cancel(){\n    if (window[id]) {\n      cleanup();\n    }\n  }\n\n  window[id] = function(data){\n    debug('jsonp got', data);\n    cleanup();\n    if (fn) fn(null, data);\n  };\n\n  // add qs component\n  url += (~url.indexOf('?') ? '&' : '?') + param + '=' + enc(id);\n  url = url.replace('?&', '?');\n\n  debug('jsonp req \"%s\"', url);\n\n  // create script\n  script = document.createElement('script');\n  script.src = url;\n  target.parentNode.insertBefore(script, target);\n\n  return cancel;\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = throttle;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = all;\n\nvar _createChainableTypeChecker = require('./utils/createChainableTypeChecker');\n\nvar _createChainableTypeChecker2 = _interopRequireDefault(_createChainableTypeChecker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction all() {\n  for (var _len = arguments.length, validators = Array(_len), _key = 0; _key < _len; _key++) {\n    validators[_key] = arguments[_key];\n  }\n\n  function allPropTypes() {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var error = null;\n\n    validators.forEach(function (validator) {\n      if (error != null) {\n        return;\n      }\n\n      var result = validator.apply(undefined, args);\n      if (result != null) {\n        error = result;\n      }\n    });\n\n    return error;\n  }\n\n  return (0, _createChainableTypeChecker2.default)(allPropTypes);\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createChainableTypeChecker;\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n// Mostly taken from ReactPropTypes.\n\nfunction createChainableTypeChecker(validate) {\n  function checkType(isRequired, props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (props[propName] == null) {\n      if (isRequired) {\n        return new Error('Required ' + location + ' `' + propFullNameSafe + '` was not specified ' + ('in `' + componentNameSafe + '`.'));\n      }\n\n      return null;\n    }\n\n    for (var _len = arguments.length, args = Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {\n      args[_key - 6] = arguments[_key];\n    }\n\n    return validate.apply(undefined, [props, propName, componentNameSafe, location, propFullNameSafe].concat(args));\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\nmodule.exports = exports['default'];","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;\nfunction Lg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction Mg(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function Ng(a){var b=a._init;return b(a._payload)}\nfunction Og(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Pg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Qg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&Ng(f)===b.type))return d=e(b,c.props),d.ref=Lg(a,b,c),d.return=a,d;d=Rg(c.type,c.key,c.props,null,a.mode,d);d.ref=Lg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=Sg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Tg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=Qg(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=Rg(b.type,b.key,b.props,null,a.mode,c),\nc.ref=Lg(a,null,b),c.return=a,c;case wa:return b=Sg(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Tg(b,a.mode,c,null),b.return=a,b;Mg(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);Mg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);Mg(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&Ng(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=Lg(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Tg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Rg(f.type,f.key,f.props,null,a.mode,h),h.ref=Lg(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Sg(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);Mg(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=Qg(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(a){var b=Wg.current;E(Wg);a._currentValue=b}function bh(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}\nfunction ch(a,b){Xg=a;Zg=Yg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(dh=!0),a.firstContext=null)}function eh(a){var b=a._currentValue;if(Zg!==a)if(a={context:a,memoizedValue:b,next:null},null===Yg){if(null===Xg)throw Error(p(308));Yg=a;Xg.dependencies={lanes:0,firstContext:a}}else Yg=Yg.next=a;return b}var fh=null;function gh(a){null===fh?fh=[a]:fh.push(a)}\nfunction hh(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,gh(b)):(c.next=e.next,e.next=c);b.interleaved=c;return ih(a,d)}function ih(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var jh=!1;function kh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction lh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function mh(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction nh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return ih(a,c)}e=d.interleaved;null===e?(b.next=b,gh(d)):(b.next=e.next,e.next=b);d.interleaved=b;return ih(a,c)}function oh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction ph(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction qh(a,b,c,d){var e=a.updateQueue;jh=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:jh=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);rh|=g;a.lanes=g;a.memoizedState=q}}\nfunction sh(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(a){if(a===th)throw Error(p(174));return a}\nfunction yh(a,b){G(wh,b);G(vh,a);G(uh,th);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(uh);G(uh,b)}function zh(){E(uh);E(vh);E(wh)}function Ah(a){xh(wh.current);var b=xh(uh.current);var c=lb(b,a.type);b!==c&&(G(vh,a),G(uh,c))}function Bh(a){vh.current===a&&(E(uh),E(vh))}var L=Uf(0);\nfunction Ch(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Dh=[];\nfunction Eh(){for(var a=0;a<Dh.length;a++)Dh[a]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p(321));}function Mh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Nh(a,b,c,d,e,f){Hh=f;M=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Fh.current=null===a||null===a.memoizedState?Oh:Ph;a=c(d,e);if(Jh){f=0;do{Jh=!1;Kh=0;if(25<=f)throw Error(p(301));f+=1;O=N=null;b.updateQueue=null;Fh.current=Qh;a=c(d,e)}while(Jh)}Fh.current=Rh;b=null!==N&&null!==N.next;Hh=0;O=N=M=null;Ih=!1;if(b)throw Error(p(300));return a}function Sh(){var a=0!==Kh;Kh=0;return a}\nfunction Th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===O?M.memoizedState=O=a:O=O.next=a;return O}function Uh(){if(null===N){var a=M.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===O?M.memoizedState:O.next;if(null!==b)O=b,N=a;else{if(null===a)throw Error(p(310));N=a;a={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null};null===O?M.memoizedState=O=a:O=O.next=a}return O}\nfunction Vh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Wh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Hh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;M.lanes|=m;rh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(dh=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,M.lanes|=f,rh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction Xh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(dh=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function Yh(){}\nfunction Zh(a,b){var c=M,d=Uh(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,dh=!0);d=d.queue;$h(ai.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==O&&O.memoizedState.tag&1){c.flags|=2048;bi(9,ci.bind(null,c,d,e,b),void 0,null);if(null===Q)throw Error(p(349));0!==(Hh&30)||di(c,b,e)}return e}function di(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction ci(a,b,c,d){b.value=c;b.getSnapshot=d;ei(b)&&fi(a)}function ai(a,b,c){return c(function(){ei(b)&&fi(a)})}function ei(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function fi(a){var b=ih(a,1);null!==b&&gi(b,a,1,-1)}\nfunction hi(a){var b=Th();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:a};b.queue=a;a=a.dispatch=ii.bind(null,M,a);return[b.memoizedState,a]}\nfunction bi(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function ji(){return Uh().memoizedState}function ki(a,b,c,d){var e=Th();M.flags|=a;e.memoizedState=bi(1|b,c,void 0,void 0===d?null:d)}\nfunction li(a,b,c,d){var e=Uh();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;f=g.destroy;if(null!==d&&Mh(d,g.deps)){e.memoizedState=bi(b,c,f,d);return}}M.flags|=a;e.memoizedState=bi(1|b,c,f,d)}function mi(a,b){return ki(8390656,8,a,b)}function $h(a,b){return li(2048,8,a,b)}function ni(a,b){return li(4,2,a,b)}function oi(a,b){return li(4,4,a,b)}\nfunction pi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function qi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return li(4,4,pi.bind(null,b,a),c)}function ri(){}function si(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction ti(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function ui(a,b,c){if(0===(Hh&21))return a.baseState&&(a.baseState=!1,dh=!0),a.memoizedState=c;He(c,b)||(c=yc(),M.lanes|=c,rh|=c,a.baseState=!0);return b}function vi(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Gh.transition;Gh.transition={};try{a(!1),b()}finally{C=c,Gh.transition=d}}function wi(){return Uh().memoizedState}\nfunction xi(a,b,c){var d=yi(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,c);else if(c=hh(a,b,c,d),null!==c){var e=R();gi(c,a,d,e);Bi(c,b,d)}}\nfunction ii(a,b,c){var d=yi(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,gh(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=hh(a,b,e,d);null!==c&&(e=R(),gi(c,a,d,e),Bi(c,b,d))}}\nfunction zi(a){var b=a.alternate;return a===M||null!==b&&b===M}function Ai(a,b){Jh=Ih=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Bi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(a,b){Th().memoizedState=[a,void 0===b?null:b];return a},useContext:eh,useEffect:mi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ki(4194308,\n4,pi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ki(4194308,4,a,b)},useInsertionEffect:function(a,b){return ki(4,2,a,b)},useMemo:function(a,b){var c=Th();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=xi.bind(null,M,a);return[d.memoizedState,a]},useRef:function(a){var b=\nTh();a={current:a};return b.memoizedState=a},useState:hi,useDebugValue:ri,useDeferredValue:function(a){return Th().memoizedState=a},useTransition:function(){var a=hi(!1),b=a[0];a=vi.bind(null,a[1]);Th().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=M,e=Th();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===Q)throw Error(p(349));0!==(Hh&30)||di(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;mi(ai.bind(null,d,\nf,a),[a]);d.flags|=2048;bi(9,ci.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=Th(),b=Q.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Kh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Lh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},\nuseDebugValue:ri,useDeferredValue:function(a){var b=Uh();return ui(b,N.memoizedState,a)},useTransition:function(){var a=Wh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return null===\nN?b.memoizedState=a:ui(b,N.memoizedState,a)},useTransition:function(){var a=Xh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}function Di(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Ei={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=R(),d=\nyi(a),e=mh(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=nh(a,e,d);null!==b&&(gi(b,a,d,c),oh(b,a,d))}};function Fi(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction Gi(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=eh(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Ei;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Hi(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Ei.enqueueReplaceState(b,b.state,null)}\nfunction Ii(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs={};kh(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=eh(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Di(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Ei.enqueueReplaceState(e,e.state,null),qh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}function Ji(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}\nfunction Ki(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}function Li(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Mi=\"function\"===typeof WeakMap?WeakMap:Map;function Ni(a,b,c){c=mh(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Oi||(Oi=!0,Pi=d);Li(a,b)};return c}\nfunction Qi(a,b,c){c=mh(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Li(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Li(a,b);\"function\"!==typeof d&&(null===Ri?Ri=new Set([this]):Ri.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Si(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Mi;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ti.bind(null,a,b,c),b.then(a,a))}function Ui(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Vi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=mh(-1,1),b.tag=2,nh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(a,b,c,d){b.child=null===a?Vg(b,null,c,d):Ug(b,a.child,c,d)}\nfunction Yi(a,b,c,d,e){c=c.render;var f=b.ref;ch(b,e);d=Nh(a,b,c,d,f,e);c=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&c&&vg(b);b.flags|=1;Xi(a,b,d,e);return b.child}\nfunction $i(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!aj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,bj(a,b,f,d,e);a=Rg(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return Zi(a,b,e)}b.flags|=1;a=Pg(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction bj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(dh=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(dh=!0);else return b.lanes=a.lanes,Zi(a,b,e)}return cj(a,b,c,d,e)}\nfunction dj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(ej,fj),fj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(ej,fj);fj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(ej,fj),fj|=d;Xi(a,b,e,c);return b.child}function gj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function cj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);ch(b,e);c=Nh(a,b,c,d,f,e);d=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&d&&vg(b);b.flags|=1;Xi(a,b,c,e);return b.child}\nfunction hj(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;ch(b,e);if(null===b.stateNode)ij(a,b),Gi(b,c,d),Ii(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=eh(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&Hi(b,g,d,l);jh=!1;var r=b.memoizedState;g.state=r;qh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||jh?(\"function\"===typeof m&&(Di(b,c,m,d),k=b.memoizedState),(h=jh||Fi(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;lh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Ci(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=eh(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&Hi(b,g,d,k);jh=!1;r=b.memoizedState;g.state=r;qh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||jh?(\"function\"===typeof y&&(Di(b,c,y,d),n=b.memoizedState),(l=jh||Fi(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return jj(a,b,c,d,f,e)}\nfunction jj(a,b,c,d,e,f){gj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),Zi(a,b,f);d=b.stateNode;Wi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Ug(b,a.child,null,f),b.child=Ug(b,null,h,f)):Xi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function kj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);yh(a,b.containerInfo)}\nfunction lj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Xi(a,b,c,d);return b.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction oj(a,b,c){var d=b.pendingProps,e=L.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(L,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=pj(g,d,0,null),a=Tg(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=nj(c),b.memoizedState=mj,a):qj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return rj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=Pg(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=Pg(h,f):(f=Tg(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?nj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=mj;return d}f=a.child;a=f.sibling;d=Pg(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction qj(a,b){b=pj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function sj(a,b,c,d){null!==d&&Jg(d);Ug(b,a.child,null,c);a=qj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction rj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Ki(Error(p(422))),sj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=pj({mode:\"visible\",children:d.children},e,0,null);f=Tg(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Ug(b,a.child,null,g);b.child.memoizedState=nj(g);b.memoizedState=mj;return f}if(0===(b.mode&1))return sj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Ki(f,d,void 0);return sj(a,b,g,d)}h=0!==(g&a.childLanes);if(dh||h){d=Q;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,ih(a,e),gi(d,a,e,-1))}tj();d=Ki(Error(p(421)));return sj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=uj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=qj(b,d.children);b.flags|=4096;return b}function vj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);bh(a.return,b,c)}\nfunction wj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction xj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Xi(a,b,d.children,c);d=L.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&vj(a,c,b);else if(19===a.tag)vj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(L,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Ch(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);wj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Ch(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}wj(b,!0,c,null,f);break;case \"together\":wj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction ij(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function Zi(a,b,c){null!==a&&(b.dependencies=a.dependencies);rh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=Pg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Pg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction yj(a,b,c){switch(b.tag){case 3:kj(b);Ig();break;case 5:Ah(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:yh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Wg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(L,L.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return oj(a,b,c);G(L,L.current&1);a=Zi(a,b,c);return null!==a?a.sibling:null}G(L,L.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return xj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(L,L.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,dj(a,b,c)}return Zi(a,b,c)}var zj,Aj,Bj,Cj;\nzj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Aj=function(){};\nBj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;xh(uh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Cj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Dj(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Ej(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;zh();E(Wf);E(H);Eh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Fj(zg),zg=null));Aj(a,b);S(b);return null;case 5:Bh(b);var e=xh(wh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Bj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;zj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Cj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=xh(wh.current);xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(L);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Fj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(L.current&1)?0===T&&(T=3):tj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return zh(),\nAj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return ah(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(L);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Dj(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Ch(a);if(null!==g){b.flags|=128;Dj(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(L,L.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Gj&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304)}else{if(!d)if(a=Ch(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Dj(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Gj&&1073741824!==c&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=L.current,G(L,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Hj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(fj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Ij(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return zh(),E(Wf),E(H),Eh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Bh(b),null;case 13:E(L);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(b.type._context),null;case 22:case 23:return Hj(),\nnull;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Lj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Mj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Nj=!1;\nfunction Oj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Ci(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Nj;Nj=!1;return n}\nfunction Pj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Mj(b,c,f)}e=e.next}while(e!==d)}}function Qj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Rj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Sj(a){var b=a.alternate;null!==b&&(a.alternate=null,Sj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Tj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Uj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Tj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Vj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Vj(a,b,c),a=a.sibling;null!==a;)Vj(a,b,c),a=a.sibling}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}var X=null,Xj=!1;function Yj(a,b,c){for(c=c.child;null!==c;)Zj(a,b,c),c=c.sibling}\nfunction Zj(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Lj(c,b);case 6:var d=X,e=Xj;X=null;Yj(a,b,c);X=d;Xj=e;null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Xj;X=c.stateNode.containerInfo;Xj=!0;\nYj(a,b,c);X=d;Xj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Mj(c,b,g):0!==(f&4)&&Mj(c,b,g));e=e.next}while(e!==d)}Yj(a,b,c);break;case 1:if(!U&&(Lj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Yj(a,b,c);break;case 21:Yj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Yj(a,b,c),U=d):Yj(a,b,c);break;default:Yj(a,b,c)}}function ak(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Kj);b.forEach(function(b){var d=bk.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction ck(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Xj=!1;break a;case 3:X=h.stateNode.containerInfo;Xj=!0;break a;case 4:X=h.stateNode.containerInfo;Xj=!0;break a}h=h.return}if(null===X)throw Error(p(160));Zj(f,g,e);X=null;Xj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)dk(b,a),b=b.sibling}\nfunction dk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ck(b,a);ek(a);if(d&4){try{Pj(3,a,a.return),Qj(3,a)}catch(t){W(a,a.return,t)}try{Pj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);break;case 5:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:ck(b,a);ek(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:ck(b,a);ek(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:ck(b,a);ek(a);break;case 13:ck(b,a);ek(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(fk=B()));d&4&&ak(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,ck(b,a),U=l):ck(b,a);ek(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Pj(4,r,r.return);break;case 1:Lj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Lj(r,r.return);break;case 22:if(null!==r.memoizedState){gk(q);continue}}null!==y?(y.return=r,V=y):gk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:ck(b,a);ek(a);d&4&&ak(a);break;case 21:break;default:ck(b,\na),ek(a)}}function ek(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Tj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Uj(a);Wj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Uj(a);Vj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function hk(a,b,c){V=a;ik(a,b,c)}\nfunction ik(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Jj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Jj;var l=U;Jj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?jk(e):null!==k?(k.return=g,V=k):jk(e);for(;null!==f;)V=f,ik(f,b,c),f=f.sibling;V=e;Jj=h;U=l}kk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):kk(a,b,c)}}\nfunction kk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Qj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Ci(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&sh(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}sh(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Rj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function gk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction jk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Qj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Rj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Rj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=Infinity,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return 0!==(K&6)?B():-1!==Ak?Ak:Ak=B()}\nfunction yi(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Bk&&(Bk=yc()),Bk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function gi(a,b,c,d){if(50<yk)throw yk=0,zk=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==Q)a===Q&&(0===(K&2)&&(qk|=c),4===T&&Ck(a,Z)),Dk(a,d),1===c&&0===K&&0===(b.mode&1)&&(Gj=B()+500,fg&&jg())}\nfunction Dk(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===Q?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Ek.bind(null,a)):hg(Ek.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Fk(c,Gk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Gk(a,b){Ak=-1;Bk=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Hk()&&a.callbackNode!==c)return null;var d=uc(a,a===Q?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Ik(a,d);else{b=d;var e=K;K|=2;var f=Jk();if(Q!==a||Z!==b)uk=null,Gj=B()+500,Kk(a,b);do try{Lk();break}catch(h){Mk(a,h)}while(1);$g();mk.current=f;K=e;null!==Y?b=0:(Q=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Nk(a,e)));if(1===b)throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;if(6===b)Ck(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Ok(e)&&(b=Ik(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Nk(a,f))),1===b))throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Pk(a,tk,uk);break;case 3:Ck(a,d);if((d&130023424)===d&&(b=fk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){R();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),b);break}Pk(a,tk,uk);break;case 4:Ck(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*lk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),d);break}Pk(a,tk,uk);break;case 5:Pk(a,tk,uk);break;default:throw Error(p(329));}}}Dk(a,B());return a.callbackNode===c?Gk.bind(null,a):null}\nfunction Nk(a,b){var c=sk;a.current.memoizedState.isDehydrated&&(Kk(a,b).flags|=256);a=Ik(a,b);2!==a&&(b=tk,tk=c,null!==b&&Fj(b));return a}function Fj(a){null===tk?tk=a:tk.push.apply(tk,a)}\nfunction Ok(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Ck(a,b){b&=~rk;b&=~qk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Ek(a){if(0!==(K&6))throw Error(p(327));Hk();var b=uc(a,0);if(0===(b&1))return Dk(a,B()),null;var c=Ik(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Nk(a,d))}if(1===c)throw c=pk,Kk(a,0),Ck(a,b),Dk(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Pk(a,tk,uk);Dk(a,B());return null}\nfunction Qk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Gj=B()+500,fg&&jg())}}function Rk(a){null!==wk&&0===wk.tag&&0===(K&6)&&Hk();var b=K;K|=1;var c=ok.transition,d=C;try{if(ok.transition=null,C=1,a)return a()}finally{C=d,ok.transition=c,K=b,0===(K&6)&&jg()}}function Hj(){fj=ej.current;E(ej)}\nfunction Kk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:zh();E(Wf);E(H);Eh();break;case 5:Bh(d);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(d.type._context);break;case 22:case 23:Hj()}c=c.return}Q=a;Y=a=Pg(a.current,null);Z=fj=b;T=0;pk=null;rk=qk=rh=0;tk=sk=null;if(null!==fh){for(b=\n0;b<fh.length;b++)if(c=fh[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}fh=null}return a}\nfunction Mk(a,b){do{var c=Y;try{$g();Fh.current=Rh;if(Ih){for(var d=M.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Ih=!1}Hh=0;O=N=M=null;Jh=!1;Kh=0;nk.current=null;if(null===c||null===c.return){T=1;pk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Ui(g);if(null!==y){y.flags&=-257;Vi(y,g,h,f,b);y.mode&1&&Si(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Si(f,l,b);tj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Ui(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Vi(J,g,h,f,b);Jg(Ji(k,h));break a}}f=k=Ji(k,h);4!==T&&(T=2);null===sk?sk=[f]:sk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Ni(f,k,b);ph(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Ri||!Ri.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Qi(f,h,b);ph(f,F);break a}}f=f.return}while(null!==f)}Sk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Jk(){var a=mk.current;mk.current=Rh;return null===a?Rh:a}\nfunction tj(){if(0===T||3===T||2===T)T=4;null===Q||0===(rh&268435455)&&0===(qk&268435455)||Ck(Q,Z)}function Ik(a,b){var c=K;K|=2;var d=Jk();if(Q!==a||Z!==b)uk=null,Kk(a,b);do try{Tk();break}catch(e){Mk(a,e)}while(1);$g();K=c;mk.current=d;if(null!==Y)throw Error(p(261));Q=null;Z=0;return T}function Tk(){for(;null!==Y;)Uk(Y)}function Lk(){for(;null!==Y&&!cc();)Uk(Y)}function Uk(a){var b=Vk(a.alternate,a,fj);a.memoizedProps=a.pendingProps;null===b?Sk(a):Y=b;nk.current=null}\nfunction Sk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Ej(c,b,fj),null!==c){Y=c;return}}else{c=Ij(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Pk(a,b,c){var d=C,e=ok.transition;try{ok.transition=null,C=1,Wk(a,b,c,d)}finally{ok.transition=e,C=d}return null}\nfunction Wk(a,b,c,d){do Hk();while(null!==wk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===Q&&(Y=Q=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||vk||(vk=!0,Fk(hc,function(){Hk();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=ok.transition;ok.transition=null;\nvar g=C;C=1;var h=K;K|=4;nk.current=null;Oj(a,c);dk(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;hk(c,a,e);dc();K=h;C=g;ok.transition=f}else a.current=c;vk&&(vk=!1,wk=a,xk=e);f=a.pendingLanes;0===f&&(Ri=null);mc(c.stateNode,d);Dk(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Oi)throw Oi=!1,a=Pi,Pi=null,a;0!==(xk&1)&&0!==a.tag&&Hk();f=a.pendingLanes;0!==(f&1)?a===zk?yk++:(yk=0,zk=a):yk=0;jg();return null}\nfunction Hk(){if(null!==wk){var a=Dc(xk),b=ok.transition,c=C;try{ok.transition=null;C=16>a?16:a;if(null===wk)var d=!1;else{a=wk;wk=null;xk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Pj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Sj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Pj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Qj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,ok.transition=b}}return!1}function Xk(a,b,c){b=Ji(c,b);b=Ni(a,b,1);a=nh(a,b,1);b=R();null!==a&&(Ac(a,1,b),Dk(a,b))}\nfunction W(a,b,c){if(3===a.tag)Xk(a,a,c);else for(;null!==b;){if(3===b.tag){Xk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ri||!Ri.has(d))){a=Ji(c,a);a=Qi(b,a,1);b=nh(b,a,1);a=R();null!==b&&(Ac(b,1,a),Dk(b,a));break}}b=b.return}}\nfunction Ti(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=R();a.pingedLanes|=a.suspendedLanes&c;Q===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-fk?Kk(a,0):rk|=c);Dk(a,b)}function Yk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=R();a=ih(a,b);null!==a&&(Ac(a,b,c),Dk(a,c))}function uj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Yk(a,c)}\nfunction bk(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Yk(a,c)}var Vk;\nVk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)dh=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return dh=!1,yj(a,b,c);dh=0!==(a.flags&131072)?!0:!1}else dh=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;ij(a,b);a=b.pendingProps;var e=Yf(b,H.current);ch(b,c);e=Nh(null,b,d,a,e,c);var f=Sh();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,kh(b),e.updater=Ei,b.stateNode=e,e._reactInternals=b,Ii(b,d,a,c),b=jj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Xi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{ij(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Zk(d);a=Ci(d,a);switch(e){case 0:b=cj(null,b,d,a,c);break a;case 1:b=hj(null,b,d,a,c);break a;case 11:b=Yi(null,b,d,a,c);break a;case 14:b=$i(null,b,d,Ci(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),cj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),hj(a,b,d,e,c);case 3:a:{kj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;lh(a,b);qh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ji(Error(p(423)),b);b=lj(a,b,d,c,e);break a}else if(d!==e){e=Ji(Error(p(424)),b);b=lj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Vg(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=Zi(a,b,c);break a}Xi(a,b,d,c)}b=b.child}return b;case 5:return Ah(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\ngj(a,b),Xi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return oj(a,b,c);case 4:return yh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Ug(b,null,d,c):Xi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),Yi(a,b,d,e,c);case 7:return Xi(a,b,b.pendingProps,c),b.child;case 8:return Xi(a,b,b.pendingProps.children,c),b.child;case 12:return Xi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Wg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=Zi(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=mh(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);bh(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);bh(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Xi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,ch(b,c),e=eh(e),d=d(e),b.flags|=1,Xi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Ci(d,b.pendingProps),e=Ci(d.type,e),$i(a,b,d,e,c);case 15:return bj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),ij(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,ch(b,c),Gi(b,d,e),Ii(b,d,e,c),jj(null,b,d,!0,a,c);case 19:return xj(a,b,c);case 22:return dj(a,b,c)}throw Error(p(156,b.tag));};function Fk(a,b){return ac(a,b)}\nfunction $k(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new $k(a,b,c,d)}function aj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction Zk(a){if(\"function\"===typeof a)return aj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction Pg(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Rg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)aj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Tg(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return pj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Tg(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function pj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function Qg(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction Sg(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction al(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function bl(a,b,c,d,e,f,g,h,k){a=new al(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};kh(f);return a}function cl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction dl(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction el(a,b,c,d,e,f,g,h,k){a=bl(c,d,!0,a,e,f,g,h,k);a.context=dl(null);c=a.current;d=R();e=yi(c);f=mh(d,e);f.callback=void 0!==b&&null!==b?b:null;nh(c,f,e);a.current.lanes=e;Ac(a,e,d);Dk(a,d);return a}function fl(a,b,c,d){var e=b.current,f=R(),g=yi(e);c=dl(c);null===b.context?b.context=c:b.pendingContext=c;b=mh(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=nh(e,b,g);null!==a&&(gi(a,e,g,f),oh(a,e,g));return g}\nfunction gl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function hl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function il(a,b){hl(a,b);(a=a.alternate)&&hl(a,b)}function jl(){return null}var kl=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ll(a){this._internalRoot=a}\nml.prototype.render=ll.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));fl(a,b,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Rk(function(){fl(null,a,null,null)});b[uf]=null}};function ml(a){this._internalRoot=a}\nml.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function pl(){}\nfunction ql(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=gl(g);f.call(a)}}var g=el(b,d,a,0,null,!1,!1,\"\",pl);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Rk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=gl(k);h.call(a)}}var k=bl(a,0,!1,null,null,!1,!1,\"\",pl);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Rk(function(){fl(b,k,c,d)});return k}\nfunction rl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=gl(g);h.call(a)}}fl(b,g,a,e)}else g=ql(c,b,a,e,d);return gl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Dk(b,B()),0===(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var b=ih(a,1);if(null!==b){var c=R();gi(b,a,1,c)}}),il(a,1)}};\nFc=function(a){if(13===a.tag){var b=ih(a,134217728);if(null!==b){var c=R();gi(b,a,134217728,c)}il(a,134217728)}};Gc=function(a){if(13===a.tag){var b=yi(a),c=ih(a,b);if(null!==c){var d=R();gi(c,a,b,d)}il(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Qk;Hb=Rk;\nvar sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:\"18.3.1\",rendererPackageName:\"react-dom\"};\nvar ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||\njl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.3.1-next-f1338f8080-20240426\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nl(b))throw Error(p(200));return cl(a,b,null,c)};exports.createRoot=function(a,b){if(!nl(a))throw Error(p(299));var c=!1,d=\"\",e=kl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=bl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ll(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Rk(a)};exports.hydrate=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!nl(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=kl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=el(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new ml(b)};exports.render=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!ol(a))throw Error(p(40));return a._reactRootContainer?(Rk(function(){rl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Qk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!ol(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return rl(a,b,c,!1,d)};exports.version=\"18.3.1-next-f1338f8080-20240426\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","module.exports = require('./lib');\n","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var React=require(\"react\"),LeftArrow=function(_a){var customLeftArrow=_a.customLeftArrow,getState=_a.getState,previous=_a.previous,disabled=_a.disabled,rtl=_a.rtl;if(customLeftArrow)return React.cloneElement(customLeftArrow,{onClick:function(){return previous()},carouselState:getState(),disabled:disabled,rtl:rtl});var rtlClassName=rtl?\"rtl\":\"\";return React.createElement(\"button\",{\"aria-label\":\"Go to previous slide\",className:\"react-multiple-carousel__arrow react-multiple-carousel__arrow--left \"+rtlClassName,onClick:function(){return previous()},type:\"button\",disabled:disabled})};exports.LeftArrow=LeftArrow;var RightArrow=function(_a){var customRightArrow=_a.customRightArrow,getState=_a.getState,next=_a.next,disabled=_a.disabled,rtl=_a.rtl;if(customRightArrow)return React.cloneElement(customRightArrow,{onClick:function(){return next()},carouselState:getState(),disabled:disabled,rtl:rtl});var rtlClassName=rtl?\"rtl\":\"\";return React.createElement(\"button\",{\"aria-label\":\"Go to next slide\",className:\"react-multiple-carousel__arrow react-multiple-carousel__arrow--right \"+rtlClassName,onClick:function(){return next()},type:\"button\",disabled:disabled})};exports.RightArrow=RightArrow;","\"use strict\";var __extends=this&&this.__extends||function(){var extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,\"__esModule\",{value:!0});var React=require(\"react\"),utils_1=require(\"./utils\"),types_1=require(\"./types\"),Dots_1=require(\"./Dots\"),Arrows_1=require(\"./Arrows\"),CarouselItems_1=require(\"./CarouselItems\"),common_1=require(\"./utils/common\"),defaultTransitionDuration=400,defaultTransition=\"transform 400ms ease-in-out\",Carousel=function(_super){function Carousel(props){var _this=_super.call(this,props)||this;return _this.containerRef=React.createRef(),_this.listRef=React.createRef(),_this.state={itemWidth:0,slidesToShow:0,currentSlide:0,totalItems:React.Children.count(props.children),deviceType:\"\",domLoaded:!1,transform:0,containerWidth:0},_this.onResize=_this.onResize.bind(_this),_this.handleDown=_this.handleDown.bind(_this),_this.handleMove=_this.handleMove.bind(_this),_this.handleOut=_this.handleOut.bind(_this),_this.onKeyUp=_this.onKeyUp.bind(_this),_this.handleEnter=_this.handleEnter.bind(_this),_this.setIsInThrottle=_this.setIsInThrottle.bind(_this),_this.next=utils_1.throttle(_this.next.bind(_this),props.transitionDuration||defaultTransitionDuration,_this.setIsInThrottle),_this.previous=utils_1.throttle(_this.previous.bind(_this),props.transitionDuration||defaultTransitionDuration,_this.setIsInThrottle),_this.goToSlide=utils_1.throttle(_this.goToSlide.bind(_this),props.transitionDuration||defaultTransitionDuration,_this.setIsInThrottle),_this.onMove=!1,_this.initialX=0,_this.lastX=0,_this.isAnimationAllowed=!1,_this.direction=\"\",_this.initialY=0,_this.isInThrottle=!1,_this.transformPlaceHolder=0,_this}return __extends(Carousel,_super),Carousel.prototype.resetTotalItems=function(){var _this=this,totalItems=React.Children.count(this.props.children),currentSlide=utils_1.notEnoughChildren(this.state)?0:Math.max(0,Math.min(this.state.currentSlide,totalItems));this.setState({totalItems:totalItems,currentSlide:currentSlide},function(){_this.setContainerAndItemWidth(_this.state.slidesToShow,!0)})},Carousel.prototype.setIsInThrottle=function(isInThrottle){void 0===isInThrottle&&(isInThrottle=!1),this.isInThrottle=isInThrottle},Carousel.prototype.setTransformDirectly=function(position,withAnimation){var additionalTransfrom=this.props.additionalTransfrom;this.transformPlaceHolder=position;var currentTransform=common_1.getTransform(this.state,this.props,this.transformPlaceHolder);this.listRef&&this.listRef.current&&(this.setAnimationDirectly(withAnimation),this.listRef.current.style.transform=\"translate3d(\"+(currentTransform+additionalTransfrom)+\"px,0,0)\")},Carousel.prototype.setAnimationDirectly=function(animationAllowed){this.listRef&&this.listRef.current&&(this.listRef.current.style.transition=animationAllowed?this.props.customTransition||defaultTransition:\"none\")},Carousel.prototype.componentDidMount=function(){this.setState({domLoaded:!0}),this.setItemsToShow(),window.addEventListener(\"resize\",this.onResize),this.onResize(!0),this.props.keyBoardControl&&window.addEventListener(\"keyup\",this.onKeyUp),this.props.autoPlay&&(this.autoPlay=setInterval(this.next,this.props.autoPlaySpeed))},Carousel.prototype.setClones=function(slidesToShow,itemWidth,forResizing,resetCurrentSlide){var _this=this;void 0===resetCurrentSlide&&(resetCurrentSlide=!1),this.isAnimationAllowed=!1;var childrenArr=React.Children.toArray(this.props.children),initialSlide=utils_1.getInitialSlideInInfiniteMode(slidesToShow||this.state.slidesToShow,childrenArr),clones=utils_1.getClones(this.state.slidesToShow,childrenArr),currentSlide=childrenArr.length<this.state.slidesToShow?0:this.state.currentSlide;this.setState({totalItems:clones.length,currentSlide:forResizing&&!resetCurrentSlide?currentSlide:initialSlide},function(){_this.correctItemsPosition(itemWidth||_this.state.itemWidth)})},Carousel.prototype.setItemsToShow=function(shouldCorrectItemPosition,resetCurrentSlide){var _this=this,responsive=this.props.responsive;Object.keys(responsive).forEach(function(item){var _a=responsive[item],breakpoint=_a.breakpoint,items=_a.items,max=breakpoint.max,min=breakpoint.min,widths=[window.innerWidth];window.screen&&window.screen.width&&widths.push(window.screen.width);var screenWidth=Math.min.apply(Math,widths);min<=screenWidth&&screenWidth<=max&&(_this.setState({slidesToShow:items,deviceType:item}),_this.setContainerAndItemWidth(items,shouldCorrectItemPosition,resetCurrentSlide))})},Carousel.prototype.setContainerAndItemWidth=function(slidesToShow,shouldCorrectItemPosition,resetCurrentSlide){var _this=this;if(this.containerRef&&this.containerRef.current){var containerWidth=this.containerRef.current.offsetWidth,itemWidth_1=utils_1.getItemClientSideWidth(this.props,slidesToShow,containerWidth);this.setState({containerWidth:containerWidth,itemWidth:itemWidth_1},function(){_this.props.infinite&&_this.setClones(slidesToShow,itemWidth_1,shouldCorrectItemPosition,resetCurrentSlide)}),shouldCorrectItemPosition&&this.correctItemsPosition(itemWidth_1)}},Carousel.prototype.correctItemsPosition=function(itemWidth,isAnimationAllowed,setToDomDirectly){isAnimationAllowed&&(this.isAnimationAllowed=!0),!isAnimationAllowed&&this.isAnimationAllowed&&(this.isAnimationAllowed=!1);var nextTransform=this.state.totalItems<this.state.slidesToShow?0:-itemWidth*this.state.currentSlide;setToDomDirectly&&this.setTransformDirectly(nextTransform,!0),this.setState({transform:nextTransform})},Carousel.prototype.onResize=function(value){var shouldCorrectItemPosition;shouldCorrectItemPosition=!!this.props.infinite&&(\"boolean\"!=typeof value||!value),this.setItemsToShow(shouldCorrectItemPosition)},Carousel.prototype.componentDidUpdate=function(_a,_b){var _this=this,keyBoardControl=_a.keyBoardControl,autoPlay=_a.autoPlay,children=_a.children,containerWidth=_b.containerWidth,domLoaded=_b.domLoaded,currentSlide=_b.currentSlide;if(this.containerRef&&this.containerRef.current&&this.containerRef.current.offsetWidth!==containerWidth&&(this.itemsToShowTimeout&&clearTimeout(this.itemsToShowTimeout),this.itemsToShowTimeout=setTimeout(function(){_this.setItemsToShow(!0)},this.props.transitionDuration||defaultTransitionDuration)),keyBoardControl&&!this.props.keyBoardControl&&window.removeEventListener(\"keyup\",this.onKeyUp),!keyBoardControl&&this.props.keyBoardControl&&window.addEventListener(\"keyup\",this.onKeyUp),autoPlay&&!this.props.autoPlay&&this.autoPlay&&(clearInterval(this.autoPlay),this.autoPlay=void 0),autoPlay||!this.props.autoPlay||this.autoPlay||(this.autoPlay=setInterval(this.next,this.props.autoPlaySpeed)),children.length!==this.props.children.length?Carousel.clonesTimeout=setTimeout(function(){_this.props.infinite?_this.setClones(_this.state.slidesToShow,_this.state.itemWidth,!0,!0):_this.resetTotalItems()},this.props.transitionDuration||defaultTransitionDuration):this.props.infinite&&this.state.currentSlide!==currentSlide&&this.correctClonesPosition({domLoaded:domLoaded}),this.transformPlaceHolder!==this.state.transform&&(this.transformPlaceHolder=this.state.transform),this.props.autoPlay&&this.props.rewind&&!this.props.infinite&&utils_1.isInRightEnd(this.state)){var rewindBuffer=this.props.transitionDuration||defaultTransitionDuration;Carousel.isInThrottleTimeout=setTimeout(function(){_this.setIsInThrottle(!1),_this.resetAutoplayInterval(),_this.goToSlide(0,void 0,!!_this.props.rewindWithAnimation)},rewindBuffer+this.props.autoPlaySpeed)}},Carousel.prototype.correctClonesPosition=function(_a){var _this=this,domLoaded=_a.domLoaded,childrenArr=React.Children.toArray(this.props.children),_b=utils_1.checkClonesPosition(this.state,childrenArr,this.props),isReachingTheEnd=_b.isReachingTheEnd,isReachingTheStart=_b.isReachingTheStart,nextSlide=_b.nextSlide,nextPosition=_b.nextPosition;this.state.domLoaded&&domLoaded&&(isReachingTheEnd||isReachingTheStart)&&(this.isAnimationAllowed=!1,Carousel.transformTimeout=setTimeout(function(){_this.setState({transform:nextPosition,currentSlide:nextSlide})},this.props.transitionDuration||defaultTransitionDuration))},Carousel.prototype.next=function(slidesHavePassed){var _this=this;void 0===slidesHavePassed&&(slidesHavePassed=0);var _a=this.props,afterChange=_a.afterChange,beforeChange=_a.beforeChange;if(!utils_1.notEnoughChildren(this.state)){var _b=utils_1.populateNextSlides(this.state,this.props,slidesHavePassed),nextSlides=_b.nextSlides,nextPosition=_b.nextPosition,previousSlide=this.state.currentSlide;void 0!==nextSlides&&void 0!==nextPosition&&(\"function\"==typeof beforeChange&&beforeChange(nextSlides,this.getState()),this.isAnimationAllowed=!0,this.props.shouldResetAutoplay&&this.resetAutoplayInterval(),this.setState({transform:nextPosition,currentSlide:nextSlides},function(){\"function\"==typeof afterChange&&(Carousel.afterChangeTimeout=setTimeout(function(){afterChange(previousSlide,_this.getState())},_this.props.transitionDuration||defaultTransitionDuration))}))}},Carousel.prototype.previous=function(slidesHavePassed){var _this=this;void 0===slidesHavePassed&&(slidesHavePassed=0);var _a=this.props,afterChange=_a.afterChange,beforeChange=_a.beforeChange;if(!utils_1.notEnoughChildren(this.state)){var _b=utils_1.populatePreviousSlides(this.state,this.props,slidesHavePassed),nextSlides=_b.nextSlides,nextPosition=_b.nextPosition;if(void 0!==nextSlides&&void 0!==nextPosition){var previousSlide=this.state.currentSlide;\"function\"==typeof beforeChange&&beforeChange(nextSlides,this.getState()),this.isAnimationAllowed=!0,this.props.shouldResetAutoplay&&this.resetAutoplayInterval(),this.setState({transform:nextPosition,currentSlide:nextSlides},function(){\"function\"==typeof afterChange&&(Carousel.afterChangeTimeout2=setTimeout(function(){afterChange(previousSlide,_this.getState())},_this.props.transitionDuration||defaultTransitionDuration))})}}},Carousel.prototype.resetAutoplayInterval=function(){this.props.autoPlay&&(clearInterval(this.autoPlay),this.autoPlay=setInterval(this.next,this.props.autoPlaySpeed))},Carousel.prototype.componentWillUnmount=function(){window.removeEventListener(\"resize\",this.onResize),this.props.keyBoardControl&&window.removeEventListener(\"keyup\",this.onKeyUp),this.props.autoPlay&&this.autoPlay&&(clearInterval(this.autoPlay),this.autoPlay=void 0),this.itemsToShowTimeout&&clearTimeout(this.itemsToShowTimeout),Carousel.clonesTimeout&&clearTimeout(Carousel.clonesTimeout),Carousel.isInThrottleTimeout&&clearTimeout(Carousel.isInThrottleTimeout),Carousel.transformTimeout&&clearTimeout(Carousel.transformTimeout),Carousel.afterChangeTimeout&&clearTimeout(Carousel.afterChangeTimeout),Carousel.afterChangeTimeout2&&clearTimeout(Carousel.afterChangeTimeout2),Carousel.afterChangeTimeout3&&clearTimeout(Carousel.afterChangeTimeout3)},Carousel.prototype.resetMoveStatus=function(){this.onMove=!1,this.initialX=0,this.lastX=0,this.direction=\"\",this.initialY=0},Carousel.prototype.getCords=function(_a){var clientX=_a.clientX,clientY=_a.clientY;return{clientX:common_1.parsePosition(this.props,clientX),clientY:common_1.parsePosition(this.props,clientY)}},Carousel.prototype.handleDown=function(e){if(!(!types_1.isMouseMoveEvent(e)&&!this.props.swipeable||types_1.isMouseMoveEvent(e)&&!this.props.draggable||this.isInThrottle)){var _a=this.getCords(types_1.isMouseMoveEvent(e)?e:e.touches[0]),clientX=_a.clientX,clientY=_a.clientY;this.onMove=!0,this.initialX=clientX,this.initialY=clientY,this.lastX=clientX,this.isAnimationAllowed=!1}},Carousel.prototype.handleMove=function(e){if(!(!types_1.isMouseMoveEvent(e)&&!this.props.swipeable||types_1.isMouseMoveEvent(e)&&!this.props.draggable||utils_1.notEnoughChildren(this.state))){var _a=this.getCords(types_1.isMouseMoveEvent(e)?e:e.touches[0]),clientX=_a.clientX,clientY=_a.clientY,diffX=this.initialX-clientX,diffY=this.initialY-clientY;if(this.onMove){if(!(Math.abs(diffX)>Math.abs(diffY)))return;var _b=utils_1.populateSlidesOnMouseTouchMove(this.state,this.props,this.initialX,this.lastX,clientX,this.transformPlaceHolder),direction=_b.direction,nextPosition=_b.nextPosition,canContinue=_b.canContinue;direction&&(this.direction=direction,canContinue&&void 0!==nextPosition&&this.setTransformDirectly(nextPosition)),this.lastX=clientX}}},Carousel.prototype.handleOut=function(e){this.props.autoPlay&&!this.autoPlay&&(this.autoPlay=setInterval(this.next,this.props.autoPlaySpeed));var shouldDisableOnMobile=\"touchend\"===e.type&&!this.props.swipeable,shouldDisableOnDesktop=(\"mouseleave\"===e.type||\"mouseup\"===e.type)&&!this.props.draggable;if(!shouldDisableOnMobile&&!shouldDisableOnDesktop&&this.onMove){if(this.setAnimationDirectly(!0),\"right\"===this.direction)if(this.initialX-this.lastX>=this.props.minimumTouchDrag){var slidesHavePassed=Math.round((this.initialX-this.lastX)/this.state.itemWidth);this.next(slidesHavePassed)}else this.correctItemsPosition(this.state.itemWidth,!0,!0);if(\"left\"===this.direction)if(this.lastX-this.initialX>this.props.minimumTouchDrag){slidesHavePassed=Math.round((this.lastX-this.initialX)/this.state.itemWidth);this.previous(slidesHavePassed)}else this.correctItemsPosition(this.state.itemWidth,!0,!0);this.resetMoveStatus()}},Carousel.prototype.isInViewport=function(el){var _a=el.getBoundingClientRect(),_b=_a.top,top=void 0===_b?0:_b,_c=_a.left,left=void 0===_c?0:_c,_d=_a.bottom,bottom=void 0===_d?0:_d,_e=_a.right,right=void 0===_e?0:_e;return 0<=top&&0<=left&&bottom<=(window.innerHeight||document.documentElement.clientHeight)&&right<=(window.innerWidth||document.documentElement.clientWidth)},Carousel.prototype.isChildOfCarousel=function(el){return!!(el instanceof Element&&this.listRef&&this.listRef.current)&&this.listRef.current.contains(el)},Carousel.prototype.onKeyUp=function(e){var target=e.target;switch(e.keyCode){case 37:if(this.isChildOfCarousel(target))return this.previous();break;case 39:if(this.isChildOfCarousel(target))return this.next();break;case 9:if(this.isChildOfCarousel(target)&&target instanceof HTMLInputElement&&this.isInViewport(target))return this.next()}},Carousel.prototype.handleEnter=function(e){types_1.isMouseMoveEvent(e)&&this.autoPlay&&this.props.autoPlay&&this.props.pauseOnHover&&(clearInterval(this.autoPlay),this.autoPlay=void 0)},Carousel.prototype.goToSlide=function(slide,skipCallbacks,animationAllowed){var _this=this;if(void 0===animationAllowed&&(animationAllowed=!0),!this.isInThrottle){var itemWidth=this.state.itemWidth,_a=this.props,afterChange=_a.afterChange,beforeChange=_a.beforeChange,previousSlide=this.state.currentSlide;\"function\"!=typeof beforeChange||skipCallbacks&&(\"object\"!=typeof skipCallbacks||skipCallbacks.skipBeforeChange)||beforeChange(slide,this.getState()),this.isAnimationAllowed=animationAllowed,this.props.shouldResetAutoplay&&this.resetAutoplayInterval(),this.setState({currentSlide:slide,transform:-itemWidth*slide},function(){_this.props.infinite&&_this.correctClonesPosition({domLoaded:!0}),\"function\"!=typeof afterChange||skipCallbacks&&(\"object\"!=typeof skipCallbacks||skipCallbacks.skipAfterChange)||(Carousel.afterChangeTimeout3=setTimeout(function(){afterChange(previousSlide,_this.getState())},_this.props.transitionDuration||defaultTransitionDuration))})}},Carousel.prototype.getState=function(){return this.state},Carousel.prototype.renderLeftArrow=function(disbaled){var _this=this,_a=this.props,customLeftArrow=_a.customLeftArrow,rtl=_a.rtl;return React.createElement(Arrows_1.LeftArrow,{customLeftArrow:customLeftArrow,getState:function(){return _this.getState()},previous:this.previous,disabled:disbaled,rtl:rtl})},Carousel.prototype.renderRightArrow=function(disbaled){var _this=this,_a=this.props,customRightArrow=_a.customRightArrow,rtl=_a.rtl;return React.createElement(Arrows_1.RightArrow,{customRightArrow:customRightArrow,getState:function(){return _this.getState()},next:this.next,disabled:disbaled,rtl:rtl})},Carousel.prototype.renderButtonGroups=function(){var _this=this,customButtonGroup=this.props.customButtonGroup;return customButtonGroup?React.cloneElement(customButtonGroup,{previous:function(){return _this.previous()},next:function(){return _this.next()},goToSlide:function(slideIndex,skipCallbacks){return _this.goToSlide(slideIndex,skipCallbacks)},carouselState:this.getState()}):null},Carousel.prototype.renderDotsList=function(){var _this=this;return React.createElement(Dots_1.default,{state:this.state,props:this.props,goToSlide:this.goToSlide,getState:function(){return _this.getState()}})},Carousel.prototype.renderCarouselItems=function(){var clones=[];if(this.props.infinite){var childrenArr=React.Children.toArray(this.props.children);clones=utils_1.getClones(this.state.slidesToShow,childrenArr)}return React.createElement(CarouselItems_1.default,{clones:clones,goToSlide:this.goToSlide,state:this.state,notEnoughChildren:utils_1.notEnoughChildren(this.state),props:this.props})},Carousel.prototype.render=function(){var _a=this.props,deviceType=_a.deviceType,arrows=_a.arrows,renderArrowsWhenDisabled=_a.renderArrowsWhenDisabled,removeArrowOnDeviceType=_a.removeArrowOnDeviceType,infinite=_a.infinite,containerClass=_a.containerClass,sliderClass=_a.sliderClass,customTransition=_a.customTransition,additionalTransfrom=_a.additionalTransfrom,renderDotsOutside=_a.renderDotsOutside,renderButtonGroupOutside=_a.renderButtonGroupOutside,className=_a.className,rtl=_a.rtl;\"production\"!==process.env.NODE_ENV&&utils_1.throwError(this.state,this.props);var _b=utils_1.getInitialState(this.state,this.props),shouldRenderOnSSR=_b.shouldRenderOnSSR,shouldRenderAtAll=_b.shouldRenderAtAll,isLeftEndReach=utils_1.isInLeftEnd(this.state),isRightEndReach=utils_1.isInRightEnd(this.state),shouldShowArrows=arrows&&!(removeArrowOnDeviceType&&(deviceType&&-1<removeArrowOnDeviceType.indexOf(deviceType)||this.state.deviceType&&-1<removeArrowOnDeviceType.indexOf(this.state.deviceType)))&&!utils_1.notEnoughChildren(this.state)&&shouldRenderAtAll,disableLeftArrow=!infinite&&isLeftEndReach,disableRightArrow=!infinite&&isRightEndReach,currentTransform=common_1.getTransform(this.state,this.props);return React.createElement(React.Fragment,null,React.createElement(\"div\",{className:\"react-multi-carousel-list \"+containerClass+\" \"+className,dir:rtl?\"rtl\":\"ltr\",ref:this.containerRef},React.createElement(\"ul\",{ref:this.listRef,className:\"react-multi-carousel-track \"+sliderClass,style:{transition:this.isAnimationAllowed?customTransition||defaultTransition:\"none\",overflow:shouldRenderOnSSR?\"hidden\":\"unset\",transform:\"translate3d(\"+(currentTransform+additionalTransfrom)+\"px,0,0)\"},onMouseMove:this.handleMove,onMouseDown:this.handleDown,onMouseUp:this.handleOut,onMouseEnter:this.handleEnter,onMouseLeave:this.handleOut,onTouchStart:this.handleDown,onTouchMove:this.handleMove,onTouchEnd:this.handleOut},this.renderCarouselItems()),shouldShowArrows&&(!disableLeftArrow||renderArrowsWhenDisabled)&&this.renderLeftArrow(disableLeftArrow),shouldShowArrows&&(!disableRightArrow||renderArrowsWhenDisabled)&&this.renderRightArrow(disableRightArrow),shouldRenderAtAll&&!renderButtonGroupOutside&&this.renderButtonGroups(),shouldRenderAtAll&&!renderDotsOutside&&this.renderDotsList()),shouldRenderAtAll&&renderDotsOutside&&this.renderDotsList(),shouldRenderAtAll&&renderButtonGroupOutside&&this.renderButtonGroups())},Carousel.defaultProps={slidesToSlide:1,infinite:!1,draggable:!0,swipeable:!0,arrows:!0,renderArrowsWhenDisabled:!1,containerClass:\"\",sliderClass:\"\",itemClass:\"\",keyBoardControl:!0,autoPlaySpeed:3e3,showDots:!1,renderDotsOutside:!1,renderButtonGroupOutside:!1,minimumTouchDrag:80,className:\"\",dotListClass:\"\",focusOnSelect:!1,centerMode:!1,additionalTransfrom:0,pauseOnHover:!0,shouldResetAutoplay:!0,rewind:!1,rtl:!1,rewindWithAnimation:!1},Carousel}(React.Component);exports.default=Carousel;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var React=require(\"react\"),utils_1=require(\"./utils\"),CarouselItems=function(_a){var props=_a.props,state=_a.state,goToSlide=_a.goToSlide,clones=_a.clones,notEnoughChildren=_a.notEnoughChildren,itemWidth=state.itemWidth,children=props.children,infinite=props.infinite,itemClass=props.itemClass,itemAriaLabel=props.itemAriaLabel,partialVisbile=props.partialVisbile,partialVisible=props.partialVisible,_b=utils_1.getInitialState(state,props),flexBisis=_b.flexBisis,shouldRenderOnSSR=_b.shouldRenderOnSSR,domFullyLoaded=_b.domFullyLoaded,partialVisibilityGutter=_b.partialVisibilityGutter;return _b.shouldRenderAtAll?(partialVisbile&&console.warn('WARNING: Please correct props name: \"partialVisible\" as old typo will be removed in future versions!'),React.createElement(React.Fragment,null,(infinite?clones:React.Children.toArray(children)).map(function(child,index){return React.createElement(\"li\",{key:index,\"data-index\":index,onClick:function(){props.focusOnSelect&&goToSlide(index)},\"aria-hidden\":utils_1.getIfSlideIsVisbile(index,state)?\"false\":\"true\",\"aria-label\":itemAriaLabel||(child.props.ariaLabel?child.props.ariaLabel:null),style:{flex:shouldRenderOnSSR?\"1 0 \"+flexBisis+\"%\":\"auto\",position:\"relative\",width:domFullyLoaded?((partialVisbile||partialVisible)&&partialVisibilityGutter&&!notEnoughChildren?itemWidth-partialVisibilityGutter:itemWidth)+\"px\":\"auto\"},className:\"react-multi-carousel-item \"+(utils_1.getIfSlideIsVisbile(index,state)?\"react-multi-carousel-item--active\":\"\")+\" \"+itemClass},child)}))):null};exports.default=CarouselItems;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var React=require(\"react\"),clones_1=require(\"./utils/clones\"),dots_1=require(\"./utils/dots\"),common_1=require(\"./utils/common\"),Dots=function(_a){var props=_a.props,state=_a.state,goToSlide=_a.goToSlide,getState=_a.getState,showDots=props.showDots,customDot=props.customDot,dotListClass=props.dotListClass,infinite=props.infinite,children=props.children;if(!showDots||common_1.notEnoughChildren(state))return null;var numberOfDotsToShow,currentSlide=state.currentSlide,slidesToShow=state.slidesToShow,slidesToSlide=common_1.getSlidesToSlide(state,props),childrenArr=React.Children.toArray(children);numberOfDotsToShow=infinite?Math.ceil(childrenArr.length/slidesToSlide):Math.ceil((childrenArr.length-slidesToShow)/slidesToSlide)+1;var nextSlidesTable=dots_1.getLookupTableForNextSlides(numberOfDotsToShow,state,props,childrenArr),lookupTable=clones_1.getOriginalIndexLookupTableByClones(slidesToShow,childrenArr),currentSlides=lookupTable[currentSlide];return React.createElement(\"ul\",{className:\"react-multi-carousel-dot-list \"+dotListClass},Array(numberOfDotsToShow).fill(0).map(function(_,index){var isActive,nextSlide;if(infinite){nextSlide=nextSlidesTable[index];var cloneIndex=lookupTable[nextSlide];isActive=currentSlides===cloneIndex||cloneIndex<=currentSlides&&currentSlides<cloneIndex+slidesToSlide}else{var maximumNextSlide=childrenArr.length-slidesToShow,possibileNextSlides=index*slidesToSlide;isActive=(nextSlide=maximumNextSlide<possibileNextSlides?maximumNextSlide:possibileNextSlides)===currentSlide||nextSlide<currentSlide&&currentSlide<nextSlide+slidesToSlide&&currentSlide<childrenArr.length-slidesToShow}return customDot?React.cloneElement(customDot,{index:index,active:isActive,key:index,onClick:function(){return goToSlide(nextSlide)},carouselState:getState()}):React.createElement(\"li\",{\"data-index\":index,key:index,className:\"react-multi-carousel-dot \"+(isActive?\"react-multi-carousel-dot--active\":\"\")},React.createElement(\"button\",{\"aria-label\":\"Go to slide \"+(index+1),onClick:function(){return goToSlide(nextSlide)}}))}))};exports.default=Dots;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var Carousel_1=require(\"./Carousel\");exports.default=Carousel_1.default;","\"use strict\";var __extends=this&&this.__extends||function(){var extendStatics=function(d,b){return(extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])})(d,b)};return function(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}}();Object.defineProperty(exports,\"__esModule\",{value:!0});var React=require(\"react\");function isMouseMoveEvent(e){return\"clientY\"in e}exports.isMouseMoveEvent=isMouseMoveEvent;var Carousel=function(_super){function Carousel(){return null!==_super&&_super.apply(this,arguments)||this}return __extends(Carousel,_super),Carousel}(React.Component);exports.default=Carousel;","\"use strict\";function getOriginalCounterPart(index,_a,childrenArr){var slidesToShow=_a.slidesToShow,currentSlide=_a.currentSlide;return childrenArr.length>2*slidesToShow?index+2*slidesToShow:currentSlide>=childrenArr.length?childrenArr.length+index:index}function getOriginalIndexLookupTableByClones(slidesToShow,childrenArr){if(childrenArr.length>2*slidesToShow){for(var table={},firstBeginningOfClones=childrenArr.length-2*slidesToShow,firstEndOfClones=childrenArr.length-firstBeginningOfClones,firstCount=firstBeginningOfClones,i=0;i<firstEndOfClones;i++)table[i]=firstCount,firstCount++;var secondBeginningOfClones=childrenArr.length+firstEndOfClones,secondEndOfClones=secondBeginningOfClones+childrenArr.slice(0,2*slidesToShow).length,secondCount=0;for(i=secondBeginningOfClones;i<=secondEndOfClones;i++)table[i]=secondCount,secondCount++;var originalEnd=secondBeginningOfClones,originalCounter=0;for(i=firstEndOfClones;i<originalEnd;i++)table[i]=originalCounter,originalCounter++;return table}table={};var totalSlides=3*childrenArr.length,count=0;for(i=0;i<totalSlides;i++)table[i]=count,++count===childrenArr.length&&(count=0);return table}function getClones(slidesToShow,childrenArr){return childrenArr.length<slidesToShow?childrenArr:childrenArr.length>2*slidesToShow?childrenArr.slice(childrenArr.length-2*slidesToShow,childrenArr.length).concat(childrenArr,childrenArr.slice(0,2*slidesToShow)):childrenArr.concat(childrenArr,childrenArr)}function getInitialSlideInInfiniteMode(slidesToShow,childrenArr){return childrenArr.length>2*slidesToShow?2*slidesToShow:childrenArr.length}function checkClonesPosition(_a,childrenArr,props){var isReachingTheEnd,currentSlide=_a.currentSlide,slidesToShow=_a.slidesToShow,itemWidth=_a.itemWidth,totalItems=_a.totalItems,nextSlide=0,nextPosition=0,isReachingTheStart=0===currentSlide,originalFirstSlide=childrenArr.length-(childrenArr.length-2*slidesToShow);return childrenArr.length<slidesToShow?(nextPosition=nextSlide=0,isReachingTheStart=isReachingTheEnd=!1):childrenArr.length>2*slidesToShow?((isReachingTheEnd=currentSlide>=originalFirstSlide+childrenArr.length)&&(nextPosition=-itemWidth*(nextSlide=currentSlide-childrenArr.length)),isReachingTheStart&&(nextPosition=-itemWidth*(nextSlide=originalFirstSlide+(childrenArr.length-2*slidesToShow)))):((isReachingTheEnd=currentSlide>=2*childrenArr.length)&&(nextPosition=-itemWidth*(nextSlide=currentSlide-childrenArr.length)),isReachingTheStart&&(nextPosition=props.showDots?-itemWidth*(nextSlide=childrenArr.length):-itemWidth*(nextSlide=totalItems/3))),{isReachingTheEnd:isReachingTheEnd,isReachingTheStart:isReachingTheStart,nextSlide:nextSlide,nextPosition:nextPosition}}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.getOriginalCounterPart=getOriginalCounterPart,exports.getOriginalIndexLookupTableByClones=getOriginalIndexLookupTableByClones,exports.getClones=getClones,exports.getInitialSlideInInfiniteMode=getInitialSlideInInfiniteMode,exports.checkClonesPosition=checkClonesPosition;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var elementWidth_1=require(\"./elementWidth\");function notEnoughChildren(state){var slidesToShow=state.slidesToShow;return state.totalItems<slidesToShow}function getInitialState(state,props){var flexBisis,domLoaded=state.domLoaded,slidesToShow=state.slidesToShow,containerWidth=state.containerWidth,itemWidth=state.itemWidth,deviceType=props.deviceType,responsive=props.responsive,ssr=props.ssr,partialVisbile=props.partialVisbile,partialVisible=props.partialVisible,domFullyLoaded=Boolean(domLoaded&&slidesToShow&&containerWidth&&itemWidth);ssr&&deviceType&&!domFullyLoaded&&(flexBisis=elementWidth_1.getWidthFromDeviceType(deviceType,responsive));var shouldRenderOnSSR=Boolean(ssr&&deviceType&&!domFullyLoaded&&flexBisis);return{shouldRenderOnSSR:shouldRenderOnSSR,flexBisis:flexBisis,domFullyLoaded:domFullyLoaded,partialVisibilityGutter:elementWidth_1.getPartialVisibilityGutter(responsive,partialVisbile||partialVisible,deviceType,state.deviceType),shouldRenderAtAll:shouldRenderOnSSR||domFullyLoaded}}function getIfSlideIsVisbile(index,state){var currentSlide=state.currentSlide,slidesToShow=state.slidesToShow;return currentSlide<=index&&index<currentSlide+slidesToShow}function getTransformForCenterMode(state,props,transformPlaceHolder){var transform=transformPlaceHolder||state.transform;return!props.infinite&&0===state.currentSlide||notEnoughChildren(state)?transform:transform+state.itemWidth/2}function isInLeftEnd(_a){return!(0<_a.currentSlide)}function isInRightEnd(_a){var currentSlide=_a.currentSlide,totalItems=_a.totalItems;return!(currentSlide+_a.slidesToShow<totalItems)}function getTransformForPartialVsibile(state,partialVisibilityGutter,props,transformPlaceHolder){void 0===partialVisibilityGutter&&(partialVisibilityGutter=0);var currentSlide=state.currentSlide,slidesToShow=state.slidesToShow,isRightEndReach=isInRightEnd(state),shouldRemoveRightGutter=!props.infinite&&isRightEndReach,baseTransform=transformPlaceHolder||state.transform;if(notEnoughChildren(state))return baseTransform;var transform=baseTransform+currentSlide*partialVisibilityGutter;return shouldRemoveRightGutter?transform+(state.containerWidth-(state.itemWidth-partialVisibilityGutter)*slidesToShow):transform}function parsePosition(props,position){return props.rtl?-1*position:position}function getTransform(state,props,transformPlaceHolder){var partialVisbile=props.partialVisbile,partialVisible=props.partialVisible,responsive=props.responsive,deviceType=props.deviceType,centerMode=props.centerMode,transform=transformPlaceHolder||state.transform,partialVisibilityGutter=elementWidth_1.getPartialVisibilityGutter(responsive,partialVisbile||partialVisible,deviceType,state.deviceType);return parsePosition(props,partialVisible||partialVisbile?getTransformForPartialVsibile(state,partialVisibilityGutter,props,transformPlaceHolder):centerMode?getTransformForCenterMode(state,props,transformPlaceHolder):transform)}function getSlidesToSlide(state,props){var domLoaded=state.domLoaded,slidesToShow=state.slidesToShow,containerWidth=state.containerWidth,itemWidth=state.itemWidth,deviceType=props.deviceType,responsive=props.responsive,slidesToScroll=props.slidesToSlide||1,domFullyLoaded=Boolean(domLoaded&&slidesToShow&&containerWidth&&itemWidth);return props.ssr&&props.deviceType&&!domFullyLoaded&&Object.keys(responsive).forEach(function(device){var slidesToSlide=responsive[device].slidesToSlide;deviceType===device&&slidesToSlide&&(slidesToScroll=slidesToSlide)}),domFullyLoaded&&Object.keys(responsive).forEach(function(item){var _a=responsive[item],breakpoint=_a.breakpoint,slidesToSlide=_a.slidesToSlide,max=breakpoint.max,min=breakpoint.min;slidesToSlide&&window.innerWidth>=min&&window.innerWidth<=max&&(slidesToScroll=slidesToSlide)}),slidesToScroll}exports.notEnoughChildren=notEnoughChildren,exports.getInitialState=getInitialState,exports.getIfSlideIsVisbile=getIfSlideIsVisbile,exports.getTransformForCenterMode=getTransformForCenterMode,exports.isInLeftEnd=isInLeftEnd,exports.isInRightEnd=isInRightEnd,exports.getTransformForPartialVsibile=getTransformForPartialVsibile,exports.parsePosition=parsePosition,exports.getTransform=getTransform,exports.getSlidesToSlide=getSlidesToSlide;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var clones_1=require(\"./clones\"),common_1=require(\"./common\");function getLookupTableForNextSlides(numberOfDotsToShow,state,props,childrenArr){var table={},slidesToSlide=common_1.getSlidesToSlide(state,props);return Array(numberOfDotsToShow).fill(0).forEach(function(_,i){var nextSlide=clones_1.getOriginalCounterPart(i,state,childrenArr);if(0===i)table[0]=nextSlide;else{var now=table[i-1]+slidesToSlide;table[i]=now}}),table}exports.getLookupTableForNextSlides=getLookupTableForNextSlides;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var hasWarnAboutTypo=!1;function getPartialVisibilityGutter(responsive,partialVisible,serverSideDeviceType,clientSideDeviceType){var gutter=0,deviceType=clientSideDeviceType||serverSideDeviceType;return partialVisible&&deviceType&&(!hasWarnAboutTypo&&\"production\"!==process.env.NODE_ENV&&responsive[deviceType].paritialVisibilityGutter&&(hasWarnAboutTypo=!0,console.warn(\"You appear to be using paritialVisibilityGutter instead of partialVisibilityGutter which will be moved to partialVisibilityGutter in the future completely\")),gutter=responsive[deviceType].partialVisibilityGutter||responsive[deviceType].paritialVisibilityGutter),gutter}function getWidthFromDeviceType(deviceType,responsive){var itemWidth;responsive[deviceType]&&(itemWidth=(100/responsive[deviceType].items).toFixed(1));return itemWidth}function getItemClientSideWidth(props,slidesToShow,containerWidth){return Math.round(containerWidth/(slidesToShow+(props.centerMode?1:0)))}exports.getPartialVisibilityGutter=getPartialVisibilityGutter,exports.getWidthFromDeviceType=getWidthFromDeviceType,exports.getItemClientSideWidth=getItemClientSideWidth;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var clones_1=require(\"./clones\");exports.getOriginalCounterPart=clones_1.getOriginalCounterPart,exports.getClones=clones_1.getClones,exports.checkClonesPosition=clones_1.checkClonesPosition,exports.getInitialSlideInInfiniteMode=clones_1.getInitialSlideInInfiniteMode;var elementWidth_1=require(\"./elementWidth\");exports.getWidthFromDeviceType=elementWidth_1.getWidthFromDeviceType,exports.getPartialVisibilityGutter=elementWidth_1.getPartialVisibilityGutter,exports.getItemClientSideWidth=elementWidth_1.getItemClientSideWidth;var common_1=require(\"./common\");exports.getInitialState=common_1.getInitialState,exports.getIfSlideIsVisbile=common_1.getIfSlideIsVisbile,exports.getTransformForCenterMode=common_1.getTransformForCenterMode,exports.getTransformForPartialVsibile=common_1.getTransformForPartialVsibile,exports.isInLeftEnd=common_1.isInLeftEnd,exports.isInRightEnd=common_1.isInRightEnd,exports.notEnoughChildren=common_1.notEnoughChildren,exports.getSlidesToSlide=common_1.getSlidesToSlide;var throttle_1=require(\"./throttle\");exports.throttle=throttle_1.default;var throwError_1=require(\"./throwError\");exports.throwError=throwError_1.default;var next_1=require(\"./next\");exports.populateNextSlides=next_1.populateNextSlides;var previous_1=require(\"./previous\");exports.populatePreviousSlides=previous_1.populatePreviousSlides;var mouseOrTouchMove_1=require(\"./mouseOrTouchMove\");exports.populateSlidesOnMouseTouchMove=mouseOrTouchMove_1.populateSlidesOnMouseTouchMove;","\"use strict\";function populateSlidesOnMouseTouchMove(state,props,initialX,lastX,clientX,transformPlaceHolder){var direction,nextPosition,itemWidth=state.itemWidth,slidesToShow=state.slidesToShow,totalItems=state.totalItems,currentSlide=state.currentSlide,infinite=props.infinite,canContinue=!1,slidesHavePassedRight=Math.round((initialX-lastX)/itemWidth),slidesHavePassedLeft=Math.round((lastX-initialX)/itemWidth),isMovingLeft=initialX<clientX;if(clientX<initialX&&!!(slidesHavePassedRight<=slidesToShow)){direction=\"right\";var translateXLimit=Math.abs(-itemWidth*(totalItems-slidesToShow)),nextTranslate=transformPlaceHolder-(lastX-clientX),isLastSlide=currentSlide===totalItems-slidesToShow;(Math.abs(nextTranslate)<=translateXLimit||isLastSlide&&infinite)&&(nextPosition=nextTranslate,canContinue=!0)}isMovingLeft&&slidesHavePassedLeft<=slidesToShow&&(direction=\"left\",((nextTranslate=transformPlaceHolder+(clientX-lastX))<=0||0===currentSlide&&infinite)&&(canContinue=!0,nextPosition=nextTranslate));return{direction:direction,nextPosition:nextPosition,canContinue:canContinue}}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.populateSlidesOnMouseTouchMove=populateSlidesOnMouseTouchMove;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var common_1=require(\"./common\");function populateNextSlides(state,props,slidesHavePassed){void 0===slidesHavePassed&&(slidesHavePassed=0);var nextSlides,nextPosition,slidesToShow=state.slidesToShow,currentSlide=state.currentSlide,itemWidth=state.itemWidth,totalItems=state.totalItems,slidesToSlide=common_1.getSlidesToSlide(state,props),nextMaximumSlides=currentSlide+1+slidesHavePassed+slidesToShow+(0<slidesHavePassed?0:slidesToSlide);return nextPosition=nextMaximumSlides<=totalItems?-itemWidth*(nextSlides=currentSlide+slidesHavePassed+(0<slidesHavePassed?0:slidesToSlide)):totalItems<nextMaximumSlides&&currentSlide!==totalItems-slidesToShow?-itemWidth*(nextSlides=totalItems-slidesToShow):nextSlides=void 0,{nextSlides:nextSlides,nextPosition:nextPosition}}exports.populateNextSlides=populateNextSlides;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var React=require(\"react\"),common_1=require(\"./common\"),common_2=require(\"./common\");function populatePreviousSlides(state,props,slidesHavePassed){void 0===slidesHavePassed&&(slidesHavePassed=0);var nextSlides,nextPosition,currentSlide=state.currentSlide,itemWidth=state.itemWidth,slidesToShow=state.slidesToShow,children=props.children,showDots=props.showDots,infinite=props.infinite,slidesToSlide=common_1.getSlidesToSlide(state,props),nextMaximumSlides=currentSlide-slidesHavePassed-(0<slidesHavePassed?0:slidesToSlide),additionalSlides=(React.Children.toArray(children).length-slidesToShow)%slidesToSlide;return nextPosition=0<=nextMaximumSlides?(nextSlides=nextMaximumSlides,showDots&&!infinite&&0<additionalSlides&&common_2.isInRightEnd(state)&&(nextSlides=currentSlide-additionalSlides),-itemWidth*nextSlides):nextSlides=nextMaximumSlides<0&&0!==currentSlide?0:void 0,{nextSlides:nextSlides,nextPosition:nextPosition}}exports.populatePreviousSlides=populatePreviousSlides;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var throttle=function(func,limit,setIsInThrottle){var inThrottle;return function(){var args=arguments;inThrottle||(func.apply(this,args),inThrottle=!0,\"function\"==typeof setIsInThrottle&&setIsInThrottle(!0),setTimeout(function(){inThrottle=!1,\"function\"==typeof setIsInThrottle&&setIsInThrottle(!1)},limit))}};exports.default=throttle;","\"use strict\";function throwError(state,props){var partialVisbile=props.partialVisbile,partialVisible=props.partialVisible,centerMode=props.centerMode,ssr=props.ssr,responsive=props.responsive;if((partialVisbile||partialVisible)&&centerMode)throw new Error(\"center mode can not be used at the same time with partialVisible\");if(!responsive)throw ssr?new Error(\"ssr mode need to be used in conjunction with responsive prop\"):new Error(\"Responsive prop is needed for deciding the amount of items to show on the screen\");if(responsive&&\"object\"!=typeof responsive)throw new Error(\"responsive prop must be an object\")}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=throwError;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash.throttle\"));\n\nvar _shallowequal = _interopRequireDefault(require(\"shallowequal\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar TrackVisibility =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inheritsLoose(TrackVisibility, _PureComponent);\n\n  function TrackVisibility(props) {\n    var _this;\n\n    _this = _PureComponent.call(this, props) || this;\n\n    _this.isVisible = function (_ref, windowWidth, windowHeight) {\n      var top = _ref.top,\n          left = _ref.left,\n          bottom = _ref.bottom,\n          right = _ref.right,\n          width = _ref.width,\n          height = _ref.height;\n      var _this$props = _this.props,\n          offset = _this$props.offset,\n          partialVisibility = _this$props.partialVisibility;\n\n      if (top + right + bottom + left === 0) {\n        return false;\n      }\n\n      var topThreshold = 0 - offset;\n      var leftThreshold = 0 - offset;\n      var widthCheck = windowWidth + offset;\n      var heightCheck = windowHeight + offset;\n      return partialVisibility ? top + height >= topThreshold && left + width >= leftThreshold && bottom - height <= heightCheck && right - width <= widthCheck : top >= topThreshold && left >= leftThreshold && bottom <= heightCheck && right <= widthCheck;\n    };\n\n    _this.isComponentVisible = function () {\n      setTimeout(function () {\n        // isComponentVisible might be called from componentDidMount, before component ref is assigned\n        if (!_this.nodeRef || !_this.nodeRef.getBoundingClientRect) return;\n        var html = document.documentElement;\n        var once = _this.props.once;\n\n        var boundingClientRect = _this.nodeRef.getBoundingClientRect();\n\n        var windowWidth = window.innerWidth || html.clientWidth;\n        var windowHeight = window.innerHeight || html.clientHeight;\n\n        var isVisible = _this.isVisible(boundingClientRect, windowWidth, windowHeight);\n\n        if (isVisible && once) {\n          _this.removeListener();\n        }\n\n        _this.setState({\n          isVisible: isVisible\n        });\n      }, 0);\n    };\n\n    _this.setNodeRef = function (ref) {\n      return _this.nodeRef = ref;\n    };\n\n    _this.ownProps = Object.keys(TrackVisibility.propTypes);\n    _this.state = {\n      isVisible: false\n    };\n    _this.throttleCb = (0, _lodash.default)(_this.isComponentVisible, _this.props.throttleInterval);\n    props.nodeRef && _this.setNodeRef(props.nodeRef);\n    return _this;\n  }\n\n  var _proto = TrackVisibility.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.attachListener();\n    this.isComponentVisible();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (!(0, _shallowequal.default)(this.getChildProps(this.props), this.getChildProps(prevProps))) {\n      this.isComponentVisible();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.removeListener();\n  };\n\n  _proto.attachListener = function attachListener() {\n    window.addEventListener('scroll', this.throttleCb);\n    window.addEventListener('resize', this.throttleCb);\n  };\n\n  _proto.removeListener = function removeListener() {\n    window.removeEventListener('scroll', this.throttleCb);\n    window.removeEventListener('resize', this.throttleCb);\n  };\n\n  _proto.getChildProps = function getChildProps(props) {\n    var _this2 = this;\n\n    if (props === void 0) {\n      props = this.props;\n    }\n\n    var childProps = {};\n    Object.keys(props).forEach(function (key) {\n      if (_this2.ownProps.indexOf(key) === -1) {\n        childProps[key] = props[key];\n      }\n    });\n    return childProps;\n  };\n\n  _proto.getChildren = function getChildren() {\n    var _this3 = this;\n\n    if (typeof this.props.children === 'function') {\n      return this.props.children(_extends({}, this.getChildProps(), {\n        isVisible: this.state.isVisible\n      }));\n    }\n\n    return _react.default.Children.map(this.props.children, function (child) {\n      return _react.default.cloneElement(child, _extends({}, _this3.getChildProps(), {\n        isVisible: _this3.state.isVisible\n      }));\n    });\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        className = _this$props2.className,\n        style = _this$props2.style,\n        nodeRef = _this$props2.nodeRef,\n        Tag = _this$props2.tag;\n\n    var props = _extends({}, className && {\n      className: className\n    }, style && {\n      style: style\n    });\n\n    return _react.default.createElement(Tag, _extends({\n      ref: !nodeRef && this.setNodeRef\n    }, props), this.getChildren());\n  };\n\n  return TrackVisibility;\n}(_react.PureComponent);\n\nexports.default = TrackVisibility;\nTrackVisibility.propTypes = {\n  /**\n   * Define if the visibility need to be tracked once\n   */\n  once: _propTypes.default.bool,\n\n  /**\n   * Tweak the throttle interval\n   * Check https://css-tricks.com/debouncing-throttling-explained-examples/ for more details\n   */\n  throttleInterval: function throttleInterval(props, propName, component) {\n    var currentProp = props[propName];\n\n    if (!Number.isInteger(currentProp) || currentProp < 0) {\n      return new Error(\"The \" + propName + \" prop you provided to \" + component + \" is not a valid integer >= 0.\");\n    }\n\n    return null;\n  },\n\n  /**\n   * Pass one or more children to track\n   */\n  children: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.element, _propTypes.default.arrayOf(_propTypes.default.element)]),\n\n  /**\n   * Additional style to apply\n   */\n  style: _propTypes.default.object,\n\n  /**\n   * Additional className to apply\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * Define an offset. Can be useful for lazy loading\n   */\n  offset: _propTypes.default.number,\n\n  /**\n   * Update the visibility state as soon as a part of the tracked component is visible\n   */\n  partialVisibility: _propTypes.default.bool,\n\n  /**\n   * Exposed for testing but allows node other than internal wrapping <div /> to be tracked\n   * for visibility\n   */\n  nodeRef: _propTypes.default.object,\n\n  /**\n   * Define a custom tag\n   */\n  tag: _propTypes.default.string\n};\nTrackVisibility.defaultProps = {\n  once: false,\n  throttleInterval: 150,\n  offset: 0,\n  partialVisibility: false,\n  tag: 'div'\n};","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _TrackVisibility = _interopRequireDefault(require(\"./TrackVisibility\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n* This file seems a bit useless anyway\n* */\nvar _default = _TrackVisibility.default;\nexports.default = _default;","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","!function(t,o){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=o():\"function\"==typeof define&&define.amd?define(\"to-querystring\",[],o):\"object\"==typeof exports?exports[\"to-querystring\"]=o():t[\"to-querystring\"]=o()}(this,(function(){return(()=>{\"use strict\";var t={d:(o,e)=>{for(var n in e)t.o(e,n)&&!t.o(o,n)&&Object.defineProperty(o,n,{enumerable:!0,get:e[n]})},o:(t,o)=>Object.prototype.hasOwnProperty.call(t,o),r:t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})}},o={};function e(t){return e=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},e(t)}t.r(o),t.d(o,{default:()=>a});var n=encodeURIComponent;function r(t,o,r,c,a){var i=c&&a.arrayPrefix||\"\";if(\"object\"===e(o)){var f=\"\".concat(t).concat(i).concat(r&&\"]\",\"[\");return\"\".concat(u(o,\"\".concat(r).concat(f),a))}return r&&r.length?\"\".concat(r).concat(t,\"]\").concat(i,\"=\").concat(n(o)):\"\".concat(t).concat(i,\"=\").concat(n(o))}function c(t,o,e,n){return o.map((function(o){return r(t,o,e,!0,n)})).join(\"&\")}function u(t){var o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return(Array.isArray(t)?t.map((function(t,n){return r(\"\".concat(n),t,o,!0,e)})):Object.keys(t).filter((function(o){return void 0!==t[o]})).map((function(n){return t[n]&&Array.isArray(t[n])?c(\"\".concat(n),t[n],o,e):r(n,t[n],o,!1,e)}))).join(\"&\").replace(/%20/g,\"+\")}const a=u;return o})()}));","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"f8a2644b\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"my-portfolio:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/Portfolio/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmy_portfolio\"] = self[\"webpackChunkmy_portfolio\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","var _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgLogo(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 841.9 595.3\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#61DAFB\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 420.9,\n    cy: 296.5,\n    r: 45.7\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M520.5 78.1z\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.6ce24c58023cc2f8fd88fe9d219db6c6.svg\";\nexport { ForwardRef as ReactComponent };","import * as React from 'react';\nconst SelectableContext = /*#__PURE__*/React.createContext(null);\nexport const makeEventKey = (eventKey, href = null) => {\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","function _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nexport { _extends as default };","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (e.includes(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };","import invariant from 'invariant';\n\nvar noop = function noop() {};\n\nfunction readOnlyPropType(handler, name) {\n  return function (props, propName) {\n    if (props[propName] !== undefined) {\n      if (!props[handler]) {\n        return new Error(\"You have provided a `\" + propName + \"` prop to `\" + name + \"` \" + (\"without an `\" + handler + \"` handler prop. This will render a read-only field. \") + (\"If the field should be mutable use `\" + defaultKey(propName) + \"`. \") + (\"Otherwise, set `\" + handler + \"`.\"));\n      }\n    }\n  };\n}\n\nexport function uncontrolledPropTypes(controlledValues, displayName) {\n  var propTypes = {};\n  Object.keys(controlledValues).forEach(function (prop) {\n    // add default propTypes for folks that use runtime checks\n    propTypes[defaultKey(prop)] = noop;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var handler = controlledValues[prop];\n      !(typeof handler === 'string' && handler.trim().length) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Uncontrollable - [%s]: the prop `%s` needs a valid handler key name in order to make it uncontrollable', displayName, prop) : invariant(false) : void 0;\n      propTypes[prop] = readOnlyPropType(handler, displayName);\n    }\n  });\n  return propTypes;\n}\nexport function isProp(props, prop) {\n  return props[prop] !== undefined;\n}\nexport function defaultKey(key) {\n  return 'default' + key.charAt(0).toUpperCase() + key.substr(1);\n}\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nexport function canAcceptRef(component) {\n  return !!component && (typeof component !== 'function' || component.prototype && component.prototype.isReactComponent);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nimport { useCallback, useRef, useState } from 'react';\nimport * as Utils from './utils';\n\nfunction useUncontrolledProp(propValue, defaultValue, handler) {\n  var wasPropRef = useRef(propValue !== undefined);\n\n  var _useState = useState(defaultValue),\n      stateValue = _useState[0],\n      setState = _useState[1];\n\n  var isProp = propValue !== undefined;\n  var wasProp = wasPropRef.current;\n  wasPropRef.current = isProp;\n  /**\n   * If a prop switches from controlled to Uncontrolled\n   * reset its value to the defaultValue\n   */\n\n  if (!isProp && wasProp && stateValue !== defaultValue) {\n    setState(defaultValue);\n  }\n\n  return [isProp ? propValue : stateValue, useCallback(function (value) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (handler) handler.apply(void 0, [value].concat(args));\n    setState(value);\n  }, [handler])];\n}\n\nexport { useUncontrolledProp };\nexport default function useUncontrolled(props, config) {\n  return Object.keys(config).reduce(function (result, fieldName) {\n    var _extends2;\n\n    var _ref = result,\n        defaultValue = _ref[Utils.defaultKey(fieldName)],\n        propsValue = _ref[fieldName],\n        rest = _objectWithoutPropertiesLoose(_ref, [Utils.defaultKey(fieldName), fieldName].map(_toPropertyKey));\n\n    var handlerName = config[fieldName];\n\n    var _useUncontrolledProp = useUncontrolledProp(propsValue, defaultValue, props[handlerName]),\n        value = _useUncontrolledProp[0],\n        handler = _useUncontrolledProp[1];\n\n    return _extends({}, rest, (_extends2 = {}, _extends2[fieldName] = value, _extends2[handlerName] = handler, _extends2));\n  }, props);\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","\"use client\";\n\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const DEFAULT_BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport const DEFAULT_MIN_BREAKPOINT = 'xs';\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  prefixes: {},\n  breakpoints: DEFAULT_BREAKPOINTS,\n  minBreakpoint: DEFAULT_MIN_BREAKPOINT\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\nfunction ThemeProvider({\n  prefixes = {},\n  breakpoints = DEFAULT_BREAKPOINTS,\n  minBreakpoint = DEFAULT_MIN_BREAKPOINT,\n  dir,\n  children\n}) {\n  const contextValue = useMemo(() => ({\n    prefixes: {\n      ...prefixes\n    },\n    breakpoints,\n    minBreakpoint,\n    dir\n  }), [prefixes, breakpoints, minBreakpoint, dir]);\n  return /*#__PURE__*/_jsx(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nexport function useBootstrapBreakpoints() {\n  const {\n    breakpoints\n  } = useContext(ThemeContext);\n  return breakpoints;\n}\nexport function useBootstrapMinBreakpoint() {\n  const {\n    minBreakpoint\n  } = useContext(ThemeContext);\n  return minBreakpoint;\n}\nexport function useIsRTL() {\n  const {\n    dir\n  } = useContext(ThemeContext);\n  return dir === 'rtl';\n}\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent;\n  // If it's a functional component make sure we don't break it with a ref\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/React.forwardRef(({\n    ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Component, {\n      ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarBrand = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-brand');\n  const Component = as || (props.href ? 'a' : 'span');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  });\n});\nNavbarBrand.displayName = 'NavbarBrand';\nexport default NavbarBrand;","/**\n * Returns the owner document of a given element.\n * \n * @param node the element\n */\nexport default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","import ownerWindow from './ownerWindow';\n/**\n * Returns one or all computed style properties of an element.\n * \n * @param node the element\n * @param psuedoElement the style property\n */\n\nexport default function getComputedStyle(node, psuedoElement) {\n  return ownerWindow(node).getComputedStyle(node, psuedoElement);\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the owner window of a given element.\n * \n * @param node the element\n */\n\nexport default function ownerWindow(node) {\n  var doc = ownerDocument(node);\n  return doc && doc.defaultView || window;\n}","var rUpper = /([A-Z])/g;\nexport default function hyphenate(string) {\n  return string.replace(rUpper, '-$1').toLowerCase();\n}","/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/hyphenateStyleName.js\n */\nimport hyphenate from './hyphenate';\nvar msPattern = /^ms-/;\nexport default function hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}","var supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;\nexport default function isTransform(value) {\n  return !!(value && supportedTransforms.test(value));\n}","import getComputedStyle from './getComputedStyle';\nimport hyphenate from './hyphenateStyle';\nimport isTransform from './isTransform';\n\nfunction style(node, property) {\n  var css = '';\n  var transforms = '';\n\n  if (typeof property === 'string') {\n    return node.style.getPropertyValue(hyphenate(property)) || getComputedStyle(node).getPropertyValue(hyphenate(property));\n  }\n\n  Object.keys(property).forEach(function (key) {\n    var value = property[key];\n\n    if (!value && value !== 0) {\n      node.style.removeProperty(hyphenate(key));\n    } else if (isTransform(key)) {\n      transforms += key + \"(\" + value + \") \";\n    } else {\n      css += hyphenate(key) + \": \" + value + \";\";\n    }\n  });\n\n  if (transforms) {\n    css += \"transform: \" + transforms + \";\";\n  }\n\n  node.style.cssText += \";\" + css;\n}\n\nexport default style;","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","/* eslint-disable no-return-assign */\nimport canUseDOM from './canUseDOM';\nexport var optionsSupported = false;\nexport var onceSupported = false;\n\ntry {\n  var options = {\n    get passive() {\n      return optionsSupported = true;\n    },\n\n    get once() {\n      // eslint-disable-next-line no-multi-assign\n      return onceSupported = optionsSupported = true;\n    }\n\n  };\n\n  if (canUseDOM) {\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, true);\n  }\n} catch (e) {\n  /* */\n}\n\n/**\n * An `addEventListener` ponyfill, supports the `once` option\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction addEventListener(node, eventName, handler, options) {\n  if (options && typeof options !== 'boolean' && !onceSupported) {\n    var once = options.once,\n        capture = options.capture;\n    var wrappedHandler = handler;\n\n    if (!onceSupported && once) {\n      wrappedHandler = handler.__once || function onceHandler(event) {\n        this.removeEventListener(eventName, onceHandler, capture);\n        handler.call(this, event);\n      };\n\n      handler.__once = wrappedHandler;\n    }\n\n    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);\n  }\n\n  node.addEventListener(eventName, handler, options);\n}\n\nexport default addEventListener;","/**\n * A `removeEventListener` ponyfill\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction removeEventListener(node, eventName, handler, options) {\n  var capture = options && typeof options !== 'boolean' ? options.capture : options;\n  node.removeEventListener(eventName, handler, capture);\n\n  if (handler.__once) {\n    node.removeEventListener(eventName, handler.__once, capture);\n  }\n}\n\nexport default removeEventListener;","import addEventListener from './addEventListener';\nimport removeEventListener from './removeEventListener';\n\nfunction listen(node, eventName, handler, options) {\n  addEventListener(node, eventName, handler, options);\n  return function () {\n    removeEventListener(node, eventName, handler, options);\n  };\n}\n\nexport default listen;","import css from './css';\nimport listen from './listen';\nimport triggerEvent from './triggerEvent';\n\nfunction parseDuration(node) {\n  var str = css(node, 'transitionDuration') || '';\n  var mult = str.indexOf('ms') === -1 ? 1000 : 1;\n  return parseFloat(str) * mult;\n}\n\nfunction emulateTransitionEnd(element, duration, padding) {\n  if (padding === void 0) {\n    padding = 5;\n  }\n\n  var called = false;\n  var handle = setTimeout(function () {\n    if (!called) triggerEvent(element, 'transitionend', true);\n  }, duration + padding);\n  var remove = listen(element, 'transitionend', function () {\n    called = true;\n  }, {\n    once: true\n  });\n  return function () {\n    clearTimeout(handle);\n    remove();\n  };\n}\n\nexport default function transitionEnd(element, handler, duration, padding) {\n  if (duration == null) duration = parseDuration(element) || 0;\n  var removeEmulate = emulateTransitionEnd(element, duration, padding);\n  var remove = listen(element, 'transitionend', handler);\n  return function () {\n    removeEmulate();\n    remove();\n  };\n}","/**\n * Triggers an event on a given element.\n * \n * @param node the element\n * @param eventName the event name to trigger\n * @param bubbles whether the event should bubble up\n * @param cancelable whether the event should be cancelable\n */\nexport default function triggerEvent(node, eventName, bubbles, cancelable) {\n  if (bubbles === void 0) {\n    bubbles = false;\n  }\n\n  if (cancelable === void 0) {\n    cancelable = true;\n  }\n\n  if (node) {\n    var event = document.createEvent('HTMLEvents');\n    event.initEvent(eventName, bubbles, cancelable);\n    node.dispatchEvent(event);\n  }\n}","import css from 'dom-helpers/css';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nfunction parseDuration(node, property) {\n  const str = css(node, property) || '';\n  const mult = str.indexOf('ms') === -1 ? 1000 : 1;\n  return parseFloat(str) * mult;\n}\nexport default function transitionEndListener(element, handler) {\n  const duration = parseDuration(element, 'transitionDuration');\n  const delay = parseDuration(element, 'transitionDelay');\n  const remove = transitionEnd(element, e => {\n    if (e.target === element) {\n      remove();\n      handler(e);\n    }\n  }, duration + delay);\n}","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n    if (acc === null) return f;\n    return function chainedFunction(...args) {\n      // @ts-ignore\n      acc.apply(this, args);\n      // @ts-ignore\n      f.apply(this, args);\n    };\n  }, null);\n}\nexport default createChainedFunction;","// reading a dimension prop will cause the browser to recalculate,\n// which will let our animations work\nexport default function triggerBrowserReflow(node) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n  node.offsetHeight;\n}","import { useMemo } from 'react';\nconst toFnRef = ref => !ref || typeof ref === 'function' ? ref : value => {\n  ref.current = value;\n};\nexport function mergeRefs(refA, refB) {\n  const a = toFnRef(refA);\n  const b = toFnRef(refB);\n  return value => {\n    if (a) a(value);\n    if (b) b(value);\n  };\n}\n\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n * @category refs\n */\nfunction useMergedRefs(refA, refB) {\n  return useMemo(() => mergeRefs(refA, refB), [refA, refB]);\n}\nexport default useMergedRefs;","\"use client\";\n\nimport React, { useCallback, useRef } from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport safeFindDOMNode from './safeFindDOMNode';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Normalizes Transition callbacks when nodeRef is used.\nconst TransitionWrapper = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  addEndListener,\n  children,\n  childRef,\n  ...props\n}, ref) => {\n  const nodeRef = useRef(null);\n  const mergedRef = useMergedRefs(nodeRef, childRef);\n  const attachRef = r => {\n    mergedRef(safeFindDOMNode(r));\n  };\n  const normalize = callback => param => {\n    if (callback && nodeRef.current) {\n      callback(nodeRef.current, param);\n    }\n  };\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  const handleEnter = useCallback(normalize(onEnter), [onEnter]);\n  const handleEntering = useCallback(normalize(onEntering), [onEntering]);\n  const handleEntered = useCallback(normalize(onEntered), [onEntered]);\n  const handleExit = useCallback(normalize(onExit), [onExit]);\n  const handleExiting = useCallback(normalize(onExiting), [onExiting]);\n  const handleExited = useCallback(normalize(onExited), [onExited]);\n  const handleAddEndListener = useCallback(normalize(addEndListener), [addEndListener]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return /*#__PURE__*/_jsx(Transition, {\n    ref: ref,\n    ...props,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    nodeRef: nodeRef,\n    children: typeof children === 'function' ? (status, innerProps) =>\n    // TODO: Types for RTG missing innerProps, so need to cast.\n    children(status, {\n      ...innerProps,\n      ref: attachRef\n    }) : /*#__PURE__*/React.cloneElement(children, {\n      ref: attachRef\n    })\n  });\n});\nexport default TransitionWrapper;","import ReactDOM from 'react-dom';\nexport default function safeFindDOMNode(componentOrElement) {\n  if (componentOrElement && 'setState' in componentOrElement) {\n    return ReactDOM.findDOMNode(componentOrElement);\n  }\n  return componentOrElement != null ? componentOrElement : null;\n}","import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value +\n  // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) +\n  // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst Collapse = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  className,\n  children,\n  dimension = 'height',\n  in: inProp = false,\n  timeout = 300,\n  mountOnEnter = false,\n  unmountOnExit = false,\n  appear = false,\n  getDimensionValue = getDefaultDimensionValue,\n  ...props\n}, ref) => {\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n\n  /* -- Expanding -- */\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n\n  /* -- Collapsing -- */\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? inProp : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: children.ref,\n    in: inProp,\n    timeout: timeout,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    appear: appear,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n});\n\n// @ts-ignore\n\nexport default Collapse;","\"use client\";\n\nimport * as React from 'react';\n\n// TODO: check\n\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'NavbarContext';\nexport default context;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport Collapse from './Collapse';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarCollapse = /*#__PURE__*/React.forwardRef(({\n  children,\n  bsPrefix,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-collapse');\n  const context = useContext(NavbarContext);\n  return /*#__PURE__*/_jsx(Collapse, {\n    in: !!(context && context.expanded),\n    ...props,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      ref: ref,\n      className: bsPrefix,\n      children: children\n    })\n  });\n});\nNavbarCollapse.displayName = 'NavbarCollapse';\nexport default NavbarCollapse;","import { useEffect, useRef } from 'react';\n\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\nfunction useCommittedRef(value) {\n  const ref = useRef(value);\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  const ref = useCommittedRef(fn);\n  return useCallback(function (...args) {\n    return ref.current && ref.current(...args);\n  }, [ref]);\n}","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  label = 'Toggle navigation',\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-toggler');\n  const {\n    onToggle,\n    expanded\n  } = useContext(NavbarContext) || {};\n  const handleClick = useEventCallback(e => {\n    if (onClick) onClick(e);\n    if (onToggle) onToggle();\n  });\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    onClick: handleClick,\n    \"aria-label\": label,\n    className: classNames(className, bsPrefix, !expanded && 'collapsed'),\n    children: children || /*#__PURE__*/_jsx(\"span\", {\n      className: `${bsPrefix}-icon`\n    })\n  });\n});\nNavbarToggle.displayName = 'NavbarToggle';\nexport default NavbarToggle;","import { useEffect, useLayoutEffect } from 'react';\nconst isReactNative = typeof global !== 'undefined' &&\n// @ts-ignore\nglobal.navigator &&\n// @ts-ignore\nglobal.navigator.product === 'ReactNative';\nconst isDOM = typeof document !== 'undefined';\n\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import useEffect from './useIsomorphicEffect';\nimport { useState } from 'react';\nconst matchersByWindow = new WeakMap();\nconst getMatcher = (query, targetWindow) => {\n  if (!query || !targetWindow) return undefined;\n  const matchers = matchersByWindow.get(targetWindow) || new Map();\n  matchersByWindow.set(targetWindow, matchers);\n  let mql = matchers.get(query);\n  if (!mql) {\n    mql = targetWindow.matchMedia(query);\n    mql.refCount = 0;\n    matchers.set(mql.media, mql);\n  }\n  return mql;\n};\n/**\n * Match a media query and get updates as the match changes. The media string is\n * passed directly to `window.matchMedia` and run as a Layout Effect, so initial\n * matches are returned before the browser has a chance to paint.\n *\n * ```tsx\n * function Page() {\n *   const isWide = useMediaQuery('min-width: 1000px')\n *\n *   return isWide ? \"very wide\" : 'not so wide'\n * }\n * ```\n *\n * Media query lists are also reused globally, hook calls for the same query\n * will only create a matcher once under the hood.\n *\n * @param query A media query\n * @param targetWindow The window to match against, uses the globally available one as a default.\n */\nexport default function useMediaQuery(query, targetWindow = typeof window === 'undefined' ? undefined : window) {\n  const mql = getMatcher(query, targetWindow);\n  const [matches, setMatches] = useState(() => mql ? mql.matches : false);\n  useEffect(() => {\n    let mql = getMatcher(query, targetWindow);\n    if (!mql) {\n      return setMatches(false);\n    }\n    let matchers = matchersByWindow.get(targetWindow);\n    const handleChange = () => {\n      setMatches(mql.matches);\n    };\n    mql.refCount++;\n    mql.addListener(handleChange);\n    handleChange();\n    return () => {\n      mql.removeListener(handleChange);\n      mql.refCount--;\n      if (mql.refCount <= 0) {\n        matchers == null ? void 0 : matchers.delete(mql.media);\n      }\n      mql = undefined;\n    };\n  }, [query]);\n  return matches;\n}","import useMediaQuery from './useMediaQuery';\nimport { useMemo } from 'react';\n/**\n * Create a responsive hook we a set of breakpoint names and widths.\n * You can use any valid css units as well as a numbers (for pixels).\n *\n * **NOTE:** The object key order is important! it's assumed to be in order from smallest to largest\n *\n * ```ts\n * const useBreakpoint = createBreakpointHook({\n *  xs: 0,\n *  sm: 576,\n *  md: 768,\n *  lg: 992,\n *  xl: 1200,\n * })\n * ```\n *\n * **Watch out!** using string values will sometimes construct media queries using css `calc()` which\n * is NOT supported in media queries by all browsers at the moment. use numbers for\n * the widest range of browser support.\n *\n * @param breakpointValues A object hash of names to breakpoint dimensions\n */\nexport function createBreakpointHook(breakpointValues) {\n  const names = Object.keys(breakpointValues);\n  function and(query, next) {\n    if (query === next) {\n      return next;\n    }\n    return query ? `${query} and ${next}` : next;\n  }\n  function getNext(breakpoint) {\n    return names[Math.min(names.indexOf(breakpoint) + 1, names.length - 1)];\n  }\n  function getMaxQuery(breakpoint) {\n    const next = getNext(breakpoint);\n    let value = breakpointValues[next];\n    if (typeof value === 'number') value = `${value - 0.2}px`;else value = `calc(${value} - 0.2px)`;\n    return `(max-width: ${value})`;\n  }\n  function getMinQuery(breakpoint) {\n    let value = breakpointValues[breakpoint];\n    if (typeof value === 'number') {\n      value = `${value}px`;\n    }\n    return `(min-width: ${value})`;\n  }\n\n  /**\n   * Match a set of breakpoints\n   *\n   * ```tsx\n   * const MidSizeOnly = () => {\n   *   const isMid = useBreakpoint({ lg: 'down', sm: 'up' });\n   *\n   *   if (isMid) return <div>On a Reasonable sized Screen!</div>\n   *   return null;\n   * }\n   * ```\n   * @param breakpointMap An object map of breakpoints and directions, queries are constructed using \"and\" to join\n   * breakpoints together\n   * @param window Optionally specify the target window to match against (useful when rendering into iframes)\n   */\n\n  /**\n   * Match a single breakpoint exactly, up, or down.\n   *\n   * ```tsx\n   * const PhoneOnly = () => {\n   *   const isSmall = useBreakpoint('sm', 'down');\n   *\n   *   if (isSmall) return <div>On a Small Screen!</div>\n   *   return null;\n   * }\n   * ```\n   *\n   * @param breakpoint The breakpoint key\n   * @param direction A direction 'up' for a max, 'down' for min, true to match only the breakpoint\n   * @param window Optionally specify the target window to match against (useful when rendering into iframes)\n   */\n\n  function useBreakpoint(breakpointOrMap, direction, window) {\n    let breakpointMap;\n    if (typeof breakpointOrMap === 'object') {\n      breakpointMap = breakpointOrMap;\n      window = direction;\n      direction = true;\n    } else {\n      direction = direction || true;\n      breakpointMap = {\n        [breakpointOrMap]: direction\n      };\n    }\n    let query = useMemo(() => Object.entries(breakpointMap).reduce((query, [key, direction]) => {\n      if (direction === 'up' || direction === true) {\n        query = and(query, getMinQuery(key));\n      }\n      if (direction === 'down' || direction === true) {\n        query = and(query, getMaxQuery(key));\n      }\n      return query;\n    }, ''), [JSON.stringify(breakpointMap)]);\n    return useMediaQuery(query, window);\n  }\n  return useBreakpoint;\n}\nconst useBreakpoint = createBreakpointHook({\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n  xxl: 1400\n});\nexport default useBreakpoint;","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\nexport default function useWillUnmount(fn) {\n  const onUnmount = useUpdatedRef(fn);\n  useEffect(() => () => onUnmount.current(), []);\n}","import { useRef } from 'react';\n\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\nexport default function useUpdatedRef(value) {\n  const valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\nexport default function useWindow() {\n  return useContext(Context);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { cloneElement, useEffect, useRef } from 'react';\nfunction NoopTransition({\n  children,\n  in: inProp,\n  onExited,\n  mountOnEnter,\n  unmountOnExit\n}) {\n  const ref = useRef(null);\n  const hasEnteredRef = useRef(inProp);\n  const handleExited = useEventCallback(onExited);\n  useEffect(() => {\n    if (inProp) hasEnteredRef.current = true;else {\n      handleExited(ref.current);\n    }\n  }, [inProp, handleExited]);\n  const combinedRef = useMergedRefs(ref, children.ref);\n  const child = /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n  if (inProp) return child;\n  if (unmountOnExit) {\n    return null;\n  }\n  if (!hasEnteredRef.current && mountOnEnter) {\n    return null;\n  }\n  return child;\n}\nexport default NoopTransition;","const _excluded = [\"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"addEndListener\", \"children\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport { cloneElement, useCallback, useRef } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { getReactVersion } from './utils';\n/**\n * Normalizes RTG transition callbacks with nodeRef to better support\n * strict mode.\n *\n * @param props Transition props.\n * @returns Normalized transition props.\n */\nexport default function useRTGTransitionProps(_ref) {\n  let {\n      onEnter,\n      onEntering,\n      onEntered,\n      onExit,\n      onExiting,\n      onExited,\n      addEndListener,\n      children\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const {\n    major\n  } = getReactVersion();\n  const childRef = major >= 19 ? children.props.ref : children.ref;\n  const nodeRef = useRef(null);\n  const mergedRef = useMergedRefs(nodeRef, typeof children === 'function' ? null : childRef);\n  const normalize = callback => param => {\n    if (callback && nodeRef.current) {\n      callback(nodeRef.current, param);\n    }\n  };\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  const handleEnter = useCallback(normalize(onEnter), [onEnter]);\n  const handleEntering = useCallback(normalize(onEntering), [onEntering]);\n  const handleEntered = useCallback(normalize(onEntered), [onEntered]);\n  const handleExit = useCallback(normalize(onExit), [onExit]);\n  const handleExiting = useCallback(normalize(onExiting), [onExiting]);\n  const handleExited = useCallback(normalize(onExited), [onExited]);\n  const handleAddEndListener = useCallback(normalize(addEndListener), [addEndListener]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return Object.assign({}, props, {\n    nodeRef\n  }, onEnter && {\n    onEnter: handleEnter\n  }, onEntering && {\n    onEntering: handleEntering\n  }, onEntered && {\n    onEntered: handleEntered\n  }, onExit && {\n    onExit: handleExit\n  }, onExiting && {\n    onExiting: handleExiting\n  }, onExited && {\n    onExited: handleExited\n  }, addEndListener && {\n    addEndListener: handleAddEndListener\n  }, {\n    children: typeof children === 'function' ? (status, innerProps) =>\n    // TODO: Types for RTG missing innerProps, so need to cast.\n    children(status, Object.assign({}, innerProps, {\n      ref: mergedRef\n    })) : /*#__PURE__*/cloneElement(children, {\n      ref: mergedRef\n    })\n  });\n}","import * as React from 'react';\nexport function isEscKey(e) {\n  return e.code === 'Escape' || e.keyCode === 27;\n}\nexport function getReactVersion() {\n  const parts = React.version.split('.');\n  return {\n    major: +parts[0],\n    minor: +parts[1],\n    patch: +parts[2]\n  };\n}","const _excluded = [\"component\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport * as React from 'react';\nimport useRTGTransitionProps from './useRTGTransitionProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Normalizes Transition callbacks when nodeRef is used.\nconst RTGTransition = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      component: Component\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const transitionProps = useRTGTransitionProps(props);\n  return /*#__PURE__*/_jsx(Component, Object.assign({\n    ref: ref\n  }, transitionProps));\n});\nexport default RTGTransition;","import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport RTGTransition from './RTGTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    let stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: () => stale\n    });\n    return () => {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n\n  // TODO: I think this needs to be in an effect\n  if (inProp && exited) {\n    setExited(false);\n  }\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.isStale()) return;\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish, error => {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(component, runTransition, props) {\n  if (component) {\n    return /*#__PURE__*/_jsx(RTGTransition, Object.assign({}, props, {\n      component: component\n    }));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\n/*\n  Modal props are split into a version with and without index signature so that you can fully use them in another projects\n  This is due to Typescript not playing well with index signatures e.g. when using Omit\n*/\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import { useRef, useEffect } from 'react';\n\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\nexport default function useMounted() {\n  const mounted = useRef(true);\n  const isMounted = useRef(() => mounted.current);\n  useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useEffect, useRef } from 'react';\n\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\nexport default function usePrevious(value) {\n  const ref = useRef(null);\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  transitionClasses = {},\n  onEnter,\n  ...rest\n}, ref) => {\n  const props = {\n    in: false,\n    timeout: 300,\n    mountOnEnter: false,\n    unmountOnExit: false,\n    appear: false,\n    ...rest\n  };\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    onEnter == null || onEnter(node, isAppearing);\n  }, [onEnter]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.displayName = 'Fade';\nexport default Fade;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst OffcanvasBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nOffcanvasBody.displayName = 'OffcanvasBody';\nexport default OffcanvasBody;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ENTERED, ENTERING, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport TransitionWrapper from './TransitionWrapper';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst transitionStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst OffcanvasToggling = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  in: inProp = false,\n  mountOnEnter = false,\n  unmountOnExit = false,\n  appear = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    in: inProp,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    appear: appear,\n    ...props,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames(className, children.props.className, (status === ENTERING || status === EXITING) && `${bsPrefix}-toggling`, transitionStyles[status])\n    })\n  });\n});\nOffcanvasToggling.displayName = 'OffcanvasToggling';\nexport default OffcanvasToggling;","\"use client\";\n\nimport * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /** An accessible label indicating the relevant information about the Close Button. */\n  'aria-label': PropTypes.string,\n  /** A callback fired after the Close Button is clicked. */\n  onClick: PropTypes.func,\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  'aria-label': ariaLabel = 'Close',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  \"aria-label\": ariaLabel,\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nexport default CloseButton;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = false,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null || context.onHide();\n    onHide == null || onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nexport default AbstractModalHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst OffcanvasHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nOffcanvasHeader.displayName = 'OffcanvasHeader';\nexport default OffcanvasHeader;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst OffcanvasTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nOffcanvasTitle.displayName = 'OffcanvasTitle';\nexport default OffcanvasTitle;","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","\"use client\";\n\nimport classNames from 'classnames';\nimport useBreakpoint from '@restart/hooks/useBreakpoint';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport * as React from 'react';\nimport { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport Fade from './Fade';\nimport OffcanvasBody from './OffcanvasBody';\nimport OffcanvasToggling from './OffcanvasToggling';\nimport ModalContext from './ModalContext';\nimport NavbarContext from './NavbarContext';\nimport OffcanvasHeader from './OffcanvasHeader';\nimport OffcanvasTitle from './OffcanvasTitle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BootstrapModalManager, { getSharedManager } from './BootstrapModalManager';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(OffcanvasToggling, {\n    ...props\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props\n  });\n}\nconst Offcanvas = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  'aria-labelledby': ariaLabelledby,\n  placement = 'start',\n  responsive,\n  /* BaseModal props */\n\n  show = false,\n  backdrop = true,\n  keyboard = true,\n  scroll = false,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  renderStaticNode = false,\n  ...props\n}, ref) => {\n  const modalManager = useRef();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  const {\n    onToggle\n  } = useContext(NavbarContext) || {};\n  const [showOffcanvas, setShowOffcanvas] = useState(false);\n  const hideResponsiveOffcanvas = useBreakpoint(responsive || 'xs', 'up');\n  useEffect(() => {\n    // Handles the case where screen is resized while the responsive\n    // offcanvas is shown. If `responsive` not provided, just use `show`.\n    setShowOffcanvas(responsive ? show && !hideResponsiveOffcanvas : show);\n  }, [show, responsive, hideResponsiveOffcanvas]);\n  const handleHide = useEventCallback(() => {\n    onToggle == null || onToggle();\n    onHide == null || onHide();\n  });\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    if (scroll) {\n      // Have to use a different modal manager since the shared\n      // one handles overflow.\n      if (!modalManager.current) modalManager.current = new BootstrapModalManager({\n        handleContainerOverflow: false\n      });\n      return modalManager.current;\n    }\n    return getSharedManager();\n  }\n  const handleEnter = (node, ...args) => {\n    if (node) node.style.visibility = 'visible';\n    onEnter == null || onEnter(node, ...args);\n  };\n  const handleExited = (node, ...args) => {\n    if (node) node.style.visibility = '';\n    onExited == null || onExited(...args);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName)\n  }), [backdropClassName, bsPrefix]);\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    ...dialogProps,\n    ...props,\n    className: classNames(className, responsive ? `${bsPrefix}-${responsive}` : bsPrefix, `${bsPrefix}-${placement}`),\n    \"aria-labelledby\": ariaLabelledby,\n    children: children\n  });\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [!showOffcanvas && (responsive || renderStaticNode) && renderDialog({}), /*#__PURE__*/_jsx(ModalContext.Provider, {\n      value: modalContext,\n      children: /*#__PURE__*/_jsx(BaseModal, {\n        show: showOffcanvas,\n        ref: ref,\n        backdrop: backdrop,\n        container: container,\n        keyboard: keyboard,\n        autoFocus: autoFocus,\n        enforceFocus: enforceFocus && !scroll,\n        restoreFocus: restoreFocus,\n        restoreFocusOptions: restoreFocusOptions,\n        onEscapeKeyDown: onEscapeKeyDown,\n        onShow: onShow,\n        onHide: handleHide,\n        onEnter: handleEnter,\n        onEntering: onEntering,\n        onEntered: onEntered,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: handleExited,\n        manager: getModalManager(),\n        transition: DialogTransition,\n        backdropTransition: BackdropTransition,\n        renderBackdrop: renderBackdrop,\n        renderDialog: renderDialog\n      })\n    })]\n  });\n});\nOffcanvas.displayName = 'Offcanvas';\nexport default Object.assign(Offcanvas, {\n  Body: OffcanvasBody,\n  Header: OffcanvasHeader,\n  Title: OffcanvasTitle\n});","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport Offcanvas from './Offcanvas';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarOffcanvas = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const context = useContext(NavbarContext);\n  return /*#__PURE__*/_jsx(Offcanvas, {\n    ref: ref,\n    show: !!(context != null && context.expanded),\n    ...props,\n    renderStaticNode: true\n  });\n});\nNavbarOffcanvas.displayName = 'NavbarOffcanvas';\nexport default NavbarOffcanvas;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nNavbarText.displayName = 'NavbarText';\nexport default NavbarText;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useMemo } from 'react';\nimport SelectableContext from '@restart/ui/SelectableContext';\nimport { useUncontrolled } from 'uncontrollable';\nimport NavbarBrand from './NavbarBrand';\nimport NavbarCollapse from './NavbarCollapse';\nimport NavbarToggle from './NavbarToggle';\nimport NavbarOffcanvas from './NavbarOffcanvas';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport NavbarText from './NavbarText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Navbar = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    bsPrefix: initialBsPrefix,\n    expand = true,\n    variant = 'light',\n    bg,\n    fixed,\n    sticky,\n    className,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'nav',\n    expanded,\n    onToggle,\n    onSelect,\n    collapseOnSelect = false,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    expanded: 'onToggle'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'navbar');\n  const handleCollapse = useCallback((...args) => {\n    onSelect == null || onSelect(...args);\n    if (collapseOnSelect && expanded) {\n      onToggle == null || onToggle(false);\n    }\n  }, [onSelect, collapseOnSelect, expanded, onToggle]);\n\n  // will result in some false positives but that seems better\n  // than false negatives. strict `undefined` check allows explicit\n  // \"nulling\" of the role if the user really doesn't want one\n  if (controlledProps.role === undefined && Component !== 'nav') {\n    controlledProps.role = 'navigation';\n  }\n  let expandClass = `${bsPrefix}-expand`;\n  if (typeof expand === 'string') expandClass = `${expandClass}-${expand}`;\n  const navbarContext = useMemo(() => ({\n    onToggle: () => onToggle == null ? void 0 : onToggle(!expanded),\n    bsPrefix,\n    expanded: !!expanded,\n    expand\n  }), [bsPrefix, expanded, expand, onToggle]);\n  return /*#__PURE__*/_jsx(NavbarContext.Provider, {\n    value: navbarContext,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: handleCollapse,\n      children: /*#__PURE__*/_jsx(Component, {\n        ref: ref,\n        ...controlledProps,\n        className: classNames(className, bsPrefix, expand && expandClass, variant && `${bsPrefix}-${variant}`, bg && `bg-${bg}`, sticky && `sticky-${sticky}`, fixed && `fixed-${fixed}`)\n      })\n    })\n  });\n});\nNavbar.displayName = 'Navbar';\nexport default Object.assign(Navbar, {\n  Brand: NavbarBrand,\n  Collapse: NavbarCollapse,\n  Offcanvas: NavbarOffcanvas,\n  Text: NavbarText,\n  Toggle: NavbarToggle\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nexport default Container;","import * as React from 'react';\nconst NavContext = /*#__PURE__*/React.createContext(null);\nNavContext.displayName = 'NavContext';\nexport default NavContext;","import * as React from 'react';\nconst TabContext = /*#__PURE__*/React.createContext(null);\nexport default TabContext;","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","const _excluded = [\"as\", \"active\", \"eventKey\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Button from './Button';\nimport { dataAttr } from './DataKey';\nimport TabContext from './TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useNavItem({\n  key,\n  onClick,\n  active,\n  id,\n  role,\n  disabled\n}) {\n  const parentOnSelect = useContext(SelectableContext);\n  const navContext = useContext(NavContext);\n  const tabContext = useContext(TabContext);\n  let isActive = active;\n  const props = {\n    role\n  };\n  if (navContext) {\n    if (!role && navContext.role === 'tablist') props.role = 'tab';\n    const contextControllerId = navContext.getControllerId(key != null ? key : null);\n    const contextControlledId = navContext.getControlledId(key != null ? key : null);\n\n    // @ts-ignore\n    props[dataAttr('event-key')] = key;\n    props.id = contextControllerId || id;\n    isActive = active == null && key != null ? navContext.activeKey === key : active;\n\n    /**\n     * Simplified scenario for `mountOnEnter`.\n     *\n     * While it would make sense to keep 'aria-controls' for tabs that have been mounted at least\n     * once, it would also complicate the code quite a bit, for very little gain.\n     * The following implementation is probably good enough.\n     *\n     * @see https://github.com/react-restart/ui/pull/40#issuecomment-1009971561\n     */\n    if (isActive || !(tabContext != null && tabContext.unmountOnExit) && !(tabContext != null && tabContext.mountOnEnter)) props['aria-controls'] = contextControlledId;\n  }\n  if (props.role === 'tab') {\n    props['aria-selected'] = isActive;\n    if (!isActive) {\n      props.tabIndex = -1;\n    }\n    if (disabled) {\n      props.tabIndex = -1;\n      props['aria-disabled'] = true;\n    }\n  }\n  props.onClick = useEventCallback(e => {\n    if (disabled) return;\n    onClick == null ? void 0 : onClick(e);\n    if (key == null) {\n      return;\n    }\n    if (parentOnSelect && !e.isPropagationStopped()) {\n      parentOnSelect(key, e);\n    }\n  });\n  return [props, {\n    isActive\n  }];\n}\nconst NavItem = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: Component = Button,\n      active,\n      eventKey\n    } = _ref,\n    options = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [props, meta] = useNavItem(Object.assign({\n    key: makeEventKey(eventKey, options.href),\n    active\n  }, options));\n\n  // @ts-ignore\n  props[dataAttr('active')] = meta.isActive;\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, options, props, {\n    ref: ref\n  }));\n});\nNavItem.displayName = 'NavItem';\nexport default NavItem;","const _excluded = [\"as\", \"onSelect\", \"activeKey\", \"role\", \"onKeyDown\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport qsa from 'dom-helpers/querySelectorAll';\nimport * as React from 'react';\nimport { useContext, useEffect, useRef } from 'react';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport TabContext from './TabContext';\nimport { dataAttr, dataProp } from './DataKey';\nimport NavItem from './NavItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst noop = () => {};\nconst EVENT_KEY_ATTR = dataAttr('event-key');\nconst Nav = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n      as: Component = 'div',\n      onSelect,\n      activeKey,\n      role,\n      onKeyDown\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  // A ref and forceUpdate for refocus, b/c we only want to trigger when needed\n  // and don't want to reset the set in the effect\n  const forceUpdate = useForceUpdate();\n  const needsRefocusRef = useRef(false);\n  const parentOnSelect = useContext(SelectableContext);\n  const tabContext = useContext(TabContext);\n  let getControlledId, getControllerId;\n  if (tabContext) {\n    role = role || 'tablist';\n    activeKey = tabContext.activeKey;\n    // TODO: do we need to duplicate these?\n    getControlledId = tabContext.getControlledId;\n    getControllerId = tabContext.getControllerId;\n  }\n  const listNode = useRef(null);\n  const getNextActiveTab = offset => {\n    const currentListNode = listNode.current;\n    if (!currentListNode) return null;\n    const items = qsa(currentListNode, `[${EVENT_KEY_ATTR}]:not([aria-disabled=true])`);\n    const activeChild = currentListNode.querySelector('[aria-selected=true]');\n    if (!activeChild || activeChild !== document.activeElement) return null;\n    const index = items.indexOf(activeChild);\n    if (index === -1) return null;\n    let nextIndex = index + offset;\n    if (nextIndex >= items.length) nextIndex = 0;\n    if (nextIndex < 0) nextIndex = items.length - 1;\n    return items[nextIndex];\n  };\n  const handleSelect = (key, event) => {\n    if (key == null) return;\n    onSelect == null ? void 0 : onSelect(key, event);\n    parentOnSelect == null ? void 0 : parentOnSelect(key, event);\n  };\n  const handleKeyDown = event => {\n    onKeyDown == null ? void 0 : onKeyDown(event);\n    if (!tabContext) {\n      return;\n    }\n    let nextActiveChild;\n    switch (event.key) {\n      case 'ArrowLeft':\n      case 'ArrowUp':\n        nextActiveChild = getNextActiveTab(-1);\n        break;\n      case 'ArrowRight':\n      case 'ArrowDown':\n        nextActiveChild = getNextActiveTab(1);\n        break;\n      default:\n        return;\n    }\n    if (!nextActiveChild) return;\n    event.preventDefault();\n    handleSelect(nextActiveChild.dataset[dataProp('EventKey')] || null, event);\n    needsRefocusRef.current = true;\n    forceUpdate();\n  };\n  useEffect(() => {\n    if (listNode.current && needsRefocusRef.current) {\n      const activeChild = listNode.current.querySelector(`[${EVENT_KEY_ATTR}][aria-selected=true]`);\n      activeChild == null ? void 0 : activeChild.focus();\n    }\n    needsRefocusRef.current = false;\n  });\n  const mergedRef = useMergedRefs(ref, listNode);\n  return /*#__PURE__*/_jsx(SelectableContext.Provider, {\n    value: handleSelect,\n    children: /*#__PURE__*/_jsx(NavContext.Provider, {\n      value: {\n        role,\n        // used by NavLink to determine it's role\n        activeKey: makeEventKey(activeKey),\n        getControlledId: getControlledId || noop,\n        getControllerId: getControllerId || noop\n      },\n      children: /*#__PURE__*/_jsx(Component, Object.assign({}, props, {\n        onKeyDown: handleKeyDown,\n        ref: mergedRef,\n        role: role\n      }))\n    })\n  });\n});\nNav.displayName = 'Nav';\nexport default Object.assign(Nav, {\n  Item: NavItem\n});","import { useReducer } from 'react';\n\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are strictly equal to the last state value\n  const [, dispatch] = useReducer(state => !state, false);\n  return dispatch;\n}","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavItem = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'nav-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nNavItem.displayName = 'NavItem';\nexport default NavItem;","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nconst targetMap = new WeakMap();\nlet resizeObserver;\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(entries => {\n    entries.forEach(entry => {\n      const handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\nexport default function useResizeObserver(element) {\n  const [rect, setRect] = useState(null);\n  useEffect(() => {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, rect => {\n      setRect(rect);\n    });\n    return () => {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/anchor-has-content */\n\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      onKeyDown\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n  if (isTrivialHref(props.href) || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavLink = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  as: Component = Anchor,\n  active,\n  eventKey,\n  disabled = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'nav-link');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    disabled,\n    ...props\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ...navItemProps,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, bsPrefix, disabled && 'disabled', meta.isActive && 'active')\n  });\n});\nNavLink.displayName = 'NavLink';\nexport default NavLink;","\"use client\";\n\nimport classNames from 'classnames';\nimport all from 'prop-types-extra/lib/all';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport CardHeaderContext from './CardHeaderContext';\nimport NavItem from './NavItem';\nimport NavLink from './NavLink';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Nav = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    as = 'div',\n    bsPrefix: initialBsPrefix,\n    variant,\n    fill = false,\n    justify = false,\n    navbar,\n    navbarScroll,\n    className,\n    activeKey,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'nav');\n  let navbarBsPrefix;\n  let cardHeaderBsPrefix;\n  let isNavbar = false;\n  const navbarContext = useContext(NavbarContext);\n  const cardHeaderContext = useContext(CardHeaderContext);\n  if (navbarContext) {\n    navbarBsPrefix = navbarContext.bsPrefix;\n    isNavbar = navbar == null ? true : navbar;\n  } else if (cardHeaderContext) {\n    ({\n      cardHeaderBsPrefix\n    } = cardHeaderContext);\n  }\n  return /*#__PURE__*/_jsx(BaseNav, {\n    as: as,\n    ref: ref,\n    activeKey: activeKey,\n    className: classNames(className, {\n      [bsPrefix]: !isNavbar,\n      [`${navbarBsPrefix}-nav`]: isNavbar,\n      [`${navbarBsPrefix}-nav-scroll`]: isNavbar && navbarScroll,\n      [`${cardHeaderBsPrefix}-${variant}`]: !!cardHeaderBsPrefix,\n      [`${bsPrefix}-${variant}`]: !!variant,\n      [`${bsPrefix}-fill`]: fill,\n      [`${bsPrefix}-justified`]: justify\n    }),\n    ...props\n  });\n});\nNav.displayName = 'Nav';\nexport default Object.assign(Nav, {\n  Item: NavItem,\n  Link: NavLink\n});","var _path,_path2,_path3,_path4,_path5,_path6,_path7,_path8,_path9,_path10,_path11,_path12,_path13,_path14,_path15,_path16,_path17,_path18,_path19,_path20,_path21,_path22,_path23,_path24,_path25,_path26,_path27,_path28,_path29,_path30,_path31,_path32,_path33,_path34,_path35,_path36,_path37,_path38,_path39,_path40,_path41,_path42,_path43,_path44,_path45,_path46,_path47,_path48,_path49,_path50,_path51,_path52,_path53,_path54,_path55,_path56,_path57,_path58,_path59,_path60,_path61,_path62,_path63,_path64,_path65,_path66,_path67,_path68,_path69,_path70,_path71,_path72,_path73,_path74,_path75,_path76,_path77,_path78,_path79,_path80,_path81,_path82,_path83,_path84,_path85,_path86,_path87,_path88,_path89,_path90,_path91,_path92,_path93,_path94,_path95,_path96,_path97,_path98,_path99,_path100,_path101,_path102,_path103,_path104,_path105,_path106,_path107,_path108,_path109,_path110,_path111,_path112,_path113,_path114,_path115,_path116,_path117,_path118,_path119,_path120,_path121,_path122,_path123,_path124,_path125,_path126,_path127,_path128,_path129,_path130,_path131,_path132,_path133,_path134,_path135,_path136,_path137,_path138,_path139,_path140,_path141,_path142,_path143,_path144,_path145,_path146,_path147,_path148,_path149,_path150,_path151,_path152,_path153,_path154,_path155,_path156,_path157,_path158,_path159,_path160,_path161,_path162,_path163,_path164,_path165,_path166,_path167,_path168,_path169,_path170,_path171,_path172,_path173,_path174,_path175,_path176,_path177,_path178,_path179,_path180,_path181,_path182,_path183,_path184,_path185,_path186,_path187,_path188,_path189,_path190,_path191,_path192,_path193,_path194,_path195,_path196,_path197,_path198,_path199,_path200,_path201,_path202,_path203,_path204,_path205,_path206,_path207,_path208,_path209,_path210,_path211,_path212,_path213,_path214,_path215,_path216,_path217,_path218,_path219,_path220,_path221,_path222,_path223,_path224,_path225,_path226,_path227,_path228,_path229,_path230,_path231,_path232,_path233,_path234,_path235,_path236,_path237,_path238,_path239,_path240,_path241,_path242,_path243,_path244,_path245,_path246,_path247,_path248,_path249,_path250,_path251,_path252,_path253,_path254,_path255,_path256,_path257,_path258,_path259,_path260,_path261,_path262,_path263,_path264,_path265,_path266,_path267,_path268,_path269,_path270,_path271,_path272,_path273,_path274,_path275,_path276,_path277,_path278,_path279,_path280,_path281,_path282,_path283,_path284,_path285,_path286,_path287,_path288,_path289,_path290,_path291,_path292,_path293,_path294,_path295,_path296,_path297,_path298,_path299,_path300,_path301,_path302,_path303,_path304,_path305,_path306,_path307,_path308,_path309,_path310,_path311,_path312,_path313,_path314,_path315,_path316,_path317,_path318,_path319,_path320,_path321,_path322,_path323,_path324,_path325,_path326,_path327,_path328,_path329,_path330,_path331,_path332,_path333,_path334,_path335,_path336,_path337,_path338,_path339,_path340,_path341,_path342,_path343,_path344,_path345,_path346,_path347,_path348,_path349,_path350,_path351,_path352,_path353,_path354,_path355,_path356,_path357,_path358,_path359,_path360,_path361,_path362,_path363,_path364,_path365,_path366,_path367,_path368,_path369,_path370,_path371,_path372,_path373,_path374,_path375,_path376,_path377,_path378,_path379,_path380,_path381,_path382,_path383,_path384,_path385,_path386,_path387,_path388,_path389,_path390,_path391,_path392,_path393,_path394,_path395,_path396,_path397,_path398,_path399,_path400,_path401,_path402,_path403,_path404,_path405,_path406,_path407,_path408,_path409,_path410,_path411,_path412,_path413,_path414,_path415,_path416,_path417,_path418,_path419,_path420,_path421,_path422,_path423,_path424,_path425,_path426,_path427,_path428,_path429,_path430,_path431,_path432,_path433,_path434,_path435,_path436,_path437,_path438,_path439,_path440,_path441,_path442,_path443,_path444,_path445,_path446,_path447,_path448,_path449,_path450,_path451,_path452,_path453,_path454,_path455,_path456,_path457,_path458,_path459,_path460,_path461,_path462,_path463,_path464,_path465,_path466,_path467,_path468,_path469,_path470,_path471,_path472,_path473,_path474,_path475,_path476,_path477,_path478,_path479,_path480,_path481,_path482,_path483,_path484,_path485,_path486,_path487,_path488,_path489,_path490,_path491,_path492,_path493,_path494,_path495,_path496,_path497,_path498,_path499,_path500,_path501,_path502,_path503,_path504,_path505,_path506,_path507,_path508,_path509,_path510,_path511,_path512,_path513,_path514,_path515,_path516,_path517,_path518,_path519,_path520,_path521,_path522,_path523,_path524,_path525,_path526,_path527,_path528,_path529,_path530,_path531,_path532,_path533,_path534,_path535,_path536,_path537,_path538,_path539,_path540,_path541,_path542,_path543,_path544,_path545,_path546,_path547,_path548,_path549,_path550,_path551,_path552,_path553,_path554,_path555,_path556,_path557,_path558,_path559,_path560,_path561,_path562,_path563,_path564,_path565,_path566,_path567,_path568,_path569,_path570,_path571,_path572,_path573,_path574,_path575,_path576,_path577,_path578,_path579,_path580,_path581,_path582,_path583,_path584,_path585,_path586,_path587,_path588,_path589,_path590,_path591,_path592,_path593,_path594,_path595,_path596,_path597,_path598,_path599,_path600,_path601,_path602,_path603,_path604,_path605,_path606,_path607,_path608,_path609,_path610,_path611,_path612,_path613,_path614,_path615,_path616,_path617,_path618,_path619,_path620,_path621,_path622,_path623,_path624,_path625,_path626,_path627,_path628,_path629,_path630,_path631,_path632,_path633,_path634,_path635,_path636,_path637,_path638,_path639,_path640,_path641,_path642,_path643,_path644,_path645,_path646,_path647,_path648,_path649,_path650,_path651,_path652,_path653,_path654,_path655,_path656,_path657,_path658,_path659,_path660,_path661,_path662,_path663,_path664,_path665,_path666,_path667,_path668,_path669,_path670,_path671,_path672,_path673,_path674,_path675,_path676,_path677,_path678,_path679,_path680,_path681,_path682,_path683,_path684,_path685,_path686,_path687,_path688,_path689,_path690,_path691,_path692,_path693,_path694,_path695,_path696,_path697,_path698,_path699,_path700,_path701,_path702,_path703,_path704,_path705,_path706,_path707,_path708,_path709,_path710,_path711,_path712,_path713,_path714,_path715,_path716,_path717,_path718,_path719,_path720,_path721,_path722,_path723,_path724,_path725,_path726,_path727,_path728,_path729,_path730,_path731,_path732,_path733,_path734,_path735,_path736,_path737,_path738,_path739,_path740,_path741,_path742,_path743,_path744,_path745,_path746,_path747,_path748,_path749,_path750,_path751,_path752,_path753,_path754,_path755,_path756,_path757,_path758,_path759,_path760,_path761,_path762,_path763,_path764,_path765,_path766,_path767,_path768,_path769,_path770,_path771,_path772,_path773,_path774,_path775,_path776,_path777,_path778,_path779,_path780,_path781,_path782,_path783,_path784,_path785,_path786,_path787,_path788,_path789,_path790,_path791,_path792,_path793,_path794,_path795,_path796,_path797,_path798,_path799,_path800,_path801,_path802,_path803,_path804,_path805,_path806,_path807,_path808,_path809,_path810,_path811,_path812,_path813,_path814,_path815,_path816,_path817,_path818,_path819,_path820,_path821,_path822,_path823,_path824,_path825,_path826,_path827,_path828,_path829,_path830,_path831,_path832,_path833,_path834,_path835,_path836,_path837,_path838,_path839,_path840,_path841,_path842,_path843,_path844,_path845,_path846,_path847,_path848,_path849,_path850,_path851,_path852,_path853,_path854,_path855,_path856,_path857,_path858,_path859,_path860,_path861,_path862,_path863,_path864,_path865,_path866,_path867,_path868,_path869,_path870,_path871,_path872,_path873,_path874,_path875,_path876,_path877,_path878,_path879,_path880,_path881,_path882,_path883,_path884,_path885,_path886,_path887,_path888,_path889,_path890,_path891,_path892,_path893,_path894,_path895,_path896,_path897,_path898,_path899,_path900,_path901,_path902,_path903,_path904,_path905,_path906,_path907,_path908,_path909,_path910,_path911,_path912,_path913,_path914,_path915,_path916,_path917,_path918,_path919,_path920,_path921,_path922,_path923,_path924,_path925,_path926,_path927,_path928,_path929,_path930,_path931,_path932,_path933,_path934,_path935,_path936,_path937,_path938,_path939,_path940,_path941,_path942,_path943,_path944,_path945,_path946,_path947,_path948,_path949,_path950,_path951,_path952,_path953,_path954,_path955,_path956,_path957,_path958,_path959,_path960,_path961,_path962,_path963,_path964,_path965,_path966,_path967,_path968,_path969,_path970,_path971,_path972,_path973,_path974,_path975,_path976,_path977,_path978,_path979,_path980,_path981,_path982,_path983,_path984,_path985,_path986,_path987,_path988,_path989,_path990,_path991,_path992,_path993,_path994,_path995,_path996,_path997,_path998,_path999,_path1000,_path1001,_path1002,_path1003,_path1004,_path1005,_path1006,_path1007,_path1008,_path1009,_path1010,_path1011,_path1012,_path1013,_path1014,_path1015,_path1016,_path1017,_path1018,_path1019,_path1020,_path1021,_path1022,_path1023,_path1024,_path1025,_path1026,_path1027,_path1028,_path1029,_path1030,_path1031,_path1032,_path1033,_path1034,_path1035,_path1036,_path1037,_path1038,_path1039,_path1040,_path1041,_path1042,_path1043,_path1044,_path1045,_path1046,_path1047,_path1048,_path1049,_path1050,_path1051,_path1052,_path1053,_path1054,_path1055,_path1056,_path1057,_path1058,_path1059,_path1060,_path1061,_path1062,_path1063,_path1064,_path1065,_path1066,_path1067,_path1068,_path1069,_path1070,_path1071,_path1072,_path1073,_path1074,_path1075,_path1076,_path1077,_path1078,_path1079,_path1080,_path1081,_path1082,_path1083,_path1084,_path1085,_path1086,_path1087,_path1088,_path1089,_path1090,_path1091,_path1092,_path1093,_path1094,_path1095,_path1096,_path1097,_path1098,_path1099,_path1100,_path1101,_path1102,_path1103,_path1104,_path1105,_path1106,_path1107,_path1108,_path1109,_path1110,_path1111,_path1112,_path1113,_path1114,_path1115,_path1116,_path1117,_path1118,_path1119,_path1120,_path1121,_path1122,_path1123,_path1124,_path1125,_path1126,_path1127,_path1128,_path1129,_path1130,_path1131,_path1132,_path1133,_path1134,_path1135,_path1136,_path1137,_path1138,_path1139,_path1140,_path1141,_path1142,_path1143,_path1144,_path1145,_path1146,_path1147,_path1148,_path1149,_path1150,_path1151,_path1152,_path1153,_path1154,_path1155,_path1156,_path1157,_path1158,_path1159,_path1160,_path1161,_path1162,_path1163,_path1164,_path1165,_path1166,_path1167,_path1168,_path1169,_path1170,_path1171,_path1172,_path1173,_path1174,_path1175,_path1176,_path1177,_path1178,_path1179,_path1180;function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r]);}return n;},_extends.apply(null,arguments);}import*as React from\"react\";function SvgLogo(_ref,svgRef){let{title,titleId,...props}=_ref;return/*#__PURE__*/React.createElement(\"svg\",_extends({xmlns:\"http://www.w3.org/2000/svg\",width:1024,height:1024,ref:svgRef,\"aria-labelledby\":titleId},props),title?/*#__PURE__*/React.createElement(\"title\",{id:titleId},title):null,_path||(_path=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C337.92 0 675.84 0 1024 0 C1024 337.92 1024 675.84 1024 1024 C686.08 1024 348.16 1024 0 1024 C0 686.08 0 348.16 0 0 Z \",fill:\"#6F6D6C\",transform:\"translate(0,0)\"})),_path2||(_path2=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 337.92 1 675.84 1 1024 C-336.92 1024 -674.84 1024 -1023 1024 C-1017 1016 -1017 1016 -1014 1015 C-1013.73316406 1014.43796875 -1013.46632813 1013.8759375 -1013.19140625 1013.296875 C-1011.45176226 1009.94306954 -1008.71676306 1007.73394911 -1005.9375 1005.25 C-1005.35476318 1004.71922852 -1004.77202637 1004.18845703 -1004.17163086 1003.64160156 C-1000.84754654 1000.62278563 -997.46688 997.67799918 -994.0625 994.75 C-990.65395271 991.75667575 -988.11509472 988.59379176 -985.49609375 984.91015625 C-983.44238339 982.28805608 -981.02609736 980.31561926 -978.48046875 978.18359375 C-975.12594992 975.23056064 -971.9731252 972.09565597 -968.8125 968.9375 C-968.21824219 968.34759277 -967.62398437 967.75768555 -967.01171875 967.14990234 C-964.32153609 964.45142596 -961.73253224 961.73968517 -959.32421875 958.78515625 C-957.32691213 956.39174512 -955.39600548 954.47090774 -953 952.5 C-950.44097977 950.33207531 -948.2127798 948.18766691 -946.125 945.5625 C-945.42375 944.716875 -944.7225 943.87125 -944 943 C-943.34 943 -942.68 943 -942 943 C-941.67 942.01 -941.34 941.02 -941 940 C-939.546875 938.60546875 -939.546875 938.60546875 -937.75 937.1875 C-935.36598529 935.22419377 -933.557982 933.46731165 -931.5625 931.0625 C-929.57085566 928.68224213 -927.83470044 926.93029771 -925.49609375 924.96484375 C-920.22839378 920.41059661 -915.38616384 915.45626662 -910.5 910.5 C-905.05814304 904.98006762 -899.63999431 899.51846468 -893.72875977 894.49780273 C-889.32534914 890.68267433 -885.36577277 886.46810104 -881.5625 882.0625 C-876.8587502 876.62378929 -871.86219045 871.58864435 -866.40234375 866.91015625 C-861.17762301 862.36447369 -856.35955791 857.42927897 -851.5 852.5 C-849.70042547 850.67460661 -847.89838231 848.85164329 -846.09375 847.03125 C-845.30677734 846.23267578 -844.51980469 845.43410156 -843.70898438 844.61132812 C-841.60232693 842.58061363 -839.47537393 840.66545826 -837.25976562 838.75976562 C-832.53588967 834.65917694 -828.14880746 830.25645265 -823.75 825.8125 C-822.89245117 824.95116455 -822.03490234 824.0898291 -821.15136719 823.20239258 C-818.43179111 820.4706888 -815.715488 817.73576725 -813 815 C-809.41961974 811.39288149 -805.83584819 807.78918198 -802.25 804.1875 C-801.44143555 803.37063721 -800.63287109 802.55377441 -799.79980469 801.7121582 C-795.56741096 797.46171119 -791.26461891 793.37726511 -786.69488525 789.49015808 C-784.17544125 787.27504067 -781.97417895 784.81994702 -779.75 782.3125 C-778.45344876 780.85284757 -777.15064368 779.39773246 -775.8019284 777.98613852 C-773.85938807 775.90326689 -773.85938807 775.90326689 -771.78264439 773.0778783 C-767.82147564 768.16873938 -763.97281132 764.04075197 -757.5550077 762.89823472 C-752.1231557 762.3475758 -746.69760971 762.478286 -741.24679565 762.58818054 C-739.13833034 762.58636049 -737.02986413 762.57925579 -734.92143166 762.56734687 C-729.1479028 762.54995274 -723.37719195 762.60726571 -717.60414886 762.67709649 C-711.37120933 762.7393123 -705.13830128 762.73186118 -698.90510559 762.73300171 C-688.11210234 762.74451342 -677.32025451 762.79965099 -666.52764511 762.88586998 C-655.21133917 762.97611735 -643.89533235 763.04178158 -632.57870865 763.07471657 C-631.87417326 763.07678267 -631.16963788 763.07884876 -630.44375293 763.08097747 C-626.86550003 763.09135061 -623.28724608 763.10129768 -619.70899154 763.11108778 C-594.38444304 763.18121001 -569.06045945 763.30778818 -543.73632812 763.46704102 C-519.14427906 763.62158903 -494.55233357 763.74799455 -469.95996094 763.83813477 C-469.20163092 763.84092407 -468.4433009 763.84371338 -467.66199118 763.84658721 C-460.80313735 763.87179506 -453.94428247 763.89671139 -447.08542644 763.92131637 C-400.44512767 764.08892403 -353.80481107 764.2829154 -307.16502953 764.56097031 C-302.26369431 764.59009861 -297.36235506 764.617009 -292.46099663 764.64192009 C-286.83358451 764.67067837 -281.20622154 764.7041462 -275.57886066 764.74158595 C-273.53479269 764.75442696 -271.49071351 764.76560339 -269.44662689 764.77501663 C-266.68497136 764.78804272 -263.92342447 764.80709764 -261.16181755 764.82781506 C-260.35388992 764.83022256 -259.54596229 764.83263006 -258.713552 764.83511052 C-253.22840287 764.88579856 -253.22840287 764.88579856 -251 766 C-251 765.34 -251 764.68 -251 764 C-249.81664062 763.96261719 -248.63328125 763.92523437 -247.4140625 763.88671875 C-233.63495369 763.93738288 -233.63495369 763.93738288 -221.40665803 758.67940987 C-218.95353882 755.75062936 -219.62180248 751.97055469 -219.67554951 748.32025623 C-219.67688152 747.41830832 -219.67821353 746.51636041 -219.6795859 745.58708075 C-219.68774598 742.53656003 -219.71750025 739.48661823 -219.74690247 736.43623352 C-219.75704314 734.23828496 -219.7658203 732.04032976 -219.77334422 729.84237069 C-219.7926712 725.04877701 -219.82160855 720.25536663 -219.85771561 715.46187019 C-219.91134341 708.33325288 -219.94846157 701.20463386 -219.98075074 694.07589103 C-220.02194555 685.00964236 -220.06669361 675.94342034 -220.12011683 666.87723505 C-220.12436124 666.15682166 -220.12860565 665.43640826 -220.13297869 664.69416416 C-220.13724485 663.97073921 -220.14151102 663.24731425 -220.14590647 662.50196733 C-220.25566937 643.8857107 -220.33098163 625.26947449 -220.39014444 606.65299304 C-220.402275 602.84746504 -220.41471791 599.04193806 -220.42711288 595.23641092 C-220.44212804 590.61583186 -220.45709842 585.99525266 -220.4719593 581.3746731 C-220.52809534 563.94174317 -220.58793176 546.50882821 -220.65258789 529.07592773 C-220.65552869 528.2791277 -220.6584695 527.48232766 -220.66149942 526.66138217 C-220.75710953 500.84454236 -220.89714805 475.02814777 -221.0571563 449.21163491 C-221.22138252 422.66634715 -221.33219729 396.12131445 -221.37936381 369.57555011 C-221.38607476 365.82323019 -221.39343743 362.07091182 -221.40122032 358.31859398 C-221.40273859 357.58012674 -221.40425686 356.8416595 -221.40582114 356.08081447 C-221.43187128 344.21245708 -221.51466098 332.34514566 -221.61942893 320.47725005 C-221.72374578 308.53690229 -221.76999096 296.59745093 -221.75748245 284.65664414 C-221.75319089 278.19086747 -221.7748465 271.72794152 -221.86691284 265.26275826 C-221.95076282 259.33617779 -221.95986607 253.41422242 -221.91102048 247.4872935 C-221.90636135 245.35038172 -221.92852596 243.21319608 -221.98109458 241.07692591 C-222.22436042 230.60426006 -221.89991008 222.99512585 -214.43614877 215.12016569 C-211.70549231 212.52611619 -208.86900876 210.09924839 -205.95668789 207.71240892 C-203.43277856 205.50359224 -201.32931494 203.06222203 -199.21603637 200.46539148 C-197.71672505 198.65863793 -196.06271659 197.17537136 -194.25 195.6875 C-188.01738825 190.37425818 -182.09811695 184.6284974 -176.875 178.3125 C-174.87632414 175.90441614 -172.77514779 173.87162076 -170.38671875 171.8515625 C-165.69428844 167.79146448 -161.31245417 163.45971857 -156.9375 159.0625 C-156.17373047 158.30259766 -155.40996094 157.54269531 -154.62304688 156.75976562 C-151.20018708 153.33104978 -147.86909003 149.89515928 -144.75390625 146.18359375 C-141.77463726 142.71694572 -138.50383641 139.65126291 -135.12011719 136.58935547 C-128.60947951 130.63524261 -122.34433919 124.46356818 -116.12866783 118.20383263 C-114.26706249 116.32916133 -112.40208593 114.45789776 -110.53633118 112.58735657 C-106.58384346 108.62359826 -102.63537047 104.65585635 -98.6875 100.6875 C-94.08734644 96.06359181 -89.48547853 91.44141517 -84.87937355 86.82343483 C-83.05613465 84.99379069 -81.23596892 83.16112859 -79.41593933 81.32829285 C-74.28471092 76.17459997 -69.13963464 71.0969274 -63.60066223 66.37580872 C-61.48450494 64.55691927 -59.51779576 62.61459919 -57.5625 60.625 C-56.81226563 59.86703125 -56.06203125 59.1090625 -55.2890625 58.328125 C-54.15597656 57.17570312 -54.15597656 57.17570312 -53 56 C-48.05367866 50.96927045 -43.07003634 46.08876392 -37.71923828 41.48779297 C-33.10291527 37.49292327 -28.88438899 33.0891906 -24.9375 28.4375 C-21.9555607 24.94476555 -18.7410894 21.75196357 -15.46166992 18.54345703 C-7.38533415 10.64703165 -7.38533415 10.64703165 -0.8828125 1.44140625 C-0.59148438 0.96574219 -0.30015625 0.49007812 0 0 Z \",fill:\"#706E6C\",transform:\"translate(1023,0)\"})),_path3||(_path3=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C171.93 0 343.86 0 521 0 C521 163.35 521 326.7 521 495 C491 495 491 495 479.625 485.4375 C475.1015625 480.05859375 475.1015625 480.05859375 473.03808594 477.43725586 C470.54240535 474.45278302 467.79500094 472.00489168 464.78857422 469.54882812 C462.17170263 467.28273021 460.02018212 464.673714 457.78125 462.04296875 C453.68008433 457.33921953 449.24395271 452.97849553 444.4375 449 C440.51131429 445.70306753 437.31905607 441.891783 434 438 C427.3543836 430.45307939 420.61936039 423.07968159 413 416.5 C401.05792683 406.18639135 401.05792683 406.18639135 399 401 C399 400.01 399 399.02 399 398 C399.86238281 397.97421875 400.72476562 397.9484375 401.61328125 397.921875 C428.38229312 396.67811943 453.48827851 388.00331344 472 368 C487.66432474 349.00179707 491.73689397 327.94713923 489.82568359 303.79736328 C487.81641542 284.8674731 477.27139571 267.95444715 463.125 255.5625 C451.64924952 246.51346873 437.04103341 240.81139447 423 237 C423 236.34 423 235.68 423 235 C422.13375 235.03480469 421.2675 235.06960938 420.375 235.10546875 C414.61298281 234.92540571 409.4288063 232.8234612 404 231 C402.23269531 230.42185547 402.23269531 230.42185547 400.4296875 229.83203125 C385.19875133 224.66020787 374.79420279 218.97460259 367.1640625 204.55078125 C363.95562764 197.52021762 363.75493586 188.80239024 365.68359375 181.36328125 C370.09387035 170.87743688 377.41665494 163.26374771 387.8515625 158.796875 C399.10474929 154.62296572 413.52652695 155.58835864 424.3125 160.52734375 C435.4291052 166.61885561 444.60696245 176.47370405 450 188 C450 188.99 450 189.98 450 191 C458.87798908 187.48153428 465.2958176 181.72552142 472.32226562 175.47607422 C474.74997141 173.34017358 477.23836863 171.28616358 479.75 169.25 C480.52859375 168.61578125 481.3071875 167.9815625 482.109375 167.328125 C484 166 484 166 486 166 C475.25802722 144.98309673 454.10368839 128.98044736 432.06640625 121.32861328 C415.3725943 115.93618145 393.7078211 115.4307263 377 121 C376.21367188 121.24363281 375.42734375 121.48726563 374.6171875 121.73828125 C354.02360949 128.55277426 337.87712323 141.92279194 327.44921875 160.80859375 C320.04199675 175.86339009 319.51226747 192.39522676 321.9375 208.75 C322.2414258 211.88175715 322.28501671 213.45363907 320.82421875 216.25390625 C317.3750466 220.43255848 313.08019523 223.58558343 308.74609375 226.79296875 C304.27340933 230.38765822 300.17940784 234.39413876 296.05273438 238.37744141 C295.42818359 238.97347168 294.80363281 239.56950195 294.16015625 240.18359375 C293.59949463 240.72556396 293.03883301 241.26753418 292.46118164 241.82592773 C291 243 291 243 289 243 C289 243.66 289 244.32 289 245 C289.41507813 244.63390625 289.83015625 244.2678125 290.2578125 243.890625 C295.41562647 239.35865457 300.62363945 234.88718212 305.84179688 230.42504883 C309.70760286 227.11665027 313.54894253 223.7834063 317.3515625 220.40234375 C319.17636784 218.84996196 321.07070686 217.41958905 323 216 C323.27972656 216.72703125 323.55945313 217.4540625 323.84765625 218.203125 C330.77188074 235.5693472 340.16082261 247.85894177 356 258 C356.54317871 258.34885254 357.08635742 258.69770508 357.64599609 259.05712891 C369.68273597 266.57629292 382.98858806 270.51364921 396.44921875 274.640625 C434.36705011 286.31742141 434.36705011 286.31742141 444.125 302.5625 C447.59310745 310.43338216 447.229298 320.81668707 444.875 329 C440.40162662 339.91420264 430.97459736 347.97519386 420.5546875 352.9921875 C409.96401714 357.17015838 397.25416587 358.17779368 386.5 353.9375 C380.91486373 351.20286896 375.91233771 347.79394209 371 344 C370.39800781 343.58621094 369.79601562 343.17242188 369.17578125 342.74609375 C362.46993101 337.75969229 358.38706908 329.96234064 354 323 C353.4225 322.09121094 352.845 321.18242188 352.25 320.24609375 C351.15388082 318.50538175 350.07410939 316.75437867 349 315 C344.81138319 317.03168405 340.96990436 319.47877217 337.0625 322 C336.31411865 322.48186768 335.5657373 322.96373535 334.79467773 323.46020508 C329.29293438 327.04901117 324.04446948 330.87391398 318.93579102 335.00195312 C315.19373455 338 315.19373455 338 313 338 C323.82977571 361.45619623 342.57871336 381.48000786 366.5859375 391.49609375 C372.84517911 393.74488311 378.58482855 395.13559135 385.15966797 395.89794922 C395.06293645 397.09133231 395.06293645 397.09133231 398.19140625 400.125 C399.625 402.6875 399.625 402.6875 400.796875 405.375 C403.78034349 411.8843858 410.46451092 416.425848 415.796875 421.0234375 C421.57685523 426.2090226 427.07564322 431.72665253 432.12109375 437.62890625 C436.9555799 443.20209504 442.25161301 448.32197121 447.5 453.5 C453.34945858 459.2710426 459.13108468 465.02338521 464.47509766 471.27490234 C466.80158155 473.9068164 469.32649525 476.21084338 471.9375 478.5625 C472.45111084 479.02793213 472.96472168 479.49336426 473.49389648 479.97290039 C477.06735649 483.20092034 480.69321746 486.36569469 484.37890625 489.46484375 C486 491 486 491 489 495 C340.5 495 192 495 39 495 C39 494.34 39 493.68 39 493 C39.66 493 40.32 493 41 493 C41.26554687 492.40832031 41.53109375 491.81664062 41.8046875 491.20703125 C44.56308822 486.11390574 49.53638155 482.3648891 53.875 478.625 C59.69715168 473.59114739 65.18809667 468.22163238 70.125 462.3125 C74.12078502 457.64920564 78.6554207 453.58752087 83.16064453 449.4284668 C87.34364987 445.56122823 91.4667861 441.64843562 95.5 437.625 C96.3971875 436.73039062 97.294375 435.83578125 98.21875 434.9140625 C100.20775961 432.87503706 102.06667208 430.76073306 103.91015625 428.58984375 C109.26350302 422.42087397 115.12452222 416.72691492 120.90600586 410.96362305 C122.9326298 408.94235732 124.95385547 406.91580426 126.97460938 404.88867188 C132.59390348 399.26716993 138.18751774 393.70898859 144.25268555 388.56469727 C148.4509936 384.80516725 152.13618084 380.49196322 155.91210938 376.31640625 C159.98063166 371.90052239 164.1882683 368.1256473 168.98901367 364.51904297 C171.34527221 362.739191 173.52153184 360.81832264 175.6875 358.8125 C179.03148897 355.75705245 182.41981269 352.77606193 185.87841797 349.85253906 C197.66703137 339.87984011 208.96201351 329.34462186 219.66430664 318.21118164 C222.97488128 314.82025058 225.92934837 312.71376775 230 310 C230.33 338.71 230.66 367.42 231 397 C245.52 397 260.04 397 275 397 C275 305.26 275 213.52 275 119 C259.16 119 243.32 119 227 119 C226.34 120.65 225.68 122.3 225 124 C223.85653262 125.99266007 222.68666656 127.97025973 221.5 129.9375 C217.40623394 136.89841781 214.13640634 144.15394673 210.86450195 151.52856445 C207.66064582 158.69290467 204.11814217 165.61048973 200.39892578 172.51831055 C198.20882459 176.61399958 196.20795746 180.67317444 194.5 185 C191.39057792 192.86694773 187.21307305 200.20442273 183.24023438 207.65869141 C175.99658752 221.33321372 169.48970154 235.37131881 163.46875 249.625 C161.87038946 253.29782849 160.12281443 256.86600284 158.3125 260.4375 C157.83200195 261.39172852 157.83200195 261.39172852 157.34179688 262.36523438 C156.56305578 263.91109357 155.78179666 265.45568387 155 267 C150.36973433 261.11180088 147.49010324 254.3001881 144.6875 247.39453125 C142.12932548 241.21567253 139.2997539 235.1998162 136.375 229.1875 C135.31238782 226.98703334 134.24989035 224.78651127 133.1875 222.5859375 C132.65511719 221.48604492 132.12273437 220.38615234 131.57421875 219.25292969 C125.52241627 206.7476232 119.51973364 194.22940017 113.8125 181.5625 C110.73949446 174.74538647 107.57516791 168.00144151 104.18334961 161.33740234 C100.4452861 153.97299826 96.91804914 146.50727162 93.38720703 139.04174805 C92.90622559 138.03152588 92.42524414 137.02130371 91.9296875 135.98046875 C91.50929199 135.09254639 91.08889648 134.20462402 90.65576172 133.28979492 C88.22636754 128.46288745 85.58761837 123.74396701 83 119 C68.15 119 53.3 119 38 119 C38.33 210.41 38.66 301.82 39 396 C52.86 396.33 66.72 396.66 81 397 C81 336.61 81 276.22 81 214 C84.58337596 217.58337596 86.76933862 220.73068961 89.0625 225.125 C89.44462646 225.85001709 89.82675293 226.57503418 90.22045898 227.32202148 C94.25900125 235.18441921 97.59747146 243.33363441 100.98706055 251.49072266 C104.2891522 259.41044362 107.86087598 267.07609266 111.81152344 274.6875 C114.42224223 279.76735382 116.95101475 284.88898195 119.5 290 C120.6286486 292.25794131 121.75754926 294.51575664 122.88671875 296.7734375 C124.70182292 300.40364583 126.51692708 304.03385417 128.33203125 307.6640625 C128.6681543 308.33614746 129.00427734 309.00823242 129.35058594 309.70068359 C129.98847733 310.97679018 130.62585279 312.2531548 131.26269531 313.52978516 C132.77633071 316.56262664 134.29868131 319.59041895 135.83984375 322.609375 C142.25821967 335.23455019 148.11432165 348.11991832 154 361 C158.67985205 359.01228797 160.21273639 355.6508777 162.5 351.3125 C162.92941895 350.517229 163.35883789 349.72195801 163.80126953 348.90258789 C165.21361262 346.27500225 166.60738567 343.63808809 168 341 C168.4753418 340.10958008 168.95068359 339.21916016 169.44042969 338.30175781 C182.06723905 314.64657644 193.27692269 290.35800708 204.31269836 265.93330383 C207.181234 259.58881554 210.08849459 253.26237116 213 246.9375 C218.16712384 235.69522219 223.13140749 224.37453906 228 213 C231.02911749 216.02911749 230.31975274 219.49505944 230.33813477 223.5612793 C230.34967087 224.44765579 230.36120697 225.33403229 230.37309265 226.24726868 C230.40749607 229.18960298 230.42592314 232.13172709 230.44140625 235.07421875 C230.45176061 236.58085555 230.45176061 236.58085555 230.46232414 238.11792946 C230.49820321 243.43628735 230.52171785 248.75453855 230.53540039 254.07299805 C230.55193285 259.56349822 230.6103227 265.05270686 230.67854404 270.54277325 C230.72336392 274.76620962 230.73689763 278.98933792 230.74201775 283.21299171 C230.74990805 285.23640714 230.7695435 287.25981271 230.80124092 289.28299522 C230.84275008 292.12025941 230.83983966 294.95428332 230.82641602 297.79174805 C230.84844086 298.62370697 230.8704657 299.45566589 230.89315796 300.31283569 C230.81609023 305.12201684 230.00829503 307.49542519 226.57998657 310.95768738 C225.40535434 311.99339014 224.21403095 313.01077305 223 314 C222.30495361 314.62213379 221.60990723 315.24426758 220.89379883 315.88525391 C220.31654053 316.36913574 219.73928223 316.85301758 219.14453125 317.3515625 C214.40327207 321.44353733 210.06907315 325.90517451 205.6875 330.375 C199.8426939 336.28233245 194.03623901 341.91485935 187.48046875 347.02734375 C183.67302605 350.05530999 180.13711864 353.36812624 176.5546875 356.65625 C168.04925329 364.45940065 168.04925329 364.45940065 163.8125 367.64453125 C157.42437564 372.46714487 152.15338273 377.97255257 146.76196289 383.84863281 C141.69076664 389.34772127 136.36694325 394.45290867 130.8046875 399.44921875 C128.1176782 401.89297512 125.55121921 404.41564807 123 407 C121.90558594 408.07701172 121.90558594 408.07701172 120.7890625 409.17578125 C117.19827729 412.72119553 113.70340513 416.27616444 110.4375 420.125 C107.56305436 423.48405194 104.43317248 426.28734948 101.06376648 429.13830566 C99.17511765 430.84202886 97.57578323 432.5675869 95.94458008 434.51367188 C91.18607846 440.0232085 86.02938807 445.13489179 80.88671875 450.28125 C79.82527149 451.34591685 78.76389683 452.41065609 77.70259094 453.47546387 C75.49481351 455.68918521 73.28502404 457.90087508 71.07397461 460.11132812 C68.23639318 462.94880702 65.40580773 465.79315935 62.57684612 468.63922882 C60.39530511 470.83184971 58.20927358 473.01994977 56.02192116 475.20677185 C54.97528326 476.25459151 53.93027047 477.30403701 52.88690758 478.3551178 C51.43668572 479.81507862 49.98033711 481.26863683 48.5222168 482.72070312 C47.69505661 483.54928833 46.86789642 484.37787354 46.01567078 485.23156738 C44 487 44 487 42 487 C41.7525 487.5775 41.505 488.155 41.25 488.75 C40 491 40 491 36 495 C23.46 495 10.92 495 -2 495 C-2 333.3 -2 171.6 -2 5 C1 5 1 5 2.875 6.8359375 C3.57625 7.67382812 4.2775 8.51171875 5 9.375 C8.34911099 13.23684134 11.80073763 16.73267911 15.625 20.125 C18.75788141 22.91170667 21.688485 25.65650183 24.375 28.875 C27.94609477 33.1242594 31.99069483 36.77041267 36.09008789 40.49633789 C40.08981402 44.13658986 43.94427702 47.88264492 47.70703125 51.76953125 C49.6744544 53.68332787 51.68359721 55.47142287 53.76171875 57.26171875 C58.76466426 61.60526687 63.36347463 66.31197999 68 71.0390625 C71.92183039 75.00685184 75.9477717 78.76032232 80.17431641 82.40136719 C82.61823383 84.5413473 84.90785326 86.81188373 87.1875 89.125 C87.98542969 89.93195313 88.78335938 90.73890625 89.60546875 91.5703125 C90.39566406 92.37210937 91.18585938 93.17390625 92 94 C93.66527138 95.66806078 95.33211278 97.33455478 97 99 C98.19800171 100.19783161 99.39591135 101.39575532 100.59375 102.59375 C101.23183594 103.23183594 101.86992187 103.86992187 102.52734375 104.52734375 C115.3515625 117.3515625 128.17578125 130.17578125 141 143 C141 142.01 141 141.02 141 140 C140.41476562 139.75378906 139.82953125 139.50757813 139.2265625 139.25390625 C136.65597983 137.80626232 135.24544307 136.20757518 133.375 133.9375 C131.04514448 131.02124288 131.04514448 131.02124288 128 129 C128 128.34 128 127.68 128 127 C127.43152344 126.75894531 126.86304688 126.51789063 126.27734375 126.26953125 C123.55211092 124.75031912 121.73309661 122.92581019 119.5625 120.6875 C118.82128906 119.92824219 118.08007812 119.16898437 117.31640625 118.38671875 C116.55199219 117.59910156 115.78757812 116.81148438 115 116 C112.53488749 113.52324129 110.05919517 111.05833865 107.5703125 108.60546875 C103.74258188 104.82054023 99.97340525 101.05290907 96.5 96.9375 C93.11822118 92.98145685 89.3249961 89.60566804 85.42578125 86.16796875 C82.14856001 83.23905121 79.07388132 80.13867039 76 77 C72.37135289 73.31618765 68.63211952 69.79417082 64.8125 66.3125 C59.83024064 61.74854975 55.02100192 57.05120907 50.2734375 52.2421875 C47.57312108 49.57898883 44.74365067 47.10929626 41.86328125 44.64453125 C39.38152323 42.45413266 37.08934971 40.10135004 34.7734375 37.73828125 C32.95834397 35.95916975 31.0670711 34.32636237 29.125 32.6875 C25.16024104 29.27933221 21.80640096 25.47167467 18.36328125 21.546875 C15.97255443 18.97042229 13.46367228 16.6803672 10.8125 14.375 C6.61082312 10.68460361 2.85750319 6.84381639 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#656462\",transform:\"translate(253,242)\"})),_path4||(_path4=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C190.08 0 380.16 0 576 0 C576 16.19703134 575.9751324 31.91031533 575 48 C565.1 48 555.2 48 545 48 C545 55.59 545 63.18 545 71 C555.23 71 565.46 71 576 71 C576 78.92 576 86.84 576 95 C586.23 95 596.46 95 607 95 C607 87.41 607 79.82 607 72 C621.85 71.505 621.85 71.505 637 71 C637.33 79.58 637.66 88.16 638 97 C628.1 97 618.2 97 608 97 C607.67 103.6 607.34 110.2 607 117 C613.50578175 116.96077909 613.50578175 116.96077909 620.01147461 116.90991211 C620.84171143 116.90741455 621.67194824 116.90491699 622.52734375 116.90234375 C623.35999756 116.89710693 624.19265137 116.89187012 625.05053711 116.88647461 C629.04798822 117.04033727 633.02405646 117.5582285 637 118 C637 125.26 637 132.52 637 140 C638.5675 139.98839844 640.135 139.97679687 641.75 139.96484375 C643.83333214 139.95545937 645.91666557 139.94635987 648 139.9375 C649.02996094 139.92912109 650.05992187 139.92074219 651.12109375 139.91210938 C652.63896484 139.90727539 652.63896484 139.90727539 654.1875 139.90234375 C655.10917969 139.89710693 656.03085937 139.89187012 656.98046875 139.88647461 C660.66974531 140.02518043 664.33662607 140.54207826 668 141 C668 148.59 668 156.18 668 164 C678.23 164 688.46 164 699 164 C699 156.08 699 148.16 699 140 C702.56029909 139.10992523 705.19918094 138.87119591 708.82421875 138.8671875 C709.93474609 138.86589844 711.04527344 138.86460937 712.18945312 138.86328125 C713.34380859 138.86714844 714.49816406 138.87101563 715.6875 138.875 C716.85345703 138.87113281 718.01941406 138.86726562 719.22070312 138.86328125 C720.32736328 138.86457031 721.43402344 138.86585938 722.57421875 138.8671875 C724.09921997 138.86887939 724.09921997 138.86887939 725.6550293 138.87060547 C728 139 728 139 729 140 C729.08726223 141.78071246 729.10699041 143.5648314 729.09765625 145.34765625 C729.09515869 146.31968994 729.09266113 147.29172363 729.09008789 148.29321289 C729.07643188 150.15901001 729.07643188 150.15901001 729.0625 152.0625 C729.041875 156.001875 729.02125 159.94125 729 164 C719.43 164.33 709.86 164.66 700 165 C699.67 172.92 699.34 180.84 699 189 C688.77 189 678.54 189 668 189 C668 181.08 668 173.16 668 165 C657.77 165 647.54 165 637 165 C637 172.92 637 180.84 637 189 C644.20902386 188.96069798 644.20902386 188.96069798 651.41796875 188.90991211 C652.33191406 188.90741455 653.24585938 188.90491699 654.1875 188.90234375 C655.10917969 188.89710693 656.03085937 188.89187012 656.98046875 188.88647461 C660.66974531 189.02518043 664.33662607 189.54207826 668 190 C668 197.92 668 205.84 668 214 C657.77 214 647.54 214 637 214 C637 206.41 637 198.82 637 191 C627.1 190.67 617.2 190.34 607 190 C607 197.92 607 205.84 607 214 C586.54 214 566.08 214 545 214 C544.67 206.41 544.34 198.82 544 191 C534.43 190.67 524.86 190.34 515 190 C515 197.92 515 205.84 515 214 C505.1 214 495.2 214 485 214 C484.67 206.41 484.34 198.82 484 191 C474.43 190.67 464.86 190.34 455 190 C454.67 197.92 454.34 205.84 454 214 C444.43 214 434.86 214 425 214 C424 204 424 204 424 190 C414.76 190 405.52 190 396 190 C396 197.92 396 205.84 396 214 C386.1 214 376.2 214 366 214 C366 206.08 366 198.16 366 190 C356.1 190 346.2 190 336 190 C336 197.92 336 205.84 336 214 C325.44 214 314.88 214 304 214 C304 206.08 304 198.16 304 190 C294.43 190 284.86 190 275 190 C275 181.75 275 173.5 275 165 C265.43 165 255.86 165 246 165 C246 157.08 246 149.16 246 141 C236.1 141 226.2 141 216 141 C216 148.92 216 156.84 216 165 C225.57 165 235.14 165 245 165 C245 172.92 245 180.84 245 189 C254.57 189.33 264.14 189.66 274 190 C274 197.92 274 205.84 274 214 C264.43 214 254.86 214 245 214 C245 206.08 245 198.16 245 190 C235.43 190 225.86 190 216 190 C216 195.61 216 201.22 216 207 C211.6842186 203.43478928 207.57837078 199.71412126 203.5625 195.8125 C202.26505859 194.55373047 202.26505859 194.55373047 200.94140625 193.26953125 C199 191 199 191 199 188 C204.28 188 209.56 188 215 188 C215 180.41 215 172.82 215 165 C205.76 165 196.52 165 187 165 C187 169.62 187 174.24 187 179 C182.60168469 175.31977699 178.46241588 171.545708 174.48046875 167.41796875 C173.03645015 165.89501581 173.03645015 165.89501581 171 165 C171 164.34 171 163.68 171 163 C170.34 163 169.68 163 169 163 C169 162.34 169 161.68 169 161 C168.43796875 160.77699219 167.8759375 160.55398437 167.296875 160.32421875 C164.30788543 158.60097476 162.50680733 156.41789063 160.25 153.8125 C156.76733083 149.79619604 153.14090608 146.32601325 149.10986328 142.86303711 C145.51972388 139.69289666 142.17687997 136.2812335 138.8125 132.875 C138.12736328 132.18535156 137.44222656 131.49570313 136.73632812 130.78515625 C135.4594968 129.4997226 134.18370919 128.21325055 132.90942383 126.92529297 C131.49717122 125.50130318 130.08066508 124.08152902 128.66186523 122.6640625 C126.2316379 120.23182911 123.81181065 117.78987937 121.39532471 115.34402466 C118.98543763 112.90706167 116.56995595 110.47567355 114.15429688 108.04443359 C112.89010703 106.77019506 111.62771919 105.49416605 110.3671875 104.21630859 C104.24093744 98.00835384 98.25647054 91.97246408 91.22607422 86.78076172 C86.24643431 82.79726825 81.89159523 78.0536565 77.4375 73.5 C75.460551 71.48608967 73.48024941 69.47556066 71.49609375 67.46875 C71.02096344 66.9880304 70.54583313 66.50731079 70.05630493 66.01202393 C66.72359557 62.66503846 63.26919673 59.51802415 59.67797852 56.453125 C57.41825665 54.49621178 55.3323199 52.39311756 53.25 50.25 C50.63644657 47.5612364 48.05718353 45.17583332 45 43 C45.66 44.65 46.32 46.3 47 48 C43.535 48.495 43.535 48.495 40 49 C39.67 56.26 39.34 63.52 39 71 C48.9 71 58.8 71 69 71 C68.67 78.59 68.34 86.18 68 94 C69.89878906 93.73316406 71.79757813 93.46632813 73.75390625 93.19140625 C95.17908531 91.13011199 95.17908531 91.13011199 103.26951599 97.50727844 C109.04951255 102.5977308 113.99509845 108.47342465 118.84106445 114.43969727 C121.34708085 117.41160657 123.905584 119.66839352 127 122 C130.30497721 125.1263298 133.3030265 128.46872949 136.3125 131.875 C139.62371673 135.5789805 143.03556468 138.87564546 146.81640625 142.0859375 C149.56469218 144.49498957 152.20190494 147.0065253 154.8125 149.5625 C155.72644531 150.45066406 156.64039063 151.33882812 157.58203125 152.25390625 C160.02720003 155.03089114 161.5101492 157.62927445 163 161 C162.01 161 161.02 161 160 161 C160.3403125 161.8971875 160.3403125 161.8971875 160.6875 162.8125 C160.8421875 163.8953125 160.8421875 163.8953125 161 165 C160.27623169 165.6657605 160.27623169 165.6657605 159.5378418 166.3449707 C157.50382194 168.5339881 157.65070105 169.72002159 157.70703125 172.66796875 C157.71452393 173.47258545 157.7220166 174.27720215 157.72973633 175.10620117 C157.77070435 176.63144409 157.77070435 176.63144409 157.8125 178.1875 C157.874375 181.425625 157.93625 184.66375 158 188 C167.9 188.33 177.8 188.66 188 189 C188.11231971 203.3769231 187.66422812 217.6360669 187 232 C177.43 232 167.86 232 158 232 C158 224.08 158 216.16 158 208 C157.67 208.33 157.34 208.66 157 209 C154.852551 209.01681089 152.70448048 208.96251223 150.55859375 208.87890625 C149.25341797 208.83056641 147.94824219 208.78222656 146.60351562 208.73242188 C145.21483925 208.67589169 143.82616743 208.61924959 142.4375 208.5625 C141.04493979 208.50929453 139.65236174 208.45655404 138.25976562 208.40429688 C134.83966601 208.27412007 131.41980743 208.13763931 128 208 C128 215.92 128 223.84 128 232 C118.1 232 108.2 232 98 232 C97.67 225.4 97.34 218.8 97 212 C97.08378906 214.95839844 97.16757813 217.91679687 97.25390625 220.96484375 C97.80381275 241.37736064 98.18444789 261.60117529 97 282 C87.43 282 77.86 282 68 282 C67.145845 273.45844999 66.92234303 265.5422663 67 257 C57.43 257 47.86 257 38 257 C38 264.92 38 272.84 38 281 C43.94 281 49.88 281 56 281 C56 281.33 56 281.66 56 282 C50.72 282 45.44 282 40 282 C39.67 289.59 39.34 297.18 39 305 C38.67 305 38.34 305 38 305 C38 297.41 38 289.82 38 282 C28.1 282 18.2 282 8 282 C8.144375 285.939375 8.28875 289.87875 8.4375 293.9375 C8.48060303 295.18136475 8.52370605 296.42522949 8.56811523 297.70678711 C8.60622314 298.6788208 8.64433105 299.65085449 8.68359375 300.65234375 C8.72025146 301.65257568 8.75690918 302.65280762 8.79467773 303.68334961 C8.74671841 305.96069188 8.74671841 305.96069188 10 307 C12.0708472 307.1584265 14.14678029 307.25124422 16.22265625 307.31640625 C17.48271484 307.35830078 18.74277344 307.40019531 20.04101562 307.44335938 C21.38150736 307.48317596 22.7220022 307.52288814 24.0625 307.5625 C25.40691523 307.60568042 26.7513166 307.64929456 28.09570312 307.69335938 C31.39700013 307.79985283 34.69848579 307.9004675 38 308 C38.33 316.58 38.66 325.16 39 334 C48.57 334 58.14 334 68 334 C68 342.58 68 351.16 68 360 C77.57 360 87.14 360 97 360 C97 368.58 97 377.16 97 386 C87.1 386 77.2 386 67 386 C67 377.42 67 368.84 67 360 C57.76 360 48.52 360 39 360 C38.16621907 356.66487626 37.88185636 354.37555768 37.90234375 351.015625 C37.90484131 350.17290039 37.90733887 349.33017578 37.90991211 348.46191406 C37.91901611 347.40198242 37.92812012 346.34205078 37.9375 345.25 C37.958125 341.8675 37.97875 338.485 38 335 C28.1 335 18.2 335 8 335 C8 343.25 8 351.5 8 360 C17.9 360 27.8 360 38 360 C38.2475 366.0946875 38.2475 366.0946875 38.5 372.3125 C38.55220703 373.59036377 38.60441406 374.86822754 38.65820312 376.18481445 C38.69880859 377.1924585 38.73941406 378.20010254 38.78125 379.23828125 C38.82314453 380.26993408 38.86503906 381.30158691 38.90820312 382.36450195 C38.97360204 384.24211189 39 386.12125145 39 388 C38.67 387.67 38.34 387.34 38 387 C35.78312006 386.84126045 33.56144702 386.74866163 31.33984375 386.68359375 C30.34314415 386.6524221 30.34314415 386.6524221 29.3263092 386.62062073 C27.19681457 386.55506342 25.06719332 386.49621215 22.9375 386.4375 C21.49673153 386.39432061 20.05597601 386.35070651 18.61523438 386.30664062 C15.07695097 386.19855473 11.53857603 386.09952907 8 386 C8 394.91 8 403.82 8 413 C17.9 413 27.8 413 38 413 C38.495 425.375 38.495 425.375 39 438 C48.57 438.33 58.14 438.66 68 439 C68 446.92 68 454.84 68 463 C69.32 463.33 70.64 463.66 72 464 C61.11 464.33 50.22 464.66 39 465 C38.67 472.92 38.34 480.84 38 489 C43.42839995 488.96097135 43.42839995 488.96097135 48.85668945 488.90991211 C55.02838035 488.88799911 60.77407142 489.43400649 67 490 C67 497.59 67 505.18 67 513 C73.50578175 512.96077909 73.50578175 512.96077909 80.01147461 512.90991211 C81.25682983 512.90616577 81.25682983 512.90616577 82.52734375 512.90234375 C83.35999756 512.89710693 84.19265137 512.89187012 85.05053711 512.88647461 C89.04798822 513.04033727 93.02405646 513.5582285 97 514 C97 505.75 97 497.5 97 489 C106.9 489 116.8 489 127 489 C127 496.92 127 504.84 127 513 C136.9 513 146.8 513 157 513 C158.125 520.875 158.125 520.875 158.09765625 524.83984375 C158.09515869 525.59386475 158.09266113 526.34788574 158.09008789 527.12475586 C158.08098389 528.05296143 158.07187988 528.98116699 158.0625 529.9375 C158.041875 532.928125 158.02125 535.91875 158 539 C167.57 539 177.14 539 187 539 C187 522.5 187 506 187 489 C177.43 489 167.86 489 158 489 C158 480.75 158 472.5 158 464 C149.42 464 140.84 464 132 464 C132 463.67 132 463.34 132 463 C138.04654651 462.97506816 144.09306233 462.95703137 150.13964844 462.94506836 C152.19173708 462.94007505 154.24382223 462.93327809 156.29589844 462.92456055 C159.26498279 462.91227368 162.23401964 462.90672154 165.203125 462.90234375 C166.10363586 462.89718246 167.00414673 462.89202118 167.9319458 462.88670349 C174.72474345 462.88612047 181.16670764 463.43055897 188 464 C188 472.25 188 480.5 188 489 C196.91 489 205.82 489 215 489 C215.185625 492.939375 215.37125 496.87875 215.5625 500.9375 C215.65446655 502.80329712 215.65446655 502.80329712 215.74829102 504.70678711 C215.79139404 505.6788208 215.83449707 506.65085449 215.87890625 507.65234375 C215.9260376 508.65257568 215.97316895 509.65280762 216.02172852 510.68334961 C216 513 216 513 215 514 C213.07332493 514.08748207 211.14348139 514.10697334 209.21484375 514.09765625 C208.04501953 514.09443359 206.87519531 514.09121094 205.66992188 514.08789062 C204.43822266 514.07951172 203.20652344 514.07113281 201.9375 514.0625 C200.08415039 514.05573242 200.08415039 514.05573242 198.19335938 514.04882812 C195.12885883 514.03699608 192.06445279 514.02051173 189 514 C189.00523682 514.65597168 189.01047363 515.31194336 189.01586914 515.98779297 C189.03661272 518.95018563 189.04965176 521.91256303 189.0625 524.875 C189.07087891 525.90753906 189.07925781 526.94007813 189.08789062 528.00390625 C189.09111328 528.99003906 189.09433594 529.97617187 189.09765625 530.9921875 C189.10289307 531.90339355 189.10812988 532.81459961 189.11352539 533.75341797 C189 536 189 536 188 538 C188.66 538.33 189.32 538.66 190 539 C189.34 539 188.68 539 188 539 C188 547.25 188 555.5 188 564 C196.91 564 205.82 564 215 564 C215 572.58 215 581.16 215 590 C206.09 590.33 197.18 590.66 188 591 C187.67 599.25 187.34 607.5 187 616 C179.98529768 616.63770021 173.30399141 617.13831216 166.3125 617.0625 C163.569375 617.041875 160.82625 617.02125 158 617 C158 624.92 158 632.84 158 641 C164.87992431 640.96071366 164.87992431 640.96071366 171.75976562 640.90991211 C177.27317754 640.89414497 182.54740413 641.17561943 188 642 C187.99476318 641.2479126 187.98952637 640.4958252 187.98413086 639.72094727 C187.96342773 636.33480658 187.95036123 632.94867916 187.9375 629.5625 C187.92912109 628.37849609 187.92074219 627.19449219 187.91210938 625.97460938 C187.90888672 624.84990234 187.90566406 623.72519531 187.90234375 622.56640625 C187.89710693 621.52427979 187.89187012 620.48215332 187.88647461 619.40844727 C188 617 188 617 189 616 C190.92667507 615.91251793 192.85651861 615.89302666 194.78515625 615.90234375 C195.83840088 615.90484131 196.89164551 615.90733887 197.97680664 615.90991211 C199.32508545 615.91901611 200.67336426 615.92812012 202.0625 615.9375 C206.331875 615.958125 210.60125 615.97875 215 616 C215 624.58 215 633.16 215 642 C206.42 642.33 197.84 642.66 189 643 C188.67 651.25 188.34 659.5 188 668 C188.66 668.33 189.32 668.66 190 669 C189.67 672.63 189.34 676.26 189 680 C188.67 680 188.34 680 188 680 C188 676.37 188 672.74 188 669 C178.1 669 168.2 669 158 669 C158 677.25 158 685.5 158 694 C167.9 694 177.8 694 188 694 C188 711.16 188 728.32 188 746 C178.1 746 168.2 746 158 746 C158 754.25 158 762.5 158 771 C156.02 771 154.04 771 152 771 C153.32 770.67 154.64 770.34 156 770 C156.33 753.83 156.66 737.66 157 721 C147.1 721 137.2 721 127 721 C127.495 707.635 127.495 707.635 128 694 C137.24 694 146.48 694 156 694 C155.96049046 686.56575914 155.96049046 686.56575914 155.90991211 679.1315918 C155.90616577 677.74194214 155.90616577 677.74194214 155.90234375 676.32421875 C155.89710693 675.37635498 155.89187012 674.42849121 155.88647461 673.4519043 C156 671 156 671 157 668 C157.14939774 666.08234406 157.24810283 664.16053478 157.31640625 662.23828125 C157.35451416 661.23063721 157.39262207 660.22299316 157.43188477 659.18481445 C157.47498779 657.90695068 157.51809082 656.62908691 157.5625 655.3125 C157.706875 651.249375 157.85125 647.18625 158 643 C147.77 642.67 137.54 642.34 127 642 C127 633.42 127 624.84 127 616 C137.23 616 147.46 616 158 616 C158 607.42 158 598.84 158 590 C156.01355469 590.08378906 154.02710938 590.16757812 151.98046875 590.25390625 C150.05429645 590.33039685 148.12812236 590.40684813 146.2019043 590.48217773 C144.2067109 590.56173399 142.21174989 590.64705005 140.21679688 590.73242188 C138.96318359 590.78076172 137.70957031 590.82910156 136.41796875 590.87890625 C135.26063232 590.9260376 134.1032959 590.97316895 132.91088867 591.02172852 C130 591 130 591 127 590 C127 581.42 127 572.84 127 564 C117.1 564 107.2 564 97 564 C97 555.75 97 547.5 97 539 C87.43 539 77.86 539 68 539 C67.27412466 535.37062331 66.87920141 532.72378217 66.90234375 529.13671875 C66.90484131 528.33709717 66.90733887 527.53747559 66.90991211 526.71362305 C66.91901611 525.71500244 66.92812012 524.71638184 66.9375 523.6875 C66.958125 520.490625 66.97875 517.29375 67 514 C57.76 514 48.52 514 39 514 C38.1776814 505.77681402 37.91948598 498.21243014 38 490 C29.09 490.33 20.18 490.66 11 491 C11.33 495.95 11.66 500.9 12 506 C14.31 506.33 16.62 506.66 19 507 C21.9375 508.0625 21.9375 508.0625 24 509 C24.25 515.625 24.25 515.625 22 519 C20.68 519 19.36 519 18 519 C18 516.69 18 514.38 18 512 C16.02 511.67 14.04 511.34 12 511 C12.03962733 516.29905129 12.03962733 516.29905129 14.625 520.5 C18.51539222 521.31902994 22.25639016 521.92992525 25.875 520 C27.67243534 516.8045594 27.70202714 513.63526893 28 510 C28.99 509.67 29.98 509.34 31 509 C31.33 509.99 31.66 510.98 32 512 C33.98 512.33 35.96 512.66 38 513 C38 521.58 38 530.16 38 539 C28.1 539.33 18.2 539.66 8 540 C8 547.59 8 555.18 8 563 C5.36 563.33 2.72 563.66 0 564 C0 377.88 0 191.76 0 0 Z \",fill:\"#62605E\",transform:\"translate(0,0)\"})),_path5||(_path5=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C-4.68367814 9.9094542 -11.44679469 16.60620221 -18.38818359 23.40185547 C-22.60586199 27.54339267 -26.62631359 31.7615857 -30.47875977 36.24511719 C-32.38104462 38.43956808 -34.38035058 40.51312809 -36.4375 42.5625 C-37.45650391 43.58537109 -37.45650391 43.58537109 -38.49609375 44.62890625 C-40.5314384 46.5562919 -42.5986223 48.38845852 -44.72265625 50.21484375 C-49.37413628 54.25784056 -53.68110577 58.6074045 -58 63 C-59.51827606 64.54418521 -61.03908735 66.08588206 -62.5625 67.625 C-63.22378906 68.29789062 -63.88507812 68.97078125 -64.56640625 69.6640625 C-66.47850194 71.49942882 -68.4102168 73.21052631 -70.42578125 74.92578125 C-76.1268545 79.88277696 -81.39189906 85.28110179 -86.71307373 90.63790894 C-88.66256755 92.6003164 -90.61529925 94.55945154 -92.56884766 96.51782227 C-96.71539909 100.67572975 -100.85799633 104.83756277 -105 109 C-109.80466079 113.82836341 -114.61098393 118.65504776 -119.42156982 123.47750854 C-121.33342479 125.39578514 -123.24221206 127.31707743 -125.15087891 129.23852539 C-130.45052325 134.56011944 -135.72313971 139.84181897 -141.47608948 144.68081665 C-143.84064507 146.72771003 -145.87226784 149.0314254 -147.9375 151.375 C-152.73514934 156.72470762 -157.73580183 161.8526092 -162.8125 166.9375 C-163.52978271 167.65921387 -164.24706543 168.38092773 -164.98608398 169.12451172 C-168.00360214 172.13394567 -171.01133635 175.07885042 -174.3125 177.77734375 C-176.5588216 179.63513007 -178.3485091 181.38665719 -180.1875 183.625 C-185.65615808 190.02940624 -191.63808583 196.44051181 -198.25 201.6875 C-201.17475083 204.14694956 -203.49899036 206.76618184 -205.90791261 209.72138202 C-208 212 -208 212 -210.51238024 213.85326493 C-215.19201707 217.51668404 -218.04781065 220.51357112 -218.91482615 226.4224031 C-219.38416572 232.10659678 -219.26653147 237.78894313 -219.17562866 243.48629761 C-219.17712579 245.69885263 -219.18303528 247.91140831 -219.19296801 250.12394154 C-219.20755229 256.19418833 -219.15987039 262.26258984 -219.10202003 268.33251953 C-219.05586625 274.2089527 -219.05693132 280.08524944 -219.05697635 285.96183606 C-219.05552279 297.97978926 -219.00815044 309.99714526 -218.93503952 322.01485825 C-218.86292174 333.91337924 -218.81331702 345.81166569 -218.79301834 357.710392 C-218.7911165 358.82103345 -218.7911165 358.82103345 -218.78917623 359.95411209 C-218.78288124 363.7146029 -218.77703018 367.47509424 -218.77137811 371.23558606 C-218.73083848 397.86100498 -218.64695186 424.48612193 -218.53466797 451.11132812 C-218.52789434 452.72069645 -218.52112237 454.33006478 -218.51435204 455.93943311 C-218.51099735 456.73683969 -218.50764267 457.53424627 -218.50418632 458.35581668 C-218.48722795 462.3902667 -218.47032654 466.42471695 -218.45349121 470.45916748 C-218.45015047 471.25921322 -218.44680974 472.05925895 -218.44336777 472.8835485 C-218.36603553 491.47929355 -218.30444763 510.07508078 -218.24755859 528.67089844 C-218.24388732 529.86620703 -218.24388732 529.86620703 -218.24014188 531.08566328 C-218.18438151 549.27283866 -218.13396394 567.46002143 -218.09197426 585.64723396 C-218.09020388 586.41117963 -218.08843351 587.17512531 -218.08660948 587.96222084 C-218.07071126 594.83345637 -218.05492415 601.70469211 -218.04013808 608.57593013 C-218.00159805 626.45672591 -217.94638332 644.33728962 -217.86186905 662.21792991 C-217.80922221 673.42591367 -217.76986356 684.63389424 -217.74112646 695.84196477 C-217.7237769 702.31538484 -217.69950041 708.78860271 -217.65776062 715.26191521 C-217.61963667 721.18064988 -217.59961051 727.09915173 -217.59427722 733.01800419 C-217.58899992 735.16583968 -217.57681794 737.31367086 -217.55725507 739.46142374 C-217.53169904 742.36807182 -217.53053991 745.2737173 -217.53574181 748.18044853 C-217.51569201 749.44788595 -217.51569201 749.44788595 -217.49523717 750.74092817 C-217.52571233 754.40778384 -217.63891648 756.52943139 -219.90743411 759.48579228 C-228.52934248 765.72471659 -239.90674334 764.29686049 -250 764 C-249.67 765.32 -249.34 766.64 -249 768 C-249.99 767.34 -250.98 766.68 -252 766 C-254.7868258 765.78667996 -257.47654372 765.6913985 -260.26531219 765.68521404 C-261.5510393 765.67068145 -261.5510393 765.67068145 -262.8627407 765.65585527 C-265.76066141 765.62562524 -268.65848679 765.60968196 -271.55651855 765.59367371 C-273.6450972 765.57508 -275.73366868 765.55566574 -277.82223272 765.53549749 C-283.58212547 765.48261236 -289.3420475 765.44256024 -295.10205674 765.40480387 C-300.03785711 765.37088157 -304.97358564 765.32963365 -309.90932965 765.28841629 C-355.96638149 764.90491391 -402.02506094 764.67251621 -448.08322689 764.47016174 C-454.93911315 764.44000178 -461.79499654 764.40920512 -468.65087891 764.37817383 C-469.40842076 764.37476034 -470.16596261 764.37134684 -470.94646027 764.36782991 C-495.48161962 764.25680622 -520.01570545 764.07886275 -544.55015837 763.8640053 C-569.78246861 763.64334956 -595.01439259 763.48506457 -620.24756631 763.40669507 C-623.81621505 763.39559519 -627.38486126 763.38381565 -630.95350647 763.37163734 C-631.65580953 763.36926616 -632.35811258 763.36689497 -633.08169755 763.36445193 C-644.35831987 763.32461811 -655.63344466 763.22008527 -666.90936291 763.0913116 C-678.26067805 762.96315487 -689.61024016 762.90706304 -700.96243715 762.91827764 C-707.10712945 762.9223217 -713.24759386 762.89595897 -719.39138603 762.78555489 C-746.77477408 760.97883334 -746.77477408 760.97883334 -770.74630117 771.55332595 C-773.65734244 774.72176374 -776.13831696 777.96978404 -778.43911552 781.60303557 C-782.33026704 787.57846291 -787.42764047 792.57230612 -792.73046875 797.29296875 C-798.42168088 802.44438819 -803.88400919 807.79983749 -809.30078125 813.23828125 C-810.11425018 814.05497284 -810.92771912 814.87166443 -811.76583862 815.71310425 C-814.28329157 818.24435804 -816.79832389 820.77799166 -819.3125 823.3125 C-822.6597834 826.68656932 -826.01050998 830.0571661 -829.36328125 833.42578125 C-830.48697868 834.56192619 -830.48697868 834.56192619 -831.63337708 835.72102356 C-835.69143102 839.79774111 -839.84713028 843.67643682 -844.20524597 847.43009949 C-846.60665949 849.53065491 -848.85480197 851.75929536 -851.09375 854.03125 C-851.97933594 854.92457031 -852.86492187 855.81789063 -853.77734375 856.73828125 C-854.67582031 857.64964844 -855.57429687 858.56101562 -856.5 859.5 C-861.94185696 865.01993238 -867.36000569 870.48153532 -873.27124023 875.50219727 C-877.67465086 879.31732567 -881.63422723 883.53189896 -885.4375 887.9375 C-890.13756559 893.37195084 -895.12930359 898.4044686 -900.5859375 903.078125 C-905.8813266 907.68481275 -910.76196082 912.69234189 -915.6875 917.6875 C-917.52233708 919.54794541 -919.35949719 921.40610327 -921.19921875 923.26171875 C-922.00190186 924.07600342 -922.80458496 924.89028809 -923.6315918 925.72924805 C-925.98244169 927.98316567 -928.44580466 929.9828489 -931 932 C-932.17996312 933.28190378 -933.32813995 934.5940304 -934.4375 935.9375 C-937.36493146 939.37075115 -940.53069646 942.10891372 -944 945 C-945.14437094 946.27453636 -946.2681163 947.56777536 -947.375 948.875 C-949.75624409 951.67584657 -952.19301586 954.12652693 -955 956.5 C-957.58566414 958.69805984 -959.87633074 960.90567127 -962.0625 963.5 C-965.77389559 967.87042846 -969.77741037 971.93112999 -973.8125 976 C-974.4835376 976.68384766 -975.1545752 977.36769531 -975.84594727 978.07226562 C-976.48072998 978.70841797 -977.1155127 979.34457031 -977.76953125 980 C-978.62961792 980.86625 -978.62961792 980.86625 -979.50708008 981.75 C-981 983 -981 983 -983 983 C-983.25523437 983.57105469 -983.51046875 984.14210938 -983.7734375 984.73046875 C-987.28144105 991.22139252 -993.23314334 996.39363764 -998.796875 1001.125 C-1005.49260685 1006.82349519 -1011.97939276 1012.59485917 -1017.5625 1019.40625 C-1019 1021 -1019 1021 -1022 1023 C-1021.41865127 1019.73140998 -1020.47844849 1018.1087842 -1018.12109375 1015.79296875 C-1017.53368408 1015.21015137 -1016.94627441 1014.62733398 -1016.34106445 1014.02685547 C-1015.71288818 1013.41986816 -1015.08471191 1012.81288086 -1014.4375 1012.1875 C-1013.79707764 1011.55730957 -1013.15665527 1010.92711914 -1012.49682617 1010.27783203 C-1009.35259941 1007.20413221 -1006.17544638 1004.21028743 -1002.8125 1001.375 C-999.71625343 998.75486407 -997.05001702 995.90203462 -994.34765625 992.87890625 C-986.74177266 984.47879085 -978.65817428 976.55035193 -970.625 968.5625 C-969.07919087 967.02172132 -967.53361649 965.48070709 -965.98828125 963.93945312 C-963.16501652 961.12427945 -960.3404469 958.31043066 -957.51416016 955.49829102 C-953.17137908 951.17635678 -948.8409338 946.84238484 -944.5221405 942.49649048 C-942.19219181 940.15299848 -939.85944115 937.81230327 -937.52661133 935.47167969 C-936.30500164 934.2450428 -935.08429119 933.01750968 -933.86450195 931.7890625 C-927.93960235 925.8233567 -922.0527351 919.90579097 -915.64379883 914.45458984 C-913.03911664 912.14971884 -910.80236851 909.60750169 -908.5 907 C-905.64113073 903.76224444 -902.82226495 900.79386163 -899.53125 898 C-892.99549071 892.38381402 -887.05578568 886.1220899 -881 880 C-866.69351425 865.53687389 -866.69351425 865.53687389 -860.55224609 860.32080078 C-856.15415945 856.57848421 -852.14786697 852.40613703 -848.5 847.9375 C-846.53273094 845.62595885 -844.76082417 843.87349204 -842.46875 841.94140625 C-837.38990822 837.54585551 -832.71130516 832.78268857 -828 828 C-822.73217102 822.65235543 -817.48514441 817.38853691 -811.72802734 812.56420898 C-809.28516799 810.35293463 -807.26020876 807.86981839 -805.2265625 805.28515625 C-804.61941406 804.64900391 -804.61941406 804.64900391 -804 804 C-803.34 804 -802.68 804 -802 804 C-802 803.34 -802 802.68 -802 802 C-800.53344727 800.55249023 -800.53344727 800.55249023 -798.50390625 798.87109375 C-794.10434314 795.12812404 -790.00851552 791.15720718 -785.9375 787.0625 C-785.26912109 786.39798828 -784.60074219 785.73347656 -783.91210938 785.04882812 C-779.40308426 780.53103912 -775.14708098 775.85063058 -771 771 C-770.41597412 770.32074463 -769.83194824 769.64148926 -769.23022461 768.94165039 C-767.81741177 767.29678134 -766.40829656 765.64873743 -765 764 C-765.87736816 764.02618408 -766.75473633 764.05236816 -767.65869141 764.0793457 C-770.93522757 764.16490909 -774.21056558 764.22740867 -777.48779297 764.2746582 C-778.90204682 764.29969925 -780.31617257 764.33374342 -781.72998047 764.37719727 C-795.00079502 764.77466705 -795.00079502 764.77466705 -798.8984375 761.66796875 C-802.32371681 757.31951936 -802.00886618 754.4909141 -801.56917477 749.14465427 C-800.82973779 738.99102416 -800.87034238 728.86105996 -800.89320374 718.68553162 C-800.89420163 716.56481395 -800.8947497 714.44409604 -800.89489073 712.32337815 C-800.89652586 706.53542627 -800.90437067 700.74749731 -800.91325247 694.95955265 C-800.9217212 688.70265685 -800.92428742 682.44575834 -800.92750549 676.18885803 C-800.93378896 665.35988849 -800.94351425 654.5309279 -800.95540047 643.70196342 C-800.97328231 627.31451695 -800.9826474 610.92707148 -800.99029111 594.53961745 C-800.9933995 587.95545086 -800.99678176 581.37128441 -801.00016689 574.78711796 C-801.00054166 574.05579969 -801.00091643 573.32448143 -801.00130256 572.571002 C-801.01026194 555.18982998 -801.02192608 537.80866004 -801.03442383 520.42749023 C-801.03496823 519.66757227 -801.03551264 518.9076543 -801.03607354 518.12470852 C-801.04880826 500.3803991 -801.06282923 482.63609126 -801.07904053 464.89178467 C-801.08008631 463.74551787 -801.08008631 463.74551787 -801.08115322 462.57609416 C-801.08467117 458.72220959 -801.08819797 454.86832504 -801.0917251 451.01444048 C-801.09242189 450.25268831 -801.09311867 449.49093613 -801.09383656 448.70610056 C-801.09524331 447.16856735 -801.09665158 445.63103414 -801.09806137 444.09350094 C-801.12130348 418.6993526 -801.13776122 393.30520689 -801.14673797 367.91104939 C-801.14801452 364.3268035 -801.14938327 360.74255767 -801.15081596 357.15831184 C-801.15109731 356.45295476 -801.15137866 355.74759769 -801.15166853 355.02086615 C-801.15642573 343.66799612 -801.16858786 332.31514546 -801.18370286 320.96228498 C-801.19876527 309.56264311 -801.20662625 298.16301895 -801.20748956 286.76336538 C-801.20819482 280.58732949 -801.21222061 274.41134102 -801.2249527 268.23531723 C-801.23654031 262.58499298 -801.23896105 256.93474268 -801.23401051 251.28440941 C-801.23385888 249.23766757 -801.23711894 247.19092213 -801.24408758 245.14419215 C-801.25305698 242.36694811 -801.24972941 239.58998045 -801.24330235 236.81273556 C-801.24884222 236.01427335 -801.25438209 235.21581114 -801.26008984 234.3931531 C-801.23267735 229.57121028 -800.6740307 225.54290328 -799 221 C-798.34 220.67 -797.68 220.34 -797 220 C-796.34786708 217.97536745 -796.34786708 217.97536745 -796 216 C-793.22957146 215.21845441 -790.76903093 214.87375834 -787.89372551 214.8688975 C-787.07782639 214.86511285 -786.26192727 214.86132821 -785.42130393 214.85742888 C-784.52867624 214.85834081 -783.63604855 214.85925274 -782.71637154 214.8601923 C-781.2837807 214.85576516 -781.2837807 214.85576516 -779.82224864 214.85124859 C-776.59740264 214.8425337 -773.37259242 214.84097478 -770.1477356 214.83937073 C-767.82217126 214.83464142 -765.49660774 214.82949074 -763.17104518 214.82395309 C-757.4342126 214.81148723 -751.69738707 214.80375409 -745.96054407 214.79805431 C-739.0907226 214.79099697 -732.2209146 214.77823905 -725.35110173 214.76550511 C-707.95882168 214.73365196 -690.56653271 214.71382043 -673.17423326 214.69621959 C-668.46487508 214.69145201 -663.75551717 214.68644333 -659.04615927 214.68141437 C-629.82175822 214.65037331 -600.59735489 214.62375215 -571.37294197 214.60699558 C-564.60230632 214.60305827 -557.83167072 214.59904644 -551.06103516 214.5949707 C-550.21985998 214.59446904 -549.3786848 214.59396737 -548.51201946 214.5934505 C-521.22562527 214.57702434 -493.93932063 214.53855526 -466.65297052 214.4876836 C-438.60863472 214.4354939 -410.56434663 214.40268587 -382.51996128 214.39541805 C-378.5613612 214.39438942 -374.60276121 214.39315309 -370.64416122 214.39179802 C-369.86505489 214.39153998 -369.08594856 214.39128194 -368.28323295 214.39101609 C-355.73183647 214.38631638 -343.18055786 214.36136237 -330.62920554 214.32904659 C-318.02050233 214.29705566 -305.41193221 214.28702228 -292.80319323 214.29947854 C-285.96904106 214.30563329 -279.13522714 214.3020915 -272.3011322 214.2713089 C-266.05004153 214.24409648 -259.79958738 214.24433189 -253.54848348 214.26681935 C-251.28201473 214.27006172 -249.0155045 214.26306194 -246.74910523 214.24502213 C-243.67705563 214.22204368 -240.60730782 214.23575818 -237.53531075 214.25891972 C-236.64736539 214.24344348 -235.75942003 214.22796725 -234.84456724 214.21202204 C-230.23229884 214.28922026 -227.74820014 214.73169817 -224.40404308 218.04631752 C-223.61070886 219.02103274 -222.81737465 219.99574796 -222 221 C-218.6992076 219.89973587 -218.07519718 219.17290663 -215.9375 216.5625 C-210.78385161 210.48855725 -205.05335918 205.00778666 -199.3828125 199.421875 C-194.93217645 195.01182225 -190.67008482 190.5419061 -186.59130859 185.78710938 C-184.17426742 183.07266608 -181.52286378 180.66581438 -178.8125 178.25 C-170.96376859 171.12144057 -163.1853434 163.83941568 -156.3125 155.75 C-153.23435688 152.12998327 -149.8148516 149.0470298 -146.2109375 145.95703125 C-143.69744151 143.73218763 -141.35923557 141.38897384 -139 139 C-137.58411037 137.58255672 -136.16735932 136.16597368 -134.75 134.75 C-133.9765625 133.9765625 -133.203125 133.203125 -132.40625 132.40625 C-108 108 -108 108 -105.8215332 105.82373047 C-103.13067652 103.13077828 -100.44465308 100.43310612 -97.7598114 97.73416138 C-94.97186079 94.93273593 -92.18117767 92.13403894 -89.39038086 89.33544922 C-87.92626003 87.86629816 -86.46303779 86.39625103 -85.00073242 84.92529297 C-82.87139011 82.78371444 -80.73873984 80.64547668 -78.60546875 78.5078125 C-77.96248337 77.85966583 -77.31949799 77.21151917 -76.6570282 76.54373169 C-73.6539432 73.54028314 -70.62062767 70.63970222 -67.38720703 67.88500977 C-61.00878989 62.37158598 -55.15193546 56.29546295 -49.19921875 50.33203125 C-47.8727705 49.00625773 -46.54617394 47.68063258 -45.21943665 46.35514832 C-42.45350237 43.59068103 -39.68936657 40.82443153 -36.92651367 38.05688477 C-33.38811839 34.51277037 -29.84522196 30.97319486 -26.30098248 27.43492603 C-23.56684012 24.70439722 -20.83508391 21.97149121 -18.10404396 19.23785973 C-16.79824998 17.93139984 -15.49171598 16.62567914 -14.18442345 15.32071877 C-12.36099538 13.49983268 -10.54080742 11.67576779 -8.72143555 9.85083008 C-8.18374542 9.31516418 -7.6460553 8.77949829 -7.09207153 8.2276001 C-4.50026964 5.6211053 -2.10782678 3.01544034 0 0 Z M-769 242 C-766.11653233 249.20866918 -761.22552765 254.22859146 -755.3125 259.1875 C-751.37432017 262.50427078 -747.9640716 266.20410941 -744.5 270 C-740.44513873 274.43907922 -736.38109478 278.63691043 -731.7578125 282.49609375 C-729.90495681 284.08131473 -728.20662975 285.75893153 -726.5 287.5 C-724.18980559 289.851726 -721.82217812 292.05039265 -719.3125 294.1875 C-715.11703982 297.79412366 -711.24899373 301.69176361 -707.38793945 305.64916992 C-704.09373068 309.00073642 -700.6194077 311.99502756 -697 315 C-695.31087639 316.64390298 -693.64484939 318.31179799 -692 320 C-683.62645098 328.61070267 -683.62645098 328.61070267 -674.75 336.6875 C-668.83505001 341.71645537 -663.88141647 347.72532432 -658.9375 353.6875 C-656.1997392 356.91957872 -653.12214971 359.62155866 -649.89453125 362.35546875 C-648.21079116 363.81702458 -646.66345585 365.32643266 -645.125 366.9375 C-643.25436301 369.23215846 -643.25436301 369.23215846 -641 369 C-641 369.66 -641 370.32 -641 371 C-639.57438382 372.40613375 -639.57438382 372.40613375 -637.75 373.8125 C-634.73231709 376.29370595 -632.43204176 378.9374289 -630 382 C-629.34 382 -628.68 382 -628 382 C-628 382.99 -628 383.98 -628 385 C-670.1875 342.8125 -670.1875 342.8125 -672.19458008 340.80517578 C-673.65386673 339.34608646 -675.11392322 337.88776711 -676.57421875 336.4296875 C-678.47775007 334.52309092 -680.37509353 332.61091409 -682.26953125 330.6953125 C-683.45048028 329.50516809 -684.63147057 328.31506463 -685.8125 327.125 C-686.6797168 326.24521484 -686.6797168 326.24521484 -687.56445312 325.34765625 C-690.6001897 322.29514765 -693.68701724 319.36497886 -696.94921875 316.5546875 C-701.89669533 312.28156817 -706.42522938 307.62505911 -711 302.9609375 C-714.91561959 298.99943175 -718.93621009 295.25593281 -723.15625 291.62109375 C-725.73070447 289.35753739 -728.1047394 286.95297773 -730.5 284.5 C-733.62355633 281.32403319 -736.78250433 278.25151894 -740.1875 275.375 C-743.83337763 272.2711775 -746.87590082 268.7993973 -750.00390625 265.18359375 C-751.8813083 263.12984082 -753.81088182 261.35222817 -755.9375 259.5625 C-760.7746179 255.48508849 -764.85731496 250.76600571 -769 246 C-769.99 246.495 -769.99 246.495 -771 247 C-771 408.7 -771 570.4 -771 737 C-758.46 737 -745.92 737 -733 737 C-731.02 735.02 -729.04 733.04 -727 731 C-727 730.34 -727 729.68 -727 729 C-726.16927223 728.6567569 -726.16927223 728.6567569 -725.32176208 728.30657959 C-722.3376084 726.62723685 -720.27245478 724.51920825 -717.85180664 722.09472656 C-717.35206833 721.5968866 -716.85233002 721.09904663 -716.33744812 720.58612061 C-714.69009431 718.94246474 -713.05004284 717.29172843 -711.41015625 715.640625 C-710.26236371 714.49163945 -709.11420026 713.3430243 -707.96568298 712.19476318 C-705.55937774 709.78689449 -703.15646607 707.37570671 -700.75610352 704.96191406 C-697.69028125 701.87915019 -694.61796623 698.80296126 -691.54328251 695.72903824 C-689.17085284 693.35633553 -686.80104718 690.98102653 -684.43209648 688.60485077 C-683.30085856 687.47044598 -682.16902748 686.33663236 -681.03657722 685.20343781 C-679.44772464 683.61239777 -677.86221871 682.01809506 -676.27758789 680.42285156 C-674.92667809 679.06622406 -674.92667809 679.06622406 -673.54847717 677.68218994 C-670.88802667 674.88215169 -668.45907075 671.9766826 -666 669 C-664.82336372 667.92265792 -663.61701305 666.87627043 -662.375 665.875 C-658.72598374 662.76709262 -655.47696744 659.40857793 -652.25 655.875 C-651.79028809 655.37210449 -651.33057617 654.86920898 -650.85693359 654.35107422 C-648.79194001 652.06657641 -646.80596831 649.75403418 -644.8984375 647.3359375 C-643.16968981 645.20879528 -641.46467678 643.51066384 -639.375 641.75 C-638.67246094 641.14542969 -637.96992187 640.54085938 -637.24609375 639.91796875 C-635.7598658 638.64885932 -634.27289748 637.38061637 -632.78515625 636.11328125 C-627.30375709 631.32503739 -622.36269944 626.22794629 -617.4375 620.875 C-612.92542536 615.98001481 -608.52072868 611.46117858 -603.09765625 607.55859375 C-600.62624157 605.72229122 -598.39577332 603.70387698 -596.125 601.625 C-592.79453571 598.58058785 -589.40436462 595.68581134 -585.875 592.875 C-574.40561562 583.56721549 -563.91538473 573.07584077 -553.5793457 562.54272461 C-549.72455542 558.6343183 -545.74639244 554.94514802 -541.58398438 551.36523438 C-540.69949681 550.60289553 -539.82567511 549.82567511 -539 549 C-538.89412211 546.14982702 -538.85322265 543.32375632 -538.85473633 540.47290039 C-538.85137772 539.57863846 -538.8480191 538.68437653 -538.84455872 537.76301575 C-538.83501843 534.79121532 -538.83310408 531.81947105 -538.83203125 528.84765625 C-538.82882084 526.79121375 -538.82545694 524.73477148 -538.82194519 522.67832947 C-538.81594623 518.36147532 -538.81410608 514.04464122 -538.81469727 509.7277832 C-538.81479894 504.1845967 -538.80114467 498.64153815 -538.78392506 493.098382 C-538.7728299 488.84943547 -538.77077729 484.60052012 -538.77130699 480.35156059 C-538.77012319 478.30734249 -538.76567922 476.26312368 -538.75797462 474.21891975 C-538.74822456 471.36468561 -538.75103293 468.51073239 -538.75708008 465.65649414 C-538.75146057 464.80498779 -538.74584106 463.95348145 -538.74005127 463.07617188 C-538.56619864 458.56363153 -538.56619864 458.56363153 -541 455 C-547.20363073 468.71515919 -547.20363073 468.71515919 -553.25 482.5 C-556.95520208 491.056194 -560.93258313 499.48560418 -564.87866211 507.93261719 C-568.79276644 516.32752451 -572.58005042 524.77241611 -576.3125 533.25 C-580.23724977 542.13189849 -584.25135711 550.9163489 -588.72412109 559.53515625 C-590.03728075 562.07202189 -591.33894012 564.61464793 -592.6391449 567.15817261 C-593.96356837 569.74727206 -595.29191792 572.3343441 -596.6211853 574.92095947 C-597.2798964 576.20321623 -597.93782097 577.4858774 -598.59487915 578.76898193 C-601.69736259 584.82067094 -604.83570734 590.85274881 -608.2109375 596.7578125 C-608.6548584 597.53527832 -609.0987793 598.31274414 -609.55615234 599.11376953 C-611.17567716 601.22950317 -612.55174925 602.0145447 -615 603 C-616.33635325 600.20974391 -617.66973243 597.41815837 -619 594.625 C-619.61403687 593.33638062 -619.61403687 593.33638062 -620.24047852 592.02172852 C-622.57473695 587.09565386 -624.826954 582.1466563 -626.9855957 577.14135742 C-630.27566561 569.52415787 -633.96103844 562.30766441 -638.07348633 555.10351562 C-643.59336339 545.33992428 -648.25501659 535.15580103 -653 525 C-654.08493219 522.68449476 -655.17056971 520.36932303 -656.25683594 518.05444336 C-656.91475154 516.65208686 -657.57166595 515.24926019 -658.22753906 513.84594727 C-660.19794895 509.6459428 -662.25875365 505.50414112 -664.375 501.375 C-668.0062237 494.2039564 -671.15855619 486.84156682 -674.27294922 479.43310547 C-679.64511026 466.75657311 -679.64511026 466.75657311 -688 456 C-688 516.39 -688 576.78 -688 639 C-701.86 638.67 -715.72 638.34 -730 638 C-730.33 546.59 -730.66 455.18 -731 361 C-716.15 361 -701.3 361 -686 361 C-669.61772839 392.38788174 -669.61772839 392.38788174 -663.94482422 405.34814453 C-661.82734629 410.18476039 -659.58965197 414.92352373 -657.1875 419.625 C-653.11816093 427.59839974 -649.42554893 435.73480717 -645.70825195 443.87695312 C-642.26132758 451.38260531 -638.63053776 458.76969809 -634.875 466.125 C-630.21623783 475.26550353 -626.10512763 484.5470388 -622.29638672 494.07275391 C-620.19064708 499.31320489 -617.94369467 504.17635487 -615 509 C-612.22316968 506.57834565 -610.96355849 504.1086791 -609.5 500.75 C-609.0978125 499.83734375 -608.695625 498.9246875 -608.28125 497.984375 C-607.40509383 495.94357222 -606.53424303 493.90048574 -605.66796875 491.85546875 C-598.69725169 475.58157672 -591.1867971 459.46897643 -582.7890625 443.87890625 C-578.51719379 435.9453051 -574.59037549 427.9893223 -571.01293945 419.71777344 C-568.47889914 413.92105503 -565.60346244 408.38375049 -562.57299805 402.83398438 C-558.65349585 395.55574583 -555.29656723 388.02991692 -551.98120117 380.46044922 C-549.47203208 374.83018726 -546.72630356 369.77104019 -543.12573242 364.75976562 C-541.82037403 363.06737713 -541.82037403 363.06737713 -542 361 C-526.16 361 -510.32 361 -494 361 C-494 452.74 -494 544.48 -494 639 C-508.52 639 -523.04 639 -538 639 C-538.33 610.29 -538.66 581.58 -539 552 C-545.81488541 557.08303584 -545.81488541 557.08303584 -551.875 562.71484375 C-552.71546875 563.56626953 -553.5559375 564.41769531 -554.421875 565.29492188 C-555.27265625 566.16697266 -556.1234375 567.03902344 -557 567.9375 C-562.81679963 573.87327962 -568.67658385 579.60613311 -575 585 C-576.67052462 586.49570227 -578.33780832 587.99504266 -580 589.5 C-586.23772198 595.12153364 -592.54015243 600.63449831 -599 606 C-600.04180086 606.8683286 -601.08347014 607.7368151 -602.125 608.60546875 C-603.78650017 609.98929974 -605.45132974 611.36919437 -607.125 612.73828125 C-611.27524335 616.2227564 -614.93000562 620.0491939 -618.5625 624.0625 C-622.71344641 628.64319145 -626.99731664 632.95812553 -631.5625 637.125 C-639.25157772 644.16435535 -646.62670273 651.50849134 -654 658.875 C-654.5904007 659.46299377 -655.18080139 660.05098755 -655.78909302 660.65679932 C-661.51535011 666.36305436 -667.18387982 672.05351632 -672.43408203 678.20703125 C-675.28512549 681.47146268 -678.36317322 684.50994327 -681.4375 687.5625 C-682.09999756 688.22378906 -682.76249512 688.88507813 -683.44506836 689.56640625 C-686.56376024 692.66016087 -689.68558674 695.68590561 -693.0625 698.5 C-697.50323455 702.245083 -701.29175111 706.59007741 -705.20385742 710.86987305 C-710.73815631 716.85866175 -716.63544241 722.41090946 -722.66577148 727.89624023 C-723.36130127 728.53505127 -724.05683105 729.1738623 -724.7734375 729.83203125 C-725.39653809 730.39639893 -726.01963867 730.9607666 -726.66162109 731.54223633 C-728.22543328 732.91571337 -728.22543328 732.91571337 -728 735 C-728.66 735 -729.32 735 -730 735 C-730 735.66 -730 736.32 -730 737 C-581.5 737 -433 737 -280 737 C-285.21184688 730.9187878 -285.21184688 730.9187878 -290.875 725.5 C-291.65617187 724.8090625 -292.43734375 724.118125 -293.2421875 723.40625 C-294.77656765 722.06747072 -296.31437355 720.73249444 -297.86523438 719.4128418 C-302.47440498 715.45730117 -306.66355648 711.30066169 -310.75 706.8125 C-317.64552893 699.33817537 -324.79071938 692.13986636 -332.03417969 685.00317383 C-336.34746942 680.73443572 -340.48214292 676.39891139 -344.43603516 671.79541016 C-346.6697895 669.23109086 -349.02883389 666.83900812 -351.4375 664.4375 C-352.14072388 663.73500122 -352.14072388 663.73500122 -352.8581543 663.01831055 C-355.58063227 660.322774 -358.37854768 657.77432206 -361.3125 655.3125 C-365.59410739 651.65511052 -369.71723884 647.25457045 -371.80810547 641.94970703 C-372.82439843 639.84212608 -372.82439843 639.84212608 -374.93261719 639.25805664 C-376.1029248 639.08584595 -376.1029248 639.08584595 -377.296875 638.91015625 C-378.16634766 638.76868164 -379.03582031 638.62720703 -379.93164062 638.48144531 C-381.32672852 638.27406738 -381.32672852 638.27406738 -382.75 638.0625 C-409.17570111 633.53877828 -430.19189527 619.53833448 -446 598 C-453.88914765 586.33255706 -453.88914765 586.33255706 -456 580 C-455.43667969 579.74089844 -454.87335938 579.48179687 -454.29296875 579.21484375 C-451.75505515 577.87022513 -449.60500544 576.29357554 -447.3125 574.5625 C-442.34088136 570.90097006 -437.24626328 567.47887438 -432.0625 564.125 C-431.32878174 563.64877197 -430.59506348 563.17254395 -429.83911133 562.68188477 C-426.61905513 560.61033633 -423.45071736 558.66934828 -420 557 C-419.6376123 557.56920166 -419.27522461 558.13840332 -418.90185547 558.72485352 C-417.23179515 561.34099796 -415.55347253 563.95174545 -413.875 566.5625 C-413.30523438 567.45775391 -412.73546875 568.35300781 -412.1484375 569.27539062 C-404.16318911 581.66159978 -393.65042348 592.93358356 -379.10546875 597.4453125 C-365.17124824 599.93419214 -352.07695407 598.41825101 -340.25 590.3125 C-331.9924844 583.90457243 -324.73171978 576.64193606 -323 566 C-322.17825557 555.07079908 -322.65606662 547.17997753 -329.3984375 538.12109375 C-340.5726174 525.44378813 -359.77606898 520.29255312 -375.28881836 515.65380859 C-399.05517335 508.51290719 -425.02735679 498.4404204 -437.93359375 475.57421875 C-440.90356527 469.84100754 -443.48260047 463.94197007 -446 458 C-446.42700195 458.36641602 -446.85400391 458.73283203 -447.29394531 459.11035156 C-450.31145924 461.6984437 -453.33117595 464.28378933 -456.359375 466.859375 C-462.98327064 472.50241714 -469.51036653 478.21893463 -475.890625 484.13671875 C-478 486 -478 486 -480 487 C-480 486.34 -480 485.68 -480 485 C-479.41371826 484.73662842 -478.82743652 484.47325684 -478.22338867 484.2019043 C-475.90242052 482.94725115 -474.31682835 481.60088004 -472.42578125 479.76953125 C-471.76223633 479.13450684 -471.09869141 478.49948242 -470.41503906 477.84521484 C-469.72120117 477.17441895 -469.02736328 476.50362305 -468.3125 475.8125 C-463.93074064 471.62775151 -459.60573176 467.51477222 -454.75 463.875 C-450.18329307 460.56098971 -450.18329307 460.56098971 -447 456 C-446.99042401 453.21338823 -447.29764563 450.52975375 -447.62109375 447.76171875 C-449.8342524 425.7898447 -446.61843661 407.17017887 -432.8125 389.3125 C-421.19387987 375.85833316 -406.01048153 365.58602641 -388.34375 362.4375 C-386.04928454 362.23773395 -386.04928454 362.23773395 -385 361 C-360.4282189 357.04232031 -335.49747268 360.11672365 -314.6171875 374.203125 C-311.64930667 376.37400458 -308.81205669 378.63152389 -306 381 C-305.14019531 381.70898438 -304.28039062 382.41796875 -303.39453125 383.1484375 C-295.26356046 390.13224807 -287.51942948 398.19094888 -283 408 C-283.86238281 408.40025391 -283.86238281 408.40025391 -284.7421875 408.80859375 C-290.82115918 412.01635562 -295.94280746 416.90603073 -300.9375 421.5625 C-306.27892058 426.44489225 -312.08281233 430.69427078 -319 433 C-319.1134375 432.43539062 -319.226875 431.87078125 -319.34375 431.2890625 C-322.46392604 420.4055913 -332.13477041 409.98151421 -341.66015625 404.25 C-342.43230469 403.8375 -343.20445312 403.425 -344 403 C-344.76183594 402.5875 -345.52367187 402.175 -346.30859375 401.75 C-356.57970773 397.13520932 -370.77596668 397.09115562 -381.375 400.75 C-391.24252072 405.17655135 -399.1070697 412.49343736 -403.05078125 422.7265625 C-405.45301703 431.01081594 -404.91077829 439.94754471 -401.26171875 447.7578125 C-395.80734225 457.45072926 -388.70141472 463.78229593 -378.5 468.125 C-377.72333984 468.464104 -376.94667969 468.80320801 -376.14648438 469.15258789 C-369.83900655 471.82504106 -363.49925509 473.72293388 -356.84375 475.30859375 C-354 476 -354 476 -352 477 C-350.00039988 477.039992 -347.99952758 477.04346799 -346 477 C-346 477.66 -346 478.32 -346 479 C-345.18917969 479.23074219 -344.37835937 479.46148437 -343.54296875 479.69921875 C-336.02108251 481.91462878 -329.05132542 484.59080062 -322 488 C-321.20335937 488.33257812 -320.40671875 488.66515625 -319.5859375 489.0078125 C-307.21242159 494.44893513 -297.02509638 504.62525282 -290 516 C-289.44828125 516.88300781 -288.8965625 517.76601563 -288.328125 518.67578125 C-278.19928553 536.00010816 -276.43882514 558.08615252 -280.0625 577.6640625 C-286.2621975 599.72465279 -299.77952114 616.15780893 -319.546875 627.53613281 C-335.58174313 636.44988213 -351.92151641 639.24672985 -370 640 C-369.47134636 643.87456278 -368.58562441 645.94721732 -365.9375 648.8125 C-364.99003906 649.84117187 -364.99003906 649.84117187 -364.0234375 650.890625 C-363.35570312 651.58671875 -362.68796875 652.2828125 -362 653 C-361.35289062 653.67546875 -360.70578125 654.3509375 -360.0390625 655.046875 C-356.82810178 658.32129344 -353.5376229 661.44503306 -350.0625 664.4375 C-342.09467693 671.3117003 -335.05302814 678.98724341 -328.29296875 687.03125 C-324.7946079 691.13767809 -321.14493339 694.72711752 -317.0390625 698.22265625 C-312.1534047 702.48122771 -307.69843786 707.13100156 -303.5 712.0625 C-300.68118545 715.3353518 -297.72139667 718.10028247 -294.34765625 720.79296875 C-292.34680951 722.67396444 -290.99916073 724.3334225 -289.43359375 726.55078125 C-285.92719988 731.32264096 -285.92719988 731.32264096 -278 737 C-268.1 737 -258.2 737 -248 737 C-248 573.65 -248 410.3 -248 242 C-419.93 242 -591.86 242 -769 242 Z \",fill:\"#FCFDFD\",transform:\"translate(1022,0)\"})),_path6||(_path6=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C12.87 0 25.74 0 39 0 C39 6.27 39 12.54 39 19 C34.80078125 19.29296875 34.80078125 19.29296875 30.6015625 19.5859375 C27.84491121 19.76363964 27.84491121 19.76363964 26 22 C25.5551801 26.08367501 25.5551801 26.08367501 27.125 29.75 C29.60724732 31.40483154 32.14704874 32.17581408 35 33 C35 34.32 35 35.64 35 37 C28.375 37.125 28.375 37.125 25 36 C24.67 36.99 24.34 37.98 24 39 C27.83269257 40.80362003 30.76849335 41.44078194 35 41 C37.92902303 40.04331967 37.92902303 40.04331967 40 38 C40.41746608 34.87364791 40.41746608 34.87364791 40 32 C39.29875 31.731875 38.5975 31.46375 37.875 31.1875 C34.8350176 29.9318551 31.9272226 28.49764877 29 27 C29 25.35 29 23.7 29 22 C34.02254631 21.7045561 36.89542386 22.01485372 41 25 C41.495 23.515 41.495 23.515 42 22 C42.99 22.66 43.98 23.32 45 24 C48.08365871 24.2502157 48.08365871 24.2502157 51 24 C51.495 23.505 51.495 23.505 52 23 C54.52793394 22.76328017 57.02934966 22.5785675 59.5625 22.4375 C62.016875 22.293125 64.47125 22.14875 67 22 C67 30.25 67 38.5 67 47 C64.298125 47.0825 61.59625 47.165 58.8125 47.25 C57.54950073 47.30462402 57.54950073 47.30462402 56.26098633 47.36035156 C52.22122987 47.41989391 50.42878492 47.28329452 46.94921875 44.984375 C46.30597656 44.32953125 45.66273437 43.6746875 45 43 C45.66 44.65 46.32 46.3 47 48 C43.535 48.495 43.535 48.495 40 49 C39.67 56.26 39.34 63.52 39 71 C48.9 71 58.8 71 69 71 C68.67 78.59 68.34 86.18 68 94 C69.89878906 93.73316406 71.79757813 93.46632813 73.75390625 93.19140625 C95.17908531 91.13011199 95.17908531 91.13011199 103.26951599 97.50727844 C109.04951255 102.5977308 113.99509845 108.47342465 118.84106445 114.43969727 C121.34708085 117.41160657 123.905584 119.66839352 127 122 C130.30497721 125.1263298 133.3030265 128.46872949 136.3125 131.875 C139.62371673 135.5789805 143.03556468 138.87564546 146.81640625 142.0859375 C149.56469218 144.49498957 152.20190494 147.0065253 154.8125 149.5625 C155.72644531 150.45066406 156.64039063 151.33882812 157.58203125 152.25390625 C160.02720003 155.03089114 161.5101492 157.62927445 163 161 C162.01 161 161.02 161 160 161 C160.3403125 161.8971875 160.3403125 161.8971875 160.6875 162.8125 C160.8421875 163.8953125 160.8421875 163.8953125 161 165 C160.27623169 165.6657605 160.27623169 165.6657605 159.5378418 166.3449707 C157.50382194 168.5339881 157.65070105 169.72002159 157.70703125 172.66796875 C157.71452393 173.47258545 157.7220166 174.27720215 157.72973633 175.10620117 C157.77070435 176.63144409 157.77070435 176.63144409 157.8125 178.1875 C157.874375 181.425625 157.93625 184.66375 158 188 C167.9 188.33 177.8 188.66 188 189 C188.11231971 203.3769231 187.66422812 217.6360669 187 232 C177.43 232 167.86 232 158 232 C158 224.08 158 216.16 158 208 C157.67 208.33 157.34 208.66 157 209 C154.852551 209.01681089 152.70448048 208.96251223 150.55859375 208.87890625 C149.25341797 208.83056641 147.94824219 208.78222656 146.60351562 208.73242188 C145.21483925 208.67589169 143.82616743 208.61924959 142.4375 208.5625 C141.04493979 208.50929453 139.65236174 208.45655404 138.25976562 208.40429688 C134.83966601 208.27412007 131.41980743 208.13763931 128 208 C128 215.92 128 223.84 128 232 C118.1 232 108.2 232 98 232 C97.67 225.4 97.34 218.8 97 212 C97.08378906 214.95839844 97.16757813 217.91679687 97.25390625 220.96484375 C97.80381275 241.37736064 98.18444789 261.60117529 97 282 C87.43 282 77.86 282 68 282 C67.145845 273.45844999 66.92234303 265.5422663 67 257 C57.43 257 47.86 257 38 257 C38 264.92 38 272.84 38 281 C43.94 281 49.88 281 56 281 C56 281.33 56 281.66 56 282 C50.72 282 45.44 282 40 282 C39.67 289.59 39.34 297.18 39 305 C38.67 305 38.34 305 38 305 C38 297.41 38 289.82 38 282 C28.1 282 18.2 282 8 282 C8.144375 285.939375 8.28875 289.87875 8.4375 293.9375 C8.48060303 295.18136475 8.52370605 296.42522949 8.56811523 297.70678711 C8.60622314 298.6788208 8.64433105 299.65085449 8.68359375 300.65234375 C8.72025146 301.65257568 8.75690918 302.65280762 8.79467773 303.68334961 C8.74671841 305.96069188 8.74671841 305.96069188 10 307 C12.0708472 307.1584265 14.14678029 307.25124422 16.22265625 307.31640625 C17.48271484 307.35830078 18.74277344 307.40019531 20.04101562 307.44335938 C21.38150736 307.48317596 22.7220022 307.52288814 24.0625 307.5625 C25.40691523 307.60568042 26.7513166 307.64929456 28.09570312 307.69335938 C31.39700013 307.79985283 34.69848579 307.9004675 38 308 C38.33 316.58 38.66 325.16 39 334 C48.57 334 58.14 334 68 334 C68 342.58 68 351.16 68 360 C77.57 360 87.14 360 97 360 C97 368.58 97 377.16 97 386 C87.1 386 77.2 386 67 386 C67 377.42 67 368.84 67 360 C57.76 360 48.52 360 39 360 C38.16621907 356.66487626 37.88185636 354.37555768 37.90234375 351.015625 C37.90484131 350.17290039 37.90733887 349.33017578 37.90991211 348.46191406 C37.91901611 347.40198242 37.92812012 346.34205078 37.9375 345.25 C37.958125 341.8675 37.97875 338.485 38 335 C28.1 335 18.2 335 8 335 C8 343.25 8 351.5 8 360 C17.9 360 27.8 360 38 360 C38.2475 366.0946875 38.2475 366.0946875 38.5 372.3125 C38.55220703 373.59036377 38.60441406 374.86822754 38.65820312 376.18481445 C38.69880859 377.1924585 38.73941406 378.20010254 38.78125 379.23828125 C38.82314453 380.26993408 38.86503906 381.30158691 38.90820312 382.36450195 C38.97360204 384.24211189 39 386.12125145 39 388 C38.67 387.67 38.34 387.34 38 387 C35.78312006 386.84126045 33.56144702 386.74866163 31.33984375 386.68359375 C30.34314415 386.6524221 30.34314415 386.6524221 29.3263092 386.62062073 C27.19681457 386.55506342 25.06719332 386.49621215 22.9375 386.4375 C21.49673153 386.39432061 20.05597601 386.35070651 18.61523438 386.30664062 C15.07695097 386.19855473 11.53857603 386.09952907 8 386 C8 394.91 8 403.82 8 413 C17.9 413 27.8 413 38 413 C38.495 425.375 38.495 425.375 39 438 C48.57 438.33 58.14 438.66 68 439 C68 446.92 68 454.84 68 463 C69.32 463.33 70.64 463.66 72 464 C61.11 464.33 50.22 464.66 39 465 C38.67 472.92 38.34 480.84 38 489 C43.42839995 488.96097135 43.42839995 488.96097135 48.85668945 488.90991211 C55.02838035 488.88799911 60.77407142 489.43400649 67 490 C67 497.59 67 505.18 67 513 C73.50578175 512.96077909 73.50578175 512.96077909 80.01147461 512.90991211 C81.25682983 512.90616577 81.25682983 512.90616577 82.52734375 512.90234375 C83.35999756 512.89710693 84.19265137 512.89187012 85.05053711 512.88647461 C89.04798822 513.04033727 93.02405646 513.5582285 97 514 C97 505.75 97 497.5 97 489 C106.9 489 116.8 489 127 489 C127 496.92 127 504.84 127 513 C136.9 513 146.8 513 157 513 C158.125 520.875 158.125 520.875 158.09765625 524.83984375 C158.09515869 525.59386475 158.09266113 526.34788574 158.09008789 527.12475586 C158.08098389 528.05296143 158.07187988 528.98116699 158.0625 529.9375 C158.041875 532.928125 158.02125 535.91875 158 539 C167.57 539 177.14 539 187 539 C187 522.5 187 506 187 489 C177.43 489 167.86 489 158 489 C158 480.75 158 472.5 158 464 C149.42 464 140.84 464 132 464 C132 463.67 132 463.34 132 463 C138.04654651 462.97506816 144.09306233 462.95703137 150.13964844 462.94506836 C152.19173708 462.94007505 154.24382223 462.93327809 156.29589844 462.92456055 C159.26498279 462.91227368 162.23401964 462.90672154 165.203125 462.90234375 C166.10363586 462.89718246 167.00414673 462.89202118 167.9319458 462.88670349 C174.72474345 462.88612047 181.16670764 463.43055897 188 464 C188 472.25 188 480.5 188 489 C196.91 489 205.82 489 215 489 C215.185625 492.939375 215.37125 496.87875 215.5625 500.9375 C215.65446655 502.80329712 215.65446655 502.80329712 215.74829102 504.70678711 C215.79139404 505.6788208 215.83449707 506.65085449 215.87890625 507.65234375 C215.9260376 508.65257568 215.97316895 509.65280762 216.02172852 510.68334961 C216 513 216 513 215 514 C213.07332493 514.08748207 211.14348139 514.10697334 209.21484375 514.09765625 C208.04501953 514.09443359 206.87519531 514.09121094 205.66992188 514.08789062 C204.43822266 514.07951172 203.20652344 514.07113281 201.9375 514.0625 C200.08415039 514.05573242 200.08415039 514.05573242 198.19335938 514.04882812 C195.12885883 514.03699608 192.06445279 514.02051173 189 514 C189.00523682 514.65597168 189.01047363 515.31194336 189.01586914 515.98779297 C189.03661272 518.95018563 189.04965176 521.91256303 189.0625 524.875 C189.07087891 525.90753906 189.07925781 526.94007813 189.08789062 528.00390625 C189.09111328 528.99003906 189.09433594 529.97617187 189.09765625 530.9921875 C189.10289307 531.90339355 189.10812988 532.81459961 189.11352539 533.75341797 C189 536 189 536 188 538 C188.66 538.33 189.32 538.66 190 539 C189.34 539 188.68 539 188 539 C188 547.25 188 555.5 188 564 C196.91 564 205.82 564 215 564 C215 572.58 215 581.16 215 590 C206.09 590.33 197.18 590.66 188 591 C187.67 599.25 187.34 607.5 187 616 C179.98529768 616.63770021 173.30399141 617.13831216 166.3125 617.0625 C163.569375 617.041875 160.82625 617.02125 158 617 C158 624.92 158 632.84 158 641 C164.87992431 640.96071366 164.87992431 640.96071366 171.75976562 640.90991211 C177.27317754 640.89414497 182.54740413 641.17561943 188 642 C187.99476318 641.2479126 187.98952637 640.4958252 187.98413086 639.72094727 C187.96342773 636.33480658 187.95036123 632.94867916 187.9375 629.5625 C187.92912109 628.37849609 187.92074219 627.19449219 187.91210938 625.97460938 C187.90888672 624.84990234 187.90566406 623.72519531 187.90234375 622.56640625 C187.89710693 621.52427979 187.89187012 620.48215332 187.88647461 619.40844727 C188 617 188 617 189 616 C190.92667507 615.91251793 192.85651861 615.89302666 194.78515625 615.90234375 C195.83840088 615.90484131 196.89164551 615.90733887 197.97680664 615.90991211 C199.32508545 615.91901611 200.67336426 615.92812012 202.0625 615.9375 C206.331875 615.958125 210.60125 615.97875 215 616 C215 624.58 215 633.16 215 642 C206.42 642.33 197.84 642.66 189 643 C188.67 651.25 188.34 659.5 188 668 C188.66 668.33 189.32 668.66 190 669 C189.67 672.63 189.34 676.26 189 680 C188.67 680 188.34 680 188 680 C188 676.37 188 672.74 188 669 C178.1 669 168.2 669 158 669 C158 677.25 158 685.5 158 694 C167.9 694 177.8 694 188 694 C188 711.16 188 728.32 188 746 C178.1 746 168.2 746 158 746 C158 754.25 158 762.5 158 771 C156.02 771 154.04 771 152 771 C153.32 770.67 154.64 770.34 156 770 C156.33 753.83 156.66 737.66 157 721 C147.1 721 137.2 721 127 721 C127.495 707.635 127.495 707.635 128 694 C137.24 694 146.48 694 156 694 C155.96049046 686.56575914 155.96049046 686.56575914 155.90991211 679.1315918 C155.90616577 677.74194214 155.90616577 677.74194214 155.90234375 676.32421875 C155.89710693 675.37635498 155.89187012 674.42849121 155.88647461 673.4519043 C156 671 156 671 157 668 C157.14939774 666.08234406 157.24810283 664.16053478 157.31640625 662.23828125 C157.35451416 661.23063721 157.39262207 660.22299316 157.43188477 659.18481445 C157.47498779 657.90695068 157.51809082 656.62908691 157.5625 655.3125 C157.706875 651.249375 157.85125 647.18625 158 643 C147.77 642.67 137.54 642.34 127 642 C127 633.42 127 624.84 127 616 C137.23 616 147.46 616 158 616 C158 607.42 158 598.84 158 590 C156.01355469 590.08378906 154.02710938 590.16757812 151.98046875 590.25390625 C150.05429645 590.33039685 148.12812236 590.40684813 146.2019043 590.48217773 C144.2067109 590.56173399 142.21174989 590.64705005 140.21679688 590.73242188 C138.96318359 590.78076172 137.70957031 590.82910156 136.41796875 590.87890625 C135.26063232 590.9260376 134.1032959 590.97316895 132.91088867 591.02172852 C130 591 130 591 127 590 C127 581.42 127 572.84 127 564 C117.1 564 107.2 564 97 564 C97 555.75 97 547.5 97 539 C87.43 539 77.86 539 68 539 C67.27412466 535.37062331 66.87920141 532.72378217 66.90234375 529.13671875 C66.90484131 528.33709717 66.90733887 527.53747559 66.90991211 526.71362305 C66.91901611 525.71500244 66.92812012 524.71638184 66.9375 523.6875 C66.958125 520.490625 66.97875 517.29375 67 514 C57.76 514 48.52 514 39 514 C38.1776814 505.77681402 37.91948598 498.21243014 38 490 C29.09 490.33 20.18 490.66 11 491 C11.33 495.95 11.66 500.9 12 506 C14.31 506.33 16.62 506.66 19 507 C21.9375 508.0625 21.9375 508.0625 24 509 C24.25 515.625 24.25 515.625 22 519 C20.68 519 19.36 519 18 519 C18 516.69 18 514.38 18 512 C16.02 511.67 14.04 511.34 12 511 C12.03962733 516.29905129 12.03962733 516.29905129 14.625 520.5 C18.51539222 521.31902994 22.25639016 521.92992525 25.875 520 C27.67243534 516.8045594 27.70202714 513.63526893 28 510 C28.99 509.67 29.98 509.34 31 509 C31.33 509.99 31.66 510.98 32 512 C33.98 512.33 35.96 512.66 38 513 C38 521.58 38 530.16 38 539 C28.1 539.33 18.2 539.66 8 540 C8 547.59 8 555.18 8 563 C5.36 563.33 2.72 563.66 0 564 C0 377.88 0 191.76 0 0 Z \",fill:\"#686665\",transform:\"translate(0,0)\"})),_path7||(_path7=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.56959053 2.56494389 5.13306457 5.13480777 7.68359375 7.71875 C13.24738291 13.44180247 13.24738291 13.44180247 19.25 18.6875 C21.50897509 20.58709269 23.18532156 22.32450138 25.0625 24.5625 C28.75705456 28.904216 32.87815823 32.66829053 37.08886719 36.49511719 C41.08889022 40.13589808 44.94387291 43.88222748 48.70703125 47.76953125 C50.6744544 49.68332787 52.68359721 51.47142287 54.76171875 53.26171875 C59.76466426 57.60526687 64.36347463 62.31197999 69 67.0390625 C72.92183039 71.00685184 76.9477717 74.76032232 81.17431641 78.40136719 C83.61823383 80.5413473 85.90785326 82.81188373 88.1875 85.125 C88.98542969 85.93195313 89.78335938 86.73890625 90.60546875 87.5703125 C91.39566406 88.37210937 92.18585938 89.17390625 93 90 C94.66527138 91.66806078 96.33211278 93.33455478 98 95 C99.19800171 96.19783161 100.39591135 97.39575532 101.59375 98.59375 C102.23183594 99.23183594 102.86992187 99.86992187 103.52734375 100.52734375 C116.3515625 113.3515625 129.17578125 126.17578125 142 139 C142 138.01 142 137.02 142 136 C141.41476562 135.75378906 140.82953125 135.50757813 140.2265625 135.25390625 C137.65597983 133.80626232 136.24544307 132.20757518 134.375 129.9375 C132.04514448 127.02124288 132.04514448 127.02124288 129 125 C129 124.34 129 123.68 129 123 C128.43152344 122.75894531 127.86304688 122.51789063 127.27734375 122.26953125 C124.55211092 120.75031912 122.73309661 118.92581019 120.5625 116.6875 C119.77746094 115.88441406 118.99242187 115.08132813 118.18359375 114.25390625 C117.46300781 113.51011719 116.74242187 112.76632812 116 112 C115.04401839 111.0393207 114.08625061 110.08040715 113.125 109.125 C112.42375 108.42375 111.7225 107.7225 111 107 C110.401875 106.443125 109.80375 105.88625 109.1875 105.3125 C108 104 108 104 108 102 C109.98 102.495 109.98 102.495 112 103 C112 98.38 112 93.76 112 89 C110.02 88.01 110.02 88.01 108 87 C109.32 87 110.64 87 112 87 C112 78.75 112 70.5 112 62 C131.8 62 151.6 62 172 62 C172 70.58 172 79.16 172 88 C178.13163962 87.96085283 178.13163962 87.96085283 184.26318359 87.90991211 C185.05031738 87.90741455 185.83745117 87.90491699 186.6484375 87.90234375 C187.43395996 87.89710693 188.21948242 87.89187012 189.02880859 87.88647461 C193.36527751 88.05216549 197.68190359 88.56819036 202 89 C202 97.25 202 105.5 202 114 C192.1 114 182.2 114 172 114 C172 122.58 172 131.16 172 140 C182.23 140 192.46 140 203 140 C203 131.42 203 122.84 203 114 C213.125 112.875 213.125 112.875 217.25390625 112.90234375 C218.12724609 112.90556641 219.00058594 112.90878906 219.90039062 112.91210938 C221.21813477 112.92467773 221.21813477 112.92467773 222.5625 112.9375 C223.47580078 112.94201172 224.38910156 112.94652344 225.33007812 112.95117188 C227.55345738 112.9628126 229.77669121 112.97916149 232 113 C231.4121875 113.55429687 230.824375 114.10859375 230.21875 114.6796875 C221.92417083 123.35394811 217.44230427 135.28070115 212.57983398 146.04589844 C209.45053526 152.94845778 206.1599778 159.70487538 202.5625 166.375 C199.48303633 172.08585409 196.78198065 177.75654364 194.39453125 183.796875 C191.42608963 190.61514427 187.73584979 197.09984051 184.24023438 203.65869141 C176.99658752 217.33321372 170.48970154 231.37131881 164.46875 245.625 C162.87038946 249.29782849 161.12281443 252.86600284 159.3125 256.4375 C158.83200195 257.39172852 158.83200195 257.39172852 158.34179688 258.36523438 C157.56305578 259.91109357 156.78179666 261.45568387 156 263 C151.36973433 257.11180088 148.49010324 250.3001881 145.6875 243.39453125 C143.12932548 237.21567253 140.2997539 231.1998162 137.375 225.1875 C136.31238782 222.98703334 135.24989035 220.78651127 134.1875 218.5859375 C133.65511719 217.48604492 133.12273437 216.38615234 132.57421875 215.25292969 C126.52241627 202.7476232 120.51973364 190.22940017 114.8125 177.5625 C111.73949446 170.74538647 108.57516791 164.00144151 105.18334961 157.33740234 C101.4452861 149.97299826 97.91804914 142.50727162 94.38720703 135.04174805 C93.90622559 134.03152588 93.42524414 133.02130371 92.9296875 131.98046875 C92.50929199 131.09254639 92.08889648 130.20462402 91.65576172 129.28979492 C89.22636754 124.46288745 86.58761837 119.74396701 84 115 C69.15 115 54.3 115 39 115 C39.33 206.41 39.66 297.82 40 392 C53.86 392.33 67.72 392.66 82 393 C82 332.61 82 272.22 82 210 C85.58337596 213.58337596 87.76933862 216.73068961 90.0625 221.125 C90.44462646 221.85001709 90.82675293 222.57503418 91.22045898 223.32202148 C95.25900125 231.18441921 98.59747146 239.33363441 101.98706055 247.49072266 C105.2891522 255.41044362 108.86087598 263.07609266 112.81152344 270.6875 C115.42224223 275.76735382 117.95101475 280.88898195 120.5 286 C121.6286486 288.25794131 122.75754926 290.51575664 123.88671875 292.7734375 C125.70182292 296.40364583 127.51692708 300.03385417 129.33203125 303.6640625 C129.6681543 304.33614746 130.00427734 305.00823242 130.35058594 305.70068359 C130.98847733 306.97679018 131.62585279 308.2531548 132.26269531 309.52978516 C133.77633071 312.56262664 135.29868131 315.59041895 136.83984375 318.609375 C143.25821967 331.23455019 149.11432165 344.11991832 155 357 C159.67985205 355.01228797 161.21273639 351.6508777 163.5 347.3125 C163.92941895 346.517229 164.35883789 345.72195801 164.80126953 344.90258789 C166.21361262 342.27500225 167.60738567 339.63808809 169 337 C169.4753418 336.10958008 169.95068359 335.21916016 170.44042969 334.30175781 C183.06723905 310.64657644 194.27692269 286.35800708 205.31269836 261.93330383 C208.181234 255.58881554 211.08849459 249.26237116 214 242.9375 C219.16712384 231.69522219 224.13140749 220.37453906 229 209 C232.02911749 212.02911749 231.31975274 215.49505944 231.33813477 219.5612793 C231.34967087 220.44765579 231.36120697 221.33403229 231.37309265 222.24726868 C231.40749607 225.18960298 231.42592314 228.13172709 231.44140625 231.07421875 C231.45176061 232.58085555 231.45176061 232.58085555 231.46232414 234.11792946 C231.49820321 239.43628735 231.52171785 244.75453855 231.53540039 250.07299805 C231.55193285 255.56349822 231.6103227 261.05270686 231.67854404 266.54277325 C231.72336392 270.76620962 231.73689763 274.98933792 231.74201775 279.21299171 C231.74990805 281.23640714 231.7695435 283.25981271 231.80124092 285.28299522 C231.84275008 288.12025941 231.83983966 290.95428332 231.82641602 293.79174805 C231.84844086 294.62370697 231.8704657 295.45566589 231.89315796 296.31283569 C231.81609023 301.12201684 231.00829503 303.49542519 227.57998657 306.95768738 C226.40535434 307.99339014 225.21403095 309.01077305 224 310 C223.30495361 310.62213379 222.60990723 311.24426758 221.89379883 311.88525391 C221.31654053 312.36913574 220.73928223 312.85301758 220.14453125 313.3515625 C215.40327207 317.44353733 211.06907315 321.90517451 206.6875 326.375 C200.8426939 332.28233245 195.03623901 337.91485935 188.48046875 343.02734375 C184.67302605 346.05530999 181.13711864 349.36812624 177.5546875 352.65625 C169.04925329 360.45940065 169.04925329 360.45940065 164.8125 363.64453125 C158.42437564 368.46714487 153.15338273 373.97255257 147.76196289 379.84863281 C142.69076664 385.34772127 137.36694325 390.45290867 131.8046875 395.44921875 C129.1176782 397.89297512 126.55121921 400.41564807 124 403 C122.90558594 404.07701172 122.90558594 404.07701172 121.7890625 405.17578125 C118.19827729 408.72119553 114.70340513 412.27616444 111.4375 416.125 C108.56305436 419.48405194 105.43317248 422.28734948 102.06376648 425.13830566 C100.17511765 426.84202886 98.57578323 428.5675869 96.94458008 430.51367188 C92.18607846 436.0232085 87.02938807 441.13489179 81.88671875 446.28125 C80.82527149 447.34591685 79.76389683 448.41065609 78.70259094 449.47546387 C76.49481351 451.68918521 74.28502404 453.90087508 72.07397461 456.11132812 C69.23639318 458.94880702 66.40580773 461.79315935 63.57684612 464.63922882 C61.39530511 466.83184971 59.20927358 469.01994977 57.02192116 471.20677185 C55.97528326 472.25459151 54.93027047 473.30403701 53.88690758 474.3551178 C52.43668572 475.81507862 50.98033711 477.26863683 49.5222168 478.72070312 C48.69505661 479.54928833 47.86789642 480.37787354 47.01567078 481.23156738 C45 483 45 483 43 483 C42.7525 483.5775 42.505 484.155 42.25 484.75 C40.70976193 487.52242853 39.54466255 489.05597859 37 491 C33.97094023 491.34890086 31.31696713 491.46754756 28.296875 491.390625 C27.45908508 491.38496521 26.62129517 491.37930542 25.75811768 491.37347412 C23.08815834 491.35112329 20.41955213 491.30093098 17.75 491.25 C15.93751941 491.22993325 14.12501774 491.21168278 12.3125 491.1953125 C7.87448041 491.15126294 3.43746944 491.08224566 -1 491 C-1.01710974 444.29902733 -1.03303146 397.5980544 -1.04234314 350.89707947 C-1.0424812 350.20644613 -1.04261925 349.51581279 -1.04276149 348.80425117 C-1.04575405 333.79675178 -1.04852428 318.78925236 -1.05106533 303.78175289 C-1.05231272 296.42261715 -1.05360927 289.06348143 -1.05493164 281.7043457 C-1.0550624 280.97200354 -1.05519316 280.23966138 -1.05532788 279.48512703 C-1.05959307 255.72622892 -1.06710723 231.96733318 -1.07629722 208.2084365 C-1.08572006 183.80336643 -1.09188317 159.39829766 -1.09391499 134.9932258 C-1.09420317 131.55017073 -1.0945288 128.10711566 -1.09487724 124.66406059 C-1.09494467 123.98638428 -1.09501209 123.30870797 -1.09508156 122.61049601 C-1.0962656 111.67957331 -1.10090989 100.74865466 -1.10683203 89.81773362 C-1.11270524 78.84192303 -1.11489026 67.86611587 -1.11350138 56.89030368 C-1.11285766 50.93791689 -1.11387924 44.98554204 -1.11920547 39.03315735 C-1.12403771 33.59347215 -1.12433982 28.153807 -1.12089889 22.71412092 C-1.12047303 20.73699601 -1.12177024 18.7598699 -1.12488318 16.7827474 C-1.12884423 14.11365953 -1.12676523 11.44464593 -1.12304783 8.77555943 C-1.12567484 7.99205717 -1.12830186 7.20855492 -1.13100848 6.40131018 C-1.1141458 1.1141458 -1.1141458 1.1141458 0 0 Z \",fill:\"#656462\",transform:\"translate(252,246)\"})),_path8||(_path8=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C47.35421438 -0.03410802 94.70842936 -0.06606479 142.06265259 -0.08468628 C142.76301603 -0.08496239 143.46337948 -0.08523851 144.18496606 -0.08552299 C159.40412978 -0.09150819 174.62329363 -0.09704864 189.84245767 -0.10213066 C197.30545358 -0.10462543 204.76844946 -0.10721852 212.23144531 -0.10986328 C213.34545826 -0.11025556 213.34545826 -0.11025556 214.48197653 -0.11065576 C238.57340127 -0.11918519 262.66481665 -0.13421281 286.75623572 -0.15259444 C311.50416049 -0.17144278 336.25208008 -0.18376697 361.00001191 -0.18782998 C364.49193733 -0.18840633 367.98386272 -0.1890576 371.47578812 -0.18975449 C372.16307906 -0.18988933 372.85037 -0.19002418 373.55848794 -0.19016311 C384.64171138 -0.19253062 395.72491884 -0.20181767 406.80813575 -0.21366407 C417.93855436 -0.22541427 429.06895736 -0.22977964 440.19938348 -0.22700275 C446.23494386 -0.22571586 452.27045718 -0.2277525 458.30600929 -0.23841095 C463.82286659 -0.24808282 469.33964479 -0.24867474 474.85650559 -0.24179779 C476.86056719 -0.24094679 478.86463356 -0.24353502 480.86868565 -0.24976636 C483.57657986 -0.25770188 486.28418218 -0.25352226 488.99207115 -0.24609566 C490.18022964 -0.2539767 490.18022964 -0.2539767 491.39239132 -0.26201695 C496.7717084 -0.2282916 496.7717084 -0.2282916 499 2 C498.67 3.32 498.34 4.64 498 6 C494.7 6 491.4 6 488 6 C488 14.25 488 22.5 488 31 C497.57 31 507.14 31 517 31 C516.67 28.36 516.34 25.72 516 23 C515.34 23 514.68 23 514 23 C513.67 21.35 513.34 19.7 513 18 C518.03163018 22.29785078 523.02718443 26.63425542 528 31 C527.67 31.66 527.34 32.32 527 33 C523.04 32.505 523.04 32.505 519 32 C518.67 40.58 518.34 49.16 518 58 C533.345 57.505 533.345 57.505 549 57 C549 65.25 549 73.5 549 82 C539.1 82 529.2 82 519 82 C518.67 89.92 518.34 97.84 518 106 C508.1 105.67 498.2 105.34 488 105 C488 97.41 488 89.82 488 82 C497.57 81.67 507.14 81.34 517 81 C517 73.74 517 66.48 517 59 C507.43 58.67 497.86 58.34 488 58 C486.875 50.125 486.875 50.125 486.90234375 45.94140625 C486.90484131 45.14677979 486.90733887 44.35215332 486.90991211 43.53344727 C486.91901611 42.55303467 486.92812012 41.57262207 486.9375 40.5625 C486.958125 37.406875 486.97875 34.25125 487 31 C472.15 31.495 472.15 31.495 457 32 C457 40.58 457 49.16 457 58 C459.08183594 57.98839844 461.16367187 57.97679687 463.30859375 57.96484375 C465.31746298 57.95789265 467.32633251 57.95097611 469.33520508 57.94506836 C470.73495228 57.9400292 472.1346942 57.93319784 473.53442383 57.92456055 C475.54245777 57.9124768 477.55052957 57.90730193 479.55859375 57.90234375 C481.37315063 57.89448853 481.37315063 57.89448853 483.22436523 57.88647461 C486 58 486 58 487 59 C487.08700342 60.63472882 487.10701063 62.27314055 487.09765625 63.91015625 C487.09515869 64.800979 487.09266113 65.69180176 487.09008789 66.60961914 C487.07643188 68.31879517 487.07643188 68.31879517 487.0625 70.0625 C487.041875 73.671875 487.02125 77.28125 487 81 C477.1 81 467.2 81 457 81 C457 73.74 457 66.48 457 59 C447.1 59 437.2 59 427 59 C427 64.28 427 69.56 427 75 C426.67 75 426.34 75 426 75 C425.14382011 69.11376326 425 64.12321914 425 58 C410.15 58.495 410.15 58.495 395 59 C395 66.26 395 73.52 395 81 C391.70265354 82.09911549 389.27041255 82.1139456 385.80078125 82.09765625 C383.98803711 82.09282227 383.98803711 82.09282227 382.13867188 82.08789062 C380.2447168 82.07532227 380.2447168 82.07532227 378.3125 82.0625 C376.40114258 82.05573242 376.40114258 82.05573242 374.45117188 82.04882812 C371.3007613 82.03702883 368.15037481 82.01909318 365 82 C365 89.26 365 96.52 365 104 C371.87973331 104.28771571 371.87973331 104.28771571 378.75976562 104.56811523 C379.63310547 104.60622314 380.50644531 104.64433105 381.40625 104.68359375 C382.28603516 104.72025146 383.16582031 104.75690918 384.07226562 104.79467773 C387.72795575 105.0510516 391.36363017 105.54545377 395 106 C395 112.93 395 119.86 395 127 C405.23 127 415.46 127 426 127 C426 134.26 426 141.52 426 149 C435.9 149 445.8 149 456 149 C456 143.39 456 137.78 456 132 C456.33 132 456.66 132 457 132 C457.02683987 134.97922593 457.04676037 137.95821295 457.0625 140.9375 C457.07087891 141.78763672 457.07925781 142.63777344 457.08789062 143.51367188 C457.09272461 144.72700195 457.09272461 144.72700195 457.09765625 145.96484375 C457.10551147 147.08814087 457.10551147 147.08814087 457.11352539 148.23413086 C457 150 457 150 456 151 C453.85613343 151.15858842 451.70733162 151.25129298 449.55859375 151.31640625 C447.60083008 151.37924805 447.60083008 151.37924805 445.60351562 151.44335938 C444.2148467 151.48317608 442.82617478 151.52288825 441.4375 151.5625 C440.04490817 151.60567989 438.65232972 151.649294 437.25976562 151.69335938 C433.83995199 151.79985876 430.42006237 151.90186923 427 152 C426.67 154.31 426.34 156.62 426 159 C425.67 159 425.34 159 425 159 C425 156.03 425 153.06 425 150 C415.1 150 405.2 150 395 150 C395 142.74 395 135.48 395 128 C380.15 128.495 380.15 128.495 365 129 C365.01160156 131.65933594 365.02320313 134.31867188 365.03515625 137.05859375 C365.04294652 139.62345256 365.04902345 142.18831007 365.05493164 144.75317383 C365.05997218 146.54094021 365.06680454 148.32870245 365.07543945 150.11645508 C365.0875173 152.68051168 365.09323094 155.24451397 365.09765625 157.80859375 C365.10281754 158.6127623 365.10797882 159.41693085 365.11329651 160.24546814 C365.11349215 162.16401715 365.06201983 164.08245368 365 166 C363.11368457 167.88631543 359.85799307 167.24265292 357.33984375 167.31640625 C356.67537735 167.33718735 356.01091095 167.35796844 355.3263092 167.37937927 C353.19681457 167.44493658 351.06719332 167.50378785 348.9375 167.5625 C347.49673153 167.60567939 346.05597601 167.64929349 344.61523438 167.69335938 C341.07695097 167.80144527 337.53857603 167.90047093 334 168 C334 162.06 334 156.12 334 150 C313.54 150 293.08 150 272 150 C271.67 143.07 271.34 136.14 271 129 C261.43 128.67 251.86 128.34 242 128 C242 135.59 242 143.18 242 151 C251.9 151 261.8 151 272 151 C272 157.6 272 164.2 272 171 C273.794375 170.835 275.58875 170.67 277.4375 170.5 C285.62769766 169.85816332 293.78991188 169.91150803 302 170 C302 166.7 302 163.4 302 160 C302.33 160 302.66 160 303 160 C303 170.56 303 181.12 303 192 C288.15 192.495 288.15 192.495 273 193 C270.0026208 187.0052416 270.89436297 178.5494958 271 172 C270.16339844 172.0721875 269.32679688 172.144375 268.46484375 172.21875 C259.59674178 172.92584119 250.89397845 173.08390546 242 173 C241.67 165.74 241.34 158.48 241 151 C231.1 151.33 221.2 151.66 211 152 C211 144.08 211 136.16 211 128 C220.9 128 230.8 128 241 128 C241 120.41 241 112.82 241 105 C231.43 105.33 221.86 105.66 212 106 C211.67 112.93 211.34 119.86 211 127 C201.1 127.33 191.2 127.66 181 128 C180 115 180 115 180 105 C170.43 105.33 160.86 105.66 151 106 C151 98.08 151 90.16 151 82 C160.9 82 170.8 82 181 82 C181 74.41 181 66.82 181 59 C171.43 59 161.86 59 152 59 C152.03927529 63.99541861 152.03927529 63.99541861 152.09008789 68.99072266 C152.09383423 69.94277588 152.09383423 69.94277588 152.09765625 70.9140625 C152.10289307 71.5529541 152.10812988 72.1918457 152.11352539 72.85009766 C151.96894244 75.58815676 151.45076127 78.29543235 151 81 C141.76 81.66 132.52 82.32 123 83 C123.03958834 90.52432774 123.03958834 90.52432774 123.09008789 98.04858398 C123.09383423 99.44572632 123.09383423 99.44572632 123.09765625 100.87109375 C123.10289307 101.82943115 123.10812988 102.78776855 123.11352539 103.77514648 C123 106 123 106 122 107 C121.85613896 108.32886073 121.77323712 109.66448587 121.71875 111 C121.66267578 112.2065625 121.66267578 112.2065625 121.60546875 113.4375 C121.57066406 114.283125 121.53585937 115.12875 121.5 116 C121.43139491 117.66684971 121.35869777 119.33353774 121.28125 121 C121.25095703 121.7425 121.22066406 122.485 121.18945312 123.25 C121 125 121 125 120 126 C118.00217874 126.15825258 115.99911166 126.25119171 113.99609375 126.31640625 C112.90224365 126.35451416 111.80839355 126.39262207 110.68139648 126.43188477 C108.58066772 126.49653931 108.58066772 126.49653931 106.4375 126.5625 C102.003125 126.706875 97.56875 126.85125 93 127 C93 112.15 93 97.3 93 82 C102.57 82 112.14 82 122 82 C122 74.41 122 66.82 122 59 C112.76 59.33 103.52 59.66 94 60 C93.67 66.93 93.34 73.86 93 81 C92.67 81 92.34 81 92 81 C91.84259818 64.30814281 92.2757172 47.67584086 93 31 C88.8882744 30.97534254 84.77657722 30.95716041 80.66479492 30.94506836 C79.26504772 30.9400292 77.8653058 30.93319784 76.46557617 30.92456055 C74.45754223 30.9124768 72.44947043 30.90730193 70.44140625 30.90234375 C69.23170166 30.89710693 68.02199707 30.89187012 66.77563477 30.88647461 C64.09187983 30.68224715 64.09187983 30.68224715 63 32 C60.70848583 32.08790975 58.41427476 32.10694038 56.12109375 32.09765625 C55.09110008 32.09553383 55.09110008 32.09553383 54.04029846 32.09336853 C51.83932199 32.08775479 49.63844591 32.07520007 47.4375 32.0625 C45.94856917 32.05748676 44.45963676 32.05292355 42.97070312 32.04882812 C39.31373195 32.03863021 35.65697883 32.01905779 32 32 C32 40.58 32 49.16 32 58 C42.23 58 52.46 58 63 58 C63 68 63 68 62 81 C51.77 81 41.54 81 31 81 C31 73.74 31 66.48 31 59 C21.43 59 11.86 59 2 59 C1.34 50.09 0.68 41.18 0 32 C-4.29 31.67 -8.58 31.34 -13 31 C-13 30.67 -13 30.34 -13 30 C-8.71 30 -4.42 30 0 30 C0 20.1 0 10.2 0 0 Z \",fill:\"#71706F\",transform:\"translate(273,765)\"})),_path9||(_path9=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.94 0 11.88 0 18 0 C18 8.58 18 17.16 18 26 C12.39 25.67 6.78 25.34 1 25 C1 33.91 1 42.82 1 52 C4.63 52 8.26 52 12 52 C13.65 52.33 15.3 52.66 17 53 C17.33 61.25 17.66 69.5 18 78 C12.39 78 6.78 78 1 78 C1 86.91 1 95.82 1 105 C6.28 105 11.56 105 17 105 C17 96.42 17 87.84 17 79 C21.48461792 78.3593403 25.25469372 77.87260934 29.6796875 77.8671875 C30.6903125 77.86589844 31.7009375 77.86460937 32.7421875 77.86328125 C34.29292969 77.86908203 34.29292969 77.86908203 35.875 77.875 C37.46054687 77.86919922 37.46054687 77.86919922 39.078125 77.86328125 C40.08101562 77.86457031 41.08390625 77.86585938 42.1171875 77.8671875 C43.03097168 77.86831543 43.94475586 77.86944336 44.88623047 77.87060547 C47 78 47 78 48 79 C48.08748207 80.92667507 48.10697334 82.85651861 48.09765625 84.78515625 C48.09515869 85.83840088 48.09266113 86.89164551 48.09008789 87.97680664 C48.08098389 89.32508545 48.07187988 90.67336426 48.0625 92.0625 C48.041875 96.331875 48.02125 100.60125 48 105 C38.1 105 28.2 105 18 105 C18 113.58 18 122.16 18 131 C27.57 131 37.14 131 47 131 C47.33 138.92 47.66 146.84 48 155 C57.9 155 67.8 155 78 155 C78 163.25 78 171.5 78 180 C68.1 180.33 58.2 180.66 48 181 C47.67 189.25 47.34 197.5 47 206 C40.07 206 33.14 206 26 206 C30.43630425 211.28580932 34.98695014 215.90225204 40.27734375 220.3359375 C41.13005859 221.15964844 41.13005859 221.15964844 42 222 C42 222.66 42 223.32 42 224 C42.61875 224.309375 43.2375 224.61875 43.875 224.9375 C45.25 225.625 46.625 226.3125 48 227 C48 220.73 48 214.46 48 208 C58.23 208 68.46 208 79 208 C79 215.26 79 222.52 79 230 C81.15402344 229.98839844 83.30804687 229.97679687 85.52734375 229.96484375 C87.60571139 229.95705263 89.68407743 229.95097619 91.76245117 229.94506836 C93.21070073 229.94002899 94.65894517 229.93319747 96.10717773 229.92456055 C98.18474588 229.91247753 100.26224697 229.90676789 102.33984375 229.90234375 C103.59144287 229.89710693 104.84304199 229.89187012 106.13256836 229.88647461 C109 230 109 230 110 231 C112.21855264 231.08783542 114.43988496 231.10694609 116.66015625 231.09765625 C117.32462265 231.0962413 117.98908905 231.09482635 118.6736908 231.09336853 C120.80333899 231.08775518 122.93288339 231.07520054 125.0625 231.0625 C126.50325369 231.05748671 127.94400903 231.05292351 129.38476562 231.04882812 C132.92324958 231.03863076 136.46150813 231.0190583 140 231 C140 238.59 140 246.18 140 254 C137.12861328 254.27263672 137.12861328 254.27263672 134.19921875 254.55078125 C131.69524211 254.80399237 129.19133953 255.05793665 126.6875 255.3125 C124.79354492 255.48942383 124.79354492 255.48942383 122.86132812 255.66992188 C121.65283203 255.79560547 120.44433594 255.92128906 119.19921875 256.05078125 C118.08377686 256.16075439 116.96833496 256.27072754 115.8190918 256.3840332 C112.64926245 256.81086923 112.64926245 256.81086923 110 260 C109.67 257.03 109.34 254.06 109 251 C107.91203125 251.01160156 106.8240625 251.02320313 105.703125 251.03515625 C82.41562728 251.20781364 82.41562728 251.20781364 78 249 C78 243.06 78 237.12 78 231 C69.42 231.33 60.84 231.66 52 232 C54.206875 234.206875 56.41375 236.41375 58.6875 238.6875 C62.44921875 242.44921875 62.44921875 242.44921875 64.2956543 244.29785156 C65.73348397 245.73382756 67.17844275 247.16266003 68.625 248.58984375 C70.79409872 250.79105084 72.87967439 253.04925492 74.94287109 255.34960938 C79.00842315 259.87751833 83.09663634 264.16456388 87.76171875 268.0859375 C90.80732105 270.69037926 93.74468735 273.40551477 96.6875 276.125 C97.2345459 276.62837891 97.7815918 277.13175781 98.34521484 277.65039062 C104.14979852 283.01499216 109.51325764 288.64983135 114.71875 294.59765625 C117.00049952 297.00052604 119.40513106 298.94572875 122 301 C123.67953472 302.65369848 125.34409051 304.32264515 127 306 C127.95266133 306.95871336 128.90571766 307.91703435 129.85913086 308.875 C130.35992661 309.37902344 130.86072235 309.88304687 131.37669373 310.40234375 C133.6345841 312.67374923 135.89525519 314.9423793 138.15600586 317.2109375 C139.34277757 318.402751 140.52865199 319.59545867 141.71362305 320.7890625 C143.44079714 322.52844869 145.1712545 324.26451128 146.90234375 326 C147.42440903 326.52722656 147.9464743 327.05445313 148.48435974 327.59765625 C151.83665561 330.95045455 155.33875798 333.98821168 159 337 C160.11907392 338.21810701 161.20733773 339.4658791 162.25 340.75 C164.81035567 343.7491151 167.47410501 346.39896319 170.4375 349 C176.09854279 353.96981809 181.3633678 359.3086778 186.64233398 364.6796875 C187.30692627 365.35257813 187.97151855 366.02546875 188.65625 366.71875 C189.55053711 367.63043945 189.55053711 367.63043945 190.46289062 368.56054688 C191.95809649 370.09777728 191.95809649 370.09777728 194 371 C194 371.66 194 372.32 194 373 C194.5878125 373.25136719 195.175625 373.50273438 195.78125 373.76171875 C198.27682175 375.15449383 199.66530515 376.63171498 201.5 378.8125 C202.39912109 379.87404297 202.39912109 379.87404297 203.31640625 380.95703125 C205.23559869 383.2858889 207.14207754 385.62185925 209 388 C205.19283739 386.44893375 202.81196719 383.88519315 200 381 C197.4000945 378.37076554 194.79351549 375.74817646 192.1875 373.125 C191.51396484 372.44308594 190.84042969 371.76117187 190.14648438 371.05859375 C186.20703539 367.10029573 182.16043528 363.35557585 177.9309082 359.71044922 C174.8115807 356.94726696 171.91383878 353.97659077 169 351 C164.17404283 346.11709939 159.29814962 341.37673229 154 337 C154 337.66 154 338.32 154 339 C149.04726253 340.98109499 145.23859642 341.08658837 140 341 C140.00785522 341.83192871 140.00785522 341.83192871 140.01586914 342.68066406 C140.03671031 345.20376443 140.04968282 347.72684664 140.0625 350.25 C140.07087891 351.12269531 140.07925781 351.99539063 140.08789062 352.89453125 C140.09272461 354.16103516 140.09272461 354.16103516 140.09765625 355.453125 C140.10551147 356.61569824 140.10551147 356.61569824 140.11352539 357.80175781 C140 360 140 360 139 364 C129.1 364 119.2 364 109 364 C109 372.25 109 380.5 109 389 C99.1 389 89.2 389 79 389 C79 380.42 79 371.84 79 363 C88.9 363 98.8 363 109 363 C109 355.74 109 348.48 109 341 C107.25332031 341.01160156 105.50664063 341.02320313 103.70703125 341.03515625 C101.40885524 341.04453656 99.11067807 341.0536365 96.8125 341.0625 C95.66201172 341.07087891 94.51152344 341.07925781 93.32617188 341.08789062 C92.21435547 341.09111328 91.10253906 341.09433594 89.95703125 341.09765625 C88.93585205 341.10289307 87.91467285 341.10812988 86.86254883 341.11352539 C84 341 84 341 79 340 C79 333.4 79 326.8 79 320 C81.15402344 319.87882812 83.30804687 319.75765625 85.52734375 319.6328125 C87.6058613 319.50930858 89.68415275 319.38250294 91.76245117 319.25537109 C93.21049005 319.16857653 94.65873998 319.0852332 96.10717773 319.00537109 C98.1853812 318.89019184 100.2625174 318.76274871 102.33984375 318.6328125 C103.59144287 318.55949707 104.84304199 318.48618164 106.13256836 318.41064453 C107.55194702 318.20737549 107.55194702 318.20737549 109 318 C110.2451342 315.5097316 109.92184357 314.36665832 109.5625 311.625 C108.89137774 305.73977407 108.90851341 299.91613256 109 294 C108.67 294.33 108.34 294.66 108 295 C108 296.32 108 297.64 108 299 C98.43 299 88.86 299 79 299 C79 291.41 79 283.82 79 276 C69.1 276.33 59.2 276.66 49 277 C48.67 284.26 48.34 291.52 48 299 C49.98 298.67 51.96 298.34 54 298 C55.94407952 297.92348087 57.89038078 297.89188377 59.8359375 297.90234375 C60.89941406 297.90556641 61.96289062 297.90878906 63.05859375 297.91210938 C64.15300781 297.92048828 65.24742187 297.92886719 66.375 297.9375 C67.49261719 297.94201172 68.61023438 297.94652344 69.76171875 297.95117188 C72.50783566 297.96290742 75.25392485 297.98084134 78 298 C78 304.93 78 311.86 78 319 C75.20879909 320.39560045 72.79794308 320.21808288 69.6796875 320.31640625 C68.42285156 320.35830078 67.16601562 320.40019531 65.87109375 320.44335938 C64.55238281 320.48267578 63.23367188 320.52199219 61.875 320.5625 C60.53514249 320.60569512 59.19529844 320.64930973 57.85546875 320.69335938 C54.5704438 320.7997091 51.28523602 320.90038317 48 321 C48 314.4 48 307.8 48 301 C46.00195312 301.01160156 44.00390625 301.02320313 41.9453125 301.03515625 C40.01253382 301.04210869 38.07975482 301.04902605 36.14697266 301.05493164 C34.14093449 301.06244036 32.13491798 301.0751447 30.12890625 301.08789062 C28.24365234 301.09272461 28.24365234 301.09272461 26.3203125 301.09765625 C25.15773926 301.10289307 23.99516602 301.10812988 22.79736328 301.11352539 C20 301 20 301 18 300 C18 307.92 18 315.84 18 324 C21.12275391 323.87431641 21.12275391 323.87431641 24.30859375 323.74609375 C26.3174501 323.66963209 28.32630799 323.59320612 30.33520508 323.51782227 C31.73501681 323.46433974 33.13475904 323.40900566 34.53442383 323.35180664 C36.5422896 323.27007051 38.55044187 323.19546975 40.55859375 323.12109375 C41.76829834 323.0739624 42.97800293 323.02683105 44.22436523 322.97827148 C47 323 47 323 48 324 C48.07330331 326.86469325 48.09217831 329.69893674 48.0625 332.5625 C48.041875 335.346875 48.02125 338.13125 48 341 C57.9 341 67.8 341 78 341 C78 348.26 78 355.52 78 363 C68.1 363 58.2 363 48 363 C48 356.07 48 349.14 48 342 C38.1 342 28.2 342 18 342 C18 348.93 18 355.86 18 363 C19.92585937 362.98839844 21.85171875 362.97679687 23.8359375 362.96484375 C26.34895737 362.95546681 28.86197828 362.94636651 31.375 362.9375 C32.64601563 362.92912109 33.91703125 362.92074219 35.2265625 362.91210938 C36.43828125 362.90888672 37.65 362.90566406 38.8984375 362.90234375 C40.01911621 362.89710693 41.13979492 362.89187012 42.29443359 362.88647461 C45 363 45 363 47 364 C47 372.58 47 381.16 47 390 C57.23 390 67.46 390 78 390 C78 395.94 78 401.88 78 408 C38.07 408 -1.86 408 -43 408 C-44.59273144 404.81453711 -44.10141833 401.36800652 -44.0625 397.875 C-44.041875 395.27625 -44.02125 392.6775 -44 390 C-53.9 390 -63.8 390 -74 390 C-74.020625 387.195 -74.04125 384.39 -74.0625 381.5 C-74.071604 380.63310547 -74.08070801 379.76621094 -74.09008789 378.87304688 C-74.09258545 378.16212891 -74.09508301 377.45121094 -74.09765625 376.71875 C-74.10289307 376.00654297 -74.10812988 375.29433594 -74.11352539 374.56054688 C-73.95674205 371.02432384 -73.43904537 367.51236295 -73 364 C-63.43 364 -53.86 364 -44 364 C-44 372.25 -44 380.5 -44 389 C-33.77 389 -23.54 389 -13 389 C-13 380.75 -13 372.5 -13 364 C-16.63 364 -20.26 364 -24 364 C-27.37980814 363.88056317 -30.74900901 363.74258869 -34.125 363.5625 C-35.39730469 363.50352539 -35.39730469 363.50352539 -36.6953125 363.44335938 C-42.87869162 363.12130838 -42.87869162 363.12130838 -44 362 C-44.08669432 360.5112814 -44.10703494 359.018555 -44.09765625 357.52734375 C-44.09515869 356.71773193 -44.09266113 355.90812012 -44.09008789 355.07397461 C-44.08098389 354.03893799 -44.07187988 353.00390137 -44.0625 351.9375 C-44.041875 348.658125 -44.02125 345.37875 -44 342 C-53.9 342 -63.8 342 -74 342 C-74 341.01 -74 340.02 -74 339 C-84.23 339 -94.46 339 -105 339 C-105 332.73 -105 326.46 -105 320 C-115.23 319.67 -125.46 319.34 -136 319 C-136.020625 315.885625 -136.04125 312.77125 -136.0625 309.5625 C-136.071604 308.57967041 -136.08070801 307.59684082 -136.09008789 306.58422852 C-136.09258545 305.81522217 -136.09508301 305.04621582 -136.09765625 304.25390625 C-136.10551147 303.06776733 -136.10551147 303.06776733 -136.11352539 301.85766602 C-136 300 -136 300 -135 299 C-132.85441173 298.91224395 -130.70595579 298.89304781 -128.55859375 298.90234375 C-127.25341797 298.90556641 -125.94824219 298.90878906 -124.60351562 298.91210938 C-123.2148431 298.92046599 -121.82617123 298.92893095 -120.4375 298.9375 C-119.04492344 298.94251334 -117.65234519 298.94707653 -116.25976562 298.95117188 C-112.8398013 298.96300566 -109.41992156 298.9794912 -106 299 C-105.67 299.66 -105.34 300.32 -105 301 C-104.67 300.67 -104.34 300.34 -104 300 C-101.85613343 299.84141158 -99.70733162 299.74870702 -97.55859375 299.68359375 C-96.25341797 299.64169922 -94.94824219 299.59980469 -93.60351562 299.55664062 C-92.2148467 299.51682392 -90.82617478 299.47711175 -89.4375 299.4375 C-88.04490817 299.39432011 -86.65232972 299.350706 -85.25976562 299.30664062 C-81.83995199 299.20014124 -78.42006237 299.09813077 -75 299 C-75 298.67 -75 298.34 -75 298 C-84.9 298 -94.8 298 -105 298 C-105 290.74 -105 283.48 -105 276 C-115.23 276 -125.46 276 -136 276 C-136 269.07 -136 262.14 -136 255 C-139.23103516 254.90912109 -139.23103516 254.90912109 -142.52734375 254.81640625 C-144.6057501 254.75465759 -146.68409975 254.69125309 -148.76245117 254.62768555 C-150.2106424 254.5842837 -151.65888654 254.54261256 -153.10717773 254.50268555 C-155.18489559 254.44510938 -157.26234573 254.38137972 -159.33984375 254.31640625 C-161.21724243 254.26141968 -161.21724243 254.26141968 -163.13256836 254.20532227 C-166 254 -166 254 -167 253 C-167.10069436 250.23978992 -167.13868592 247.50999366 -167.125 244.75 C-167.12886719 243.98558594 -167.13273438 243.22117187 -167.13671875 242.43359375 C-167.13542969 241.68722656 -167.13414062 240.94085937 -167.1328125 240.171875 C-167.13168457 239.4922168 -167.13055664 238.81255859 -167.12939453 238.11230469 C-167 236 -167 236 -166 231 C-151.15 230.505 -151.15 230.505 -136 230 C-136 222.74 -136 215.48 -136 208 C-127 206.875 -127 206.875 -122.40625 206.90234375 C-121.43945312 206.90556641 -120.47265625 206.90878906 -119.4765625 206.91210938 C-118.00316406 206.92467773 -118.00316406 206.92467773 -116.5 206.9375 C-115.48679687 206.94201172 -114.47359375 206.94652344 -113.4296875 206.95117188 C-110.95306173 206.96285407 -108.47656343 206.97923418 -106 207 C-105.505 211.455 -105.505 211.455 -105 216 C-104.505 212.04 -104.505 212.04 -104 208 C-94.1 208 -84.2 208 -74 208 C-74 215.26 -74 222.52 -74 230 C-64.1 230 -54.2 230 -44 230 C-44.33 222.74 -44.66 215.48 -45 208 C-54.57 207.67 -64.14 207.34 -74 207 C-74 198.42 -74 189.84 -74 181 C-69.7543373 180.29238955 -66.36953821 179.87973367 -62.1640625 179.90234375 C-61.2045166 179.90484131 -60.2449707 179.90733887 -59.25634766 179.90991211 C-58.05800293 179.91901611 -56.8596582 179.92812012 -55.625 179.9375 C-51.78875 179.958125 -47.9525 179.97875 -44 180 C-43.67 188.91 -43.34 197.82 -43 207 C-40.91816406 206.98839844 -38.83632813 206.97679687 -36.69140625 206.96484375 C-34.68253702 206.95789265 -32.67366749 206.95097611 -30.66479492 206.94506836 C-29.26504772 206.9400292 -27.8653058 206.93319784 -26.46557617 206.92456055 C-24.45754223 206.9124768 -22.44947043 206.90730193 -20.44140625 206.90234375 C-18.62684937 206.89448853 -18.62684937 206.89448853 -16.77563477 206.88647461 C-14 207 -14 207 -13 208 C-12.9008343 209.62257544 -12.86920223 211.24939831 -12.8671875 212.875 C-12.86589844 213.85984375 -12.86460937 214.8446875 -12.86328125 215.859375 C-12.86714844 216.89578125 -12.87101563 217.9321875 -12.875 219 C-12.87113281 220.03640625 -12.86726562 221.0728125 -12.86328125 222.140625 C-12.86521484 223.61789062 -12.86521484 223.61789062 -12.8671875 225.125 C-12.86831543 226.03507813 -12.86944336 226.94515625 -12.87060547 227.8828125 C-13 230 -13 230 -14 231 C-16.14558827 231.08775605 -18.29404421 231.10695219 -20.44140625 231.09765625 C-21.74658203 231.09443359 -23.05175781 231.09121094 -24.39648438 231.08789062 C-25.7851569 231.07953401 -27.17382877 231.07106905 -28.5625 231.0625 C-29.95507656 231.05748666 -31.34765481 231.05292347 -32.74023438 231.04882812 C-36.16017451 231.03699442 -39.5800925 231.01905831 -43 231 C-43 238.59 -43 246.18 -43 254 C-33.43 254 -23.86 254 -14 254 C-13.71073084 246.47590193 -13.71073084 246.47590193 -13.43188477 238.95141602 C-13.39377686 238.01998779 -13.35566895 237.08855957 -13.31640625 236.12890625 C-13.26141968 234.69140015 -13.26141968 234.69140015 -13.20532227 233.22485352 C-13 231 -13 231 -12 230 C-9.85441173 229.91224395 -7.70595579 229.89304781 -5.55859375 229.90234375 C-4.25341797 229.90556641 -2.94824219 229.90878906 -1.60351562 229.91210938 C-0.2148431 229.92046599 1.17382877 229.92893095 2.5625 229.9375 C3.95507656 229.94251334 5.34765481 229.94707653 6.74023438 229.95117188 C10.16017451 229.96300558 13.5800925 229.98094169 17 230 C17.33 222.08 17.66 214.16 18 206 C16.68 206.33 15.36 206.66 14 207 C11.9023604 207.08120233 9.80231238 207.10755808 7.703125 207.09765625 C6.49785156 207.09443359 5.29257812 207.09121094 4.05078125 207.08789062 C2.79652344 207.07951172 1.54226563 207.07113281 0.25 207.0625 C-1.01972656 207.05798828 -2.28945313 207.05347656 -3.59765625 207.04882812 C-6.73181836 207.03704556 -9.86588541 207.02059416 -13 207 C-13.02716089 203.97910522 -13.04691657 200.95845871 -13.0625 197.9375 C-13.07087891 197.08994141 -13.07925781 196.24238281 -13.08789062 195.36914062 C-13.10683006 190.4638278 -12.83326345 185.83555245 -12 181 C-9.36 181 -6.72 181 -4 181 C-4.66 180.34 -5.32 179.68 -6 179 C-9.66666667 175.33333333 -13.33333333 171.66666667 -17 168 C-17 169.32 -17 170.64 -17 172 C-16.34 172 -15.68 172 -15 172 C-14 174 -14 174 -14 180 C-23.57 180 -33.14 180 -43 180 C-43 171.75 -43 163.5 -43 155 C-39.7 154.67 -36.4 154.34 -33 154 C-32.67 152.02 -32.34 150.04 -32 148 C-30.81664062 147.96261719 -29.63328125 147.92523437 -28.4140625 147.88671875 C-14.72296719 147.86155363 -14.72296719 147.86155363 -2.40944195 142.7999754 C-0.42444013 140.26496185 -0.61549258 138.48583069 -0.60127258 135.28633118 C-0.58873444 134.09581146 -0.57619629 132.90529175 -0.5632782 131.67869568 C-0.56471329 130.37102737 -0.56614838 129.06335907 -0.56762695 127.71606445 C-0.5586118 126.32646816 -0.54828518 124.93687985 -0.53674316 123.54730225 C-0.50911775 119.77278601 -0.4998812 115.99842042 -0.49388909 112.22381616 C-0.48451977 108.27994305 -0.45831761 104.33618312 -0.43388367 100.39237976 C-0.39017516 92.92327456 -0.36165499 85.45419126 -0.33856028 77.98499697 C-0.31153187 69.48200127 -0.26761896 60.97911918 -0.22227156 52.47620451 C-0.12936299 34.98419267 -0.0583097 17.49216017 0 0 Z \",fill:\"#747371\",transform:\"translate(804,616)\"})),_path10||(_path10=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C96.36 0 192.72 0 292 0 C287.49991564 6.75012653 287.49991564 6.75012653 285.10516357 9.14207458 C284.56430618 9.68712646 284.02344879 10.23217834 283.46620178 10.79374695 C282.88535324 11.36897598 282.3045047 11.94420502 281.70605469 12.53686523 C281.08433884 13.16047943 280.46262299 13.78409363 279.82206726 14.42660522 C277.7768483 16.47551174 275.7245458 18.51715498 273.671875 20.55859375 C272.23907568 21.99019953 270.8066474 23.42217675 269.37457275 24.85450745 C266.37503319 27.85248537 263.37217309 30.84708279 260.36669922 33.83911133 C256.53087345 37.65798643 252.7016238 41.48337162 248.87464523 45.3111105 C245.91682209 48.26866047 242.95638988 51.2235872 239.9950943 54.17765999 C238.58323537 55.58635534 237.17196491 56.99564075 235.76131439 58.40554619 C222.85854797 71.29404374 222.85854797 71.29404374 216.66323853 76.56013489 C213.80057694 79.0383402 211.15142735 81.72515772 208.48828125 84.4140625 C207.91216599 84.99159271 207.33605072 85.56912292 206.74247742 86.16415405 C204.93008518 87.98206461 203.12122268 89.80343919 201.3125 91.625 C200.09073054 92.85179732 198.86872695 94.07836153 197.64648438 95.3046875 C195.40260376 97.55666986 193.16008256 99.80998637 190.91918945 102.06494141 C188.28478128 104.71529734 185.64368791 107.35889746 183 110 C182.319375 110.680625 181.63875 111.36125 180.9375 112.0625 C157.03125 135.96875 157.03125 135.96875 154.90844727 138.08935547 C153.34898941 139.65060879 151.79652186 141.21884169 150.24609375 142.7890625 C148.08680177 144.91455687 145.85565673 146.895811 143.5625 148.875 C138.27172982 153.58410418 133.49861712 158.71000649 128.73461914 163.94677734 C128.16348389 164.57148926 127.59234863 165.19620117 127.00390625 165.83984375 C126.24315796 166.68083618 126.24315796 166.68083618 125.46704102 167.53881836 C124 169 124 169 121 171 C121.33 169.68 121.66 168.36 122 167 C121.13375 167.185625 120.2675 167.37125 119.375 167.5625 C115.85027339 168.019409 113.4929704 167.58216173 110 167 C106.87823032 166.74389263 103.75334423 166.58984518 100.625 166.4375 C97.77875 166.293125 94.9325 166.14875 92 166 C92 173.92 92 181.84 92 190 C81.77 190 71.54 190 61 190 C61 197.92 61 205.84 61 214 C50.77 214 40.54 214 30 214 C29.505 201.625 29.505 201.625 29 189 C19.43 189 9.86 189 0 189 C0 181.08 0 173.16 0 165 C9.9 165 19.8 165 30 165 C30 172.92 30 180.84 30 189 C33.96 189 37.92 189 42 189 C45.25679432 189.13943462 48.49839787 189.29559195 51.75 189.5 C54.4725 189.665 57.195 189.83 60 190 C60 182.08 60 174.16 60 166 C50.43 165.67 40.86 165.34 31 165 C30.33432527 159.00892745 29.86535162 153.40793813 29.9375 147.4375 C29.958125 144.983125 29.97875 142.52875 30 140 C39.9 140 49.8 140 60 140 C60 125.48 60 110.96 60 96 C45.645 96.495 45.645 96.495 31 97 C30.67 103.93 30.34 110.86 30 118 C14.655 118.495 14.655 118.495 -1 119 C-0.67 111.41 -0.34 103.82 0 96 C-10.23 96 -20.46 96 -31 96 C-31.495 96.99 -31.495 96.99 -32 98 C-31.67 89.42 -31.34 80.84 -31 72 C-20.77 72 -10.54 72 0 72 C-0.495 60.12 -0.495 60.12 -1 48 C-10.9 48 -20.8 48 -31 48 C-31 39.75 -31 31.5 -31 23 C-28.12981559 21.56490779 -25.66456277 21.88841494 -22.4609375 21.90234375 C-21.15898438 21.90556641 -19.85703125 21.90878906 -18.515625 21.91210938 C-17.13541601 21.92046534 -15.75520768 21.92893029 -14.375 21.9375 C-12.98698074 21.94251499 -11.59895978 21.9470779 -10.2109375 21.95117188 C-6.80727327 21.96299015 -3.4036313 21.9809261 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#696766\",transform:\"translate(730,0)\"})),_path11||(_path11=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C107.91 0 215.82 0 327 0 C327 7.26 327 14.52 327 22 C317.1 22 307.2 22 297 22 C297 30.25 297 38.5 297 47 C294.15326245 48.42336877 291.85384653 48.00758837 288.6796875 47.87890625 C287.42285156 47.83056641 286.16601562 47.78222656 284.87109375 47.73242188 C283.55238281 47.67634766 282.23367188 47.62027344 280.875 47.5625 C279.53517562 47.50927587 278.19533192 47.45653549 276.85546875 47.40429688 C273.5701203 47.27430107 270.28503207 47.13775941 267 47 C266.67 38.42 266.34 29.84 266 21 C252.635 21.495 252.635 21.495 239 22 C237.69524382 24.60951236 237.88698428 26.52701285 237.90234375 29.4453125 C237.90609009 30.8996167 237.90609009 30.8996167 237.90991211 32.38330078 C237.91901611 33.61806152 237.92812012 34.85282227 237.9375 36.125 C237.9684375 42.003125 237.9684375 42.003125 238 48 C247.24 48 256.48 48 266 48 C266 55.59 266 63.18 266 71 C256.43 71.33 246.86 71.66 237 72 C237.33 74.64 237.66 77.28 238 80 C238.06809887 81.42582924 238.10955129 82.85384502 238.09765625 84.28125 C238.09515869 84.91095703 238.09266113 85.54066406 238.09008789 86.18945312 C238.08098389 86.95193359 238.07187988 87.71441406 238.0625 88.5 C238.041875 90.975 238.02125 93.45 238 96 C247.24 96 256.48 96 266 96 C266 102.93 266 109.86 266 117 C275.9 117 285.8 117 296 117 C296 124.59 296 132.18 296 140 C281.15 140.495 281.15 140.495 266 141 C266 148.59 266 156.18 266 164 C256.43 164 246.86 164 237 164 C237 156.41 237 148.82 237 141 C230.86836038 141.03914717 230.86836038 141.03914717 224.73681641 141.09008789 C223.55611572 141.09383423 223.55611572 141.09383423 222.3515625 141.09765625 C221.56604004 141.10289307 220.78051758 141.10812988 219.97119141 141.11352539 C215.63472249 140.94783451 211.31809641 140.43180964 207 140 C207 132.74 207 125.48 207 118 C192.15 117.505 192.15 117.505 177 117 C177 132.84 177 148.68 177 165 C186.57 165 196.14 165 206 165 C206 172.92 206 180.84 206 189 C215.57 189.33 225.14 189.66 235 190 C235 197.92 235 205.84 235 214 C225.43 214 215.86 214 206 214 C206 206.08 206 198.16 206 190 C196.43 190 186.86 190 177 190 C177 195.61 177 201.22 177 207 C172.6842186 203.43478928 168.57837078 199.71412126 164.5625 195.8125 C163.26505859 194.55373047 163.26505859 194.55373047 161.94140625 193.26953125 C160 191 160 191 160 188 C165.28 188 170.56 188 176 188 C176 180.41 176 172.82 176 165 C166.76 165 157.52 165 148 165 C148 169.62 148 174.24 148 179 C143.60168469 175.31977699 139.46241588 171.545708 135.48046875 167.41796875 C134.03645015 165.89501581 134.03645015 165.89501581 132 165 C132 164.34 132 163.68 132 163 C131.34 163 130.68 163 130 163 C130 162.34 130 161.68 130 161 C129.43796875 160.77699219 128.8759375 160.55398437 128.296875 160.32421875 C125.30788543 158.60097476 123.50680733 156.41789063 121.25 153.8125 C117.76733083 149.79619604 114.14090608 146.32601325 110.10986328 142.86303711 C106.51972388 139.69289666 103.17687997 136.2812335 99.8125 132.875 C99.12736328 132.18535156 98.44222656 131.49570313 97.73632812 130.78515625 C96.4594968 129.4997226 95.18370919 128.21325055 93.90942383 126.92529297 C92.49717122 125.50130318 91.08066508 124.08152902 89.66186523 122.6640625 C87.2316379 120.23182911 84.81181065 117.78987937 82.39532471 115.34402466 C79.98543763 112.90706167 77.56995595 110.47567355 75.15429688 108.04443359 C73.89010703 106.77019506 72.62771919 105.49416605 71.3671875 104.21630859 C65.24093744 98.00835384 59.25647054 91.97246408 52.22607422 86.78076172 C47.24643431 82.79726825 42.89159523 78.0536565 38.4375 73.5 C36.46055102 71.48608969 34.4802687 69.47554158 32.49609375 67.46875 C32.02150726 66.98866486 31.54692078 66.50857971 31.05795288 66.01394653 C27.70877803 62.65092218 24.24132179 59.48017132 20.63305664 56.39941406 C18.67292364 54.71971869 16.82080647 52.95423613 15 51.125 C14.13375 50.26261719 14.13375 50.26261719 13.25 49.3828125 C12 48 12 48 12 47 C17.28 47 22.56 47 28 47 C28 38.75 28 30.5 28 22 C24.3184375 22.4640625 24.3184375 22.4640625 20.5625 22.9375 C19.78849854 23.03281006 19.01449707 23.12812012 18.21704102 23.22631836 C14.81754008 23.41001195 14.81754008 23.41001195 12 25 C7.96839809 25.26293056 6.44107266 25.29404844 3 23 C2.67 23.66 2.34 24.32 2 25 C-1.875 24.125 -1.875 24.125 -3 23 C-5.32817964 22.63239269 -7.6618385 22.29758419 -10 22 C-9.89066104 24.43321489 -9.89066104 24.43321489 -9 27 C-6.73964641 28.46812974 -6.73964641 28.46812974 -4 29.4375 C-1.2578125 30.6640625 -1.2578125 30.6640625 1 32 C2.125 35.3125 2.125 35.3125 2 38 C-1.04981981 40.32367223 -3.22776533 41.88968076 -7.0625 42.4375 C-10.34648977 41.94839514 -12.30578494 40.90179887 -15 39 C-14.67 37.68 -14.34 36.36 -14 35 C-10.7 35.66 -7.4 36.32 -4 37 C-4 35.68 -4 34.36 -4 33 C-5.093125 32.731875 -6.18625 32.46375 -7.3125 32.1875 C-12.46501129 30.5282167 -12.46501129 30.5282167 -14 28 C-14.6359447 22.9124424 -14.6359447 22.9124424 -12.83203125 20.32421875 C-9.19084489 17.69231645 -4.2908315 18.84855889 0 19 C0 12.73 0 6.46 0 0 Z \",fill:\"#6D6C6A\",transform:\"translate(39,0)\"})),_path12||(_path12=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.01676713 0.06029878 4.03370869 0.11503303 6.05078125 0.1640625 C10.95488632 0.29525984 15.85048789 0.50164937 20.75 0.75 C20.75 1.08 20.75 1.41 20.75 1.75 C10.52 1.75 0.29 1.75 -10.25 1.75 C-10.270625 6.844375 -10.29125 11.93875 -10.3125 17.1875 C-10.321604 18.79681396 -10.33070801 20.40612793 -10.34008789 22.06420898 C-10.34258545 23.32048096 -10.34508301 24.57675293 -10.34765625 25.87109375 C-10.35289307 27.1645874 -10.35812988 28.45808105 -10.36352539 29.79077148 C-10.58996932 32.63652404 -10.58996932 32.63652404 -9.25 33.75 C-9.00757481 36.01562802 -8.83264469 38.28856656 -8.6875 40.5625 C-8.60371094 41.80644531 -8.51992188 43.05039062 -8.43359375 44.33203125 C-8.20635316 49.80031008 -8.25 55.27700159 -8.25 60.75 C1.32 60.75 10.89 60.75 20.75 60.75 C20.75 68.01 20.75 75.27 20.75 82.75 C22.35875 82.585 23.9675 82.42 25.625 82.25 C34.00725214 81.536403 42.34215157 81.68630418 50.75 81.75 C51.41 74.49 52.07 67.23 52.75 59.75 C42.52 59.75 32.29 59.75 21.75 59.75 C21.75 51.17 21.75 42.59 21.75 33.75 C23.94140625 33.68941406 26.1328125 33.62882813 28.390625 33.56640625 C30.51875036 33.50455433 32.6468258 33.4411926 34.77490234 33.37768555 C36.2510939 33.33443965 37.72733215 33.29275744 39.20361328 33.25268555 C41.32859348 33.19473154 43.45334093 33.13111054 45.578125 33.06640625 C47.4947998 33.01141968 47.4947998 33.01141968 49.45019531 32.95532227 C52.57111767 32.86404135 52.57111767 32.86404135 54.81835938 32.22265625 C57.53608071 31.55765265 60.03749468 31.74797771 62.828125 31.87109375 C63.87387695 31.91419678 64.91962891 31.9572998 65.99707031 32.00170898 C67.97852051 32.09367554 67.97852051 32.09367554 70 32.1875 C76.31125 32.4659375 76.31125 32.4659375 82.75 32.75 C82.75 42.32 82.75 51.89 82.75 61.75 C83.08 61.42 83.41 61.09 83.75 60.75 C85.82262076 60.66232888 87.89820294 60.64304127 89.97265625 60.65234375 C91.23271484 60.65556641 92.49277344 60.65878906 93.79101562 60.66210938 C95.13151109 60.67046597 96.47200588 60.67893093 97.8125 60.6875 C99.15689942 60.6925134 100.5013006 60.69707658 101.84570312 60.70117188 C105.14715433 60.71300503 108.4485826 60.73094114 111.75 60.75 C111.75 68.34 111.75 75.93 111.75 83.75 C102.18 83.75 92.61 83.75 82.75 83.75 C82.76160156 86.98683594 82.77320313 90.22367188 82.78515625 93.55859375 C82.79294587 96.67944236 82.79902317 99.80028991 82.80493164 102.92114258 C82.80997308 105.09692873 82.81680607 107.27271147 82.82543945 109.44848633 C82.83751338 112.56853067 82.84323005 115.68853038 82.84765625 118.80859375 C82.85281754 119.78775253 82.85797882 120.76691132 82.86329651 121.77574158 C82.86340981 123.12702904 82.86340981 123.12702904 82.86352539 124.50561523 C82.865746 125.30281479 82.86796661 126.10001434 82.87025452 126.92137146 C82.75 128.75 82.75 128.75 81.75 129.75 C79.95534711 129.84970294 78.15679416 129.88080581 76.359375 129.8828125 C74.70615234 129.88474609 74.70615234 129.88474609 73.01953125 129.88671875 C71.85808594 129.88285156 70.69664062 129.87898437 69.5 129.875 C68.35402344 129.87886719 67.20804687 129.88273438 66.02734375 129.88671875 C64.36638672 129.88478516 64.36638672 129.88478516 62.671875 129.8828125 C61.65706055 129.88168457 60.64224609 129.88055664 59.59667969 129.87939453 C56.75 129.75 56.75 129.75 51.75 128.75 C51.75 136.67 51.75 144.59 51.75 152.75 C42.18 152.75 32.61 152.75 22.75 152.75 C22.75 145.16 22.75 137.57 22.75 129.75 C31.81904938 126.72698354 42.30999903 127.66339449 51.75 127.75 C51.42 120.16 51.09 112.57 50.75 104.75 C41.18 104.75 31.61 104.75 21.75 104.75 C21.75 97.82 21.75 90.89 21.75 83.75 C19.66816406 83.75 17.58632813 83.75 15.44140625 83.75 C7.54427083 83.75 -0.35286458 83.75 -8.25 83.75 C-8.25 92 -8.25 100.25 -8.25 108.75 C-18.15 108.75 -28.05 108.75 -38.25 108.75 C-38.25 107.43 -38.25 106.11 -38.25 104.75 C-38.95664795 104.91298584 -39.6632959 105.07597168 -40.39135742 105.24389648 C-43.32644539 105.76353414 -46.00988693 105.86358349 -48.98828125 105.84765625 C-50.58833008 105.84282227 -50.58833008 105.84282227 -52.22070312 105.83789062 C-53.87489258 105.82532227 -53.87489258 105.82532227 -55.5625 105.8125 C-56.68462891 105.80798828 -57.80675781 105.80347656 -58.96289062 105.79882812 C-61.72528336 105.78707326 -64.48764856 105.76913869 -67.25 105.75 C-67.58 113.34 -67.91 120.93 -68.25 128.75 C-77.49 128.75 -86.73 128.75 -96.25 128.75 C-95.92 136.01 -95.59 143.27 -95.25 150.75 C-86.01 151.08 -76.77 151.41 -67.25 151.75 C-67.25 158.35 -67.25 164.95 -67.25 171.75 C-76.82 171.75 -86.39 171.75 -96.25 171.75 C-96.25 165.48 -96.25 159.21 -96.25 152.75 C-105.82 152.75 -115.39 152.75 -125.25 152.75 C-125.25 159.68 -125.25 166.61 -125.25 173.75 C-123.249375 173.585 -121.24875 173.42 -119.1875 173.25 C-111.52658311 172.69440746 -103.92931368 172.65320193 -96.25 172.75 C-95.04303516 180.29353023 -95.25 186.83489629 -95.25 194.75 C-86.01 194.75 -76.77 194.75 -67.25 194.75 C-67.25 201.68 -67.25 208.61 -67.25 215.75 C-57.68 215.75 -48.11 215.75 -38.25 215.75 C-38.25 208.49 -38.25 201.23 -38.25 193.75 C-41.26447266 193.76740234 -41.26447266 193.76740234 -44.33984375 193.78515625 C-46.27921424 193.7921074 -48.21858503 193.79902396 -50.15795898 193.80493164 C-51.50920386 193.80997057 -52.86044326 193.81680177 -54.21166992 193.82543945 C-56.15020434 193.83752419 -58.088778 193.84269828 -60.02734375 193.84765625 C-61.19515381 193.85289307 -62.36296387 193.85812988 -63.56616211 193.86352539 C-66.25 193.75 -66.25 193.75 -67.25 192.75 C-67.33651611 191.33429877 -67.35704904 189.914405 -67.34765625 188.49609375 C-67.34515869 187.7270874 -67.34266113 186.95808105 -67.34008789 186.16577148 C-67.33098389 185.18294189 -67.32187988 184.2001123 -67.3125 183.1875 C-67.291875 180.073125 -67.27125 176.95875 -67.25 173.75 C-58.01 173.75 -48.77 173.75 -39.25 173.75 C-38.92 166.49 -38.59 159.23 -38.25 151.75 C-47.82 151.42 -57.39 151.09 -67.25 150.75 C-67.25 143.49 -67.25 136.23 -67.25 128.75 C-57.68 128.75 -48.11 128.75 -38.25 128.75 C-38.25 136.01 -38.25 143.27 -38.25 150.75 C-36.27 150.42 -34.29 150.09 -32.25 149.75 C-30.23380951 149.61090105 -28.21498126 149.5064684 -26.1953125 149.43359375 C-24.53242188 149.37075195 -24.53242188 149.37075195 -22.8359375 149.30664062 C-21.69382812 149.26732422 -20.55171875 149.22800781 -19.375 149.1875 C-18.2096875 149.14431641 -17.044375 149.10113281 -15.84375 149.05664062 C-12.97927375 148.95098371 -10.11471679 148.84888201 -7.25 148.75 C-7.25 150.4 -7.25 152.05 -7.25 153.75 C-6.24582031 153.6778125 -5.24164063 153.605625 -4.20703125 153.53125 C4.46597073 152.93380966 13.04985588 152.65113473 21.75 152.75 C22.08 160.67 22.41 168.59 22.75 176.75 C32.32 176.75 41.89 176.75 51.75 176.75 C51.75 183.02 51.75 189.29 51.75 195.75 C41.85 195.75 31.95 195.75 21.75 195.75 C21.75 202.68 21.75 209.61 21.75 216.75 C17.7806345 216.77291487 13.8114368 216.79284015 9.84204102 216.80493164 C8.49079614 216.80997057 7.13955674 216.81680177 5.78833008 216.82543945 C3.84979566 216.83752419 1.911222 216.84269828 -0.02734375 216.84765625 C-1.19515381 216.85289307 -2.36296387 216.85812988 -3.56616211 216.86352539 C-6.25 216.75 -6.25 216.75 -7.25 215.75 C-9.397449 215.73318911 -11.54551952 215.78748777 -13.69140625 215.87109375 C-15.64916992 215.94360352 -15.64916992 215.94360352 -17.64648438 216.01757812 C-19.03516075 216.07410831 -20.42383257 216.13075041 -21.8125 216.1875 C-23.20506021 216.24070547 -24.59763826 216.29344596 -25.99023438 216.34570312 C-29.41035981 216.47588091 -32.83022924 216.6108618 -36.25 216.75 C-36.28758423 217.8781311 -36.28758423 217.8781311 -36.32592773 219.02905273 C-36.44150514 222.41539196 -36.56440345 225.80142613 -36.6875 229.1875 C-36.72681641 230.37150391 -36.76613281 231.55550781 -36.80664062 232.77539062 C-36.84853516 233.90009766 -36.89042969 235.02480469 -36.93359375 236.18359375 C-36.98858032 237.74678345 -36.98858032 237.74678345 -37.04467773 239.34155273 C-37.25 241.75 -37.25 241.75 -38.25 242.75 C-40.39558827 242.83775605 -42.54404421 242.85695219 -44.69140625 242.84765625 C-45.99658203 242.84443359 -47.30175781 242.84121094 -48.64648438 242.83789062 C-50.0351569 242.82953401 -51.42382877 242.82106905 -52.8125 242.8125 C-54.20507656 242.80748666 -55.59765481 242.80292347 -56.99023438 242.79882812 C-60.41017451 242.78699442 -63.8300925 242.76905831 -67.25 242.75 C-67.25 234.17 -67.25 225.59 -67.25 216.75 C-76.82 216.75 -86.39 216.75 -96.25 216.75 C-96.25 209.49 -96.25 202.23 -96.25 194.75 C-106.15 194.75 -116.05 194.75 -126.25 194.75 C-126.25 202.01 -126.25 209.27 -126.25 216.75 C-128.08046875 216.78738281 -129.9109375 216.82476563 -131.796875 216.86328125 C-134.19793735 216.9289353 -136.5989781 216.99538283 -139 217.0625 C-140.2065625 217.08505859 -141.413125 217.10761719 -142.65625 217.13085938 C-143.81640625 217.16630859 -144.9765625 217.20175781 -146.171875 217.23828125 C-147.24018555 217.26446533 -148.30849609 217.29064941 -149.40917969 217.31762695 C-152.53102318 217.79277175 -153.93701295 218.65416047 -156.25 220.75 C-156.25 219.43 -156.25 218.11 -156.25 216.75 C-166.15 216.75 -176.05 216.75 -186.25 216.75 C-186.25 225 -186.25 233.25 -186.25 241.75 C-196.15 241.75 -206.05 241.75 -216.25 241.75 C-216.25 233.5 -216.25 225.25 -216.25 216.75 C-223.84 216.75 -231.43 216.75 -239.25 216.75 C-235.44434854 212.3100733 -231.83133929 208.23702716 -227.6875 204.1875 C-223.44013056 200.0136958 -223.44013056 200.0136958 -219.5625 195.5 C-217.00873732 192.46309303 -214.19960641 190.05447788 -211.1796875 187.49609375 C-209.37850996 185.8662833 -207.88421396 184.21018027 -206.375 182.3125 C-205.67375 181.466875 -204.9725 180.62125 -204.25 179.75 C-203.59 179.75 -202.93 179.75 -202.25 179.75 C-201.92 178.76 -201.59 177.77 -201.25 176.75 C-199.796875 175.35546875 -199.796875 175.35546875 -198 173.9375 C-195.61598529 171.97419377 -193.807982 170.21731165 -191.8125 167.8125 C-189.82085566 165.43224213 -188.08470044 163.68029771 -185.74609375 161.71484375 C-180.47839378 157.16059661 -175.63616384 152.20626662 -170.75 147.25 C-165.30814304 141.73006762 -159.88999431 136.26846468 -153.97875977 131.24780273 C-149.57534914 127.43267433 -145.61577277 123.21810104 -141.8125 118.8125 C-137.1087502 113.37378929 -132.11219045 108.33864435 -126.65234375 103.66015625 C-121.42762301 99.11447369 -116.60955791 94.17927897 -111.75 89.25 C-109.95042547 87.42460661 -108.14838231 85.60164329 -106.34375 83.78125 C-105.55677734 82.98267578 -104.76980469 82.18410156 -103.95898438 81.36132812 C-101.85232693 79.33061363 -99.72537393 77.41545826 -97.50976562 75.50976562 C-92.78588967 71.40917694 -88.39880746 67.00645265 -84 62.5625 C-82.71367676 61.27049683 -82.71367676 61.27049683 -81.40136719 59.95239258 C-78.68179111 57.2206888 -75.965488 54.48576725 -73.25 51.75 C-69.66961974 48.14288149 -66.08584819 44.53918198 -62.5 40.9375 C-61.28715332 39.71220581 -61.28715332 39.71220581 -60.04980469 38.4621582 C-55.81741096 34.21171119 -51.51461891 30.12726511 -46.94488525 26.24015808 C-44.42544125 24.02504067 -42.22417895 21.56994702 -40 19.0625 C-38.70619217 17.60593609 -37.40579894 16.15402335 -36.05566406 14.74951172 C-34.09430942 12.64283152 -34.09430942 12.64283152 -31.99902344 9.70751953 C-23.10705804 -1.53511746 -13.48686547 -0.70435592 0 0 Z \",fill:\"#747271\",transform:\"translate(283.25,763.25)\"})),_path13||(_path13=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 1.65 1 3.3 1 5 C1.80195801 4.75552124 1.80195801 4.75552124 2.62011719 4.50610352 C5.4937985 3.8949893 8.13965754 3.8879395 11.078125 3.90234375 C12.12387695 3.90484131 13.16962891 3.90733887 14.24707031 3.90991211 C16.22852051 3.92356812 16.22852051 3.92356812 18.25 3.9375 C22.4575 3.958125 26.665 3.97875 31 4 C30.67 12.58 30.34 21.16 30 30 C20.43 30 10.86 30 1 30 C0.145845 21.45844999 -0.07765697 13.5422663 0 5 C-9.57 5 -19.14 5 -29 5 C-29 12.92 -29 20.84 -29 29 C-23.06 29 -17.12 29 -11 29 C-11 29.33 -11 29.66 -11 30 C-16.28 30 -21.56 30 -27 30 C-27.33 37.59 -27.66 45.18 -28 53 C-28.33 53 -28.66 53 -29 53 C-29 45.41 -29 37.82 -29 30 C-38.9 30 -48.8 30 -59 30 C-58.855625 33.939375 -58.71125 37.87875 -58.5625 41.9375 C-58.51939697 43.18136475 -58.47629395 44.42522949 -58.43188477 45.70678711 C-58.39377686 46.6788208 -58.35566895 47.65085449 -58.31640625 48.65234375 C-58.26141968 50.15269165 -58.26141968 50.15269165 -58.20532227 51.68334961 C-58.25328159 53.96069188 -58.25328159 53.96069188 -57 55 C-54.9291528 55.1584265 -52.85321971 55.25124422 -50.77734375 55.31640625 C-48.88725586 55.37924805 -48.88725586 55.37924805 -46.95898438 55.44335938 C-45.61849264 55.48317596 -44.2779978 55.52288814 -42.9375 55.5625 C-41.59308477 55.60568042 -40.2486834 55.64929456 -38.90429688 55.69335938 C-35.60299987 55.79985283 -32.30151421 55.9004675 -29 56 C-28.67 64.58 -28.34 73.16 -28 82 C-18.43 82 -8.86 82 1 82 C1 90.58 1 99.16 1 108 C10.57 108 20.14 108 30 108 C30 116.58 30 125.16 30 134 C20.1 134 10.2 134 0 134 C0 125.42 0 116.84 0 108 C-9.24 108 -18.48 108 -28 108 C-28.83378093 104.66487626 -29.11814364 102.37555768 -29.09765625 99.015625 C-29.09515869 98.17290039 -29.09266113 97.33017578 -29.09008789 96.46191406 C-29.08098389 95.40198242 -29.07187988 94.34205078 -29.0625 93.25 C-29.041875 89.8675 -29.02125 86.485 -29 83 C-38.9 83 -48.8 83 -59 83 C-59 91.25 -59 99.5 -59 108 C-49.1 108 -39.2 108 -29 108 C-28.835 112.063125 -28.67 116.12625 -28.5 120.3125 C-28.42168945 122.22929565 -28.42168945 122.22929565 -28.34179688 124.18481445 C-28.30119141 125.1924585 -28.26058594 126.20010254 -28.21875 127.23828125 C-28.17685547 128.26993408 -28.13496094 129.30158691 -28.09179688 130.36450195 C-28.02639796 132.24211189 -28 134.12125145 -28 136 C-28.33 135.67 -28.66 135.34 -29 135 C-31.21687994 134.84126045 -33.43855298 134.74866163 -35.66015625 134.68359375 C-36.65685585 134.6524221 -36.65685585 134.6524221 -37.6736908 134.62062073 C-39.80318543 134.55506342 -41.93280668 134.49621215 -44.0625 134.4375 C-45.50326847 134.39432061 -46.94402399 134.35070651 -48.38476562 134.30664062 C-51.92304903 134.19855473 -55.46142397 134.09952907 -59 134 C-59 142.91 -59 151.82 -59 161 C-49.1 161 -39.2 161 -29 161 C-28.505 173.375 -28.505 173.375 -28 186 C-18.43 186.33 -8.86 186.66 1 187 C1 194.92 1 202.84 1 211 C2.32 211.33 3.64 211.66 5 212 C-11.335 212.495 -11.335 212.495 -28 213 C-28.33 220.92 -28.66 228.84 -29 237 C-23.57160005 236.96097135 -23.57160005 236.96097135 -18.14331055 236.90991211 C-11.97161965 236.88799911 -6.22592858 237.43400649 0 238 C0 245.59 0 253.18 0 261 C6.50578175 260.96077909 6.50578175 260.96077909 13.01147461 260.90991211 C14.25682983 260.90616577 14.25682983 260.90616577 15.52734375 260.90234375 C16.77632446 260.89448853 16.77632446 260.89448853 18.05053711 260.88647461 C22.04798822 261.04033727 26.02405646 261.5582285 30 262 C30 253.75 30 245.5 30 237 C39.9 237 49.8 237 60 237 C60 244.92 60 252.84 60 261 C69.9 261 79.8 261 90 261 C91.125 268.875 91.125 268.875 91.09765625 272.83984375 C91.09515869 273.59386475 91.09266113 274.34788574 91.09008789 275.12475586 C91.08098389 276.05296143 91.07187988 276.98116699 91.0625 277.9375 C91.041875 280.928125 91.02125 283.91875 91 287 C100.57 287 110.14 287 120 287 C120 270.5 120 254 120 237 C110.43 237 100.86 237 91 237 C91 228.75 91 220.5 91 212 C82.42 212 73.84 212 65 212 C65 211.67 65 211.34 65 211 C71.04654651 210.97506816 77.09306233 210.95703137 83.13964844 210.94506836 C85.19173708 210.94007505 87.24382223 210.93327809 89.29589844 210.92456055 C92.26498279 210.91227368 95.23401964 210.90672154 98.203125 210.90234375 C99.10363586 210.89718246 100.00414673 210.89202118 100.9319458 210.88670349 C107.72474345 210.88612047 114.16670764 211.43055897 121 212 C121 220.25 121 228.5 121 237 C129.91 237 138.82 237 148 237 C148.185625 240.939375 148.37125 244.87875 148.5625 248.9375 C148.62381104 250.18136475 148.68512207 251.42522949 148.74829102 252.70678711 C148.79139404 253.6788208 148.83449707 254.65085449 148.87890625 255.65234375 C148.9260376 256.65257568 148.97316895 257.65280762 149.02172852 258.68334961 C149 261 149 261 148 262 C146.07332493 262.08748207 144.14348139 262.10697334 142.21484375 262.09765625 C141.04501953 262.09443359 139.87519531 262.09121094 138.66992188 262.08789062 C137.43822266 262.07951172 136.20652344 262.07113281 134.9375 262.0625 C133.08415039 262.05573242 133.08415039 262.05573242 131.19335938 262.04882812 C128.12885883 262.03699608 125.06445279 262.02051173 122 262 C122.00523682 262.65597168 122.01047363 263.31194336 122.01586914 263.98779297 C122.03661272 266.95018563 122.04965176 269.91256303 122.0625 272.875 C122.07087891 273.90753906 122.07925781 274.94007813 122.08789062 276.00390625 C122.09111328 276.99003906 122.09433594 277.97617187 122.09765625 278.9921875 C122.10289307 279.90339355 122.10812988 280.81459961 122.11352539 281.75341797 C122 284 122 284 121 286 C121.66 286.33 122.32 286.66 123 287 C122.34 287 121.68 287 121 287 C121 295.25 121 303.5 121 312 C129.91 312 138.82 312 148 312 C148 320.58 148 329.16 148 338 C139.09 338.33 130.18 338.66 121 339 C120.67 347.25 120.34 355.5 120 364 C112.98529768 364.63770021 106.30399141 365.13831216 99.3125 365.0625 C96.569375 365.041875 93.82625 365.02125 91 365 C91 372.92 91 380.84 91 389 C97.87992431 388.96071366 97.87992431 388.96071366 104.75976562 388.90991211 C110.27317754 388.89414497 115.54740413 389.17561943 121 390 C120.99476318 389.2479126 120.98952637 388.4958252 120.98413086 387.72094727 C120.96342773 384.33480658 120.95036123 380.94867916 120.9375 377.5625 C120.92912109 376.37849609 120.92074219 375.19449219 120.91210938 373.97460938 C120.90888672 372.84990234 120.90566406 371.72519531 120.90234375 370.56640625 C120.89710693 369.52427979 120.89187012 368.48215332 120.88647461 367.40844727 C121 365 121 365 122 364 C123.92667507 363.91251793 125.85651861 363.89302666 127.78515625 363.90234375 C128.83840088 363.90484131 129.89164551 363.90733887 130.97680664 363.90991211 C132.32508545 363.91901611 133.67336426 363.92812012 135.0625 363.9375 C139.331875 363.958125 143.60125 363.97875 148 364 C148 372.58 148 381.16 148 390 C139.42 390.33 130.84 390.66 122 391 C121.67 399.25 121.34 407.5 121 416 C121.66 416.33 122.32 416.66 123 417 C122.67 420.63 122.34 424.26 122 428 C121.67 428 121.34 428 121 428 C121 424.37 121 420.74 121 417 C111.1 417 101.2 417 91 417 C91 425.25 91 433.5 91 442 C100.9 442 110.8 442 121 442 C121 459.16 121 476.32 121 494 C111.1 494 101.2 494 91 494 C91 502.25 91 510.5 91 519 C89.02 519 87.04 519 85 519 C86.32 518.67 87.64 518.34 89 518 C89.33 501.83 89.66 485.66 90 469 C80.1 469 70.2 469 60 469 C60.33 460.09 60.66 451.18 61 442 C70.24 442 79.48 442 89 442 C88.96049046 434.56575914 88.96049046 434.56575914 88.90991211 427.1315918 C88.90616577 425.74194214 88.90616577 425.74194214 88.90234375 424.32421875 C88.89710693 423.37635498 88.89187012 422.42849121 88.88647461 421.4519043 C89 419 89 419 90 416 C90.14939774 414.08234406 90.24810283 412.16053478 90.31640625 410.23828125 C90.35451416 409.23063721 90.39262207 408.22299316 90.43188477 407.18481445 C90.47498779 405.90695068 90.51809082 404.62908691 90.5625 403.3125 C90.706875 399.249375 90.85125 395.18625 91 391 C80.77 390.67 70.54 390.34 60 390 C60 381.42 60 372.84 60 364 C70.23 364 80.46 364 91 364 C91 355.42 91 346.84 91 338 C88.02033203 338.12568359 88.02033203 338.12568359 84.98046875 338.25390625 C83.05429645 338.33039685 81.12812236 338.40684813 79.2019043 338.48217773 C77.2067109 338.56173399 75.21174989 338.64705005 73.21679688 338.73242188 C71.96318359 338.78076172 70.70957031 338.82910156 69.41796875 338.87890625 C68.26063232 338.9260376 67.1032959 338.97316895 65.91088867 339.02172852 C63 339 63 339 60 338 C60 329.42 60 320.84 60 312 C50.1 312 40.2 312 30 312 C30 303.75 30 295.5 30 287 C20.43 287 10.86 287 1 287 C0.27412466 283.37062331 -0.12079859 280.72378217 -0.09765625 277.13671875 C-0.09515869 276.33709717 -0.09266113 275.53747559 -0.09008789 274.71362305 C-0.08098389 273.71500244 -0.07187988 272.71638184 -0.0625 271.6875 C-0.041875 268.490625 -0.02125 265.29375 0 262 C-9.24 262 -18.48 262 -28 262 C-28.8223186 253.77681402 -29.08051402 246.21243014 -29 238 C-42.365 238.495 -42.365 238.495 -56 239 C-55.67 243.95 -55.34 248.9 -55 254 C-52.69 254.33 -50.38 254.66 -48 255 C-45.0625 256.0625 -45.0625 256.0625 -43 257 C-42.75 263.625 -42.75 263.625 -45 267 C-46.32 267 -47.64 267 -49 267 C-49 264.69 -49 262.38 -49 260 C-50.98 259.67 -52.96 259.34 -55 259 C-54.96037267 264.29905129 -54.96037267 264.29905129 -52.375 268.5 C-48.48460778 269.31902994 -44.74360984 269.92992525 -41.125 268 C-39.32756466 264.8045594 -39.29797286 261.63526893 -39 258 C-38.01 257.67 -37.02 257.34 -36 257 C-35.67 257.99 -35.34 258.98 -35 260 C-33.02 260.33 -31.04 260.66 -29 261 C-29 269.58 -29 278.16 -29 287 C-38.9 287.33 -48.8 287.66 -59 288 C-59 295.59 -59 303.18 -59 311 C-61.64 311.33 -64.28 311.66 -67 312 C-67 218.61 -67 125.22 -67 29 C-64.69 29.33 -62.38 29.66 -60 30 C-59.67 21.42 -59.34 12.84 -59 4 C-49.1 4 -39.2 4 -29 4 C-28.67 3.01 -28.34 2.02 -28 1 C-28 1.99 -28 2.98 -28 4 C-18.76 4 -9.52 4 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#61605E\",transform:\"translate(67,252)\"})),_path14||(_path14=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.58 30 17.16 30 26 C40.56 25.67 51.12 25.34 62 25 C61.67 25.66 61.34 26.32 61 27 C60.90983623 28.60354452 60.88243925 30.21082222 60.88647461 31.81689453 C60.88655014 32.81778107 60.88662567 33.8186676 60.88670349 34.84988403 C60.89186478 35.93325043 60.89702606 37.01661682 60.90234375 38.1328125 C60.9037587 39.23978485 60.90517365 40.3467572 60.90663147 41.48727417 C60.91224228 45.03320993 60.92479663 48.57908323 60.9375 52.125 C60.94251361 54.52473867 60.94707675 56.92447833 60.95117188 59.32421875 C60.9613656 65.21618943 60.98093897 71.10802455 61 77 C70.9 77 80.8 77 91 77 C91 68.75 91 60.5 91 52 C82.75 52 74.5 52 66 52 C66 51.67 66 51.34 66 51 C73.26 51 80.52 51 88 51 C88 50.34 88 49.68 88 49 C88.66 49 89.32 49 90 49 C89.67 44.71 89.34 40.42 89 36 C90.485 36.495 90.485 36.495 92 37 C92 41.95 92 46.9 92 52 C101.9 52 111.8 52 122 52 C122 65 122 65 120.0234375 68.0625 C119.14945313 68.701875 118.27546875 69.34125 117.375 70 C116.51648438 70.66 115.65796875 71.32 114.7734375 72 C113.40058594 72.99 113.40058594 72.99 112 74 C99.1769369 83.94977752 91.09050588 100.03314409 89 116 C88.4776508 124.96044191 88.62078635 133.87062333 89.9375 142.75 C90.2414258 145.88175715 90.28501671 147.45363907 88.82421875 150.25390625 C85.3750466 154.43255848 81.08019523 157.58558343 76.74609375 160.79296875 C72.27340933 164.38765822 68.17940784 168.39413876 64.05273438 172.37744141 C63.42818359 172.97347168 62.80363281 173.56950195 62.16015625 174.18359375 C61.59949463 174.72556396 61.03883301 175.26753418 60.46118164 175.82592773 C59 177 59 177 57 177 C57 177.66 57 178.32 57 179 C57.41507813 178.63390625 57.83015625 178.2678125 58.2578125 177.890625 C63.41562647 173.35865457 68.62363945 168.88718212 73.84179688 164.42504883 C77.70760286 161.11665027 81.54894253 157.7834063 85.3515625 154.40234375 C87.17636784 152.84996196 89.07070686 151.41958905 91 150 C91.27972656 150.72703125 91.55945313 151.4540625 91.84765625 152.203125 C98.77188074 169.5693472 108.16082261 181.85894177 124 192 C124.81476807 192.52327881 124.81476807 192.52327881 125.64599609 193.05712891 C137.68273597 200.57629292 150.98858806 204.51364921 164.44921875 208.640625 C202.36705011 220.31742141 202.36705011 220.31742141 212.125 236.5625 C215.59310745 244.43338216 215.229298 254.81668707 212.875 263 C208.40162662 273.91420264 198.97459736 281.97519386 188.5546875 286.9921875 C177.96401714 291.17015838 165.25416587 292.17779368 154.5 287.9375 C148.91486373 285.20286896 143.91233771 281.79394209 139 278 C138.39800781 277.58621094 137.79601562 277.17242188 137.17578125 276.74609375 C130.46993101 271.75969229 126.38706908 263.96234064 122 257 C121.4225 256.09121094 120.845 255.18242188 120.25 254.24609375 C119.15388082 252.50538175 118.07410939 250.75437867 117 249 C112.81138319 251.03168405 108.96990436 253.47877217 105.0625 256 C103.93992798 256.72280151 103.93992798 256.72280151 102.79467773 257.46020508 C97.29293438 261.04901117 92.04446948 264.87391398 86.93579102 269.00195312 C83.19373455 272 83.19373455 272 81 272 C81.495 273.093125 81.99 274.18625 82.5 275.3125 C84 279 84 279 84 282 C81.11734851 282.96088383 79.32337729 283.11670941 76.33203125 283.09765625 C75.52741455 283.09515869 74.72279785 283.09266113 73.89379883 283.09008789 C72.36855591 283.07643188 72.36855591 283.07643188 70.8125 283.0625 C65.9553125 283.0315625 65.9553125 283.0315625 61 283 C61 290.92 61 298.84 61 307 C70.9 307 80.8 307 91 307 C91 305.02 91 303.04 91 301 C91.33 301 91.66 301 92 301 C92 311.56 92 322.12 92 333 C97.75749802 332.96093657 97.75749802 332.96093657 103.51489258 332.90991211 C109.80185819 332.88880806 115.66468797 333.42406254 122 334 C122 342.25 122 350.5 122 359 C132.23 359 142.46 359 153 359 C153 356.69 153 354.38 153 352 C153.33 352 153.66 352 154 352 C154 354.31 154 356.62 154 359 C162.25 359 170.5 359 179 359 C179 359.33 179 359.66 179 360 C170.09 360.33 161.18 360.66 152 361 C152 369.25 152 377.5 152 386 C149.463125 386.165 146.92625 386.33 144.3125 386.5 C143.54333252 386.55220703 142.77416504 386.60441406 141.98168945 386.65820312 C135.28132819 387.07179554 128.76265238 387 122 387 C122 395.58 122 404.16 122 413 C111.44 413 100.88 413 90 413 C90.33 404.09 90.66 395.18 91 386 C101.23 386 111.46 386 122 386 C122 377.42 122 368.84 122 360 C111.77 360 101.54 360 91 360 C91 351.42 91 342.84 91 334 C81.1 334.33 71.2 334.66 61 335 C60.67 343.25 60.34 351.5 60 360 C50.43 360 40.86 360 31 360 C31 351.09 31 342.18 31 333 C40.24 333 49.48 333 59 333 C59.33 324.75 59.66 316.5 60 308 C54.39 308 48.78 308 43 308 C43 231.77 43 155.54 43 77 C50.92 76.505 50.92 76.505 59 76 C59 68.08 59 60.16 59 52 C49.43 52 39.86 52 30 52 C28.875 43 28.875 43 28.90234375 39.5 C28.90484131 38.8296875 28.90733887 38.159375 28.90991211 37.46875 C28.91901611 36.6540625 28.92812012 35.839375 28.9375 35 C28.958125 32.36 28.97875 29.72 29 27 C19.43 27 9.86 27 0 27 C0 33.93 0 40.86 0 48 C-0.33 48 -0.66 48 -1 48 C-1 41.07 -1 34.14 -1 27 C-2.32 26.67 -3.64 26.34 -5 26 C-3.35 26 -1.7 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#5D5C5B\",transform:\"translate(485,308)\"})),_path15||(_path15=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.33 6.93 1.66 13.86 2 21 C11.57 21.33 21.14 21.66 31 22 C31 28.93 31 35.86 31 43 C45.85 42.505 45.85 42.505 61 42 C61 49.92 61 57.84 61 66 C46.645 66.99 46.645 66.99 32 68 C32 75.59 32 83.18 32 91 C41.57 91 51.14 91 61 91 C61 83.08 61 75.16 61 67 C71.23 67 81.46 67 92 67 C92 74.59 92 82.18 92 90 C82.1 90 72.2 90 62 90 C62 97.26 62 104.52 62 112 C65.09375 111.95875 68.1875 111.9175 71.375 111.875 C78.52139636 111.82762696 85.05358374 112.14762233 92 114 C92 119.94 92 125.88 92 132 C77.15 132.495 77.15 132.495 62 133 C62.33 140.26 62.66 147.52 63 155 C72.57 155.33 82.14 155.66 92 156 C92 164.58 92 173.16 92 182 C82.1 182 72.2 182 62 182 C62 187.61 62 193.22 62 199 C-48.88 199 -159.76 199 -274 199 C-268 191 -268 191 -265 190 C-264.73316406 189.43796875 -264.46632813 188.8759375 -264.19140625 188.296875 C-262.45176226 184.94306954 -259.71676306 182.73394911 -256.9375 180.25 C-256.35476318 179.71922852 -255.77202637 179.18845703 -255.17163086 178.64160156 C-251.84754654 175.62278563 -248.46688 172.67799918 -245.0625 169.75 C-241.62229818 166.73194749 -238.94579529 163.55038161 -236.38671875 159.76171875 C-234.0628913 156.80947599 -232.14268416 155.14645759 -228.34277344 154.65942383 C-226.86599121 154.6829895 -226.86599121 154.6829895 -225.359375 154.70703125 C-224.39483398 154.71452393 -223.43029297 154.7220166 -222.43652344 154.72973633 C-221.2199707 154.75704834 -220.00341797 154.78436035 -218.75 154.8125 C-212.93375 154.9053125 -212.93375 154.9053125 -207 155 C-207 163.25 -207 171.5 -207 180 C-197.1 180 -187.2 180 -177 180 C-177 171.75 -177 163.5 -177 155 C-167.1 155 -157.2 155 -147 155 C-146.67 155.66 -146.34 156.32 -146 157 C-145.01 156.34 -144.02 155.68 -143 155 C-140.27270508 154.77294922 -140.27270508 154.77294922 -137.01953125 154.8046875 C-135.27446289 154.81435547 -135.27446289 154.81435547 -133.49414062 154.82421875 C-132.27919922 154.84097656 -131.06425781 154.85773438 -129.8125 154.875 C-128.58595703 154.88402344 -127.35941406 154.89304687 -126.09570312 154.90234375 C-123.06371915 154.92593896 -120.03183527 154.96181033 -117 155 C-117.33 147.41 -117.66 139.82 -118 132 C-107.77 132.33 -97.54 132.66 -87 133 C-87 140.26 -87 147.52 -87 155 C-77.43 155 -67.86 155 -58 155 C-58 163.58 -58 172.16 -58 181 C-48.43 180.67 -38.86 180.34 -29 180 C-28.71071377 171.81768379 -28.71071377 171.81768379 -28.43188477 163.63500977 C-28.39377686 162.62237061 -28.35566895 161.60973145 -28.31640625 160.56640625 C-28.26141968 159.00321655 -28.26141968 159.00321655 -28.20532227 157.40844727 C-28 155 -28 155 -27 154 C-24.85441173 153.91224395 -22.70595579 153.89304781 -20.55859375 153.90234375 C-19.25341797 153.90556641 -17.94824219 153.90878906 -16.60351562 153.91210938 C-15.2148431 153.92046599 -13.82617123 153.92893095 -12.4375 153.9375 C-11.04492344 153.94251334 -9.65234519 153.94707653 -8.25976562 153.95117188 C-4.8398013 153.96300566 -1.41992156 153.9794912 2 154 C2 151.69 2 149.38 2 147 C2.33 147 2.66 147 3 147 C3 149.64 3 152.28 3 155 C12.24 155 21.48 155 31 155 C30.67 147.74 30.34 140.48 30 133 C33.85421425 132.97292121 37.70823638 132.95312238 41.5625 132.9375 C42.64853516 132.92912109 43.73457031 132.92074219 44.85351562 132.91210938 C45.91376953 132.90888672 46.97402344 132.90566406 48.06640625 132.90234375 C49.03521729 132.89710693 50.00402832 132.89187012 51.00219727 132.88647461 C54.35300282 133.01336805 57.68049404 133.52578486 61 134 C61 127.73 61 121.46 61 115 C58.91816406 115.08378906 56.83632813 115.16757812 54.69140625 115.25390625 C52.6825499 115.33036791 50.67369201 115.40679388 48.66479492 115.48217773 C47.26498319 115.53566026 45.86524096 115.59099434 44.46557617 115.64819336 C42.4577104 115.72992949 40.44955813 115.80453025 38.44140625 115.87890625 C36.62684937 115.94960327 36.62684937 115.94960327 34.77563477 116.02172852 C32 116 32 116 31 115 C30.91273777 113.21928754 30.89300959 111.4351686 30.90234375 109.65234375 C30.90556641 108.57275391 30.90878906 107.49316406 30.91210938 106.38085938 C30.92048828 105.24455078 30.92886719 104.10824219 30.9375 102.9375 C30.94201172 101.79732422 30.94652344 100.65714844 30.95117188 99.48242188 C30.96300253 96.65489649 30.9794859 93.8274736 31 91 C29.7483606 91.11516968 29.7483606 91.11516968 28.47143555 91.23266602 C19.62624733 92.02844952 10.86932665 92.10246976 2 92 C2 90.35 2 88.7 2 87 C0.95356323 87.23771118 0.95356323 87.23771118 -0.11401367 87.48022461 C-3.16710168 88.03009555 -6.07604597 88.20951883 -9.17578125 88.31640625 C-10.33271484 88.35830078 -11.48964844 88.40019531 -12.68164062 88.44335938 C-13.87982422 88.48267578 -15.07800781 88.52199219 -16.3125 88.5625 C-17.53001953 88.60568359 -18.74753906 88.64886719 -20.00195312 88.69335938 C-23.00117578 88.79921429 -26.00057343 88.90008997 -29 89 C-29 81.74 -29 74.48 -29 67 C-38.57 67 -48.14 67 -58 67 C-58 74.26 -58 81.52 -58 89 C-51.82331725 88.96080098 -51.82331725 88.96080098 -45.64672852 88.90991211 C-40.01560059 88.89210118 -34.58535638 89.27839241 -29 90 C-28.97096423 93.10414702 -28.9531893 96.20825909 -28.9375 99.3125 C-28.92912109 100.19357422 -28.92074219 101.07464844 -28.91210938 101.98242188 C-28.90888672 102.82998047 -28.90566406 103.67753906 -28.90234375 104.55078125 C-28.89710693 105.33106689 -28.89187012 106.11135254 -28.88647461 106.9152832 C-29 109 -29 109 -30 112 C-39.24 112 -48.48 112 -58 112 C-57.67 118.27 -57.34 124.54 -57 131 C-47.76 131.33 -38.52 131.66 -29 132 C-29 139.26 -29 146.52 -29 154 C-38.57 154 -48.14 154 -58 154 C-58 147.07 -58 140.14 -58 133 C-67.24 133 -76.48 133 -86 133 C-86.99 122.605 -86.99 122.605 -88 112 C-97.24 112 -106.48 112 -116 112 C-116 105.07 -116 98.14 -116 91 C-106.43 91 -96.86 91 -87 91 C-87 97.27 -87 103.54 -87 110 C-77.43 110 -67.86 110 -58 110 C-58 103.4 -58 96.8 -58 90 C-61.01447266 90.01740234 -61.01447266 90.01740234 -64.08984375 90.03515625 C-66.02921424 90.0421074 -67.96858503 90.04902396 -69.90795898 90.05493164 C-71.25920386 90.05997057 -72.61044326 90.06680177 -73.96166992 90.07543945 C-75.90020434 90.08752419 -77.838778 90.09269828 -79.77734375 90.09765625 C-81.52905884 90.10551147 -81.52905884 90.10551147 -83.31616211 90.11352539 C-86 90 -86 90 -87 89 C-87.08700342 87.36527118 -87.10701063 85.72685945 -87.09765625 84.08984375 C-87.09515869 83.199021 -87.09266113 82.30819824 -87.09008789 81.39038086 C-87.08098389 80.25093018 -87.07187988 79.11147949 -87.0625 77.9375 C-87.041875 74.328125 -87.02125 70.71875 -87 67 C-77.76 67 -68.52 67 -59 67 C-59 59.08 -59 51.16 -59 43 C-49.1 43 -39.2 43 -29 43 C-29 44.32 -29 45.64 -29 47 C-19.1 47 -9.2 47 1 47 C1 38.75 1 30.5 1 22 C-3.95 22 -8.9 22 -14 22 C-14 21.67 -14 21.34 -14 21 C-9.38 21 -4.76 21 0 21 C0 14.07 0 7.14 0 0 Z \",fill:\"#6A6867\",transform:\"translate(274,825)\"})),_path16||(_path16=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.95 -0.0309375 4.95 -0.0309375 10 -0.0625 C11.02351562 -0.071604 12.04703125 -0.08070801 13.1015625 -0.09008789 C14.35066406 -0.09383423 14.35066406 -0.09383423 15.625 -0.09765625 C16.88183594 -0.10551147 16.88183594 -0.10551147 18.1640625 -0.11352539 C21.79215717 0.03171084 25.39703855 0.54962982 29 1 C29 9.58 29 18.16 29 27 C30.32 26.67 31.64 26.34 33 26 C35.0976396 25.91879767 37.19768762 25.89244192 39.296875 25.90234375 C40.50214844 25.90556641 41.70742188 25.90878906 42.94921875 25.91210938 C44.20347656 25.92048828 45.45773437 25.92886719 46.75 25.9375 C48.65458984 25.94426758 48.65458984 25.94426758 50.59765625 25.95117188 C53.73179095 25.96295434 56.86590142 25.98088964 60 26 C60 17.75 60 9.5 60 1 C69.9 1 79.8 1 90 1 C90.375 13.375 90.375 13.375 90.47802734 17.27490234 C90.53144287 18.79011475 90.53144287 18.79011475 90.5859375 20.3359375 C90.6173584 21.37282715 90.6487793 22.4097168 90.68115234 23.47802734 C90.75954472 26.16809835 90.75954472 26.16809835 93 28 C82.11 27.67 71.22 27.34 60 27 C60 35.25 60 43.5 60 52 C69.9 52 79.8 52 90 52 C90 60.25 90 68.5 90 77 C99.24 76.67 108.48 76.34 118 76 C118.66 74.02 119.32 72.04 120 70 C120.33 70 120.66 70 121 70 C121 72.31 121 74.62 121 77 C130.9 77 140.8 77 151 77 C151.33 69.08 151.66 61.16 152 53 C149.77378906 53.01160156 147.54757812 53.02320313 145.25390625 53.03515625 C143.10603986 53.04294722 140.95817503 53.04902375 138.81030273 53.05493164 C137.31355082 53.05997121 135.81680384 53.06680287 134.32006836 53.07543945 C132.17300193 53.08752159 130.02600038 53.09323191 127.87890625 53.09765625 C125.93866577 53.10551147 125.93866577 53.10551147 123.95922852 53.11352539 C121 53 121 53 120 52 C119.90050923 50.24314326 119.8691974 48.48232667 119.8671875 46.72265625 C119.86589844 45.65208984 119.86460937 44.58152344 119.86328125 43.47851562 C119.86714844 42.35123047 119.87101563 41.22394531 119.875 40.0625 C119.87113281 38.93908203 119.86726562 37.81566406 119.86328125 36.65820312 C119.86521484 35.05041992 119.86521484 35.05041992 119.8671875 33.41015625 C119.86831543 32.42152588 119.86944336 31.43289551 119.87060547 30.41430664 C120 28 120 28 121 26 C130.9 26 140.8 26 151 26 C151.33 17.75 151.66 9.5 152 1 C161.57 1 171.14 1 181 1 C181 9.58 181 18.16 181 27 C171.43 27 161.86 27 152 27 C152 35.25 152 43.5 152 52 C161.57 51.67 171.14 51.34 181 51 C181 59.91 181 68.82 181 78 C171.76 78 162.52 78 153 78 C152.67 85.92 152.34 93.84 152 102 C141.77 102 131.54 102 121 102 C121 94.08 121 86.16 121 78 C111.43 78 101.86 78 92 78 C92.03920482 83.56352869 92.03920482 83.56352869 92.09008789 89.12695312 C92.10522097 93.43451059 91.85779446 97.55470892 91.25610352 101.83007812 C90.72075914 106.36596066 90.62006662 110.93882742 90.4375 115.5 C90.37272461 117.01980469 90.37272461 117.01980469 90.30664062 118.5703125 C90.20150808 121.0467679 90.09936163 123.52330749 90 126 C79.95030838 126.97875258 70.09283664 127.08205558 60 127 C60 135.25 60 143.5 60 152 C49.77 152 39.54 152 29 152 C29 160.25 29 168.5 29 177 C48.8 177 68.6 177 89 177 C89 172.71 89 168.42 89 164 C89.33 164 89.66 164 90 164 C90 176.87 90 189.74 90 203 C87.03 203.33 84.06 203.66 81 204 C83.97 204.33 86.94 204.66 90 205 C90 213.25 90 221.5 90 230 C80.26066293 230.11067428 70.7099512 229.67547487 61 229 C61 221.08 61 213.16 61 205 C50.44 204.67 39.88 204.34 29 204 C29 212.58 29 221.16 29 230 C19.1 230 9.2 230 -1 230 C-1 221.42 -1 212.84 -1 204 C-6.94 204 -12.88 204 -19 204 C-19 145.26 -19 86.52 -19 26 C-12.73 26 -6.46 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#5D5C5A\",transform:\"translate(823,412)\"})),_path17||(_path17=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0 20.46 0 31 0 C31 1.98 31 3.96 31 6 C40.57 5.67 50.14 5.34 60 5 C60.66 3.68 61.32 2.36 62 1 C62 2.32 62 3.64 62 5 C62.73114014 4.99476318 63.46228027 4.98952637 64.21557617 4.98413086 C67.53954198 4.96329839 70.86349403 4.95031986 74.1875 4.9375 C75.91323242 4.92493164 75.91323242 4.92493164 77.67382812 4.91210938 C78.78564453 4.90888672 79.89746094 4.90566406 81.04296875 4.90234375 C82.06414795 4.89710693 83.08532715 4.89187012 84.13745117 4.88647461 C86.86901616 4.99480533 89.34169374 5.38293132 92 6 C92 4.35 92 2.7 92 1 C92.66 1 93.32 1 94 1 C94.495 2.98 94.495 2.98 95 5 C95.71655762 4.98952637 96.43311523 4.97905273 97.17138672 4.96826172 C100.40588905 4.92678701 103.64033553 4.90070108 106.875 4.875 C108.00292969 4.85824219 109.13085938 4.84148438 110.29296875 4.82421875 C111.36933594 4.81777344 112.44570313 4.81132813 113.5546875 4.8046875 C114.54968262 4.79421387 115.54467773 4.78374023 116.56982422 4.77294922 C119 5 119 5 121 7 C120.2479126 7.02505615 119.4958252 7.0501123 118.72094727 7.07592773 C115.33460804 7.19150514 111.94857387 7.31440345 108.5625 7.4375 C107.37849609 7.47681641 106.19449219 7.51613281 104.97460938 7.55664062 C103.28754883 7.61948242 103.28754883 7.61948242 101.56640625 7.68359375 C100.52427979 7.72025146 99.48215332 7.75690918 98.40844727 7.79467773 C96.0500174 7.73515341 96.0500174 7.73515341 95 9 C94.84285346 10.63256758 94.74914586 12.27135338 94.68359375 13.91015625 C94.64548584 14.800979 94.60737793 15.69180176 94.56811523 16.60961914 C94.52501221 17.74906982 94.48190918 18.88852051 94.4375 20.0625 C94.293125 23.671875 94.14875 27.28125 94 31 C103.24 31 112.48 31 122 31 C122 23.08 122 15.16 122 7 C122.33 7 122.66 7 123 7 C123.79681084 15.02502344 124.12867289 22.93649887 124 31 C124.66 31.33 125.32 31.66 126 32 C125.01 32 124.02 32 123 32 C123 40.58 123 49.16 123 58 C132.24 58 141.48 58 151 58 C151 40.84 151 23.68 151 6 C151.33 6 151.66 6 152 6 C152 14.25 152 22.5 152 31 C161.57 31 171.14 31 181 31 C181 23.08 181 15.16 181 7 C191.23 7 201.46 7 212 7 C212 14.92 212 22.84 212 31 C221.9 31 231.8 31 242 31 C242 22.75 242 14.5 242 6 C257.345 5.505 257.345 5.505 273 5 C273 13.91 273 22.82 273 32 C262.77 32 252.54 32 242 32 C242 40.58 242 49.16 242 58 C232.1 58.33 222.2 58.66 212 59 C212.03953747 65.49198522 212.03953747 65.49198522 212.09008789 71.98388672 C212.09383423 73.19455811 212.09383423 73.19455811 212.09765625 74.4296875 C212.10289307 75.25710449 212.10812988 76.08452148 212.11352539 76.93701172 C212 79 212 79 211 81 C208.55175791 81.32277819 206.21010485 81.51704627 203.75 81.625 C202.67975586 81.68192017 202.67975586 81.68192017 201.58789062 81.73999023 C195.05909837 82.05990105 188.53547445 82.10071793 182 82 C182.01160156 82.82242188 182.02320313 83.64484375 182.03515625 84.4921875 C182.09101958 91.40327971 181.86694034 98.14188265 181 105 C181.81339844 104.9278125 182.62679687 104.855625 183.46484375 104.78125 C193.01783413 104.00755449 202.41659888 103.92144753 212 104 C212 96.74 212 89.48 212 82 C221.9 82 231.8 82 242 82 C242 89.26 242 96.52 242 104 C251.9 104.33 261.8 104.66 272 105 C272.33 111.93 272.66 118.86 273 126 C276.320625 126.020625 279.64125 126.04125 283.0625 126.0625 C284.09511963 126.071604 285.12773926 126.08070801 286.19165039 126.09008789 C287.02688232 126.09258545 287.86211426 126.09508301 288.72265625 126.09765625 C289.56578369 126.10289307 290.40891113 126.10812988 291.27758789 126.11352539 C294.53674589 125.97761754 297.77079419 125.46131512 301 125 C301.33 119.39 301.66 113.78 302 108 C302.33 108 302.66 108 303 108 C303.06058594 109.28777344 303.12117188 110.57554687 303.18359375 111.90234375 C303.26798247 113.58074159 303.3526313 115.25912636 303.4375 116.9375 C303.47681641 117.78763672 303.51613281 118.63777344 303.55664062 119.51367188 C303.59853516 120.32255859 303.64042969 121.13144531 303.68359375 121.96484375 C303.72025146 122.7137085 303.75690918 123.46257324 303.79467773 124.23413086 C303.81771063 126.02461326 303.81771063 126.02461326 305 127 C307.07262076 127.08767112 309.14820294 127.10695873 311.22265625 127.09765625 C312.48271484 127.09443359 313.74277344 127.09121094 315.04101562 127.08789062 C316.38151109 127.07953403 317.72200588 127.07106907 319.0625 127.0625 C320.40689942 127.0574866 321.7513006 127.05292342 323.09570312 127.04882812 C326.39715433 127.03699497 329.6985826 127.01905886 333 127 C333 120.4 333 113.8 333 107 C333.33 107 333.66 107 334 107 C334 120.86 334 134.72 334 149 C343.57 149 353.14 149 363 149 C362.9690625 144.235625 362.9690625 144.235625 362.9375 139.375 C362.90172407 127.89528781 363.37020145 116.46032369 364 105 C363.2378418 105.00523682 362.47568359 105.01047363 361.69042969 105.01586914 C347.22195751 105.1012448 332.77393113 105.06402502 318.3125 104.5625 C317.12043945 104.52326416 315.92837891 104.48402832 314.70019531 104.44360352 C313.59901367 104.40162842 312.49783203 104.35965332 311.36328125 104.31640625 C310.39688721 104.27974854 309.43049316 104.24309082 308.43481445 104.20532227 C306 104 306 104 303 103 C303 96.4 303 89.8 303 83 C297.72 82.67 292.44 82.34 287 82 C287 81.34 287 80.68 287 80 C291.62 79.67 296.24 79.34 301 79 C301.33 73.72 301.66 68.44 302 63 C302.33 63 302.66 63 303 63 C303 69.27 303 75.54 303 82 C323.46 82 343.92 82 365 82 C365 89.26 365 96.52 365 104 C371.87973331 104.28771571 371.87973331 104.28771571 378.75976562 104.56811523 C379.63310547 104.60622314 380.50644531 104.64433105 381.40625 104.68359375 C382.28603516 104.72025146 383.16582031 104.75690918 384.07226562 104.79467773 C387.72795575 105.0510516 391.36363017 105.54545377 395 106 C395 112.93 395 119.86 395 127 C405.23 127 415.46 127 426 127 C426 134.26 426 141.52 426 149 C435.9 149 445.8 149 456 149 C456 143.39 456 137.78 456 132 C456.33 132 456.66 132 457 132 C457.02683987 134.97922593 457.04676037 137.95821295 457.0625 140.9375 C457.07087891 141.78763672 457.07925781 142.63777344 457.08789062 143.51367188 C457.09272461 144.72700195 457.09272461 144.72700195 457.09765625 145.96484375 C457.10551147 147.08814087 457.10551147 147.08814087 457.11352539 148.23413086 C457 150 457 150 456 151 C453.85613343 151.15858842 451.70733162 151.25129298 449.55859375 151.31640625 C447.60083008 151.37924805 447.60083008 151.37924805 445.60351562 151.44335938 C444.2148467 151.48317608 442.82617478 151.52288825 441.4375 151.5625 C440.04490817 151.60567989 438.65232972 151.649294 437.25976562 151.69335938 C433.83995199 151.79985876 430.42006237 151.90186923 427 152 C426.67 154.31 426.34 156.62 426 159 C425.67 159 425.34 159 425 159 C425 156.03 425 153.06 425 150 C415.1 150 405.2 150 395 150 C395 142.74 395 135.48 395 128 C380.15 128.495 380.15 128.495 365 129 C365.01160156 131.65933594 365.02320313 134.31867188 365.03515625 137.05859375 C365.04294652 139.62345256 365.04902345 142.18831007 365.05493164 144.75317383 C365.05997218 146.54094021 365.06680454 148.32870245 365.07543945 150.11645508 C365.0875173 152.68051168 365.09323094 155.24451397 365.09765625 157.80859375 C365.10281754 158.6127623 365.10797882 159.41693085 365.11329651 160.24546814 C365.11349215 162.16401715 365.06201983 164.08245368 365 166 C363.11368457 167.88631543 359.85799307 167.24265292 357.33984375 167.31640625 C356.67537735 167.33718735 356.01091095 167.35796844 355.3263092 167.37937927 C353.19681457 167.44493658 351.06719332 167.50378785 348.9375 167.5625 C347.49673153 167.60567939 346.05597601 167.64929349 344.61523438 167.69335938 C341.07695097 167.80144527 337.53857603 167.90047093 334 168 C334 162.06 334 156.12 334 150 C313.54 150 293.08 150 272 150 C271.67 143.07 271.34 136.14 271 129 C261.43 128.67 251.86 128.34 242 128 C242 135.59 242 143.18 242 151 C251.9 151 261.8 151 272 151 C272 157.6 272 164.2 272 171 C273.794375 170.835 275.58875 170.67 277.4375 170.5 C285.62769766 169.85816332 293.78991188 169.91150803 302 170 C302 166.7 302 163.4 302 160 C302.33 160 302.66 160 303 160 C303 170.56 303 181.12 303 192 C288.15 192.495 288.15 192.495 273 193 C270.0026208 187.0052416 270.89436297 178.5494958 271 172 C270.16339844 172.0721875 269.32679688 172.144375 268.46484375 172.21875 C259.59674178 172.92584119 250.89397845 173.08390546 242 173 C241.67 165.74 241.34 158.48 241 151 C231.1 151.33 221.2 151.66 211 152 C211 144.08 211 136.16 211 128 C220.9 128 230.8 128 241 128 C241 120.41 241 112.82 241 105 C231.43 105.33 221.86 105.66 212 106 C211.67 112.93 211.34 119.86 211 127 C201.1 127.33 191.2 127.66 181 128 C180 115 180 115 180 105 C170.43 105.33 160.86 105.66 151 106 C151 98.08 151 90.16 151 82 C160.9 82 170.8 82 181 82 C181 74.41 181 66.82 181 59 C171.43 59 161.86 59 152 59 C152.03927529 63.99541861 152.03927529 63.99541861 152.09008789 68.99072266 C152.09383423 69.94277588 152.09383423 69.94277588 152.09765625 70.9140625 C152.10289307 71.5529541 152.10812988 72.1918457 152.11352539 72.85009766 C151.96894244 75.58815676 151.45076127 78.29543235 151 81 C141.76 81.66 132.52 82.32 123 83 C123.03958834 90.52432774 123.03958834 90.52432774 123.09008789 98.04858398 C123.09383423 99.44572632 123.09383423 99.44572632 123.09765625 100.87109375 C123.10289307 101.82943115 123.10812988 102.78776855 123.11352539 103.77514648 C123 106 123 106 122 107 C121.85613896 108.32886073 121.77323712 109.66448587 121.71875 111 C121.66267578 112.2065625 121.66267578 112.2065625 121.60546875 113.4375 C121.57066406 114.283125 121.53585937 115.12875 121.5 116 C121.43139491 117.66684971 121.35869777 119.33353774 121.28125 121 C121.25095703 121.7425 121.22066406 122.485 121.18945312 123.25 C121 125 121 125 120 126 C118.00217874 126.15825258 115.99911166 126.25119171 113.99609375 126.31640625 C112.90224365 126.35451416 111.80839355 126.39262207 110.68139648 126.43188477 C108.58066772 126.49653931 108.58066772 126.49653931 106.4375 126.5625 C102.003125 126.706875 97.56875 126.85125 93 127 C93 112.15 93 97.3 93 82 C102.57 82 112.14 82 122 82 C122 74.41 122 66.82 122 59 C112.76 59.33 103.52 59.66 94 60 C93.67 66.93 93.34 73.86 93 81 C92.67 81 92.34 81 92 81 C91.84259818 64.30814281 92.2757172 47.67584086 93 31 C88.8882744 30.97534254 84.77657722 30.95716041 80.66479492 30.94506836 C79.26504772 30.9400292 77.8653058 30.93319784 76.46557617 30.92456055 C74.45754223 30.9124768 72.44947043 30.90730193 70.44140625 30.90234375 C69.23170166 30.89710693 68.02199707 30.89187012 66.77563477 30.88647461 C64.09187983 30.68224715 64.09187983 30.68224715 63 32 C60.70848583 32.08790975 58.41427476 32.10694038 56.12109375 32.09765625 C55.09110008 32.09553383 55.09110008 32.09553383 54.04029846 32.09336853 C51.83932199 32.08775479 49.63844591 32.07520007 47.4375 32.0625 C45.94856917 32.05748676 44.45963676 32.05292355 42.97070312 32.04882812 C39.31373195 32.03863021 35.65697883 32.01905779 32 32 C32 40.58 32 49.16 32 58 C42.23 58 52.46 58 63 58 C63 68 63 68 62 81 C51.77 81 41.54 81 31 81 C31 73.74 31 66.48 31 59 C21.43 59 11.86 59 2 59 C1.34 50.09 0.68 41.18 0 32 C-4.29 31.67 -8.58 31.34 -13 31 C-13 30.67 -13 30.34 -13 30 C-8.71 30 -4.42 30 0 30 C0 20.1 0 10.2 0 0 Z \",fill:\"#676564\",transform:\"translate(273,765)\"})),_path18||(_path18=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.62 0 9.24 0 14 0 C14 163.35 14 326.7 14 495 C-16 495 -16 495 -27.375 485.4375 C-31.8984375 480.05859375 -31.8984375 480.05859375 -33.96191406 477.43725586 C-36.45759465 474.45278302 -39.20499906 472.00489168 -42.21142578 469.54882812 C-44.82829737 467.28273021 -46.97981788 464.673714 -49.21875 462.04296875 C-53.31991567 457.33921953 -57.75604729 452.97849553 -62.5625 449 C-66.48868571 445.70306753 -69.68094393 441.891783 -73 438 C-79.6456164 430.45307939 -86.38063961 423.07968159 -94 416.5 C-105.94207317 406.18639135 -105.94207317 406.18639135 -108 401 C-108 400.01 -108 399.02 -108 398 C-107.13761719 397.97421875 -106.27523437 397.9484375 -105.38671875 397.921875 C-78.61770688 396.67811943 -53.51172149 388.00331344 -35 368 C-19.33567526 349.00179707 -15.26310603 327.94713923 -17.17431641 303.79736328 C-18.22907449 293.8601857 -21.60151826 285.82183002 -26.35546875 277.1328125 C-28 274 -28 274 -28 272 C-18.76 272 -9.52 272 0 272 C0 263.75 0 255.5 0 247 C-9.9 247 -19.8 247 -30 247 C-30 238.75 -30 230.5 -30 222 C-20.1 222 -10.2 222 0 222 C1.00005304 225.00015912 1.11575585 226.97423756 1.09765625 230.10546875 C1.09282227 231.57983398 1.09282227 231.57983398 1.08789062 233.08398438 C1.07532227 234.62022461 1.07532227 234.62022461 1.0625 236.1875 C1.05798828 237.22326172 1.05347656 238.25902344 1.04882812 239.32617188 C1.03704026 241.8841392 1.01910482 244.44207686 1 247 C4.96 247 8.92 247 13 247 C13 221.92 13 196.84 13 171 C9.04 171 5.08 171 1 171 C0 170 0 170 -0.11352539 167.49975586 C-0.10567017 165.87372437 -0.10567017 165.87372437 -0.09765625 164.21484375 C-0.09282227 162.46010742 -0.09282227 162.46010742 -0.08789062 160.66992188 C-0.07532227 158.82237305 -0.07532227 158.82237305 -0.0625 156.9375 C-0.05798828 155.70193359 -0.05347656 154.46636719 -0.04882812 153.19335938 C-0.03699618 150.12888587 -0.01906008 147.06443707 0 144 C4.29 144 8.58 144 13 144 C13 135.09 13 126.18 13 117 C9.04 117 5.08 117 1 117 C1 108.75 1 100.5 1 92 C-9.23 92 -19.46 92 -30 92 C-30 83.09 -30 74.18 -30 65 C-20.1 65 -10.2 65 0 65 C0.33 56.42 0.66 47.84 1 39 C4.63 39 8.26 39 12 39 C12.33 38.67 12.66 38.34 13 38 C9.37 38 5.74 38 2 38 C1.67 33.38 1.34 28.76 1 24 C-5.26342243 27.75805346 -9.57197233 32.29106956 -14.27734375 37.81640625 C-17.6940269 41.73424496 -21.35202323 45.24856538 -25.1875 48.75 C-33.58090279 56.52464594 -41.67402564 64.58642599 -49.75 72.6875 C-50.67829117 73.61858582 -50.67829117 73.61858582 -51.62533569 74.56848145 C-54.46280406 77.41569022 -57.29844707 80.26469846 -60.13183594 83.1159668 C-62.74901875 85.74952939 -65.37461456 88.37461456 -68 91 C-68.79019531 91.80179687 -69.58039062 92.60359375 -70.39453125 93.4296875 C-74.2206918 97.29911642 -78.03605783 101.10354321 -82.1875 104.625 C-86.21648879 108.06317984 -89.61962337 111.93298437 -93 116 C-93 109.91655409 -87.20170671 105.07866057 -83.125 100.9375 C-80.51937475 98.39120588 -77.83924115 95.98219378 -75.0625 93.625 C-73.70335725 92.42226653 -72.34950003 91.21354294 -71 90 C-70.1853125 89.29617188 -69.370625 88.59234375 -68.53125 87.8671875 C-60.35686816 80.02909352 -61.86134341 77.92015109 -61 65 C-81.46 65 -101.92 65 -123 65 C-123 56.75 -123 48.5 -123 40 C-112.77 40 -102.54 40 -92 40 C-92 31.75 -92 23.5 -92 15 C-81.94614806 14.29446653 -72.08150835 13.89498429 -62 14 C-61.67 22.58 -61.34 31.16 -61 40 C-50.44 39.67 -39.88 39.34 -29 39 C-29.33 38.67 -29.66 38.34 -30 38 C-30.08726223 36.21928754 -30.10699041 34.4351686 -30.09765625 32.65234375 C-30.09515869 31.68031006 -30.09266113 30.70827637 -30.09008789 29.70678711 C-30.08098389 28.46292236 -30.07187988 27.21905762 -30.0625 25.9375 C-30.041875 21.998125 -30.02125 18.05875 -30 14 C-20.1 14 -10.2 14 0 14 C0 9.38 0 4.76 0 0 Z \",fill:\"#5D5D5C\",transform:\"translate(760,242)\"})),_path19||(_path19=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30.33 8.25 30.66 16.5 31 25 C40.24 25 49.48 25 59 25 C59 33.58 59 42.16 59 51 C68.9 51 78.8 51 89 51 C89 42.42 89 33.84 89 25 C98.9 25 108.8 25 119 25 C119 33.58 119 42.16 119 51 C128.57 51 138.14 51 148 51 C148 59.58 148 68.16 148 77 C138.43 77 128.86 77 119 77 C119.33 77.99 119.66 78.98 120 80 C120.33 79.67 120.66 79.34 121 79 C127.35242867 77.94861424 133.57400154 77.8803418 140 77.9375 C143.3 77.958125 146.6 77.97875 150 78 C150 86.58 150 95.16 150 104 C159.9 104 169.8 104 180 104 C180 112.25 180 120.5 180 129 C170.1 129 160.2 129 150 129 C150 137.25 150 145.5 150 154 C159.57 154 169.14 154 179 154 C179 170.5 179 187 179 204 C169.43 204 159.86 204 150 204 C149.67 195.42 149.34 186.84 149 178 C139.1 178 129.2 178 119 178 C119 170.08 119 162.16 119 154 C109.1 154 99.2 154 89 154 C89 162.25 89 170.5 89 179 C79.1 178.67 69.2 178.34 59 178 C59 170.41 59 162.82 59 155 C55.37 155 51.74 155 48 155 C44.76578056 154.85883376 41.54237849 154.70101851 38.3125 154.5 C37.50361328 154.45230469 36.69472656 154.40460938 35.86132812 154.35546875 C33.90738006 154.23985052 31.95366186 154.12035761 30 154 C29.97106068 150.37501666 29.95322208 146.75006287 29.9375 143.125 C29.92912109 142.09246094 29.92074219 141.05992187 29.91210938 139.99609375 C29.90727539 138.51689453 29.90727539 138.51689453 29.90234375 137.0078125 C29.89448853 135.64100342 29.89448853 135.64100342 29.88647461 134.24658203 C30 132 30 132 31 130 C34.55910261 129.02259717 38.06221953 128.82120034 41.73828125 128.68359375 C42.70032471 128.64548584 43.66236816 128.60737793 44.65356445 128.56811523 C45.86101318 128.52501221 47.06846191 128.48190918 48.3125 128.4375 C54.0978125 128.2209375 54.0978125 128.2209375 60 128 C60 120.08 60 112.16 60 104 C57.91816406 104.01160156 55.83632813 104.02320313 53.69140625 104.03515625 C51.68253702 104.04210735 49.67366749 104.04902389 47.66479492 104.05493164 C46.26504772 104.0599708 44.8653058 104.06680216 43.46557617 104.07543945 C41.45754223 104.0875232 39.44947043 104.09269807 37.44140625 104.09765625 C36.23170166 104.10289307 35.02199707 104.10812988 33.77563477 104.11352539 C31 104 31 104 30 103 C29.91262355 101.14630389 29.89301847 99.28932459 29.90234375 97.43359375 C29.90484131 96.42095459 29.90733887 95.40831543 29.90991211 94.36499023 C29.91901611 93.06891846 29.92812012 91.77284668 29.9375 90.4375 C29.958125 86.333125 29.97875 82.22875 30 78 C20.1 78 10.2 78 0 78 C0 69.09 0 60.18 0 51 C9.9 51 19.8 51 30 51 C30 50.67 30 50.34 30 50 C30 41.66666667 30 33.33333333 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#737170\",transform:\"translate(8,335)\"})),_path20||(_path20=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C39.6 0 79.2 0 120 0 C120 7.26 120 14.52 120 22 C110.1 22 100.2 22 90 22 C90 30.25 90 38.5 90 47 C87.15326245 48.42336877 84.85384653 48.00758837 81.6796875 47.87890625 C80.42285156 47.83056641 79.16601562 47.78222656 77.87109375 47.73242188 C76.55238281 47.67634766 75.23367188 47.62027344 73.875 47.5625 C72.53517562 47.50927587 71.19533192 47.45653549 69.85546875 47.40429688 C66.5701203 47.27430107 63.28503207 47.13775941 60 47 C59.67 38.42 59.34 29.84 59 21 C45.635 21.495 45.635 21.495 32 22 C30.69524382 24.60951236 30.88698428 26.52701285 30.90234375 29.4453125 C30.90609009 30.8996167 30.90609009 30.8996167 30.90991211 32.38330078 C30.91901611 33.61806152 30.92812012 34.85282227 30.9375 36.125 C30.9684375 42.003125 30.9684375 42.003125 31 48 C40.24 48 49.48 48 59 48 C59 55.59 59 63.18 59 71 C49.43 71.33 39.86 71.66 30 72 C30.33 74.64 30.66 77.28 31 80 C31.06809887 81.42582924 31.10955129 82.85384502 31.09765625 84.28125 C31.09515869 84.91095703 31.09266113 85.54066406 31.09008789 86.18945312 C31.08098389 86.95193359 31.07187988 87.71441406 31.0625 88.5 C31.041875 90.975 31.02125 93.45 31 96 C40.24 96 49.48 96 59 96 C59 102.93 59 109.86 59 117 C68.9 117 78.8 117 89 117 C89 124.59 89 132.18 89 140 C79.1 140.33 69.2 140.66 59 141 C59 148.59 59 156.18 59 164 C49.43 164 39.86 164 30 164 C30 156.41 30 148.82 30 141 C23.86836038 141.03914717 23.86836038 141.03914717 17.73681641 141.09008789 C16.55611572 141.09383423 16.55611572 141.09383423 15.3515625 141.09765625 C14.56604004 141.10289307 13.78051758 141.10812988 12.97119141 141.11352539 C8.63472249 140.94783451 4.31809641 140.43180964 0 140 C0 132.74 0 125.48 0 118 C-14.85 117.505 -14.85 117.505 -30 117 C-30.99 106.605 -30.99 106.605 -32 96 C-40.58 96 -49.16 96 -58 96 C-58 99.96 -58 103.92 -58 108 C-58.33 108 -58.66 108 -59 108 C-59 104.04 -59 100.08 -59 96 C-73.85 95.505 -73.85 95.505 -89 95 C-89 87.41 -89 79.82 -89 72 C-98.9 72 -108.8 72 -119 72 C-119 64.08 -119 56.16 -119 48 C-109.1 48 -99.2 48 -89 48 C-88.67 55.59 -88.34 63.18 -88 71 C-78.76 71 -69.52 71 -60 71 C-59.67 63.41 -59.34 55.82 -59 48 C-49.76 48 -40.52 48 -31 48 C-30.505 49.98 -30.505 49.98 -30 52 C-30 42.1 -30 32.2 -30 22 C-20.43 22 -10.86 22 -1 22 C-1 17.38 -1 12.76 -1 8 C-0.67 5.36 -0.34 2.72 0 0 Z \",fill:\"#706E6D\",transform:\"translate(246,0)\"})),_path21||(_path21=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.25159912 0.00523682 2.50319824 0.01047363 3.79272461 0.01586914 C4.78942421 0.01799156 4.78942421 0.01799156 5.80625916 0.02015686 C7.93590735 0.02577021 10.06545175 0.03832485 12.19506836 0.05102539 C13.63582205 0.05603868 15.07657739 0.06060188 16.51733398 0.06469727 C20.05577938 0.07574394 23.59416375 0.09301747 27.13256836 0.11352539 C27.97127843 14.21184223 28.20106379 28.02582411 27.13256836 42.11352539 C28.44870117 42.10192383 29.76483398 42.09032227 31.12084961 42.07836914 C40.19214888 42.02316154 49.10860131 42.05188221 58.13256836 43.11352539 C58.13256836 49.38352539 58.13256836 55.65352539 58.13256836 62.11352539 C68.36256836 62.11352539 78.59256836 62.11352539 89.13256836 62.11352539 C89.13256836 63.10352539 89.13256836 64.09352539 89.13256836 65.11352539 C99.03256836 65.11352539 108.93256836 65.11352539 119.13256836 65.11352539 C119.46256836 71.71352539 119.79256836 78.31352539 120.13256836 85.11352539 C130.03256836 85.77352539 139.93256836 86.43352539 150.13256836 87.11352539 C150.13256836 95.36352539 150.13256836 103.61352539 150.13256836 112.11352539 C139.90256836 112.11352539 129.67256836 112.11352539 119.13256836 112.11352539 C119.13256836 103.86352539 119.13256836 95.61352539 119.13256836 87.11352539 C109.56256836 87.11352539 99.99256836 87.11352539 90.13256836 87.11352539 C89.80256836 95.69352539 89.47256836 104.27352539 89.13256836 113.11352539 C99.03256836 113.11352539 108.93256836 113.11352539 119.13256836 113.11352539 C119.46256836 119.05352539 119.79256836 124.99352539 120.13256836 131.11352539 C58.75256836 131.11352539 -2.62743164 131.11352539 -65.86743164 131.11352539 C-65.86743164 125.17352539 -65.86743164 119.23352539 -65.86743164 113.11352539 C-75.43743164 113.11352539 -85.00743164 113.11352539 -94.86743164 113.11352539 C-95.50138166 106.77402518 -96.00714958 100.80126249 -95.92993164 94.48852539 C-95.90930664 92.05477539 -95.88868164 89.62102539 -95.86743164 87.11352539 C-105.76743164 87.11352539 -115.66743164 87.11352539 -125.86743164 87.11352539 C-126.21805664 83.66915039 -126.56868164 80.22477539 -126.92993164 76.67602539 C-127.04344971 75.60940674 -127.15696777 74.54278809 -127.27392578 73.44384766 C-127.84931096 67.45795887 -127.74748444 62.06465169 -126.86743164 56.11352539 C-126.53743164 56.11352539 -126.20743164 56.11352539 -125.86743164 56.11352539 C-125.86743164 59.08352539 -125.86743164 62.05352539 -125.86743164 65.11352539 C-124.96387939 65.10828857 -124.06032715 65.10305176 -123.12939453 65.09765625 C-119.78791675 65.08064853 -116.44648472 65.06809206 -113.10498047 65.05859375 C-111.65673092 65.05355438 -110.20848647 65.04672286 -108.76025391 65.03808594 C-106.68268576 65.02600292 -104.60518467 65.02029328 -102.52758789 65.01586914 C-101.27598877 65.01063232 -100.02438965 65.00539551 -98.73486328 65 C-95.86743164 65.11352539 -95.86743164 65.11352539 -94.86743164 66.11352539 C-94.78057561 67.67525284 -94.76040945 69.24081883 -94.76977539 70.80493164 C-94.77227295 71.65514893 -94.77477051 72.50536621 -94.77734375 73.38134766 C-94.78644775 74.46859131 -94.79555176 75.55583496 -94.80493164 76.67602539 C-94.82555664 80.12040039 -94.84618164 83.56477539 -94.86743164 87.11352539 C-84.96743164 87.11352539 -75.06743164 87.11352539 -64.86743164 87.11352539 C-64.86743164 79.85352539 -64.86743164 72.59352539 -64.86743164 65.11352539 C-64.53743164 65.11352539 -64.20743164 65.11352539 -63.86743164 65.11352539 C-63.86743164 72.04352539 -63.86743164 78.97352539 -63.86743164 86.11352539 C-58.10993362 86.07446196 -58.10993362 86.07446196 -52.35253906 86.0234375 C-46.06557345 86.00233345 -40.20274367 86.53758793 -33.86743164 87.11352539 C-33.86743164 78.86352539 -33.86743164 70.61352539 -33.86743164 62.11352539 C-19.51243164 61.61852539 -19.51243164 61.61852539 -4.86743164 61.11352539 C-4.11304147 44.70553908 -3.76820284 28.39479578 -3.90454102 11.9753418 C-3.90877075 11.25960495 -3.91300049 10.5438681 -3.9173584 9.80644226 C-3.92923478 7.8494485 -3.9469785 5.89249289 -3.96508789 3.93554688 C-3.83283281 0.11370564 -3.82623403 0.15148564 0 0 Z \",fill:\"#6E6C6B\",transform:\"translate(640.867431640625,892.886474609375)\"})),_path22||(_path22=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 10.56 1 21.12 1 32 C10.57 32 20.14 32 30 32 C30.495 43.385 30.495 43.385 31 55 C40.9 55 50.8 55 61 55 C60.96056498 48.92720042 60.96056498 48.92720042 60.90991211 42.85449219 C60.90616577 41.71222168 60.90616577 41.71222168 60.90234375 40.546875 C60.89710693 39.77182617 60.89187012 38.99677734 60.88647461 38.19824219 C61 36 61 36 62 32 C71.9 32 81.8 32 92 32 C92 39.92 92 47.84 92 56 C81.77 56 71.54 56 61 56 C61.33 64.25 61.66 72.5 62 81 C62.33 80.67 62.66 80.34 63 80 C65.07262076 79.91232888 67.14820294 79.89304127 69.22265625 79.90234375 C70.48271484 79.90556641 71.74277344 79.90878906 73.04101562 79.91210938 C74.38151109 79.92046597 75.72200588 79.92893093 77.0625 79.9375 C78.40689942 79.9425134 79.7513006 79.94707658 81.09570312 79.95117188 C84.39715433 79.96300503 87.6985826 79.98094114 91 80 C91.33 72.41 91.66 64.82 92 57 C101.9 57 111.8 57 122 57 C121.96076181 51.72052647 121.96076181 51.72052647 121.90991211 46.44116211 C121.90616577 45.43194702 121.90616577 45.43194702 121.90234375 44.40234375 C121.89710693 43.72679443 121.89187012 43.05124512 121.88647461 42.35522461 C122.03767209 39.218446 122.55587748 36.10885765 123 33 C132.9 33 142.8 33 153 33 C146.23812369 40.88885569 146.23812369 40.88885569 143.4140625 43.71875 C142.79273438 44.34136719 142.17140625 44.96398438 141.53125 45.60546875 C140.9021875 46.23066406 140.273125 46.85585938 139.625 47.5 C139.00367188 48.12519531 138.38234375 48.75039062 137.7421875 49.39453125 C134.70995236 52.42050144 131.64151767 55.3406624 128.37890625 58.1171875 C122.02908733 63.60266549 116.22108147 69.67448003 110.3125 75.625 C109.09073054 76.85179732 107.86872695 78.07836153 106.64648438 79.3046875 C104.40260376 81.55666986 102.16008256 83.80998637 99.91918945 86.06494141 C97.28478128 88.71529734 94.64368791 91.35889746 92 94 C91.319375 94.680625 90.63875 95.36125 89.9375 96.0625 C66.03125 119.96875 66.03125 119.96875 63.90844727 122.08935547 C62.34898941 123.65060879 60.79652186 125.21884169 59.24609375 126.7890625 C57.08680177 128.91455687 54.85565673 130.895811 52.5625 132.875 C47.27172982 137.58410418 42.49861712 142.71000649 37.73461914 147.94677734 C37.16348389 148.57148926 36.59234863 149.19620117 36.00390625 149.83984375 C35.24315796 150.68083618 35.24315796 150.68083618 34.46704102 151.53881836 C33 153 33 153 30 155 C30.33 153.68 30.66 152.36 31 151 C30.13375 151.185625 29.2675 151.37125 28.375 151.5625 C24.85027339 152.019409 22.4929704 151.58216173 19 151 C15.87823032 150.74389263 12.75334423 150.58984518 9.625 150.4375 C6.77875 150.293125 3.9325 150.14875 1 150 C1 157.92 1 165.84 1 174 C-9.23 174 -19.46 174 -30 174 C-30 181.92 -30 189.84 -30 198 C-40.23 198 -50.46 198 -61 198 C-61.495 185.625 -61.495 185.625 -62 173 C-71.57 173 -81.14 173 -91 173 C-91 165.08 -91 157.16 -91 149 C-81.1 149 -71.2 149 -61 149 C-61 156.92 -61 164.84 -61 173 C-57.04 173 -53.08 173 -49 173 C-45.74320568 173.13943462 -42.50160213 173.29559195 -39.25 173.5 C-36.5275 173.665 -33.805 173.83 -31 174 C-31 166.08 -31 158.16 -31 150 C-40.57 149.67 -50.14 149.34 -60 149 C-60.66567473 143.00892745 -61.13464838 137.40793813 -61.0625 131.4375 C-61.041875 128.983125 -61.02125 126.52875 -61 124 C-51.1 124 -41.2 124 -31 124 C-31.01160156 121.1021875 -31.02320313 118.204375 -31.03515625 115.21875 C-31.15786434 75.60098923 -31.15786434 75.60098923 -30 56 C-19.95030838 55.02124742 -10.09283664 54.91794442 0 55 C0 47.41 0 39.82 0 32 C-9.9 32 -19.8 32 -30 32 C-30 23.42 -30 14.84 -30 6 C-20.1 6 -10.2 6 0 6 C0 4.02 0 2.04 0 0 Z M43 101 C43 101.33 43 101.66 43 102 C48.94 102 54.88 102 61 102 C61 101.67 61 101.34 61 101 C55.06 101 49.12 101 43 101 Z \",fill:\"#6F6D6B\",transform:\"translate(821,16)\"})),_path23||(_path23=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 29.04 0.66 58.08 1 88 C1.99 88 2.98 88 4 88 C3.34 97.24 2.68 106.48 2 116 C4.31 116 6.62 116 9 116 C9 116.33 9 116.66 9 117 C-9.315 116.505 -9.315 116.505 -28 116 C-28 124.58 -28 133.16 -28 142 C-14.47 142 -0.94 142 13 142 C13 142.33 13 142.66 13 143 C9.37 143 5.74 143 2 143 C2 151.91 2 160.82 2 170 C-7.9 170 -17.8 170 -28 170 C-28 174.62 -28 179.24 -28 184 C-28.33 184 -28.66 184 -29 184 C-29 170.14 -29 156.28 -29 142 C-38.24 142.33 -47.48 142.66 -57 143 C-57.33 156.53 -57.66 170.06 -58 184 C-67.9 184 -77.8 184 -88 184 C-88 179.05 -88 174.1 -88 169 C-107.8 169 -127.6 169 -148 169 C-148 174.28 -148 179.56 -148 185 C-162.19 185 -176.38 185 -191 185 C-191 184.34 -191 183.68 -191 183 C-190.34 183 -189.68 183 -189 183 C-188.73445313 182.40832031 -188.46890625 181.81664062 -188.1953125 181.20703125 C-185.43691178 176.11390574 -180.46361845 172.3648891 -176.125 168.625 C-170.30284832 163.59114739 -164.81190333 158.22163238 -159.875 152.3125 C-155.87921498 147.64920564 -151.3445793 143.58752087 -146.83935547 139.4284668 C-142.65635013 135.56122823 -138.5332139 131.64843562 -134.5 127.625 C-133.6028125 126.73039063 -132.705625 125.83578125 -131.78125 124.9140625 C-129.79224039 122.87503706 -127.93332792 120.76073306 -126.08984375 118.58984375 C-120.73649698 112.42087397 -114.87547778 106.72691492 -109.09399414 100.96362305 C-107.0673702 98.94235732 -105.04614453 96.91580426 -103.02539062 94.88867188 C-97.40609652 89.26716993 -91.81248226 83.70898859 -85.74731445 78.56469727 C-81.5490064 74.80516725 -77.86381916 70.49196322 -74.08789062 66.31640625 C-70.01936834 61.90052239 -65.8117317 58.1256473 -61.01098633 54.51904297 C-58.65472779 52.739191 -56.47846816 50.81832264 -54.3125 48.8125 C-50.96851103 45.75705245 -47.58018731 42.77606193 -44.12158203 39.85253906 C-32.31301502 29.86296015 -21.05716455 19.27353211 -10.24780273 8.21118164 C-2.17789447 0 -2.17789447 0 0 0 Z \",fill:\"#6D6C6B\",transform:\"translate(483,552)\"})),_path24||(_path24=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.6 0 13.2 0 20 0 C20 76.89 20 153.78 20 233 C13.4 233 6.8 233 0 233 C0 240.92 0 248.84 0 257 C-11.25 258.125 -11.25 258.125 -15.3515625 258.09765625 C-16.13869629 258.09515869 -16.92583008 258.09266113 -17.73681641 258.09008789 C-19.16646729 258.07643188 -19.16646729 258.07643188 -20.625 258.0625 C-23.71875 258.041875 -26.8125 258.02125 -30 258 C-30 266.25 -30 274.5 -30 283 C-20.1 283.33 -10.2 283.66 0 284 C0 290.93 0 297.86 0 305 C-3.82818288 306.91409144 -5.71883789 307.33705985 -9.859375 307.6328125 C-11.53193359 307.75849609 -11.53193359 307.75849609 -13.23828125 307.88671875 C-14.39714844 307.96535156 -15.55601562 308.04398438 -16.75 308.125 C-17.92433594 308.21136719 -19.09867188 308.29773438 -20.30859375 308.38671875 C-23.20518881 308.59866473 -26.10253344 308.80032122 -29 309 C-29.33 315.93 -29.66 322.86 -30 330 C-34.43754015 330.02689418 -38.8749184 330.04678777 -43.3125 330.0625 C-44.57513672 330.07087891 -45.83777344 330.07925781 -47.13867188 330.08789062 C-48.95141602 330.09272461 -48.95141602 330.09272461 -50.80078125 330.09765625 C-51.91622314 330.10289307 -53.03166504 330.10812988 -54.1809082 330.11352539 C-57 330 -57 330 -60 329 C-60 322.07 -60 315.14 -60 308 C-70.23 308.33 -80.46 308.66 -91 309 C-91 308.34 -91 307.68 -91 307 C-81.76 306.34 -72.52 305.68 -63 305 C-61.90409873 300.61639491 -62.01005538 296.93994736 -62.16015625 292.4609375 C-62 290 -62 290 -60 288 C-60 294.27 -60 300.54 -60 307 C-58.33710937 306.98839844 -56.67421875 306.97679687 -54.9609375 306.96484375 C-52.76562613 306.95546208 -50.57031353 306.94636228 -48.375 306.9375 C-47.28058594 306.92912109 -46.18617188 306.92074219 -45.05859375 306.91210938 C-43.46337891 306.90727539 -43.46337891 306.90727539 -41.8359375 306.90234375 C-40.37486572 306.89448853 -40.37486572 306.89448853 -38.88427734 306.88647461 C-36 307 -36 307 -30 308 C-30 300.08 -30 292.16 -30 284 C-39.9 284 -49.8 284 -60 284 C-60 275.42 -60 266.84 -60 258 C-63.96 257.67 -67.92 257.34 -72 257 C-72 256.67 -72 256.34 -72 256 C-58.14 256.33 -44.28 256.66 -30 257 C-29.67 248.75 -29.34 240.5 -29 232 C-19.43 232 -9.86 232 0 232 C0 223.75 0 215.5 0 207 C-9.57 207 -19.14 207 -29 207 C-29 198.75 -29 190.5 -29 182 C-19.43 182 -9.86 182 0 182 C0 173.09 0 164.18 0 155 C-2.64 155.33 -5.28 155.66 -8 156 C-9.79052829 156.07167662 -11.58307264 156.1088558 -13.375 156.09765625 C-14.20773437 156.09515869 -15.04046875 156.09266113 -15.8984375 156.09008789 C-16.92195312 156.08098389 -17.94546875 156.07187988 -19 156.0625 C-22.3 156.041875 -25.6 156.02125 -29 156 C-29.33 164.58 -29.66 173.16 -30 182 C-39.9 182 -49.8 182 -60 182 C-60 173.09 -60 164.18 -60 155 C-49.77 155 -39.54 155 -29 155 C-29 146.42 -29 137.84 -29 129 C-19.43 129 -9.86 129 0 129 C0 120.75 0 112.5 0 104 C-9.9 104 -19.8 104 -30 104 C-30 95.09 -30 86.18 -30 77 C-35.38354993 77.32506574 -35.38354993 77.32506574 -40.76660156 77.65820312 C-47.21386321 78.03169966 -53.50523525 78 -60 78 C-60 86.25 -60 94.5 -60 103 C-59.34 103.33 -58.68 103.66 -58 104 C-58.66 104.66 -59.32 105.32 -60 106 C-60 105.34 -60 104.68 -60 104 C-74.85 103.505 -74.85 103.505 -90 103 C-90 94.42 -90 85.84 -90 77 C-80.1 77 -70.2 77 -60 77 C-60 68.42 -60 59.84 -60 51 C-50.1 51 -40.2 51 -30 51 C-30 42.42 -30 33.84 -30 25 C-39.9 25 -49.8 25 -60 25 C-60 17.08 -60 9.16 -60 1 C-50.1 1 -40.2 1 -30 1 C-29.505 12.385 -29.505 12.385 -29 24 C-19.43 24.33 -9.86 24.66 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#636160\",transform:\"translate(1004,539)\"})),_path25||(_path25=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.94 0 11.88 0 18 0 C18 8.58 18 17.16 18 26 C12.39 25.67 6.78 25.34 1 25 C1 33.91 1 42.82 1 52 C4.63 52 8.26 52 12 52 C13.65 52.33 15.3 52.66 17 53 C17.495 65.375 17.495 65.375 18 78 C12.39 78 6.78 78 1 78 C1 86.91 1 95.82 1 105 C6.28 105 11.56 105 17 105 C17 96.42 17 87.84 17 79 C21.48461792 78.3593403 25.25469372 77.87260934 29.6796875 77.8671875 C30.6903125 77.86589844 31.7009375 77.86460937 32.7421875 77.86328125 C33.77601563 77.86714844 34.80984375 77.87101563 35.875 77.875 C37.46054687 77.86919922 37.46054687 77.86919922 39.078125 77.86328125 C40.08101562 77.86457031 41.08390625 77.86585938 42.1171875 77.8671875 C43.03097168 77.86831543 43.94475586 77.86944336 44.88623047 77.87060547 C47 78 47 78 48 79 C48.08748207 80.92667507 48.10697334 82.85651861 48.09765625 84.78515625 C48.09515869 85.83840088 48.09266113 86.89164551 48.09008789 87.97680664 C48.08098389 89.32508545 48.07187988 90.67336426 48.0625 92.0625 C48.041875 96.331875 48.02125 100.60125 48 105 C38.1 105 28.2 105 18 105 C18 113.58 18 122.16 18 131 C27.57 131 37.14 131 47 131 C47.495 142.88 47.495 142.88 48 155 C57.9 155 67.8 155 78 155 C78 163.25 78 171.5 78 180 C68.1 180.33 58.2 180.66 48 181 C47.67 189.25 47.34 197.5 47 206 C40.07 206 33.14 206 26 206 C30.43630425 211.28580932 34.98695014 215.90225204 40.27734375 220.3359375 C40.84582031 220.88507813 41.41429687 221.43421875 42 222 C42 222.66 42 223.32 42 224 C42.61875 224.309375 43.2375 224.61875 43.875 224.9375 C45.25 225.625 46.625 226.3125 48 227 C48 220.73 48 214.46 48 208 C58.23 208 68.46 208 79 208 C79 215.26 79 222.52 79 230 C81.15402344 229.98839844 83.30804687 229.97679687 85.52734375 229.96484375 C87.60571139 229.95705263 89.68407743 229.95097619 91.76245117 229.94506836 C93.21070073 229.94002899 94.65894517 229.93319747 96.10717773 229.92456055 C98.18474588 229.91247753 100.26224697 229.90676789 102.33984375 229.90234375 C103.59144287 229.89710693 104.84304199 229.89187012 106.13256836 229.88647461 C109 230 109 230 110 231 C112.21855264 231.08783542 114.43988496 231.10694609 116.66015625 231.09765625 C117.32462265 231.0962413 117.98908905 231.09482635 118.6736908 231.09336853 C120.80333899 231.08775518 122.93288339 231.07520054 125.0625 231.0625 C126.50325369 231.05748671 127.94400903 231.05292351 129.38476562 231.04882812 C132.92324958 231.03863076 136.46150813 231.0190583 140 231 C140 238.59 140 246.18 140 254 C137.12861328 254.27263672 137.12861328 254.27263672 134.19921875 254.55078125 C131.69524211 254.80399237 129.19133953 255.05793665 126.6875 255.3125 C124.79354492 255.48942383 124.79354492 255.48942383 122.86132812 255.66992188 C121.65283203 255.79560547 120.44433594 255.92128906 119.19921875 256.05078125 C117.52605591 256.21574097 117.52605591 256.21574097 115.8190918 256.3840332 C112.64926245 256.81086923 112.64926245 256.81086923 110 260 C109.67 257.03 109.34 254.06 109 251 C107.91203125 251.01160156 106.8240625 251.02320313 105.703125 251.03515625 C82.41562728 251.20781364 82.41562728 251.20781364 78 249 C78 243.06 78 237.12 78 231 C69.42 231.33 60.84 231.66 52 232 C54.206875 234.206875 56.41375 236.41375 58.6875 238.6875 C62.44921875 242.44921875 62.44921875 242.44921875 64.2956543 244.29785156 C65.73348397 245.73382756 67.17844275 247.16266003 68.625 248.58984375 C70.79409872 250.79105084 72.87967439 253.04925492 74.94287109 255.34960938 C79.00842315 259.87751833 83.09663634 264.16456388 87.76171875 268.0859375 C90.80732105 270.69037926 93.74468735 273.40551477 96.6875 276.125 C97.2345459 276.62837891 97.7815918 277.13175781 98.34521484 277.65039062 C104.14979852 283.01499216 109.51325764 288.64983135 114.71875 294.59765625 C117.00049952 297.00052604 119.40513106 298.94572875 122 301 C123.67953472 302.65369848 125.34409051 304.32264515 127 306 C127.95266133 306.95871336 128.90571766 307.91703435 129.85913086 308.875 C130.35992661 309.37902344 130.86072235 309.88304687 131.37669373 310.40234375 C133.6345841 312.67374923 135.89525519 314.9423793 138.15600586 317.2109375 C139.34277757 318.402751 140.52865199 319.59545867 141.71362305 320.7890625 C143.44079714 322.52844869 145.1712545 324.26451128 146.90234375 326 C147.42440903 326.52722656 147.9464743 327.05445313 148.48435974 327.59765625 C151.83665561 330.95045455 155.33875798 333.98821168 159 337 C160.11907392 338.21810701 161.20733773 339.4658791 162.25 340.75 C164.81035567 343.7491151 167.47410501 346.39896319 170.4375 349 C176.09854279 353.96981809 181.3633678 359.3086778 186.64233398 364.6796875 C187.30692627 365.35257813 187.97151855 366.02546875 188.65625 366.71875 C189.55053711 367.63043945 189.55053711 367.63043945 190.46289062 368.56054688 C191.95809649 370.09777728 191.95809649 370.09777728 194 371 C194 371.66 194 372.32 194 373 C194.5878125 373.25136719 195.175625 373.50273438 195.78125 373.76171875 C198.27682175 375.15449383 199.66530515 376.63171498 201.5 378.8125 C202.09941406 379.52019531 202.69882812 380.22789062 203.31640625 380.95703125 C205.23559869 383.2858889 207.14207754 385.62185925 209 388 C205.19283739 386.44893375 202.81196719 383.88519315 200 381 C197.4000945 378.37076554 194.79351549 375.74817646 192.1875 373.125 C191.51396484 372.44308594 190.84042969 371.76117187 190.14648438 371.05859375 C186.20703539 367.10029573 182.16043528 363.35557585 177.9309082 359.71044922 C174.8115807 356.94726696 171.91383878 353.97659077 169 351 C164.17404283 346.11709939 159.29814962 341.37673229 154 337 C154 337.66 154 338.32 154 339 C149.04726253 340.98109499 145.23859642 341.08658837 140 341 C140.00523682 341.55461914 140.01047363 342.10923828 140.01586914 342.68066406 C140.03671031 345.20376443 140.04968282 347.72684664 140.0625 350.25 C140.07087891 351.12269531 140.07925781 351.99539063 140.08789062 352.89453125 C140.09111328 353.73886719 140.09433594 354.58320312 140.09765625 355.453125 C140.10289307 356.22817383 140.10812988 357.00322266 140.11352539 357.80175781 C140 360 140 360 139 364 C129.1 364 119.2 364 109 364 C109 372.25 109 380.5 109 389 C99.1 389 89.2 389 79 389 C79 380.42 79 371.84 79 363 C88.9 363 98.8 363 109 363 C109 355.74 109 348.48 109 341 C107.25332031 341.01160156 105.50664063 341.02320313 103.70703125 341.03515625 C101.40885524 341.04453656 99.11067807 341.0536365 96.8125 341.0625 C95.66201172 341.07087891 94.51152344 341.07925781 93.32617188 341.08789062 C92.21435547 341.09111328 91.10253906 341.09433594 89.95703125 341.09765625 C88.93585205 341.10289307 87.91467285 341.10812988 86.86254883 341.11352539 C84 341 84 341 79 340 C79 333.4 79 326.8 79 320 C81.15402344 319.87882812 83.30804687 319.75765625 85.52734375 319.6328125 C87.6058613 319.50930858 89.68415275 319.38250294 91.76245117 319.25537109 C93.21049005 319.16857653 94.65873998 319.0852332 96.10717773 319.00537109 C98.1853812 318.89019184 100.2625174 318.76274871 102.33984375 318.6328125 C104.21724243 318.52283936 104.21724243 318.52283936 106.13256836 318.41064453 C107.0788208 318.27513184 108.02507324 318.13961914 109 318 C110.2451342 315.5097316 109.92184357 314.36665832 109.5625 311.625 C109.18212413 308.65037523 108.99101934 306.08248901 109.31640625 303.09375 C109.81226954 298.32341963 109.88063854 295.20804589 106.97875977 291.22729492 C105.62995728 289.83667847 105.62995728 289.83667847 104.25390625 288.41796875 C103.76383591 287.90615555 103.27376556 287.39434235 102.7688446 286.86701965 C101.19330777 285.23029179 99.59848393 283.61429855 98 282 C96.95955482 280.93464126 95.91951331 279.86888814 94.87988281 278.80273438 C92.24765152 276.11601765 89.59331789 273.45243137 86.9284668 270.7980957 C85.29943428 269.17447771 83.67589272 267.54550397 82.05273438 265.91601562 C77.10217799 260.96296786 72.10293595 256.13964025 66.77758789 251.58618164 C63.65740553 248.80197277 60.87844906 245.71143607 58.0625 242.625 C52.50359813 236.61854437 46.84480793 230.72938657 41.0625 224.9375 C40.03491577 223.90326904 40.03491577 223.90326904 38.98657227 222.84814453 C35.03373482 218.90632845 30.95511689 215.18510369 26.72973633 211.53833008 C24.74996221 209.77763047 23.00474939 207.91251942 21.3125 205.875 C16.43891895 200.16001595 11.0487962 195.22298342 5.40234375 190.28125 C3.00338192 188.00321145 1.05387462 185.58713213 -1 183 C-2.21834517 181.86100084 -3.46829724 180.75470292 -4.75 179.6875 C-9.06127647 176.00832798 -13.04181655 172.0529272 -17 168 C-17 169.32 -17 170.64 -17 172 C-16.34 172 -15.68 172 -15 172 C-14 174 -14 174 -14 180 C-23.57 180 -33.14 180 -43 180 C-43 171.75 -43 163.5 -43 155 C-39.7 154.67 -36.4 154.34 -33 154 C-32.67 152.02 -32.34 150.04 -32 148 C-30.81664062 147.96261719 -29.63328125 147.92523437 -28.4140625 147.88671875 C-14.72296719 147.86155363 -14.72296719 147.86155363 -2.40944195 142.7999754 C-0.42444013 140.26496185 -0.61549258 138.48583069 -0.60127258 135.28633118 C-0.58873444 134.09581146 -0.57619629 132.90529175 -0.5632782 131.67869568 C-0.56471329 130.37102737 -0.56614838 129.06335907 -0.56762695 127.71606445 C-0.5586118 126.32646816 -0.54828518 124.93687985 -0.53674316 123.54730225 C-0.50911775 119.77278601 -0.4998812 115.99842042 -0.49388909 112.22381616 C-0.48451977 108.27994305 -0.45831761 104.33618312 -0.43388367 100.39237976 C-0.39017516 92.92327456 -0.36165499 85.45419126 -0.33856028 77.98499697 C-0.31153187 69.48200127 -0.26761896 60.97911918 -0.22227156 52.47620451 C-0.12936299 34.98419267 -0.0583097 17.49216017 0 0 Z \",fill:\"#61605F\",transform:\"translate(804,616)\"})),_path26||(_path26=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.16781006 0.00523682 2.33562012 0.01047363 3.53881836 0.01586914 C4.79887695 0.0190918 6.05893555 0.02231445 7.35717773 0.02563477 C8.6976732 0.03399136 10.03816799 0.04245632 11.37866211 0.05102539 C12.72306153 0.05603879 14.06746271 0.06060197 15.41186523 0.06469727 C18.71331644 0.07653042 22.01474471 0.09446653 25.31616211 0.11352539 C25.31616211 8.03352539 25.31616211 15.95352539 25.31616211 24.11352539 C15.74616211 24.11352539 6.17616211 24.11352539 -3.68383789 24.11352539 C-3.68383789 32.36352539 -3.68383789 40.61352539 -3.68383789 49.11352539 C-3.35383789 48.78352539 -3.02383789 48.45352539 -2.68383789 48.11352539 C-0.53824962 48.02576934 1.61020632 48.0065732 3.75756836 48.01586914 C5.06274414 48.0190918 6.36791992 48.02231445 7.71264648 48.02563477 C9.10131901 48.03399138 10.48999088 48.04245634 11.87866211 48.05102539 C13.27123867 48.05603873 14.66381692 48.06060193 16.05639648 48.06469727 C19.47633662 48.07653097 22.89625461 48.09446708 26.31616211 48.11352539 C26.31616211 40.52352539 26.31616211 32.93352539 26.31616211 25.11352539 C30.27311508 24.3221348 33.31107221 23.99555057 37.27319336 24.01586914 C38.38500977 24.0190918 39.49682617 24.02231445 40.64233398 24.02563477 C41.79282227 24.03401367 42.94331055 24.04239258 44.12866211 24.05102539 C45.29848633 24.05553711 46.46831055 24.06004883 47.67358398 24.06469727 C50.55446534 24.07645597 53.4353203 24.09439065 56.31616211 24.11352539 C56.31616211 32.03352539 56.31616211 39.95352539 56.31616211 48.11352539 C66.54616211 48.11352539 76.77616211 48.11352539 87.31616211 48.11352539 C87.64616211 55.04352539 87.97616211 61.97352539 88.31616211 69.11352539 C98.21616211 69.11352539 108.11616211 69.11352539 118.31616211 69.11352539 C118.31616211 76.70352539 118.31616211 84.29352539 118.31616211 92.11352539 C108.74616211 92.44352539 99.17616211 92.77352539 89.31616211 93.11352539 C88.0855579 95.5747338 88.11038981 97.37129405 87.99975586 100.12133789 C87.96164795 101.00966309 87.92354004 101.89798828 87.88427734 102.81323242 C87.84117432 103.9435791 87.79807129 105.07392578 87.75366211 106.23852539 C87.60928711 109.82727539 87.46491211 113.41602539 87.31616211 117.11352539 C77.74616211 117.11352539 68.17616211 117.11352539 58.31616211 117.11352539 C57.98616211 122.06352539 57.65616211 127.01352539 57.31616211 132.11352539 C56.98616211 132.11352539 56.65616211 132.11352539 56.31616211 132.11352539 C56.31616211 127.16352539 56.31616211 122.21352539 56.31616211 117.11352539 C46.41616211 117.11352539 36.51616211 117.11352539 26.31616211 117.11352539 C26.31616211 125.03352539 26.31616211 132.95352539 26.31616211 141.11352539 C16.41616211 141.11352539 6.51616211 141.11352539 -3.68383789 141.11352539 C-3.68383789 133.52352539 -3.68383789 125.93352539 -3.68383789 118.11352539 C-5.83786133 118.05293945 -7.99188477 117.99235352 -10.21118164 117.92993164 C-12.28958799 117.86818298 -14.36793764 117.80477848 -16.44628906 117.74121094 C-17.89448029 117.69780909 -19.34272443 117.65613795 -20.79101562 117.61621094 C-22.86873348 117.55863477 -24.94618362 117.49490511 -27.02368164 117.42993164 C-28.27528076 117.39327393 -29.52687988 117.35661621 -30.81640625 117.31884766 C-33.68383789 117.11352539 -33.68383789 117.11352539 -34.68383789 116.11352539 C-34.84124395 114.40788761 -34.93477181 112.69625295 -35.00024414 110.98461914 C-35.05740601 109.58747681 -35.05740601 109.58747681 -35.11572266 108.16210938 C-35.1803772 106.3746228 -35.1803772 106.3746228 -35.24633789 104.55102539 C-35.39071289 100.77665039 -35.53508789 97.00227539 -35.68383789 93.11352539 C-45.25383789 92.78352539 -54.82383789 92.45352539 -64.68383789 92.11352539 C-64.35383789 77.92352539 -64.02383789 63.73352539 -63.68383789 49.11352539 C-57.08055924 48.51322733 -50.76603873 47.94980656 -44.18383789 47.98852539 C-43.49547852 47.9846582 -42.80711914 47.98079102 -42.09790039 47.97680664 C-39.01680382 47.98280099 -36.62965852 48.13158518 -33.68383789 49.11352539 C-33.68383789 41.19352539 -33.68383789 33.27352539 -33.68383789 25.11352539 C-23.55883789 23.98852539 -23.55883789 23.98852539 -19.42993164 24.01586914 C-18.5565918 24.0190918 -17.68325195 24.02231445 -16.78344727 24.02563477 C-15.46570313 24.03820312 -15.46570313 24.03820312 -14.12133789 24.05102539 C-13.20803711 24.05553711 -12.29473633 24.06004883 -11.35375977 24.06469727 C-9.13038051 24.07633799 -6.90714668 24.09268688 -4.68383789 24.11352539 C-4.68891357 23.47358643 -4.69398926 22.83364746 -4.69921875 22.17431641 C-4.72234322 17.11100155 -4.63771875 12.10284914 -4.24633789 7.05102539 C-4.16512695 5.94629883 -4.08391602 4.84157227 -4.00024414 3.70336914 C-3.57077115 0.1880532 -3.56007468 0.1505899 0 0 Z \",fill:\"#706E6D\",transform:\"translate(488.683837890625,47.886474609375)\"})),_path27||(_path27=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.1875 0.98046875 2.1875 0.98046875 3.1875 2.98046875 C3.5175 2.32046875 3.8475 1.66046875 4.1875 0.98046875 C10.71734994 -0.05881668 17.15149869 -0.14446369 23.75 -0.08203125 C26.864375 -0.06140625 29.97875 -0.04078125 33.1875 -0.01953125 C33.1875 7.90046875 33.1875 15.82046875 33.1875 23.98046875 C35.34152344 23.96886719 37.49554687 23.95726562 39.71484375 23.9453125 C41.79321139 23.93752138 43.87157743 23.93144494 45.94995117 23.92553711 C47.39820073 23.92049774 48.84644517 23.91366622 50.29467773 23.9050293 C52.37224588 23.89294628 54.44974697 23.88723664 56.52734375 23.8828125 C57.77894287 23.87757568 59.03054199 23.87233887 60.32006836 23.86694336 C63.1875 23.98046875 63.1875 23.98046875 64.1875 24.98046875 C64.27463831 26.68819233 64.29450007 28.39945524 64.28515625 30.109375 C64.28265869 31.04080322 64.28016113 31.97223145 64.27758789 32.93188477 C64.26848389 34.12354248 64.25937988 35.3152002 64.25 36.54296875 C64.229375 40.31734375 64.20875 44.09171875 64.1875 47.98046875 C73.7575 47.98046875 83.3275 47.98046875 93.1875 47.98046875 C93.1875 55.57046875 93.1875 63.16046875 93.1875 70.98046875 C89.07572073 71.00338269 84.96410342 71.02330826 80.85229492 71.03540039 C79.45254772 71.04043955 78.0528058 71.04727091 76.65307617 71.0559082 C74.64504223 71.06799195 72.63697043 71.07316682 70.62890625 71.078125 C69.41920166 71.08336182 68.20949707 71.08859863 66.96313477 71.09399414 C64.1875 70.98046875 64.1875 70.98046875 63.1875 69.98046875 C63.10049658 68.34573993 63.08048937 66.7073282 63.08984375 65.0703125 C63.09234131 64.17948975 63.09483887 63.28866699 63.09741211 62.37084961 C63.10651611 61.23139893 63.11562012 60.09194824 63.125 58.91796875 C63.145625 55.30859375 63.16625 51.69921875 63.1875 47.98046875 C53.2875 47.98046875 43.3875 47.98046875 33.1875 47.98046875 C33.1875 55.90046875 33.1875 63.82046875 33.1875 71.98046875 C43.0875 71.98046875 52.9875 71.98046875 63.1875 71.98046875 C63.1875 78.91046875 63.1875 85.84046875 63.1875 92.98046875 C53.6175 93.31046875 44.0475 93.64046875 34.1875 93.98046875 C33.5275 108.83046875 32.8675 123.68046875 32.1875 138.98046875 C24.32769696 140.10329776 24.32769696 140.10329776 20.0703125 140.04296875 C19.14202637 140.03458984 18.21374023 140.02621094 17.25732422 140.01757812 C16.28553223 140.00533203 15.31374023 139.99308594 14.3125 139.98046875 C6.51390288 139.9259591 -1.20476825 140.08168786 -8.98364258 140.62280273 C-15.26541012 141.04919496 -21.51950549 141.07896779 -27.8125 140.98046875 C-28.1425 141.64046875 -28.4725 142.30046875 -28.8125 142.98046875 C-28.8125 141.99046875 -28.8125 141.00046875 -28.8125 139.98046875 C-29.91790382 139.98379967 -29.91790382 139.98379967 -31.04563904 139.98719788 C-37.97662769 140.00720078 -44.90761204 140.02244288 -51.83862209 140.03228092 C-55.40227422 140.0375087 -58.96590257 140.04460444 -62.52954102 140.0559082 C-66.62256097 140.06881051 -70.7155558 140.07369781 -74.80859375 140.078125 C-76.73668129 140.08586693 -76.73668129 140.08586693 -78.70372009 140.09376526 C-80.47544334 140.09387856 -80.47544334 140.09387856 -82.28295898 140.09399414 C-83.32886703 140.09621475 -84.37477509 140.09843536 -85.45237732 140.10072327 C-87.8125 139.98046875 -87.8125 139.98046875 -88.8125 138.98046875 C-88.91263596 137.47011623 -88.94331294 135.9550733 -88.9453125 134.44140625 C-88.94724609 133.47847656 -88.94917969 132.51554688 -88.95117188 131.5234375 C-88.94666016 130.47800781 -88.94214844 129.43257812 -88.9375 128.35546875 C-88.93556641 127.29199219 -88.93363281 126.22851562 -88.93164062 125.1328125 C-88.8729674 114.0631312 -88.36526679 103.03580462 -87.8125 91.98046875 C-78.2425 91.98046875 -68.6725 91.98046875 -58.8125 91.98046875 C-58.8125 100.23046875 -58.8125 108.48046875 -58.8125 116.98046875 C-48.5825 116.98046875 -38.3525 116.98046875 -27.8125 116.98046875 C-27.8125 108.73046875 -27.8125 100.48046875 -27.8125 91.98046875 C-28.1425 92.31046875 -28.4725 92.64046875 -28.8125 92.98046875 C-38.49502823 93.46890489 -48.16354337 92.70869189 -57.8125 91.98046875 C-57.8125 85.05046875 -57.8125 78.12046875 -57.8125 70.98046875 C-48.2425 70.98046875 -38.6725 70.98046875 -28.8125 70.98046875 C-28.8125 63.06046875 -28.8125 55.14046875 -28.8125 46.98046875 C-34.4225 46.98046875 -40.0325 46.98046875 -45.8125 46.98046875 C-46.1425 45.99046875 -46.4725 45.00046875 -46.8125 43.98046875 C-46.09964844 43.27921875 -45.38679687 42.57796875 -44.65234375 41.85546875 C-38.3394994 35.64180716 -38.3394994 35.64180716 -32.4375 29.04296875 C-28.94303248 24.94944966 -25.00256297 21.37753637 -21.01025391 17.78271484 C-17.98355212 15.04195969 -15.06897678 12.24794084 -12.2578125 9.28515625 C-11.68047363 8.68147217 -11.10313477 8.07778809 -10.50830078 7.45581055 C-9.3973419 6.28455343 -8.2987557 5.10140595 -7.21435547 3.90551758 C-3.46635294 -0.0240719 -3.46635294 -0.0240719 0 0 Z \",fill:\"#7C7978\",transform:\"translate(910.8125,117.01953125)\"})),_path28||(_path28=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 1.65 1 3.3 1 5 C1.80195801 4.75552124 1.80195801 4.75552124 2.62011719 4.50610352 C5.4937985 3.8949893 8.13965754 3.8879395 11.078125 3.90234375 C12.12387695 3.90484131 13.16962891 3.90733887 14.24707031 3.90991211 C16.22852051 3.92356812 16.22852051 3.92356812 18.25 3.9375 C22.4575 3.958125 26.665 3.97875 31 4 C30.67 12.58 30.34 21.16 30 30 C20.43 30 10.86 30 1 30 C0.145845 21.45844999 -0.07765697 13.5422663 0 5 C-9.57 5 -19.14 5 -29 5 C-29 12.92 -29 20.84 -29 29 C-23.06 29 -17.12 29 -11 29 C-11 29.33 -11 29.66 -11 30 C-16.28 30 -21.56 30 -27 30 C-27.33 37.59 -27.66 45.18 -28 53 C-28.33 53 -28.66 53 -29 53 C-29 45.41 -29 37.82 -29 30 C-38.9 30 -48.8 30 -59 30 C-58.855625 33.939375 -58.71125 37.87875 -58.5625 41.9375 C-58.51939697 43.18136475 -58.47629395 44.42522949 -58.43188477 45.70678711 C-58.39377686 46.6788208 -58.35566895 47.65085449 -58.31640625 48.65234375 C-58.26141968 50.15269165 -58.26141968 50.15269165 -58.20532227 51.68334961 C-58.25328159 53.96069188 -58.25328159 53.96069188 -57 55 C-54.9291528 55.1584265 -52.85321971 55.25124422 -50.77734375 55.31640625 C-48.88725586 55.37924805 -48.88725586 55.37924805 -46.95898438 55.44335938 C-45.61849264 55.48317596 -44.2779978 55.52288814 -42.9375 55.5625 C-41.59308477 55.60568042 -40.2486834 55.64929456 -38.90429688 55.69335938 C-35.60299987 55.79985283 -32.30151421 55.9004675 -29 56 C-28.67 64.58 -28.34 73.16 -28 82 C-18.43 82 -8.86 82 1 82 C1 90.58 1 99.16 1 108 C10.57 108 20.14 108 30 108 C30 116.58 30 125.16 30 134 C20.1 134 10.2 134 0 134 C0 125.42 0 116.84 0 108 C-9.24 108 -18.48 108 -28 108 C-28.83378093 104.66487626 -29.11814364 102.37555768 -29.09765625 99.015625 C-29.09515869 98.17290039 -29.09266113 97.33017578 -29.09008789 96.46191406 C-29.08098389 95.40198242 -29.07187988 94.34205078 -29.0625 93.25 C-29.041875 89.8675 -29.02125 86.485 -29 83 C-38.9 83 -48.8 83 -59 83 C-59 91.25 -59 99.5 -59 108 C-49.1 108 -39.2 108 -29 108 C-28.835 112.063125 -28.67 116.12625 -28.5 120.3125 C-28.42168945 122.22929565 -28.42168945 122.22929565 -28.34179688 124.18481445 C-28.30119141 125.1924585 -28.26058594 126.20010254 -28.21875 127.23828125 C-28.17685547 128.26993408 -28.13496094 129.30158691 -28.09179688 130.36450195 C-28.02639796 132.24211189 -28 134.12125145 -28 136 C-28.33 135.67 -28.66 135.34 -29 135 C-31.21687994 134.84126045 -33.43855298 134.74866163 -35.66015625 134.68359375 C-36.65685585 134.6524221 -36.65685585 134.6524221 -37.6736908 134.62062073 C-39.80318543 134.55506342 -41.93280668 134.49621215 -44.0625 134.4375 C-45.50326847 134.39432061 -46.94402399 134.35070651 -48.38476562 134.30664062 C-51.92304903 134.19855473 -55.46142397 134.09952907 -59 134 C-59 142.91 -59 151.82 -59 161 C-49.1 161 -39.2 161 -29 161 C-28.505 173.375 -28.505 173.375 -28 186 C-18.43 186.33 -8.86 186.66 1 187 C1 194.92 1 202.84 1 211 C2.32 211.33 3.64 211.66 5 212 C-11.335 212.495 -11.335 212.495 -28 213 C-28.33 220.92 -28.66 228.84 -29 237 C-23.57160005 236.96097135 -23.57160005 236.96097135 -18.14331055 236.90991211 C-11.97161965 236.88799911 -6.22592858 237.43400649 0 238 C0 245.59 0 253.18 0 261 C6.50578175 260.96077909 6.50578175 260.96077909 13.01147461 260.90991211 C14.25682983 260.90616577 14.25682983 260.90616577 15.52734375 260.90234375 C16.77632446 260.89448853 16.77632446 260.89448853 18.05053711 260.88647461 C22.04798822 261.04033727 26.02405646 261.5582285 30 262 C30 253.75 30 245.5 30 237 C39.9 237 49.8 237 60 237 C60 244.92 60 252.84 60 261 C50.43 261.66 40.86 262.32 31 263 C30.67 270.92 30.34 278.84 30 287 C20.43 287 10.86 287 1 287 C0.27412466 283.37062331 -0.12079859 280.72378217 -0.09765625 277.13671875 C-0.09515869 276.33709717 -0.09266113 275.53747559 -0.09008789 274.71362305 C-0.08098389 273.71500244 -0.07187988 272.71638184 -0.0625 271.6875 C-0.041875 268.490625 -0.02125 265.29375 0 262 C-9.24 262 -18.48 262 -28 262 C-28.8223186 253.77681402 -29.08051402 246.21243014 -29 238 C-42.365 238.495 -42.365 238.495 -56 239 C-55.67 243.95 -55.34 248.9 -55 254 C-52.69 254.33 -50.38 254.66 -48 255 C-45.0625 256.0625 -45.0625 256.0625 -43 257 C-42.75 263.625 -42.75 263.625 -45 267 C-46.32 267 -47.64 267 -49 267 C-49 264.69 -49 262.38 -49 260 C-50.98 259.67 -52.96 259.34 -55 259 C-54.96037267 264.29905129 -54.96037267 264.29905129 -52.375 268.5 C-48.48460778 269.31902994 -44.74360984 269.92992525 -41.125 268 C-39.32756466 264.8045594 -39.29797286 261.63526893 -39 258 C-38.01 257.67 -37.02 257.34 -36 257 C-35.67 257.99 -35.34 258.98 -35 260 C-33.02 260.33 -31.04 260.66 -29 261 C-29 269.58 -29 278.16 -29 287 C-38.9 287.33 -48.8 287.66 -59 288 C-59 295.59 -59 303.18 -59 311 C-61.64 311.33 -64.28 311.66 -67 312 C-67 218.61 -67 125.22 -67 29 C-64.69 29.33 -62.38 29.66 -60 30 C-59.67 21.42 -59.34 12.84 -59 4 C-49.1 4 -39.2 4 -29 4 C-28.67 3.01 -28.34 2.02 -28 1 C-28 1.99 -28 2.98 -28 4 C-18.76 4 -9.52 4 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#5E5D5C\",transform:\"translate(67,252)\"})),_path29||(_path29=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 162.36 1 324.72 1 492 C0.67 492 0.34 492 0 492 C0 485.4 0 478.8 0 472 C-2.31 472 -4.62 472 -7 472 C-7 480.58 -7 489.16 -7 498 C-15.58 498.33 -24.16 498.66 -33 499 C-33.33 506.92 -33.66 514.84 -34 523 C-43.57 523 -53.14 523 -63 523 C-63 514.75 -63 506.5 -63 498 C-53.1 498 -43.2 498 -33 498 C-33 480.84 -33 463.68 -33 446 C-42.9 446 -52.8 446 -63 446 C-63 437.75 -63 429.5 -63 421 C-52.77 421 -42.54 421 -32 421 C-32.33 420.67 -32.66 420.34 -33 420 C-33.09959621 418.15840977 -33.13080411 416.31303033 -33.1328125 414.46875 C-33.13474609 412.78845703 -33.13474609 412.78845703 -33.13671875 411.07421875 C-33.13285156 409.89472656 -33.12898438 408.71523438 -33.125 407.5 C-33.13080078 405.73076172 -33.13080078 405.73076172 -33.13671875 403.92578125 C-33.13542969 402.80558594 -33.13414062 401.68539063 -33.1328125 400.53125 C-33.13168457 399.49548828 -33.13055664 398.45972656 -33.12939453 397.39257812 C-33 395 -33 395 -32 394 C-30.07332493 393.91251793 -28.14348139 393.89302666 -26.21484375 393.90234375 C-25.16159912 393.90484131 -24.10835449 393.90733887 -23.02319336 393.90991211 C-21.67491455 393.91901611 -20.32663574 393.92812012 -18.9375 393.9375 C-14.668125 393.958125 -10.39875 393.97875 -6 394 C-6 385.42 -6 376.84 -6 368 C-14.58 368.33 -23.16 368.66 -32 369 C-32.33 377.25 -32.66 385.5 -33 394 C-42.9 393.67 -52.8 393.34 -63 393 C-63 385.08 -63 377.16 -63 369 C-60.256875 368.835 -57.51375 368.67 -54.6875 368.5 C-53.84791748 368.44779297 -53.00833496 368.39558594 -52.14331055 368.34179688 C-46.09156392 367.9924577 -40.0607675 367.9484251 -34 368 C-34.00785522 366.8718689 -34.00785522 366.8718689 -34.01586914 365.72094727 C-34.03657227 362.33480658 -34.04963877 358.94867916 -34.0625 355.5625 C-34.07087891 354.37849609 -34.07925781 353.19449219 -34.08789062 351.97460938 C-34.09272461 350.28754883 -34.09272461 350.28754883 -34.09765625 348.56640625 C-34.10551147 347.00321655 -34.10551147 347.00321655 -34.11352539 345.40844727 C-34 343 -34 343 -33 342 C-31.00035018 341.91241997 -28.9976389 341.89303424 -26.99609375 341.90234375 C-25.78115234 341.90556641 -24.56621094 341.90878906 -23.31445312 341.91210938 C-21.39536133 341.92467773 -21.39536133 341.92467773 -19.4375 341.9375 C-18.15423828 341.94201172 -16.87097656 341.94652344 -15.54882812 341.95117188 C-12.3658658 341.96300445 -9.18292726 341.98094056 -6 342 C-6 333.42 -6 324.84 -6 316 C-14.91 316 -23.82 316 -33 316 C-33.08281077 299.27222483 -32.90275168 282.70090602 -32 266 C-23.42 265.67 -14.84 265.34 -6 265 C-6 257.08 -6 249.16 -6 241 C-14.91 241 -23.82 241 -33 241 C-33 232.75 -33 224.5 -33 216 C-23 216 -13 216 -3 216 C-3.66 215.67 -4.32 215.34 -5 215 C-5 206.75 -5 198.5 -5 190 C-14.24 190 -23.48 190 -33 190 C-33 181.42 -33 172.84 -33 164 C-23.43 163.67 -13.86 163.34 -4 163 C-4 155.41 -4 147.82 -4 140 C-3.34 139.67 -2.68 139.34 -2 139 C-3.35532837 138.96241577 -3.35532837 138.96241577 -4.73803711 138.92407227 C-8.0796428 138.82912683 -11.42106252 138.72988379 -14.76245117 138.62768555 C-16.2106424 138.5842837 -17.65888654 138.54261256 -19.10717773 138.50268555 C-21.18489559 138.44510938 -23.26234573 138.38137972 -25.33984375 138.31640625 C-27.21724243 138.26141968 -27.21724243 138.26141968 -29.13256836 138.20532227 C-32 138 -32 138 -33 137 C-33.08726223 135.21928754 -33.10699041 133.4351686 -33.09765625 131.65234375 C-33.09443359 130.57275391 -33.09121094 129.49316406 -33.08789062 128.38085938 C-33.07951172 127.24455078 -33.07113281 126.10824219 -33.0625 124.9375 C-33.05798828 123.79732422 -33.05347656 122.65714844 -33.04882812 121.48242188 C-33.03699747 118.65489649 -33.0205141 115.8274736 -33 113 C-23.6587308 112.38673965 -14.36749815 111.8179104 -5 112 C-4.10854626 106.18904228 -3.99718523 100.85080545 -4.4375 95 C-4.623125 92.36 -4.80875 89.72 -5 87 C-13.91 86.67 -22.82 86.34 -32 86 C-32 77.42 -32 68.84 -32 60 C-23.42 59.67 -14.84 59.34 -6 59 C-6 42.17 -6 25.34 -6 8 C-4.02 8 -2.04 8 0 8 C0 5.36 0 2.72 0 0 Z \",fill:\"#727170\",transform:\"translate(221,248)\"})),_path30||(_path30=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.11177927 -0.02291394 8.22339658 -0.04283951 12.33520508 -0.05493164 C13.73495228 -0.0599708 15.1346942 -0.06680216 16.53442383 -0.07543945 C18.54245777 -0.0875232 20.55052957 -0.09269807 22.55859375 -0.09765625 C24.37315063 -0.10551147 24.37315063 -0.10551147 26.22436523 -0.11352539 C29 0 29 0 30 1 C30 7.93 30 14.86 30 22 C50.46 22 70.92 22 92 22 C92 27.94 92 33.88 92 40 C94.475 39.505 94.475 39.505 97 39 C98.98438396 38.92130162 100.97111348 38.89215956 102.95703125 38.90234375 C104.06884766 38.90556641 105.18066406 38.90878906 106.32617188 38.91210938 C107.47666016 38.92048828 108.62714844 38.92886719 109.8125 38.9375 C110.98232422 38.94201172 112.15214844 38.94652344 113.35742188 38.95117188 C116.23833358 38.9629307 119.11914044 38.97936574 122 39 C122.02887512 42.64581687 122.04675585 46.29160463 122.0625 49.9375 C122.07087891 50.97841797 122.07925781 52.01933594 122.08789062 53.09179688 C122.09111328 54.08115234 122.09433594 55.07050781 122.09765625 56.08984375 C122.10289307 57.00628662 122.10812988 57.92272949 122.11352539 58.86694336 C122 61 122 61 121 62 C118.85441173 62.08775605 116.70595579 62.10695219 114.55859375 62.09765625 C113.25341797 62.09443359 111.94824219 62.09121094 110.60351562 62.08789062 C109.2148431 62.07953401 107.82617123 62.07106905 106.4375 62.0625 C105.04492344 62.05748666 103.65234519 62.05292347 102.25976562 62.04882812 C98.83982549 62.03699442 95.4199075 62.01905831 92 62 C92 70.25 92 78.5 92 87 C84.0375503 87 76.22905864 86.79145372 68.3046875 86.26757812 C66.20502124 86.14139626 64.10242389 86.06583348 62 86 C61.67 86.33 61.34 86.66 61 87 C58.78144736 87.08783542 56.56011504 87.10694609 54.33984375 87.09765625 C53.34314415 87.09553383 53.34314415 87.09553383 52.3263092 87.09336853 C50.19666101 87.08775518 48.06711661 87.07520054 45.9375 87.0625 C44.49674631 87.05748671 43.05599097 87.05292351 41.61523438 87.04882812 C38.07675042 87.03863076 34.53849187 87.0190583 31 87 C30.505 76.605 30.505 76.605 30 66 C19.77 65.67 9.54 65.34 -1 65 C-0.505 69.95 -0.505 69.95 0 75 C0 78.96 0 82.92 0 87 C9.9 87 19.8 87 30 87 C30.33 95.58 30.66 104.16 31 113 C40.57 113 50.14 113 60 113 C60 118.94 60 124.88 60 131 C20.4 131 -19.2 131 -60 131 C-60 125.06 -60 119.12 -60 113 C-50.43 113 -40.86 113 -31 113 C-31 104.42 -31 95.84 -31 87 C-40.57 87 -50.14 87 -60 87 C-60 79.74 -60 72.48 -60 65 C-50 65 -40 65 -30 65 C-30.16298584 64.43829102 -30.32597168 63.87658203 -30.49389648 63.29785156 C-31.02985098 60.86446819 -31.11361396 58.72377772 -31.09765625 56.234375 C-31.09515869 55.43225586 -31.09266113 54.63013672 -31.09008789 53.80371094 C-31.08098389 52.79598633 -31.07187988 51.78826172 -31.0625 50.75 C-31.041875 47.5325 -31.02125 44.315 -31 41 C-40.9 41 -50.8 41 -61 41 C-61 34.73 -61 28.46 -61 22 C-56.7543373 21.29238955 -53.36953821 20.87973367 -49.1640625 20.90234375 C-48.10058594 20.90556641 -47.03710938 20.90878906 -45.94140625 20.91210938 C-44.29978516 20.92467773 -44.29978516 20.92467773 -42.625 20.9375 C-41.50738281 20.94201172 -40.38976562 20.94652344 -39.23828125 20.95117188 C-36.49213196 20.96290756 -33.74609414 20.97932637 -31 21 C-30.67 21.66 -30.34 22.32 -30 23 C-20.43 23 -10.86 23 -1 23 C-0.21327306 26.14690775 0.12004456 28.1937621 0.09765625 31.328125 C0.09443359 32.12734375 0.09121094 32.9265625 0.08789062 33.75 C0.07532227 34.9875 0.07532227 34.9875 0.0625 36.25 C0.05798828 37.09046875 0.05347656 37.9309375 0.04882812 38.796875 C0.03707961 40.86461401 0.01914522 42.93231624 0 45 C1.38058594 44.89171875 1.38058594 44.89171875 2.7890625 44.78125 C11.56221664 44.13800448 20.19685712 43.90924595 29 44 C29.99 54.395 29.99 54.395 31 65 C35.95 64.505 35.95 64.505 41 64 C42.78285023 63.93187959 44.567451 63.89044967 46.3515625 63.90234375 C47.13869629 63.90484131 47.92583008 63.90733887 48.73681641 63.90991211 C49.68991699 63.91901611 50.64301758 63.92812012 51.625 63.9375 C56.265625 63.9684375 56.265625 63.9684375 61 64 C60.67 56.74 60.34 49.48 60 42 C57.463125 42.165 54.92625 42.33 52.3125 42.5 C44.85563105 42.96127195 37.47348341 43.08590211 30 43 C30 36.4 30 29.8 30 23 C20.1 23 10.2 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#797876\",transform:\"translate(515,893)\"})),_path31||(_path31=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.495 10.395 1.495 10.395 2 21 C11.57 21.33 21.14 21.66 31 22 C31 28.93 31 35.86 31 43 C40.9 42.67 50.8 42.34 61 42 C61 49.92 61 57.84 61 66 C46.645 66.99 46.645 66.99 32 68 C32 75.59 32 83.18 32 91 C41.57 91 51.14 91 61 91 C61 83.08 61 75.16 61 67 C71.23 67 81.46 67 92 67 C92 74.59 92 82.18 92 90 C82.1 90 72.2 90 62 90 C62 97.26 62 104.52 62 112 C65.09375 111.95875 68.1875 111.9175 71.375 111.875 C78.52139636 111.82762696 85.05358374 112.14762233 92 114 C92 119.94 92 125.88 92 132 C82.1 132.33 72.2 132.66 62 133 C62.33 140.26 62.66 147.52 63 155 C72.57 155.33 82.14 155.66 92 156 C92 164.58 92 173.16 92 182 C82.1 182 72.2 182 62 182 C62 187.61 62 193.22 62 199 C51.77 199 41.54 199 31 199 C31 193.06 31 187.12 31 181 C40.9 181 50.8 181 61 181 C61 172.42 61 163.84 61 155 C51.1 155 41.2 155 31 155 C30.67 147.74 30.34 140.48 30 133 C33.85421425 132.97292121 37.70823638 132.95312238 41.5625 132.9375 C43.19155273 132.92493164 43.19155273 132.92493164 44.85351562 132.91210938 C45.91376953 132.90888672 46.97402344 132.90566406 48.06640625 132.90234375 C49.03521729 132.89710693 50.00402832 132.89187012 51.00219727 132.88647461 C54.35300282 133.01336805 57.68049404 133.52578486 61 134 C61 127.73 61 121.46 61 115 C58.91816406 115.08378906 56.83632813 115.16757812 54.69140625 115.25390625 C52.6825499 115.33036791 50.67369201 115.40679388 48.66479492 115.48217773 C47.26498319 115.53566026 45.86524096 115.59099434 44.46557617 115.64819336 C42.4577104 115.72992949 40.44955813 115.80453025 38.44140625 115.87890625 C36.62684937 115.94960327 36.62684937 115.94960327 34.77563477 116.02172852 C32 116 32 116 31 115 C30.91273777 113.21928754 30.89300959 111.4351686 30.90234375 109.65234375 C30.90556641 108.57275391 30.90878906 107.49316406 30.91210938 106.38085938 C30.92048828 105.24455078 30.92886719 104.10824219 30.9375 102.9375 C30.94201172 101.79732422 30.94652344 100.65714844 30.95117188 99.48242188 C30.96300253 96.65489649 30.9794859 93.8274736 31 91 C30.16557373 91.07677979 29.33114746 91.15355957 28.47143555 91.23266602 C19.62624733 92.02844952 10.86932665 92.10246976 2 92 C2 90.35 2 88.7 2 87 C0.95356323 87.23771118 0.95356323 87.23771118 -0.11401367 87.48022461 C-3.16710168 88.03009555 -6.07604597 88.20951883 -9.17578125 88.31640625 C-10.33271484 88.35830078 -11.48964844 88.40019531 -12.68164062 88.44335938 C-13.87982422 88.48267578 -15.07800781 88.52199219 -16.3125 88.5625 C-17.53001953 88.60568359 -18.74753906 88.64886719 -20.00195312 88.69335938 C-23.00117578 88.79921429 -26.00057343 88.90008997 -29 89 C-29 81.74 -29 74.48 -29 67 C-38.57 67 -48.14 67 -58 67 C-58 74.26 -58 81.52 -58 89 C-51.82331725 88.96080098 -51.82331725 88.96080098 -45.64672852 88.90991211 C-40.01560059 88.89210118 -34.58535638 89.27839241 -29 90 C-28.97096423 93.10414702 -28.9531893 96.20825909 -28.9375 99.3125 C-28.92912109 100.19357422 -28.92074219 101.07464844 -28.91210938 101.98242188 C-28.90888672 102.82998047 -28.90566406 103.67753906 -28.90234375 104.55078125 C-28.89710693 105.33106689 -28.89187012 106.11135254 -28.88647461 106.9152832 C-29 109 -29 109 -30 112 C-39.24 112 -48.48 112 -58 112 C-57.67 118.27 -57.34 124.54 -57 131 C-47.76 131.33 -38.52 131.66 -29 132 C-29 139.26 -29 146.52 -29 154 C-38.57 154 -48.14 154 -58 154 C-58 147.07 -58 140.14 -58 133 C-67.24 133 -76.48 133 -86 133 C-86.66 126.07 -87.32 119.14 -88 112 C-97.24 112 -106.48 112 -116 112 C-116 105.07 -116 98.14 -116 91 C-106.43 91 -96.86 91 -87 91 C-87 97.27 -87 103.54 -87 110 C-77.43 110 -67.86 110 -58 110 C-58 103.4 -58 96.8 -58 90 C-61.01447266 90.01740234 -61.01447266 90.01740234 -64.08984375 90.03515625 C-66.02921424 90.0421074 -67.96858503 90.04902396 -69.90795898 90.05493164 C-71.25920386 90.05997057 -72.61044326 90.06680177 -73.96166992 90.07543945 C-75.90020434 90.08752419 -77.838778 90.09269828 -79.77734375 90.09765625 C-81.52905884 90.10551147 -81.52905884 90.10551147 -83.31616211 90.11352539 C-86 90 -86 90 -87 89 C-87.08700342 87.36527118 -87.10701063 85.72685945 -87.09765625 84.08984375 C-87.09515869 83.199021 -87.09266113 82.30819824 -87.09008789 81.39038086 C-87.08098389 80.25093018 -87.07187988 79.11147949 -87.0625 77.9375 C-87.041875 74.328125 -87.02125 70.71875 -87 67 C-77.76 67 -68.52 67 -59 67 C-59 59.08 -59 51.16 -59 43 C-49.1 43 -39.2 43 -29 43 C-29 44.32 -29 45.64 -29 47 C-19.1 47 -9.2 47 1 47 C1 38.75 1 30.5 1 22 C-3.95 22 -8.9 22 -14 22 C-14 21.67 -14 21.34 -14 21 C-9.38 21 -4.76 21 0 21 C0 14.07 0 7.14 0 0 Z \",fill:\"#6C6B69\",transform:\"translate(274,825)\"})),_path32||(_path32=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.9190625 -0.0309375 4.9190625 -0.0309375 9.9375 -0.0625 C10.95191162 -0.071604 11.96632324 -0.08070801 13.01147461 -0.09008789 C14.25682983 -0.09383423 14.25682983 -0.09383423 15.52734375 -0.09765625 C16.77632446 -0.10551147 16.77632446 -0.10551147 18.05053711 -0.11352539 C22.04798822 0.04033727 26.02405646 0.5582285 30 1 C30 8.26 30 15.52 30 23 C31.5675 22.98839844 33.135 22.97679687 34.75 22.96484375 C36.83333214 22.95545937 38.91666557 22.94635987 41 22.9375 C42.02996094 22.92912109 43.05992187 22.92074219 44.12109375 22.91210938 C45.13300781 22.90888672 46.14492188 22.90566406 47.1875 22.90234375 C48.57001953 22.89448853 48.57001953 22.89448853 49.98046875 22.88647461 C53.66974531 23.02518043 57.33662607 23.54207826 61 24 C61 31.59 61 39.18 61 47 C71.23 47 81.46 47 92 47 C92 39.08 92 31.16 92 23 C95.56029909 22.10992523 98.19918094 21.87119591 101.82421875 21.8671875 C102.93474609 21.86589844 104.04527344 21.86460937 105.18945312 21.86328125 C106.34380859 21.86714844 107.49816406 21.87101562 108.6875 21.875 C109.85345703 21.87113281 111.01941406 21.86726563 112.22070312 21.86328125 C113.32736328 21.86457031 114.43402344 21.86585938 115.57421875 21.8671875 C117.09921997 21.86887939 117.09921997 21.86887939 118.6550293 21.87060547 C121 22 121 22 122 23 C122.08726223 24.78071246 122.10699041 26.5648314 122.09765625 28.34765625 C122.09515869 29.31968994 122.09266113 30.29172363 122.09008789 31.29321289 C122.07643188 33.15901001 122.07643188 33.15901001 122.0625 35.0625 C122.041875 39.001875 122.02125 42.94125 122 47 C112.43 47.33 102.86 47.66 93 48 C92.67 55.92 92.34 63.84 92 72 C81.77 72 71.54 72 61 72 C61 64.08 61 56.16 61 48 C50.77 48 40.54 48 30 48 C30 55.92 30 63.84 30 72 C37.20902386 71.96069798 37.20902386 71.96069798 44.41796875 71.90991211 C45.33191406 71.90741455 46.24585938 71.90491699 47.1875 71.90234375 C48.10917969 71.89710693 49.03085937 71.89187012 49.98046875 71.88647461 C53.66974531 72.02518043 57.33662607 72.54207826 61 73 C61 80.92 61 88.84 61 97 C50.77 97 40.54 97 30 97 C30 89.41 30 81.82 30 74 C15.15 73.505 15.15 73.505 0 73 C0 80.92 0 88.84 0 97 C-20.46 97 -40.92 97 -62 97 C-62.33 89.41 -62.66 81.82 -63 74 C-72.57 73.67 -82.14 73.34 -92 73 C-92 80.92 -92 88.84 -92 97 C-101.9 97 -111.8 97 -122 97 C-122.33 89.41 -122.66 81.82 -123 74 C-137.85 73.505 -137.85 73.505 -153 73 C-153 64.75 -153 56.5 -153 48 C-162.9 48 -172.8 48 -183 48 C-183 39.75 -183 31.5 -183 23 C-173.1 23 -163.2 23 -153 23 C-152.67 30.92 -152.34 38.84 -152 47 C-150.08574219 47.06058594 -148.17148437 47.12117188 -146.19921875 47.18359375 C-143.69530461 47.26799535 -141.19139877 47.35264354 -138.6875 47.4375 C-136.79354492 47.49647461 -136.79354492 47.49647461 -134.86132812 47.55664062 C-133.04858398 47.61948242 -133.04858398 47.61948242 -131.19921875 47.68359375 C-130.08377686 47.72025146 -128.96833496 47.75690918 -127.8190918 47.79467773 C-125 48 -125 48 -122 49 C-122 56.59 -122 64.18 -122 72 C-112.1 72 -102.2 72 -92 72 C-92 64.08 -92 56.16 -92 48 C-88.78636719 48.01740234 -88.78636719 48.01740234 -85.5078125 48.03515625 C-83.43603666 48.04295188 -81.36426245 48.04902576 -79.29248047 48.05493164 C-77.8510668 48.05996474 -76.40965824 48.06679173 -74.96826172 48.07543945 C-72.89809915 48.08754983 -70.82800399 48.09323847 -68.7578125 48.09765625 C-67.5114502 48.10289307 -66.26508789 48.10812988 -64.98095703 48.11352539 C-62.07228894 48.20816587 -62.07228894 48.20816587 -60 47 C-57.82000044 46.98360487 -55.63933158 47.03585224 -53.4609375 47.12109375 C-51.50800781 47.19360352 -51.50800781 47.19360352 -49.515625 47.26757812 C-48.13541196 47.32410394 -46.75520368 47.38074608 -45.375 47.4375 C-43.98699781 47.49072293 -42.59897703 47.54346332 -41.2109375 47.59570312 C-37.80707859 47.72571163 -34.40348883 47.86068883 -31 48 C-31.01047363 47.34926514 -31.02094727 46.69853027 -31.03173828 46.02807617 C-31.07329835 43.0812567 -31.09932608 40.13449889 -31.125 37.1875 C-31.14175781 36.16333984 -31.15851563 35.13917969 -31.17578125 34.08398438 C-31.18222656 33.10107422 -31.18867187 32.11816406 -31.1953125 31.10546875 C-31.20578613 30.19949951 -31.21625977 29.29353027 -31.22705078 28.36010742 C-31 26 -31 26 -29 23 C-26.11083984 22.65942383 -26.11083984 22.65942383 -22.4609375 22.70703125 C-20.50800781 22.7215332 -20.50800781 22.7215332 -18.515625 22.73632812 C-17.13541077 22.76139612 -15.75520244 22.78679098 -14.375 22.8125 C-12.98699337 22.82754483 -11.59897133 22.84123359 -10.2109375 22.85351562 C-6.80712611 22.88897199 -3.4035151 22.94278026 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#676665\",transform:\"translate(607,117)\"})),_path33||(_path33=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.92 29 15.84 29 24 C14.645 24.495 14.645 24.495 0 25 C0.495 36.385 0.495 36.385 1 48 C14.86 48.495 14.86 48.495 29 49 C29 57.25 29 65.5 29 74 C37.25 74 45.5 74 54 74 C54 74.33 54 74.66 54 75 C46.41 75 38.82 75 31 75 C31 83.58 31 92.16 31 101 C40.24 101 49.48 101 59 101 C59.92601281 114.47863095 59.87158595 127.52394036 59 141 C58.67 141 58.34 141 58 141 C58 136.38 58 131.76 58 127 C56.535625 127.165 55.07125 127.33 53.5625 127.5 C45.70431804 128.23027607 37.88640658 128.06309125 30 128 C30.495 139.88 30.495 139.88 31 152 C46.84 152.495 46.84 152.495 63 153 C61.02 153.99 61.02 153.99 59 155 C59 162.59 59 170.18 59 178 C59.99 178.33 60.98 178.66 62 179 C51.44 179 40.88 179 30 179 C30 187.58 30 196.16 30 205 C39.24 205 48.48 205 58 205 C58 213.25 58 221.5 58 230 C58.99 230.33 59.98 230.66 61 231 C60.34 231.33 59.68 231.66 59 232 C59 234.97 59 237.94 59 241 C58.67 241 58.34 241 58 241 C58 237.7 58 234.4 58 231 C48.76 231 39.52 231 30 231 C30 222.75 30 214.5 30 206 C20.1 206 10.2 206 0 206 C0 197.42 0 188.84 0 180 C-3.3 180.144375 -6.6 180.28875 -10 180.4375 C-11.02351563 180.48060303 -12.04703125 180.52370605 -13.1015625 180.56811523 C-18.4505123 180.81289593 -23.69705835 181.2558372 -29 182 C-29.33 186.29 -29.66 190.58 -30 195 C-30.33 195 -30.66 195 -31 195 C-31 189.72 -31 184.44 -31 179 C-21.43 179 -11.86 179 -2 179 C-2 170.42 -2 161.84 -2 153 C-11.57 153 -21.14 153 -31 153 C-31 144.42 -31 135.84 -31 127 C-40.9 127 -50.8 127 -61 127 C-61 118.42 -61 109.84 -61 101 C-51.1 101 -41.2 101 -31 101 C-31.144375 96.75125 -31.28875 92.5025 -31.4375 88.125 C-31.48060303 86.7858252 -31.52370605 85.44665039 -31.56811523 84.06689453 C-31.6252771 82.49077393 -31.6252771 82.49077393 -31.68359375 80.8828125 C-31.72025146 79.80402832 -31.75690918 78.72524414 -31.79467773 77.61376953 C-31.83376643 75.01930464 -31.83376643 75.01930464 -33 73 C-32.9129796 71.28766312 -32.75902838 69.57824594 -32.5625 67.875 C-32.46066406 66.96492188 -32.35882813 66.05484375 -32.25390625 65.1171875 C-32.17011719 64.41851562 -32.08632812 63.71984375 -32 63 C-31.67 63 -31.34 63 -31 63 C-31 66.63 -31 70.26 -31 74 C-21.1 74 -11.2 74 -1 74 C-1 65.75 -1 57.5 -1 49 C-10.9 49 -20.8 49 -31 49 C-31 40.75 -31 32.5 -31 24 C-20.77 24 -10.54 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#6D6B69\",transform:\"translate(158,233)\"})),_path34||(_path34=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.02911749 3.02911749 2.31975274 6.49505944 2.33813477 10.5612793 C2.34967087 11.44765579 2.36120697 12.33403229 2.37309265 13.24726868 C2.40749607 16.18960298 2.42592314 19.13172709 2.44140625 22.07421875 C2.45176061 23.58085555 2.45176061 23.58085555 2.46232414 25.11792946 C2.49820321 30.43628735 2.52171785 35.75453855 2.53540039 41.07299805 C2.55193285 46.56349822 2.6103227 52.05270686 2.67854404 57.54277325 C2.72336392 61.76620962 2.73689763 65.98933792 2.74201775 70.21299171 C2.74990805 72.23640714 2.7695435 74.25981271 2.80124092 76.28299522 C2.84275008 79.12025941 2.83983966 81.95428332 2.82641602 84.79174805 C2.85945328 86.03968643 2.85945328 86.03968643 2.89315796 87.31283569 C2.81609023 92.12201684 2.00829503 94.49542519 -1.42001343 97.95768738 C-2.59464566 98.99339014 -3.78596905 100.01077305 -5 101 C-5.69504639 101.62213379 -6.39009277 102.24426758 -7.10620117 102.88525391 C-7.68345947 103.36913574 -8.26071777 103.85301758 -8.85546875 104.3515625 C-13.59672793 108.44353733 -17.93092685 112.90517451 -22.3125 117.375 C-28.1573061 123.28233245 -33.96376099 128.91485935 -40.51953125 134.02734375 C-44.32697395 137.05530999 -47.86288136 140.36812624 -51.4453125 143.65625 C-59.95074671 151.45940065 -59.95074671 151.45940065 -64.1875 154.64453125 C-70.57562436 159.46714487 -75.84661727 164.97255257 -81.23803711 170.84863281 C-86.30923336 176.34772127 -91.63305675 181.45290867 -97.1953125 186.44921875 C-99.8823218 188.89297512 -102.44878079 191.41564807 -105 194 C-105.72960937 194.71800781 -106.45921875 195.43601562 -107.2109375 196.17578125 C-111.47822522 200.38915018 -115.55453711 204.66544453 -119.39453125 209.2734375 C-121.83695636 211.90008446 -123.70573594 213.864816 -127.38183594 214.2487793 C-128.24067383 214.19117432 -129.09951172 214.13356934 -129.984375 214.07421875 C-131.38623047 213.99204102 -131.38623047 213.99204102 -132.81640625 213.90820312 C-133.78449219 213.83537109 -134.75257813 213.76253906 -135.75 213.6875 C-136.73355469 213.62626953 -137.71710938 213.56503906 -138.73046875 213.50195312 C-141.15495584 213.34895151 -143.57748027 213.18114966 -146 213 C-146.495 214.98 -146.495 214.98 -147 217 C-147 206.77 -147 196.54 -147 186 C-136.77 186 -126.54 186 -116 186 C-116 177.75 -116 169.5 -116 161 C-125.9 161.33 -135.8 161.66 -146 162 C-146.17194838 146.41672077 -146.33885605 130.83339484 -146.5 115.25 C-146.51187725 114.10175877 -146.5237545 112.95351753 -146.53599167 111.77048111 C-146.91604069 74.84522988 -147.15006376 37.92722786 -147 1 C-143.48720519 4.3697605 -141.17791286 7.83176988 -138.9375 12.125 C-138.55537354 12.85001709 -138.17324707 13.57503418 -137.77954102 14.32202148 C-133.74099875 22.18441921 -130.40252854 30.33363441 -127.01293945 38.49072266 C-123.7108478 46.41044362 -120.13912402 54.07609266 -116.18847656 61.6875 C-113.57775777 66.76735382 -111.04898525 71.88898195 -108.5 77 C-107.3713514 79.25794131 -106.24245074 81.51575664 -105.11328125 83.7734375 C-103.29817708 87.40364583 -101.48307292 91.03385417 -99.66796875 94.6640625 C-99.3318457 95.33614746 -98.99572266 96.00823242 -98.64941406 96.70068359 C-98.01152267 97.97679018 -97.37414721 99.2531548 -96.73730469 100.52978516 C-95.22366929 103.56262664 -93.70131869 106.59041895 -92.16015625 109.609375 C-85.74178033 122.23455019 -79.88567835 135.11991832 -74 148 C-69.32014795 146.01228797 -67.78726361 142.6508777 -65.5 138.3125 C-65.07058105 137.517229 -64.64116211 136.72195801 -64.19873047 135.90258789 C-62.78638738 133.27500225 -61.39261433 130.63808809 -60 128 C-59.5246582 127.10958008 -59.04931641 126.21916016 -58.55957031 125.30175781 C-45.93276095 101.64657644 -34.72307731 77.35800708 -23.68730164 52.93330383 C-20.818766 46.58881554 -17.91150541 40.26237116 -15 33.9375 C-9.83287616 22.69522219 -4.86859251 11.37453906 0 0 Z \",fill:\"#605F5E\",transform:\"translate(481,455)\"})),_path35||(_path35=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.66 1.98 1.32 3 2 C3 2.66 3 3.32 3 4 C3.53109375 4.20238281 4.0621875 4.40476562 4.609375 4.61328125 C8.04132937 6.60403909 10.5114173 9.34309385 13.25 12.1875 C16.65664403 15.70496257 20.07936138 19.11419579 23.80078125 22.30078125 C29.7013865 27.39070819 35.05299216 33.0426622 40.49023438 38.6171875 C44.2772338 42.45374735 47.99986563 46.1146815 52.33203125 49.33203125 C58.73222865 54.13869287 64.16028254 59.98546349 69.75 65.6875 C71.41928807 67.38458537 73.09011216 69.08008761 74.76397705 70.7726593 C75.79642659 71.81718549 76.82619518 72.86437137 77.85272217 73.91471863 C80.74566763 76.84777002 83.75518698 79.4658074 87 82 C87.99275753 83.07332162 88.95215979 84.17850143 89.875 85.3125 C97.60443535 94.34999364 106.25713377 102.85648941 115.35546875 110.5078125 C117.74408961 112.67515969 119.75730699 115.10547184 121.7734375 117.6171875 C122.97175539 119.14103109 122.97175539 119.14103109 125 120 C125 120.66 125 121.32 125 122 C125.66 122 126.32 122 127 122 C127 122.66 127 123.32 127 124 C127.54140625 124.21398437 128.0828125 124.42796875 128.640625 124.6484375 C131.8392797 126.48077943 134.20964484 128.99796606 136.75 131.625 C137.25660156 132.140625 137.76320312 132.65625 138.28515625 133.1875 C139.52803902 134.45383339 140.76465276 135.7263144 142 137 C142.33 132.71 142.66 128.42 143 124 C152.24 124 161.48 124 171 124 C171 131.59 171 139.18 171 147 C165.72 147 160.44 147 155 147 C157.11381068 150.52301781 158.37782511 152.62776917 161.13671875 155.33203125 C161.71357422 155.90244141 162.29042969 156.47285156 162.88476562 157.06054688 C163.47966797 157.63869141 164.07457031 158.21683594 164.6875 158.8125 C165.59725586 159.7087207 165.59725586 159.7087207 166.52539062 160.62304688 C168.01240312 162.08664185 169.50558811 163.54396102 171 165 C171.33 159.72 171.66 154.44 172 149 C181.57 149 191.14 149 201 149 C201 156.92 201 164.84 201 173 C210.57 173 220.14 173 230 173 C230 165.08 230 157.16 230 149 C223.07503237 149.03933128 223.07503237 149.03933128 216.15014648 149.09008789 C214.83639038 149.09383423 214.83639038 149.09383423 213.49609375 149.09765625 C212.16856079 149.10551147 212.16856079 149.10551147 210.81420898 149.11352539 C207.52449209 148.98081798 204.25930231 148.46561462 201 148 C201 140.08 201 132.16 201 124 C191.43 124 181.86 124 172 124 C172 116.08 172 108.16 172 100 C181.9 100 191.8 100 202 100 C202 107.92 202 115.84 202 124 C211.57 124 221.14 124 231 124 C231 132.25 231 140.5 231 149 C240.57 149 250.14 149 260 149 C260 156.92 260 164.84 260 173 C270.56 173 281.12 173 292 173 C292 165.08 292 157.16 292 149 C301.9 149 311.8 149 322 149 C322 156.92 322 164.84 322 173 C331.9 173 341.8 173 352 173 C352 165.08 352 157.16 352 149 C361.24 149 370.48 149 380 149 C380.63442581 157.08892909 381 164.86010319 381 173 C390.57 173 400.14 173 410 173 C409.96068346 167.34638534 409.96068346 167.34638534 409.90991211 161.69287109 C409.90616577 160.61900146 409.90616577 160.61900146 409.90234375 159.5234375 C409.89448853 158.4394165 409.89448853 158.4394165 409.88647461 157.33349609 C410.02413561 154.50389637 410.49380709 151.78493676 411 149 C415.1117256 148.97534254 419.22342278 148.95716041 423.33520508 148.94506836 C424.73495228 148.9400292 426.1346942 148.93319784 427.53442383 148.92456055 C429.54245777 148.9124768 431.55052957 148.90730193 433.55859375 148.90234375 C435.37315063 148.89448853 435.37315063 148.89448853 437.22436523 148.88647461 C440 149 440 149 441 150 C441.08713831 151.70772358 441.10700007 153.41898649 441.09765625 155.12890625 C441.09515869 156.06033447 441.09266113 156.9917627 441.09008789 157.95141602 C441.07643188 159.73890259 441.07643188 159.73890259 441.0625 161.5625 C441.041875 165.336875 441.02125 169.11125 441 173 C450.9 173 460.8 173 471 173 C471 165.08 471 157.16 471 149 C475.11177927 148.97708606 479.22339658 148.95716049 483.33520508 148.94506836 C484.73495228 148.9400292 486.1346942 148.93319784 487.53442383 148.92456055 C489.54245777 148.9124768 491.55052957 148.90730193 493.55859375 148.90234375 C495.37315063 148.89448853 495.37315063 148.89448853 497.22436523 148.88647461 C500 149 500 149 501 150 C501 157.59 501 165.18 501 173 C521.46 173 541.92 173 563 173 C563 165.08 563 157.16 563 149 C567.06254449 148.97301631 571.12490948 148.95316839 575.1875 148.9375 C576.33798828 148.92912109 577.48847656 148.92074219 578.67382812 148.91210938 C579.78564453 148.90888672 580.89746094 148.90566406 582.04296875 148.90234375 C583.06414795 148.89710693 584.08532715 148.89187012 585.13745117 148.88647461 C588 149 588 149 593 150 C593 157.59 593 165.18 593 173 C603.23 173 613.46 173 624 173 C624 165.08 624 157.16 624 149 C634.23 149 644.46 149 655 149 C655 156.92 655 164.84 655 173 C664.9 173 674.8 173 685 173 C685.33 165.08 685.66 157.16 686 149 C697.25 147.875 697.25 147.875 701.1328125 147.90234375 C701.9578125 147.90556641 702.7828125 147.90878906 703.6328125 147.91210938 C704.45523438 147.92048828 705.27765625 147.92886719 706.125 147.9375 C707.41664063 147.94426758 707.41664063 147.94426758 708.734375 147.95117188 C710.82294785 147.96277506 712.91148407 147.9807016 715 148 C715.9421045 153.5265185 716.12068134 158.83921945 716.0625 164.4375 C716.041875 167.263125 716.02125 170.08875 716 173 C726.23 173 736.46 173 747 173 C747 165.08 747 157.16 747 149 C757.23 149 767.46 149 778 149 C778 141.08 778 133.16 778 125 C788.08207735 124.92362063 797.96662359 124.89829592 808 126 C806.43401741 133.82991295 799.99557986 138.3281014 794.1875 143.25 C790.40704119 146.5060021 787.1136421 150.09184361 783.7878418 153.80566406 C778.45071806 159.70979483 772.77635643 165.27476355 767.10595703 170.85668945 C766.35942871 171.59491943 765.61290039 172.33314941 764.84375 173.09375 C764.17537109 173.75052734 763.50699219 174.40730469 762.81835938 175.08398438 C761.0384609 176.95947354 759.50603439 178.90089161 758 181 C755.48555601 179.92238115 754.12310581 179.16203856 752.44455361 176.95263696 C748.72383186 173.98063473 745.26967911 174.45376661 740.63714218 174.50780869 C739.67353055 174.50319331 738.70991892 174.49857793 737.71710694 174.49382269 C734.46296673 174.48316936 731.20960586 174.50123369 727.95550537 174.51898193 C725.60916465 174.51723888 723.26282468 174.51373887 720.91648889 174.50862527 C715.12837564 174.50059181 709.34050333 174.51123506 703.5524185 174.52958797 C696.62161337 174.55051051 689.69086661 174.54821252 682.7600376 174.54501015 C669.96858806 174.53975084 657.17722109 174.55313418 644.38579559 174.57707977 C631.71756329 174.60073406 619.04936537 174.61614076 606.38111115 174.62049103 C605.59394113 174.62076599 604.80677112 174.62104094 603.99574747 174.62132424 C599.99823783 174.62267754 596.00072815 174.62388308 592.00321844 174.62503174 C563.67627586 174.6334372 535.34937821 174.66039727 507.02246094 174.69824219 C479.50032795 174.73496952 451.97820726 174.76330906 424.45605469 174.78027344 C423.60795703 174.78079954 422.75985938 174.78132565 421.8860618 174.78186769 C413.36924921 174.7871417 404.85243653 174.79224496 396.33562377 174.79722313 C378.98532485 174.80736845 361.63502675 174.81865346 344.284729 174.83062744 C343.08807618 174.83145118 343.08807618 174.83145118 341.86724855 174.83229156 C288.5781468 174.86910483 235.28907074 174.93256996 182 175 C181.67 176.65 181.34 178.3 181 180 C180.67 179.01 180.34 178.02 180 177 C178.67770327 176.31170241 177.34290185 175.64717605 176 175 C174.48022461 173.46118164 174.48022461 173.46118164 172.96484375 171.59765625 C168.60396202 166.44895735 163.86150733 161.71112067 159.0847168 156.9543457 C157.56508332 155.4400742 156.05087483 153.9205257 154.53710938 152.40039062 C153.54719541 151.41113761 152.5569712 150.42219492 151.56640625 149.43359375 C150.25071655 148.11959595 150.25071655 148.11959595 148.90844727 146.77905273 C146.74836694 144.67108452 144.50405211 142.68958974 142.21655273 140.72094727 C137.5852839 136.70033299 133.28092947 132.38891613 128.96875 128.03125 C127.71572083 126.77254089 127.71572083 126.77254089 126.43737793 125.48840332 C122.89663871 121.9314548 119.36192676 118.3685388 115.82666016 114.80615234 C113.2302794 112.19159836 110.63083434 109.58011816 108.03125 106.96875 C107.24455933 106.17376099 106.45786865 105.37877197 105.64733887 104.55969238 C101.46948091 100.36354082 97.21761638 96.34492219 92.69494629 92.52111816 C90.15072615 90.23782489 88.14190788 87.6629125 86 85 C82.17393149 81.06387538 78.17718406 77.34609839 74.03662109 73.74267578 C70.97158593 71.01810001 68.38246627 68.28289088 65.9375 64.984375 C60.96616182 58.63064869 56.79958818 54.02199765 48.41748047 52.9977417 C40.29046389 52.30861297 32.13435197 52.52717352 24 53 C23.97097571 49.72918529 23.95319316 46.4584037 23.9375 43.1875 C23.92912109 42.25873047 23.92074219 41.32996094 23.91210938 40.37304688 C23.90727539 39.0340332 23.90727539 39.0340332 23.90234375 37.66796875 C23.89448853 36.43469849 23.89448853 36.43469849 23.88647461 35.17651367 C24 33 24 33 25 30 C15.1 30 5.2 30 -5 30 C-5.020625 26.390625 -5.04125 22.78125 -5.0625 19.0625 C-5.071604 17.92304932 -5.08070801 16.78359863 -5.09008789 15.60961914 C-5.09258545 14.71879639 -5.09508301 13.82797363 -5.09765625 12.91015625 C-5.10289307 11.99371338 -5.10812988 11.07727051 -5.11352539 10.13305664 C-5 8 -5 8 -4 7 C-1.66702567 6.95907063 0.66705225 6.95758277 3 7 C2.505 6.21625 2.01 5.4325 1.5 4.625 C0 2 0 2 0 0 Z \",fill:\"#8A8887\",transform:\"translate(44,41)\"})),_path36||(_path36=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 81.51 1 163.02 1 247 C7.6 247 14.2 247 21 247 C22 248 22 248 22.11352539 250.22485352 C22.10828857 251.18319092 22.10305176 252.14152832 22.09765625 253.12890625 C22.09443359 254.16337891 22.09121094 255.19785156 22.08789062 256.26367188 C22.07951172 257.35228516 22.07113281 258.44089844 22.0625 259.5625 C22.05798828 260.65498047 22.05347656 261.74746094 22.04882812 262.87304688 C22.0369984 265.58205432 22.01906231 268.2910338 22 271 C15.07 271 8.14 271 1 271 C1 279.91 1 288.82 1 298 C7.93 298 14.86 298 22 298 C22 289.42 22 280.84 22 272 C29 271 29 271 40 271 C40.33 295.75 40.66 320.5 41 346 C54.86 346.33 68.72 346.66 83 347 C83 306.41 83 265.82 83 224 C83.33 224 83.66 224 84 224 C84.33 257 84.66 290 85 324 C94.57 324 104.14 324 114 324 C114 332.25 114 340.5 114 349 C103.77 349 93.54 349 83 349 C83.33 349.66 83.66 350.32 84 351 C84.084915 352.8863912 84.107193 354.77578515 84.09765625 356.6640625 C84.09282227 358.34628906 84.09282227 358.34628906 84.08789062 360.0625 C84.07532227 361.8259375 84.07532227 361.8259375 84.0625 363.625 C84.05798828 364.80835938 84.05347656 365.99171875 84.04882812 367.2109375 C84.03701478 370.14064639 84.0190789 373.07032941 84 376 C90.27 376 96.54 376 103 376 C103 380.09538619 100.87512359 381.68033566 98.19165039 384.48535156 C97.69444772 385.01557041 97.19724504 385.54578926 96.68497562 386.09207535 C91.52807189 391.56405764 86.24806215 396.91583233 80.93359375 402.234375 C79.92270697 403.24848743 78.91188997 404.26266941 77.90113831 405.2769165 C75.81140507 407.37255765 73.71969804 409.46620457 71.62670898 411.55859375 C68.94169751 414.24350211 66.26372158 416.93531818 63.58729458 419.62878036 C61.51556012 421.71158584 59.43934501 423.78987873 57.36180305 425.86688995 C56.37098602 426.85888725 55.38179064 427.85250702 54.39425468 428.84777069 C53.02594485 430.22581394 51.6507198 431.59698058 50.27514648 432.96777344 C49.4955809 433.74876404 48.71601532 434.52975464 47.91282654 435.33441162 C46 437 46 437 44 437 C43.7525 437.5775 43.505 438.155 43.25 438.75 C42 441 42 441 38 445 C25.46 445 12.92 445 0 445 C0 298.15 0 151.3 0 0 Z \",fill:\"#696866\",transform:\"translate(251,292)\"})),_path37||(_path37=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.12591553 0.00523682 2.25183105 0.01047363 3.41186523 0.01586914 C4.62680664 0.0190918 5.84174805 0.02231445 7.09350586 0.02563477 C8.37290039 0.03401367 9.65229492 0.04239258 10.97045898 0.05102539 C12.2537207 0.05553711 13.53698242 0.06004883 14.85913086 0.06469727 C18.04211921 0.07652994 21.22501661 0.09301471 24.40795898 0.11352539 C25.03969689 8.1681837 25.40795898 16.00895156 25.40795898 24.11352539 C34.64795898 24.11352539 43.88795898 24.11352539 53.40795898 24.11352539 C53.90295898 36.48852539 53.90295898 36.48852539 54.40795898 49.11352539 C63.97795898 49.11352539 73.54795898 49.11352539 83.40795898 49.11352539 C83.40795898 57.36352539 83.40795898 65.61352539 83.40795898 74.11352539 C73.50795898 74.11352539 63.60795898 74.11352539 53.40795898 74.11352539 C53.40795898 66.19352539 53.40795898 58.27352539 53.40795898 50.11352539 C39.54795898 49.61852539 39.54795898 49.61852539 25.40795898 49.11352539 C25.07795898 57.36352539 24.74795898 65.61352539 24.40795898 74.11352539 C26.33381836 74.10192383 28.25967773 74.09032227 30.24389648 74.07836914 C32.75691635 74.0689922 35.26993726 74.0598919 37.78295898 74.05102539 C39.05397461 74.04264648 40.32499023 74.03426758 41.63452148 74.02563477 C42.84624023 74.02241211 44.05795898 74.01918945 45.30639648 74.01586914 C46.4270752 74.01063232 47.54775391 74.00539551 48.70239258 74 C51.40795898 74.11352539 51.40795898 74.11352539 53.40795898 75.11352539 C53.40795898 83.36352539 53.40795898 91.61352539 53.40795898 100.11352539 C44.16795898 100.11352539 34.92795898 100.11352539 25.40795898 100.11352539 C25.40795898 108.69352539 25.40795898 117.27352539 25.40795898 126.11352539 C34.64795898 126.11352539 43.88795898 126.11352539 53.40795898 126.11352539 C53.40795898 134.69352539 53.40795898 143.27352539 53.40795898 152.11352539 C49.43859349 152.13644027 45.46939579 152.15636554 41.5 152.16845703 C40.14875512 152.17349596 38.79751573 152.18032716 37.44628906 152.18896484 C35.50775464 152.20104958 33.56918098 152.20622367 31.63061523 152.21118164 C30.46280518 152.21641846 29.29499512 152.22165527 28.09179688 152.22705078 C25.40795898 152.11352539 25.40795898 152.11352539 24.40795898 151.11352539 C24.32058253 149.25982928 24.30097745 147.40284998 24.31030273 145.54711914 C24.31280029 144.53447998 24.31529785 143.52184082 24.31787109 142.47851562 C24.3269751 141.18244385 24.3360791 139.88637207 24.34545898 138.55102539 C24.36608398 134.44665039 24.38670898 130.34227539 24.40795898 126.11352539 C14.50795898 126.11352539 4.60795898 126.11352539 -5.59204102 126.11352539 C-5.59204102 134.69352539 -5.59204102 143.27352539 -5.59204102 152.11352539 C4.30795898 152.11352539 14.20795898 152.11352539 24.40795898 152.11352539 C24.40795898 160.69352539 24.40795898 169.27352539 24.40795898 178.11352539 C33.97795898 178.11352539 43.54795898 178.11352539 53.40795898 178.11352539 C53.40795898 186.69352539 53.40795898 195.27352539 53.40795898 204.11352539 C44.16795898 204.11352539 34.92795898 204.11352539 25.40795898 204.11352539 C25.07795898 213.02352539 24.74795898 221.93352539 24.40795898 231.11352539 C14.50795898 231.11352539 4.60795898 231.11352539 -5.59204102 231.11352539 C-5.59204102 239.36352539 -5.59204102 247.61352539 -5.59204102 256.11352539 C-2.06516602 256.08258789 -2.06516602 256.08258789 1.53295898 256.05102539 C9.20942707 256.01841034 16.75365558 256.47566677 24.40795898 257.11352539 C24.40795898 265.03352539 24.40795898 272.95352539 24.40795898 281.11352539 C14.50795898 281.11352539 4.60795898 281.11352539 -5.59204102 281.11352539 C-5.59204102 273.19352539 -5.59204102 265.27352539 -5.59204102 257.11352539 C-8.23204102 256.78352539 -10.87204102 256.45352539 -13.59204102 256.11352539 C-13.59204102 196.05352539 -13.59204102 135.99352539 -13.59204102 74.11352539 C-10.95204102 73.78352539 -8.31204102 73.45352539 -5.59204102 73.11352539 C-5.59204102 65.52352539 -5.59204102 57.93352539 -5.59204102 50.11352539 C-2.7737991 48.70440443 -0.4195282 49.00168986 2.72827148 49.01586914 C3.98510742 49.0190918 5.24194336 49.02231445 6.53686523 49.02563477 C7.85557617 49.03401367 9.17428711 49.04239258 10.53295898 49.05102539 C11.8728011 49.0560405 13.21264499 49.06060339 14.55249023 49.06469727 C17.83766555 49.07651444 21.12281779 49.09445038 24.40795898 49.11352539 C24.40795898 40.53352539 24.40795898 31.95352539 24.40795898 23.11352539 C22.42795898 23.11352539 20.44795898 23.11352539 18.40795898 23.11352539 C17.74795898 22.45352539 17.08795898 21.79352539 16.40795898 21.11352539 C16.73795898 20.45352539 17.06795898 19.79352539 17.40795898 19.11352539 C16.74795898 19.44352539 16.08795898 19.77352539 15.40795898 20.11352539 C14.80421106 22.64926666 14.45014772 25.18807711 14.06811523 27.76586914 C13.40795898 30.11352539 13.40795898 30.11352539 10.40795898 32.11352539 C6.70136168 32.45672884 3.99995416 32.31505566 0.47045898 31.11352539 C-1.59204102 29.11352539 -1.59204102 29.11352539 -1.89672852 27.13305664 C-1.90384026 25.12399009 -1.7561692 23.11588923 -1.59204102 21.11352539 C0.38795898 21.44352539 2.36795898 21.77352539 4.40795898 22.11352539 C4.40795898 24.42352539 4.40795898 26.73352539 4.40795898 29.11352539 C6.38332643 28.76565831 6.38332643 28.76565831 8.40795898 28.11352539 C9.88628158 25.1568802 9.46828681 22.37122802 9.40795898 19.11352539 C5.77795898 18.12352539 2.14795898 17.13352539 -1.59204102 16.11352539 C-3.84169427 5.56827574 -3.84169427 5.56827574 -3.59204102 1.11352539 C-2.59204102 0.11352539 -2.59204102 0.11352539 0 0 Z \",fill:\"#616060\",transform:\"translate(13.592041015625,489.886474609375)\"})),_path38||(_path38=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C29.04 0 58.08 0 88 0 C88 7.26 88 14.52 88 22 C87 23 87 23 84.22436523 23.11352539 C83.01466064 23.10828857 81.80495605 23.10305176 80.55859375 23.09765625 C79.25341797 23.09443359 77.94824219 23.09121094 76.60351562 23.08789062 C75.2148431 23.07953401 73.82617123 23.07106905 72.4375 23.0625 C71.04492344 23.05748666 69.65234519 23.05292347 68.25976562 23.04882812 C64.83982549 23.03699442 61.4199075 23.01905831 58 23 C58 30.92 58 38.84 58 47 C47.875 48.125 47.875 48.125 43.96484375 48.09765625 C42.84130493 48.09390991 42.84130493 48.09390991 41.69506836 48.09008789 C40.33007202 48.07643188 40.33007202 48.07643188 38.9375 48.0625 C34.5134375 48.0315625 34.5134375 48.0315625 30 48 C30 39.75 30 31.5 30 23 C29.34 23 28.68 23 28 23 C27.97113016 26.97915159 27.95324594 30.95827653 27.9375 34.9375 C27.92493164 36.64196289 27.92493164 36.64196289 27.91210938 38.38085938 C27.90727539 40.00024414 27.90727539 40.00024414 27.90234375 41.65234375 C27.89448853 43.15269165 27.89448853 43.15269165 27.88647461 44.68334961 C27.73818905 46.96207228 27.73818905 46.96207228 29 48 C29.08726223 49.78071246 29.10699041 51.5648314 29.09765625 53.34765625 C29.09515869 54.31968994 29.09266113 55.29172363 29.09008789 56.29321289 C29.08098389 57.53707764 29.07187988 58.78094238 29.0625 60.0625 C29.041875 64.001875 29.02125 67.94125 29 72 C38.24 72 47.48 72 57 72 C57.02318213 76.33763484 57.04302549 80.67504746 57.05493164 85.01269531 C57.05990456 86.48275488 57.06668527 87.95280965 57.07543945 89.42285156 C57.18295749 107.96655129 57.18295749 107.96655129 56 116 C55 117 55 117 52.40795898 117.11352539 C51.28204346 117.10828857 50.15612793 117.10305176 48.99609375 117.09765625 C47.17368164 117.09282227 47.17368164 117.09282227 45.31445312 117.08789062 C44.03505859 117.07951172 42.75566406 117.07113281 41.4375 117.0625 C40.15423828 117.05798828 38.87097656 117.05347656 37.54882812 117.04882812 C34.3658658 117.03699555 31.18292726 117.01905944 28 117 C28 124.59 28 132.18 28 140 C18.27451722 140.7339987 8.75797358 141.10059767 -1 141 C-1 133.41 -1 125.82 -1 118 C-10.9 118 -20.8 118 -31 118 C-31 110.74 -31 103.48 -31 96 C-33.15402344 95.93941406 -35.30804688 95.87882812 -37.52734375 95.81640625 C-39.6057501 95.75465759 -41.68409975 95.69125309 -43.76245117 95.62768555 C-45.2106424 95.5842837 -46.65888654 95.54261256 -48.10717773 95.50268555 C-50.18489559 95.44510938 -52.26234573 95.38137972 -54.33984375 95.31640625 C-55.59144287 95.27974854 -56.84304199 95.24309082 -58.13256836 95.20532227 C-61 95 -61 95 -62 94 C-62.41269254 86.63222429 -61.90579955 79.3110964 -61 72 C-58.22936418 71.82931176 -55.4585683 71.66339367 -52.6875 71.5 C-51.53797852 71.42845703 -51.53797852 71.42845703 -50.36523438 71.35546875 C-44.21012102 70.9979103 -38.19448315 71 -32 71 C-31.67 63.41 -31.34 55.82 -31 48 C-21.43 47.67 -11.86 47.34 -2 47 C-1.67 39.08 -1.34 31.16 -1 23 C-0.34 23 0.32 23 1 23 C0.67 21.35 0.34 19.7 0 18 C0 12.06 0 6.12 0 0 Z \",fill:\"#716F6E\",transform:\"translate(367,0)\"})),_path39||(_path39=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30.375 12.375 30.375 12.375 30.47802734 16.27490234 C30.53144287 17.79011475 30.53144287 17.79011475 30.5859375 19.3359375 C30.6173584 20.37282715 30.6487793 21.4097168 30.68115234 22.47802734 C30.75954472 25.16809835 30.75954472 25.16809835 33 27 C22.11 26.67 11.22 26.34 0 26 C0 34.25 0 42.5 0 51 C9.9 51 19.8 51 30 51 C30 59.25 30 67.5 30 76 C39.24 75.67 48.48 75.34 58 75 C58.66 73.02 59.32 71.04 60 69 C60.33 69 60.66 69 61 69 C61 71.31 61 73.62 61 76 C70.9 76 80.8 76 91 76 C91.33 68.08 91.66 60.16 92 52 C89.77378906 52.01160156 87.54757812 52.02320313 85.25390625 52.03515625 C83.10603986 52.04294722 80.95817503 52.04902375 78.81030273 52.05493164 C77.31355082 52.05997121 75.81680384 52.06680287 74.32006836 52.07543945 C72.17300193 52.08752159 70.02600038 52.09323191 67.87890625 52.09765625 C65.93866577 52.10551147 65.93866577 52.10551147 63.95922852 52.11352539 C61 52 61 52 60 51 C59.90050923 49.24314326 59.8691974 47.48232667 59.8671875 45.72265625 C59.86589844 44.65208984 59.86460937 43.58152344 59.86328125 42.47851562 C59.86714844 41.35123047 59.87101563 40.22394531 59.875 39.0625 C59.87113281 37.93908203 59.86726562 36.81566406 59.86328125 35.65820312 C59.86457031 34.58634766 59.86585938 33.51449219 59.8671875 32.41015625 C59.86831543 31.42152588 59.86944336 30.43289551 59.87060547 29.41430664 C60 27 60 27 61 25 C70.9 25 80.8 25 91 25 C91.33 16.75 91.66 8.5 92 0 C101.57 0 111.14 0 121 0 C121 8.58 121 17.16 121 26 C111.43 26 101.86 26 92 26 C92 34.25 92 42.5 92 51 C101.57 50.67 111.14 50.34 121 50 C121 58.91 121 67.82 121 77 C111.76 77 102.52 77 93 77 C92.67 84.92 92.34 92.84 92 101 C81.77 101 71.54 101 61 101 C61 93.08 61 85.16 61 77 C51.43 77 41.86 77 32 77 C32.03920482 82.56352869 32.03920482 82.56352869 32.09008789 88.12695312 C32.10522097 92.43451059 31.85779446 96.55470892 31.25610352 100.83007812 C30.72075914 105.36596066 30.62006662 109.93882742 30.4375 114.5 C30.37272461 116.01980469 30.37272461 116.01980469 30.30664062 117.5703125 C30.20150808 120.0467679 30.09936163 122.52330749 30 125 C19.95030838 125.97875258 10.09283664 126.08205558 0 126 C0 134.25 0 142.5 0 151 C-10.23 151 -20.46 151 -31 151 C-31 143.08 -31 135.16 -31 127 C-38.67305567 126.71150915 -38.67305567 126.71150915 -46.34643555 126.43188477 C-47.308479 126.39377686 -48.27052246 126.35566895 -49.26171875 126.31640625 C-50.24100342 126.27974854 -51.22028809 126.24309082 -52.22924805 126.20532227 C-55 126 -55 126 -60 125 C-60 117.08 -60 109.16 -60 101 C-50.76 100.67 -41.52 100.34 -32 100 C-32.0309375 94.8025 -32.0309375 94.8025 -32.0625 89.5 C-32.09826533 76.98038945 -31.62978169 64.50183651 -31 52 C-30.67 52 -30.34 52 -30 52 C-30 59.92 -30 67.84 -30 76 C-20.43 76 -10.86 76 -1 76 C-1 67.75 -1 59.5 -1 51 C-8.43424086 51.03950954 -8.43424086 51.03950954 -15.8684082 51.09008789 C-16.79484131 51.09258545 -17.72127441 51.09508301 -18.67578125 51.09765625 C-19.62364502 51.10289307 -20.57150879 51.10812988 -21.5480957 51.11352539 C-24 51 -24 51 -27 50 C-27 49.01 -27 48.02 -27 47 C-28.485 47.495 -28.485 47.495 -30 48 C-30 40.74 -30 33.48 -30 26 C-26.70265354 24.90088451 -24.27041255 24.8860544 -20.80078125 24.90234375 C-19.59228516 24.90556641 -18.38378906 24.90878906 -17.13867188 24.91210938 C-15.2447168 24.92467773 -15.2447168 24.92467773 -13.3125 24.9375 C-11.40114258 24.94426758 -11.40114258 24.94426758 -9.45117188 24.95117188 C-6.3007613 24.96297117 -3.15037481 24.98090682 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#615F5E\",transform:\"translate(883,413)\"})),_path40||(_path40=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C20.13 0 40.26 0 61 0 C61 4.62 61 9.24 61 14 C70.9 14 80.8 14 91 14 C91 21.92 91 29.84 91 38 C81.1 38 71.2 38 61 38 C61 46.58 61 55.16 61 64 C63.08183594 63.98839844 65.16367187 63.97679687 67.30859375 63.96484375 C69.31746298 63.95789265 71.32633251 63.95097611 73.33520508 63.94506836 C74.73495228 63.9400292 76.1346942 63.93319784 77.53442383 63.92456055 C79.54245777 63.9124768 81.55052957 63.90730193 83.55859375 63.90234375 C85.37315063 63.89448853 85.37315063 63.89448853 87.22436523 63.88647461 C90 64 90 64 91 65 C91.08748207 66.92667507 91.10697334 68.85651861 91.09765625 70.78515625 C91.09515869 71.83840088 91.09266113 72.89164551 91.09008789 73.97680664 C91.08098389 75.32508545 91.07187988 76.67336426 91.0625 78.0625 C91.041875 82.331875 91.02125 86.60125 91 91 C81.1 91 71.2 91 61 91 C61 82.42 61 73.84 61 65 C51.1 65 41.2 65 31 65 C31 73.91 31 82.82 31 92 C40.9 92 50.8 92 61 92 C61 99.92 61 107.84 61 116 C67.17648952 116.28726595 67.17648952 116.28726595 73.35327148 116.56811523 C78.93772732 116.8376232 84.44937229 117.32805219 90 118 C90 118.33 90 118.66 90 119 C88.87078125 119.185625 88.87078125 119.185625 87.71875 119.375 C77.85806973 121.2896952 69.78123861 125.25429852 61 130 C61 125.71 61 121.42 61 117 C51.1 117 41.2 117 31 117 C30.625 109.5625 30.625 109.5625 30.52197266 107.21704102 C30.41954818 105.47234889 30.21257835 103.73471952 30 102 C29.01 101.505 29.01 101.505 28 101 C28.495 107.435 28.495 107.435 29 114 C28.34 114 27.68 114 27 114 C27 114.66 27 115.32 27 116 C27.99 116.33 28.98 116.66 30 117 C30 125.25 30 133.5 30 142 C20.1 142 10.2 142 0 142 C-0.72555783 125.31216981 -1.13919827 108.70165041 -1 92 C-1 91.67 -1 91.34 -1 91 C-10.9 91 -20.8 91 -31 91 C-31 82.42 -31 73.84 -31 65 C-20.77 65 -10.54 65 0 65 C-0.495 64.505 -0.495 64.505 -1 64 C-1.08737645 62.14630389 -1.10698153 60.28932459 -1.09765625 58.43359375 C-1.09515869 57.42095459 -1.09266113 56.40831543 -1.09008789 55.36499023 C-1.08098389 54.06891846 -1.07187988 52.77284668 -1.0625 51.4375 C-1.041875 47.333125 -1.02125 43.22875 -1 39 C-10.9 39 -20.8 39 -31 39 C-31 30.75 -31 22.5 -31 14 C-21.1 14 -11.2 14 -1 14 C-0.27412466 17.62937669 0.12079859 20.27621783 0.09765625 23.86328125 C0.09443359 24.74951172 0.09121094 25.63574219 0.08789062 26.54882812 C0.07951172 27.46083984 0.07113281 28.37285156 0.0625 29.3125 C0.05798828 30.24384766 0.05347656 31.17519531 0.04882812 32.13476562 C0.03709234 34.42324373 0.02067363 36.71158808 0 39 C1.2375 38.89171875 1.2375 38.89171875 2.5 38.78125 C11.71086333 38.04109134 20.76091505 37.9189554 30 38 C30 29.75 30 21.5 30 13 C20.1 13 10.2 13 0 13 C0 8.71 0 4.42 0 0 Z \",fill:\"#656463\",transform:\"translate(546,243)\"})),_path41||(_path41=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.78713379 0.00249756 1.57426758 0.00499512 2.38525391 0.00756836 C3.81490479 0.02122437 3.81490479 0.02122437 5.2734375 0.03515625 C9.9140625 0.06609375 9.9140625 0.06609375 14.6484375 0.09765625 C14.6484375 9.00765625 14.6484375 17.91765625 14.6484375 27.09765625 C24.5484375 27.09765625 34.4484375 27.09765625 44.6484375 27.09765625 C44.60892796 19.66341539 44.60892796 19.66341539 44.55834961 12.22924805 C44.55585205 11.30281494 44.55335449 10.37638184 44.55078125 9.421875 C44.54554443 8.47401123 44.54030762 7.52614746 44.53491211 6.54956055 C44.6484375 4.09765625 44.6484375 4.09765625 45.6484375 1.09765625 C60.0034375 0.60265625 60.0034375 0.60265625 74.6484375 0.09765625 C74.6484375 9.00765625 74.6484375 17.91765625 74.6484375 27.09765625 C65.0784375 27.09765625 55.5084375 27.09765625 45.6484375 27.09765625 C45.6484375 35.34765625 45.6484375 43.59765625 45.6484375 52.09765625 C55.2184375 52.09765625 64.7884375 52.09765625 74.6484375 52.09765625 C74.6484375 60.34765625 74.6484375 68.59765625 74.6484375 77.09765625 C65.0784375 77.09765625 55.5084375 77.09765625 45.6484375 77.09765625 C45.68789132 83.82865433 45.68789132 83.82865433 45.73852539 90.55957031 C45.74102295 91.40229492 45.74352051 92.24501953 45.74609375 93.11328125 C45.75133057 93.97211914 45.75656738 94.83095703 45.76196289 95.71582031 C45.6484375 98.09765625 45.6484375 98.09765625 44.6484375 102.09765625 C33.4284375 102.09765625 22.2084375 102.09765625 10.6484375 102.09765625 C11.9684375 102.42765625 13.2884375 102.75765625 14.6484375 103.09765625 C14.6484375 111.67765625 14.6484375 120.25765625 14.6484375 129.09765625 C24.5484375 129.09765625 34.4484375 129.09765625 44.6484375 129.09765625 C44.6484375 137.01765625 44.6484375 144.93765625 44.6484375 153.09765625 C34.7484375 152.76765625 24.8484375 152.43765625 14.6484375 152.09765625 C14.1534375 144.67265625 14.1534375 144.67265625 13.6484375 137.09765625 C13.6690625 138.47953125 13.6896875 139.86140625 13.7109375 141.28515625 C13.76197704 144.70480536 13.40141191 147.75966735 12.6484375 151.09765625 C2.92729441 151.93646058 -6.60033353 152.18964898 -16.3515625 152.09765625 C-16.3515625 144.50765625 -16.3515625 136.91765625 -16.3515625 129.09765625 C-26.2515625 129.09765625 -36.1515625 129.09765625 -46.3515625 129.09765625 C-46.3515625 120.18765625 -46.3515625 111.27765625 -46.3515625 102.09765625 C-36.7815625 101.76765625 -27.2115625 101.43765625 -17.3515625 101.09765625 C-16.6915625 85.25765625 -16.0315625 69.41765625 -15.3515625 53.09765625 C-5.4515625 53.09765625 4.4484375 53.09765625 14.6484375 53.09765625 C14.6484375 44.84765625 14.6484375 36.59765625 14.6484375 28.09765625 C-0.2015625 27.60265625 -0.2015625 27.60265625 -15.3515625 27.09765625 C-15.3515625 18.51765625 -15.3515625 9.93765625 -15.3515625 1.09765625 C-4.1015625 -0.02734375 -4.1015625 -0.02734375 0 0 Z \",fill:\"#656462\",transform:\"translate(929.3515625,693.90234375)\"})),_path42||(_path42=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.62 0 9.24 0 14 0 C14 149.16 14 298.32 14 452 C9.38 452 4.76 452 0 452 C-0.0268245 447.85412418 -0.04675315 443.70841962 -0.0625 439.5625 C-0.07087891 438.37849609 -0.07925781 437.19449219 -0.08789062 435.97460938 C-0.09111328 434.84990234 -0.09433594 433.72519531 -0.09765625 432.56640625 C-0.10289307 431.52427979 -0.10812988 430.48215332 -0.11352539 429.40844727 C0 427 0 427 1 426 C4.96 426 8.92 426 13 426 C13 417.42 13 408.84 13 400 C9.04 400 5.08 400 1 400 C1 391.42 1 382.84 1 374 C4.96 374 8.92 374 13 374 C13 340.34 13 306.68 13 272 C8.71 272 4.42 272 0 272 C0 263.75 0 255.5 0 247 C-9.9 247 -19.8 247 -30 247 C-30 238.75 -30 230.5 -30 222 C-20.1 222 -10.2 222 0 222 C1.00005304 225.00015912 1.11575585 226.97423756 1.09765625 230.10546875 C1.09282227 231.57983398 1.09282227 231.57983398 1.08789062 233.08398438 C1.07532227 234.62022461 1.07532227 234.62022461 1.0625 236.1875 C1.05798828 237.22326172 1.05347656 238.25902344 1.04882812 239.32617188 C1.03704026 241.8841392 1.01910482 244.44207686 1 247 C4.96 247 8.92 247 13 247 C13 221.92 13 196.84 13 171 C9.04 171 5.08 171 1 171 C0 170 0 170 -0.11352539 167.49975586 C-0.10567017 165.87372437 -0.10567017 165.87372437 -0.09765625 164.21484375 C-0.09282227 162.46010742 -0.09282227 162.46010742 -0.08789062 160.66992188 C-0.07532227 158.82237305 -0.07532227 158.82237305 -0.0625 156.9375 C-0.05798828 155.70193359 -0.05347656 154.46636719 -0.04882812 153.19335938 C-0.03699618 150.12888587 -0.01906008 147.06443707 0 144 C4.29 144 8.58 144 13 144 C13 135.09 13 126.18 13 117 C9.04 117 5.08 117 1 117 C1 108.75 1 100.5 1 92 C-9.23 92 -19.46 92 -30 92 C-30 83.09 -30 74.18 -30 65 C-20.1 65 -10.2 65 0 65 C0.33 56.42 0.66 47.84 1 39 C4.63 39 8.26 39 12 39 C12.33 38.67 12.66 38.34 13 38 C9.37 38 5.74 38 2 38 C1.67 33.38 1.34 28.76 1 24 C-5.26342243 27.75805346 -9.57197233 32.29106956 -14.27734375 37.81640625 C-17.6940269 41.73424496 -21.35202323 45.24856538 -25.1875 48.75 C-33.58090279 56.52464594 -41.67402564 64.58642599 -49.75 72.6875 C-50.67829117 73.61858582 -50.67829117 73.61858582 -51.62533569 74.56848145 C-54.46280406 77.41569022 -57.29844707 80.26469846 -60.13183594 83.1159668 C-62.74901875 85.74952939 -65.37461456 88.37461456 -68 91 C-68.79019531 91.80179687 -69.58039062 92.60359375 -70.39453125 93.4296875 C-74.2206918 97.29911642 -78.03605783 101.10354321 -82.1875 104.625 C-86.21648879 108.06317984 -89.61962337 111.93298437 -93 116 C-93 109.91655409 -87.20170671 105.07866057 -83.125 100.9375 C-80.51937475 98.39120588 -77.83924115 95.98219378 -75.0625 93.625 C-73.70335725 92.42226653 -72.34950003 91.21354294 -71 90 C-70.1853125 89.29617188 -69.370625 88.59234375 -68.53125 87.8671875 C-60.35686816 80.02909352 -61.86134341 77.92015109 -61 65 C-81.46 65 -101.92 65 -123 65 C-123 56.75 -123 48.5 -123 40 C-112.77 40 -102.54 40 -92 40 C-92 31.75 -92 23.5 -92 15 C-81.94614806 14.29446653 -72.08150835 13.89498429 -62 14 C-61.67 22.58 -61.34 31.16 -61 40 C-50.44 39.67 -39.88 39.34 -29 39 C-29.33 38.67 -29.66 38.34 -30 38 C-30.08726223 36.21928754 -30.10699041 34.4351686 -30.09765625 32.65234375 C-30.09515869 31.68031006 -30.09266113 30.70827637 -30.09008789 29.70678711 C-30.08098389 28.46292236 -30.07187988 27.21905762 -30.0625 25.9375 C-30.041875 21.998125 -30.02125 18.05875 -30 14 C-20.1 14 -10.2 14 0 14 C0 9.38 0 4.76 0 0 Z \",fill:\"#8C8B89\",transform:\"translate(760,242)\"})),_path43||(_path43=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.66195231 3.27039855 5.14882055 6.60619444 7.5625 10.0625 C20.77826902 28.20370323 39.25654396 44.61420958 62 49 C63.46520563 49.16977889 64.93149226 49.33034883 66.3984375 49.484375 C78.85791368 50.89827008 78.85791368 50.89827008 82.2109375 54.1328125 C83.625 56.6875 83.625 56.6875 84.796875 59.375 C87.78034349 65.8843858 94.46451092 70.425848 99.796875 75.0234375 C105.57685523 80.2090226 111.07564322 85.72665253 116.12109375 91.62890625 C120.9555799 97.20209504 126.25161301 102.32197121 131.5 107.5 C137.34945858 113.2710426 143.13108468 119.02338521 148.47509766 125.27490234 C150.80158155 127.9068164 153.32649525 130.21084338 155.9375 132.5625 C156.45111084 133.02793213 156.96472168 133.49336426 157.49389648 133.97290039 C161.06735649 137.20092034 164.69321746 140.36569469 168.37890625 143.46484375 C170 145 170 145 173 149 C148.25 148.67 123.5 148.34 98 148 C97.67 143.38 97.34 138.76 97 134 C87.43 133.67 77.86 133.34 68 133 C68 137.95 68 142.9 68 148 C58.1 148 48.2 148 38 148 C38 134.47 38 120.94 38 107 C52.94598765 105.85030864 52.94598765 105.85030864 60.3125 105.9375 C62.849375 105.958125 65.38625 105.97875 68 106 C68 97.75 68 89.5 68 81 C71.465 80.505 71.465 80.505 75 80 C70.48631748 79.12217076 66.22780021 78.8833562 61.6328125 78.90234375 C60.95322479 78.9037587 60.27363708 78.90517365 59.57345581 78.90663147 C57.42392388 78.91218482 55.27449992 78.92472831 53.125 78.9375 C51.65885568 78.94252104 50.19270971 78.94708289 48.7265625 78.95117188 C45.15096759 78.96128385 41.57560326 78.98086776 38 79 C38 70.75 38 62.5 38 54 C34.37 54 30.74 54 27 54 C23.59918935 53.85777043 20.20931293 53.69885579 16.8125 53.5 C13.904375 53.335 10.99625 53.17 8 53 C7.505 40.13 7.505 40.13 7 27 C-2.9 27 -12.8 27 -23 27 C-23 19.08 -23 11.16 -23 3 C-15.41 2.67 -7.82 2.34 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#656463\",transform:\"translate(569,588)\"})),_path44||(_path44=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.33 7.59 1.66 15.18 2 23 C1.34 23 0.68 23 0 23 C0.00523682 23.72179443 0.01047363 24.44358887 0.01586914 25.18725586 C0.03657358 28.43732849 0.04963918 31.68738728 0.0625 34.9375 C0.07087891 36.07380859 0.07925781 37.21011719 0.08789062 38.38085938 C0.09111328 39.46044922 0.09433594 40.54003906 0.09765625 41.65234375 C0.10289307 42.65257568 0.10812988 43.65280762 0.11352539 44.68334961 C0 47 0 47 -1 48 C-3.14558827 48.08775605 -5.29404421 48.10695219 -7.44140625 48.09765625 C-8.74658203 48.09443359 -10.05175781 48.09121094 -11.39648438 48.08789062 C-12.7851569 48.07953401 -14.17382877 48.07106905 -15.5625 48.0625 C-16.95507656 48.05748666 -18.34765481 48.05292347 -19.74023438 48.04882812 C-23.1601987 48.03699434 -26.58007844 48.0205088 -30 48 C-29.98839844 49.07378906 -29.97679687 50.14757813 -29.96484375 51.25390625 C-29.95545685 52.69010241 -29.94635762 54.12630048 -29.9375 55.5625 C-29.92912109 56.26697266 -29.92074219 56.97144531 -29.91210938 57.69726562 C-29.89117397 62.24024798 -30.25199318 66.51784892 -31 71 C-40.68570681 72.19471273 -50.25536508 72.07326793 -60 72 C-60 79.26 -60 86.52 -60 94 C-58.00195312 94.06058594 -56.00390625 94.12117188 -53.9453125 94.18359375 C-52.01252169 94.24616611 -50.07973178 94.30877104 -48.14697266 94.37231445 C-46.14105193 94.43698251 -44.13497772 94.49683106 -42.12890625 94.55664062 C-40.87207031 94.59853516 -39.61523438 94.64042969 -38.3203125 94.68359375 C-37.15773926 94.72025146 -35.99516602 94.75690918 -34.79736328 94.79467773 C-32 95 -32 95 -30 96 C-30 103.26 -30 110.52 -30 118 C-20.1 118 -10.2 118 0 118 C0 125.59 0 133.18 0 141 C-9.9 141 -19.8 141 -30 141 C-30 148.92 -30 156.84 -30 165 C-40.23 165 -50.46 165 -61 165 C-61 173.25 -61 181.5 -61 190 C-51.1 190 -41.2 190 -31 190 C-31 197.92 -31 205.84 -31 214 C-41.23 214 -51.46 214 -62 214 C-62 206.08 -62 198.16 -62 190 C-71.57 190 -81.14 190 -91 190 C-91 181.75 -91 173.5 -91 165 C-100.57 165 -110.14 165 -120 165 C-120 157.08 -120 149.16 -120 141 C-129.9 141 -139.8 141 -150 141 C-151.18451025 115.82915718 -151.18451025 115.82915718 -151 104 C-150.67 104 -150.34 104 -150 104 C-150 108.29 -150 112.58 -150 117 C-147.00292969 116.98259766 -147.00292969 116.98259766 -143.9453125 116.96484375 C-142.01253382 116.95789131 -140.07975482 116.95097395 -138.14697266 116.94506836 C-136.14093449 116.93755964 -134.13491798 116.9248553 -132.12890625 116.91210938 C-130.24365234 116.90727539 -130.24365234 116.90727539 -128.3203125 116.90234375 C-126.57645264 116.89448853 -126.57645264 116.89448853 -124.79736328 116.88647461 C-122 117 -122 117 -120 118 C-120 125.26 -120 132.52 -120 140 C-110.1 140.33 -100.2 140.66 -90 141 C-90 148.59 -90 156.18 -90 164 C-80.43 164 -70.86 164 -61 164 C-61 156.41 -61 148.82 -61 141 C-49.75 139.875 -49.75 139.875 -45.6484375 139.90234375 C-44.86130371 139.90484131 -44.07416992 139.90733887 -43.26318359 139.90991211 C-42.31008301 139.91901611 -41.35698242 139.92812012 -40.375 139.9375 C-35.734375 139.9684375 -35.734375 139.9684375 -31 140 C-31 132.41 -31 124.82 -31 117 C-40.9 117 -50.8 117 -61 117 C-61 110.07 -61 103.14 -61 96 C-70.24 96 -79.48 96 -89 96 C-89.33 88.08 -89.66 80.16 -90 72 C-86.41442992 71.10360748 -83.79057808 70.88372154 -80.140625 70.90234375 C-79.02558594 70.90556641 -77.91054688 70.90878906 -76.76171875 70.91210938 C-75.60285156 70.92048828 -74.44398438 70.92886719 -73.25 70.9375 C-72.07566406 70.94201172 -70.90132813 70.94652344 -69.69140625 70.95117188 C-66.79424905 70.96294894 -63.89711807 70.98088412 -61 71 C-61 63.41 -61 55.82 -61 48 C-70.24 48 -79.48 48 -89 48 C-89.309375 41.874375 -89.309375 41.874375 -89.625 35.625 C-89.69541504 34.33803223 -89.76583008 33.05106445 -89.83837891 31.72509766 C-89.88397949 30.71495605 -89.92958008 29.70481445 -89.9765625 28.6640625 C-90.02893066 27.62717285 -90.08129883 26.5902832 -90.13525391 25.52197266 C-90 23 -90 23 -88 21 C-85.20263672 20.68115234 -85.20263672 20.68115234 -81.6796875 20.5859375 C-79.79443359 20.52792969 -79.79443359 20.52792969 -77.87109375 20.46875 C-75.89302734 20.42234375 -75.89302734 20.42234375 -73.875 20.375 C-72.53513082 20.33681971 -71.19528617 20.29776794 -69.85546875 20.2578125 C-66.57054852 20.16328242 -63.28529294 20.08054267 -60 20 C-60 28.91 -60 37.82 -60 47 C-50.43 47 -40.86 47 -31 47 C-30.67 38.75 -30.34 30.5 -30 22 C-20.1 22 -10.2 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#5F5E5C\",transform:\"translate(366,0)\"})),_path45||(_path45=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.59 30 15.18 30 23 C37.20902386 22.96069798 37.20902386 22.96069798 44.41796875 22.90991211 C48.83177238 22.89785041 53.12640043 22.93450631 57.5 23.56640625 C60.77331275 23.97191709 61.96812568 23.77142364 65 23 C66.72084181 22.90940239 68.4447451 22.86936074 70.16796875 22.8671875 C71.63073242 22.86525391 71.63073242 22.86525391 73.12304688 22.86328125 C74.13431641 22.86714844 75.14558594 22.87101562 76.1875 22.875 C77.72180664 22.86919922 77.72180664 22.86919922 79.28710938 22.86328125 C80.25841797 22.86457031 81.22972656 22.86585937 82.23046875 22.8671875 C83.56694458 22.86887939 83.56694458 22.86887939 84.93041992 22.87060547 C87 23 87 23 88 24 C88.15751781 25.34006 88.24974802 26.68789921 88.31420898 28.03564453 C88.37669579 29.32727005 88.37669579 29.32727005 88.44044495 30.64498901 C88.47943405 31.58972076 88.51842316 32.53445251 88.55859375 33.5078125 C88.60084579 34.48855743 88.64309784 35.46930237 88.68663025 36.47976685 C89.13710027 47.94414682 89.10984952 59.40390821 89.0625 70.875 C89.05746503 73.03906144 89.05290572 75.20312404 89.04882812 77.3671875 C89.03886828 82.57817877 89.01926827 87.78900238 89 93 C98.57 93 108.14 93 118 93 C118 100.92 118 108.84 118 117 C127.57 117.33 137.14 117.66 147 118 C147 125.92 147 133.84 147 142 C137.43 142 127.86 142 118 142 C118 134.08 118 126.16 118 118 C108.43 118 98.86 118 89 118 C89 123.61 89 129.22 89 135 C84.6842186 131.43478928 80.57837078 127.71412126 76.5625 123.8125 C75.69753906 122.97332031 74.83257812 122.13414062 73.94140625 121.26953125 C72 119 72 119 72 116 C77.28 116 82.56 116 88 116 C88 108.41 88 100.82 88 93 C78.76 93 69.52 93 60 93 C60 97.62 60 102.24 60 107 C55.60168469 103.31977699 51.46241588 99.545708 47.48046875 95.41796875 C46.03645015 93.89501581 46.03645015 93.89501581 44 93 C44 92.34 44 91.68 44 91 C43.34 91 42.68 91 42 91 C42 90.34 42 89.68 42 89 C41.43796875 88.77699219 40.8759375 88.55398437 40.296875 88.32421875 C37.30788543 86.60097476 35.50680733 84.41789063 33.25 81.8125 C29.76733083 77.79619604 26.14090608 74.32601325 22.10986328 70.86303711 C18.51972388 67.69289666 15.17687997 64.2812335 11.8125 60.875 C11.12736328 60.18535156 10.44222656 59.49570313 9.73632812 58.78515625 C8.4594968 57.4997226 7.18370919 56.21325055 5.90942383 54.92529297 C2.01969309 51.00323485 -1.90020325 47.12409223 -5.8984375 43.3125 C-7.7243539 41.54207454 -9.54986353 39.77122948 -11.375 38 C-12.31472656 37.11054687 -13.25445312 36.22109375 -14.22265625 35.3046875 C-15.54716797 34.00917969 -15.54716797 34.00917969 -16.8984375 32.6875 C-17.70974121 31.90761719 -18.52104492 31.12773438 -19.35693359 30.32421875 C-19.89914551 29.55722656 -20.44135742 28.79023437 -21 28 C-20.67 26.35 -20.34 24.7 -20 23 C-13.73 23 -7.46 23 -1 23 C-0.67 15.41 -0.34 7.82 0 0 Z \",fill:\"#737170\",transform:\"translate(127,72)\"})),_path46||(_path46=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.26 29 14.52 29 22 C30.98 21.67 32.96 21.34 35 21 C37.01619049 20.86090105 39.03501874 20.7564684 41.0546875 20.68359375 C42.71757812 20.62075195 42.71757812 20.62075195 44.4140625 20.55664062 C46.12722656 20.49766602 46.12722656 20.49766602 47.875 20.4375 C49.0403125 20.39431641 50.205625 20.35113281 51.40625 20.30664062 C54.27072625 20.20098371 57.13528321 20.09888201 60 20 C60 21.65 60 23.3 60 25 C61.00417969 24.9278125 62.00835937 24.855625 63.04296875 24.78125 C71.71597073 24.18380966 80.29985588 23.90113473 89 24 C89.33 31.92 89.66 39.84 90 48 C99.57 48 109.14 48 119 48 C119 54.27 119 60.54 119 67 C109.1 67 99.2 67 89 67 C89 73.93 89 80.86 89 88 C85.0306345 88.02291487 81.0614368 88.04284015 77.09204102 88.05493164 C75.74079614 88.05997057 74.38955674 88.06680177 73.03833008 88.07543945 C71.09979566 88.08752419 69.161222 88.09269828 67.22265625 88.09765625 C65.47094116 88.10551147 65.47094116 88.10551147 63.68383789 88.11352539 C61 88 61 88 60 87 C57.852551 86.98318911 55.70448048 87.03748777 53.55859375 87.12109375 C51.60083008 87.19360352 51.60083008 87.19360352 49.60351562 87.26757812 C48.21483925 87.32410831 46.82616743 87.38075041 45.4375 87.4375 C44.04493979 87.49070547 42.65236174 87.54344596 41.25976562 87.59570312 C37.83964019 87.72588091 34.41977076 87.8608618 31 88 C30.96241577 89.1281311 30.96241577 89.1281311 30.92407227 90.27905273 C30.80849486 93.66539196 30.68559655 97.05142613 30.5625 100.4375 C30.52318359 101.62150391 30.48386719 102.80550781 30.44335938 104.02539062 C30.40146484 105.15009766 30.35957031 106.27480469 30.31640625 107.43359375 C30.27974854 108.47572021 30.24309082 109.51784668 30.20532227 110.59155273 C30 113 30 113 29 114 C26.85441173 114.08775605 24.70595579 114.10695219 22.55859375 114.09765625 C21.25341797 114.09443359 19.94824219 114.09121094 18.60351562 114.08789062 C17.2148431 114.07953401 15.82617123 114.07106905 14.4375 114.0625 C13.04492344 114.05748666 11.65234519 114.05292347 10.25976562 114.04882812 C6.83982549 114.03699442 3.4199075 114.01905831 0 114 C0 105.42 0 96.84 0 88 C-9.57 88 -19.14 88 -29 88 C-29 80.74 -29 73.48 -29 66 C-38.57 66 -48.14 66 -58 66 C-58.020625 63.4425 -58.04125 60.885 -58.0625 58.25 C-58.071604 57.45110352 -58.08070801 56.65220703 -58.09008789 55.82910156 C-58.10358903 52.37106862 -57.93376884 49.321503 -57 46 C-52.70834738 45.97108051 -48.41671964 45.95322882 -44.125 45.9375 C-42.29001953 45.92493164 -42.29001953 45.92493164 -40.41796875 45.91210938 C-38.66806641 45.90727539 -38.66806641 45.90727539 -36.8828125 45.90234375 C-35.26463623 45.89448853 -35.26463623 45.89448853 -33.61376953 45.88647461 C-31 46 -31 46 -29 47 C-28 52 -28 52 -28 66 C-18.76 66 -9.52 66 0 66 C0 72.93 0 79.86 0 87 C9.57 87 19.14 87 29 87 C29 79.74 29 72.48 29 65 C25.98552734 65.01740234 25.98552734 65.01740234 22.91015625 65.03515625 C20.97078576 65.0421074 19.03141497 65.04902396 17.09204102 65.05493164 C15.74079614 65.05997057 14.38955674 65.06680177 13.03833008 65.07543945 C11.09979566 65.08752419 9.161222 65.09269828 7.22265625 65.09765625 C5.47094116 65.10551147 5.47094116 65.10551147 3.68383789 65.11352539 C1 65 1 65 0 64 C-0.08651611 62.58429877 -0.10704904 61.164405 -0.09765625 59.74609375 C-0.09515869 58.9770874 -0.09266113 58.20808105 -0.09008789 57.41577148 C-0.08098389 56.43294189 -0.07187988 55.4501123 -0.0625 54.4375 C-0.041875 51.323125 -0.02125 48.20875 0 45 C9.24 45 18.48 45 28 45 C28.33 37.74 28.66 30.48 29 23 C19.43 22.67 9.86 22.34 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#72716F\",transform:\"translate(216,892)\"})),_path47||(_path47=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C130.02 0 260.04 0 394 0 C394 0.33 394 0.66 394 1 C384.1 1 374.2 1 364 1 C364 2.65 364 4.3 364 6 C359.74585377 6.02465622 355.49174502 6.04283899 351.23754883 6.05493164 C349.78929927 6.05997101 348.34105483 6.06680253 346.89282227 6.07543945 C344.81525412 6.08752247 342.73775303 6.09323211 340.66015625 6.09765625 C339.40855713 6.10289307 338.15695801 6.10812988 336.86743164 6.11352539 C334 6 334 6 333 5 C330.77964474 4.98317483 328.5586901 5.03753887 326.33984375 5.12109375 C325.34314415 5.15651024 325.34314415 5.15651024 324.3263092 5.19264221 C322.19649721 5.26943685 320.06703454 5.35339213 317.9375 5.4375 C316.49676209 5.49070494 315.05600695 5.54344543 313.61523438 5.59570312 C310.07653658 5.72419763 306.53840138 5.86236021 303 6 C303 14.25 303 22.5 303 31 C298.76409271 31.02293813 294.52840035 31.04285661 290.29248047 31.05493164 C288.8510668 31.05996474 287.40965824 31.06679173 285.96826172 31.07543945 C283.89809915 31.08754983 281.82800399 31.09323847 279.7578125 31.09765625 C278.5114502 31.10289307 277.26508789 31.10812988 275.98095703 31.11352539 C273 31 273 31 271 30 C268.82175039 29.91440882 266.64084745 29.89286588 264.4609375 29.90234375 C262.50800781 29.90717773 262.50800781 29.90717773 260.515625 29.91210938 C259.13541601 29.92046534 257.75520768 29.92893029 256.375 29.9375 C254.98698074 29.94251499 253.59895978 29.9470779 252.2109375 29.95117188 C248.80727327 29.96299015 245.4036313 29.9809261 242 30 C241.67 22.08 241.34 14.16 241 6 C231.1 6 221.2 6 211 6 C211 14.25 211 22.5 211 31 C201.1 31 191.2 31 181 31 C181 23.08 181 15.16 181 7 C170.77 7 160.54 7 150 7 C150 14.92 150 22.84 150 31 C140.43 31 130.86 31 121 31 C120.67 39.91 120.34 48.82 120 58 C110.76 58 101.52 58 92 58 C91.979375 53.730625 91.95875 49.46125 91.9375 45.0625 C91.928396 43.71422119 91.91929199 42.36594238 91.90991211 40.97680664 C91.90741455 39.92356201 91.90491699 38.87031738 91.90234375 37.78515625 C91.89710693 36.70113525 91.89187012 35.61711426 91.88647461 34.50024414 C92 32 92 32 93 31 C92.90997602 28.97591245 92.75358962 26.95455713 92.5625 24.9375 C92.376875 22.978125 92.19125 21.01875 92 19 C91.67 22.96 91.34 26.92 91 31 C81.76 31 72.52 31 63 31 C62.95875 27.41125 62.9175 23.8225 62.875 20.125 C62.85679199 18.99465332 62.83858398 17.86430664 62.81982422 16.69970703 C62.8148291 15.81138184 62.80983398 14.92305664 62.8046875 14.0078125 C62.78897705 12.64100342 62.78897705 12.64100342 62.77294922 11.24658203 C63 9 63 9 65 7 C67.33837891 6.68115234 67.33837891 6.68115234 70.2265625 6.5859375 C71.15549316 6.55032715 72.08442383 6.5147168 73.04150391 6.47802734 C74.22405762 6.44402832 75.40661133 6.4100293 76.625 6.375 C80.37875 6.25125 84.1325 6.1275 88 6 C80.08 5.67 72.16 5.34 64 5 C63.505 3.02 63.505 3.02 63 1 C62.34 1 61.68 1 61 1 C61 2.65 61 4.3 61 6 C60.06615479 5.96447021 59.13230957 5.92894043 58.17016602 5.89233398 C54.71700422 5.76338667 51.26374148 5.63902888 47.81030273 5.51782227 C46.31349062 5.46433566 44.81674337 5.4090013 43.32006836 5.35180664 C41.17315668 5.27008044 39.02610207 5.1949254 36.87890625 5.12109375 C35.5854126 5.0739624 34.29191895 5.02683105 32.95922852 4.97827148 C30.11306192 4.6529728 30.11306192 4.6529728 29 6 C26.85441173 6.08775605 24.70595579 6.10695219 22.55859375 6.09765625 C21.25341797 6.09443359 19.94824219 6.09121094 18.60351562 6.08789062 C17.2148431 6.07953401 15.82617123 6.07106905 14.4375 6.0625 C13.04492344 6.05748666 11.65234519 6.05292347 10.25976562 6.04882812 C6.8398013 6.03699434 3.41992156 6.0205088 0 6 C0 4.02 0 2.04 0 0 Z \",fill:\"#777675\",transform:\"translate(304,765)\"})),_path48||(_path48=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.25 30 16.5 30 25 C39.9 25 49.8 25 60 25 C60 32.92 60 40.84 60 49 C66.17668275 48.96080098 66.17668275 48.96080098 72.35327148 48.90991211 C73.14290283 48.90741455 73.93253418 48.90491699 74.74609375 48.90234375 C75.53685303 48.89710693 76.3276123 48.89187012 77.14233398 48.88647461 C81.10915017 49.04406278 85.05433606 49.5615929 89 50 C89.495 62.375 89.495 62.375 90 75 C96.92496763 74.96066872 96.92496763 74.96066872 103.84985352 74.90991211 C104.72569092 74.90741455 105.60152832 74.90491699 106.50390625 74.90234375 C107.38892822 74.89710693 108.2739502 74.89187012 109.18579102 74.88647461 C112.47550791 75.01918202 115.74069769 75.53438538 119 76 C119 92.5 119 109 119 126 C109.43 126 99.86 126 90 126 C90 125.67 90 125.34 90 125 C95.78645644 123.74593862 101.48868116 123.88813087 107.375 123.9375 C108.90833984 123.94426758 108.90833984 123.94426758 110.47265625 123.95117188 C112.98179623 123.96289683 115.49090586 123.98083035 118 124 C118 117.07 118 110.14 118 103 C108.1 103 98.2 103 88 103 C88.33 93.76 88.66 84.52 89 75 C79.43 75 69.86 75 60 75 C60 83.58 60 92.16 60 101 C61.485 101.495 61.485 101.495 63 102 C61.515 102.495 61.515 102.495 60 103 C60 105.64 60 108.28 60 111 C59.67 111 59.34 111 59 111 C59 108.03 59 105.06 59 102 C55.04878772 102.11817917 51.09781771 102.24242233 47.14697266 102.37231445 C45.14105193 102.43698251 43.13497772 102.49683106 41.12890625 102.55664062 C39.87207031 102.59853516 38.61523438 102.64042969 37.3203125 102.68359375 C36.15773926 102.72025146 34.99516602 102.75690918 33.79736328 102.79467773 C31.0464499 102.81821659 31.0464499 102.81821659 29 104 C26.82000044 104.01639513 24.63933158 103.96414776 22.4609375 103.87890625 C20.50800781 103.80639648 20.50800781 103.80639648 18.515625 103.73242188 C17.13541196 103.67589606 15.75520368 103.61925392 14.375 103.5625 C12.98699781 103.50927707 11.59897703 103.45653668 10.2109375 103.40429688 C6.8071066 103.27428944 3.40352629 103.13775169 0 103 C0 110.59 0 118.18 0 126 C-2.64 126 -5.28 126 -8 126 C-8 92.67 -8 59.34 -8 25 C-5.36 25.33 -2.72 25.66 0 26 C0 33.92 0 41.84 0 50 C9.9 50 19.8 50 30 50 C30 42.08 30 34.16 30 26 C27.03 26.0309375 27.03 26.0309375 24 26.0625 C15.9614639 26.07071936 8.01916636 25.56274852 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#686765\",transform:\"translate(8,721)\"})),_path49||(_path49=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3 8.25 3 16.5 3 25 C-0.63 25 -4.26 25 -8 25 C-8 91.99 -8 158.98 -8 228 C-13.94 228.33 -19.88 228.66 -26 229 C-26 237.58 -26 246.16 -26 255 C-32.93 255 -39.86 255 -47 255 C-47 246.09 -47 237.18 -47 228 C-40.07 228 -33.14 228 -26 228 C-26.495 216.615 -26.495 216.615 -27 205 C-36.9 204.505 -36.9 204.505 -47 204 C-47 162.09 -47 120.18 -47 77 C-40.4 77 -33.8 77 -27 77 C-27 59.84 -27 42.68 -27 25 C-2 23 -2 23 1 23 C1.33 15.74 1.66 8.48 2 1 C1.34 0.67 0.68 0.34 0 0 Z \",fill:\"#696866\",transform:\"translate(299,335)\"})),_path50||(_path50=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29.33 15.18 29.66 30.36 30 46 C36.27 46.33 42.54 46.66 49 47 C49 72.41 49 97.82 49 124 C42.4 124 35.8 124 29 124 C28.67 124.33 28.34 124.66 28 125 C25.9394469 125.09993532 23.8754741 125.13080906 21.8125 125.1328125 C20.55695312 125.13410156 19.30140625 125.13539063 18.0078125 125.13671875 C17.35071289 125.13462402 16.69361328 125.1325293 16.01660156 125.13037109 C14.00838665 125.12502234 12.00039541 125.13031691 9.9921875 125.13671875 C8.73664062 125.13542969 7.48109375 125.13414062 6.1875 125.1328125 C5.02605469 125.13168457 3.86460937 125.13055664 2.66796875 125.12939453 C0 125 0 125 -1 124 C-1.08748207 122.07332493 -1.10697334 120.14348139 -1.09765625 118.21484375 C-1.09515869 117.16159912 -1.09266113 116.10835449 -1.09008789 115.02319336 C-1.08098389 113.67491455 -1.07187988 112.32663574 -1.0625 110.9375 C-1.041875 106.668125 -1.02125 102.39875 -1 98 C-10.9 98 -20.8 98 -31 98 C-31.185625 94.101875 -31.37125 90.20375 -31.5625 86.1875 C-31.62381104 84.96184326 -31.68512207 83.73618652 -31.74829102 82.47338867 C-31.79139404 81.5063501 -31.83449707 80.53931152 -31.87890625 79.54296875 C-31.9260376 78.55321045 -31.97316895 77.56345215 -32.02172852 76.54370117 C-32 74 -32 74 -31 71 C-30.91760831 69.15389468 -30.89256641 67.30494836 -30.90234375 65.45703125 C-30.90484131 64.48999268 -30.90733887 63.5229541 -30.90991211 62.52661133 C-30.92356812 60.68812622 -30.92356812 60.68812622 -30.9375 58.8125 C-30.958125 54.914375 -30.97875 51.01625 -31 47 C-20.77 47 -10.54 47 0 47 C0 31.49 0 15.98 0 0 Z \",fill:\"#777573\",transform:\"translate(975,210)\"})),_path51||(_path51=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.88494141 -0.00128906 1.76988281 -0.00257813 2.68164062 -0.00390625 C4.05545898 0.00189453 4.05545898 0.00189453 5.45703125 0.0078125 C6.38451172 0.00394531 7.31199219 0.00007813 8.26757812 -0.00390625 C9.14865234 -0.00261719 10.02972656 -0.00132812 10.9375 0 C11.74469482 0.00112793 12.55188965 0.00225586 13.38354492 0.00341797 C15.26953125 0.1328125 15.26953125 0.1328125 16.26953125 1.1328125 C16.34197178 3.15245449 16.35330313 5.17448374 16.33203125 7.1953125 C16.32300781 8.30003906 16.31398438 9.40476562 16.3046875 10.54296875 C16.29308594 11.39761719 16.28148437 12.25226563 16.26953125 13.1328125 C12.82254298 14.16324197 9.56027843 14.33075953 5.97265625 14.44921875 C4.76738281 14.49111328 3.56210937 14.53300781 2.3203125 14.57617188 C0.43892578 14.63514648 0.43892578 14.63514648 -1.48046875 14.6953125 C-2.75019531 14.73849609 -4.01992188 14.78167969 -5.328125 14.82617188 C-8.46211255 14.93220905 -11.59627643 15.03301098 -14.73046875 15.1328125 C-14.73046875 23.0528125 -14.73046875 30.9728125 -14.73046875 39.1328125 C-4.83046875 39.1328125 5.06953125 39.1328125 15.26953125 39.1328125 C15.26953125 47.7128125 15.26953125 56.2928125 15.26953125 65.1328125 C15.92953125 64.8028125 16.58953125 64.4728125 17.26953125 64.1328125 C19.37482058 64.04737355 21.48284282 64.02566525 23.58984375 64.03515625 C24.84667969 64.03837891 26.10351562 64.04160156 27.3984375 64.04492188 C28.71714844 64.05330078 30.03585937 64.06167969 31.39453125 64.0703125 C32.73437336 64.07532761 34.07421725 64.07989049 35.4140625 64.08398438 C38.69926331 64.09580164 41.98437522 64.11227633 45.26953125 64.1328125 C45.29926025 63.14885498 45.29926025 63.14885498 45.32958984 62.14501953 C45.42465632 59.18220181 45.53440877 56.22010718 45.64453125 53.2578125 C45.67546875 52.22527344 45.70640625 51.19273437 45.73828125 50.12890625 C45.77695312 49.14277344 45.815625 48.15664063 45.85546875 47.140625 C45.88688965 46.22941895 45.91831055 45.31821289 45.95068359 44.37939453 C46.26953125 42.1328125 46.26953125 42.1328125 48.26953125 40.1328125 C51.25048828 39.90576172 51.25048828 39.90576172 55.02734375 39.9375 C56.02192093 39.94174484 56.02192093 39.94174484 57.03659058 39.94607544 C59.15608708 39.95727815 61.27516229 39.98238199 63.39453125 40.0078125 C64.83072307 40.01784222 66.2669215 40.02696809 67.703125 40.03515625 C71.22555363 40.05551711 74.74707042 40.0946631 78.26953125 40.1328125 C78.26953125 33.8628125 78.26953125 27.5928125 78.26953125 21.1328125 C78.59953125 21.1328125 78.92953125 21.1328125 79.26953125 21.1328125 C79.26953125 27.0728125 79.26953125 33.0128125 79.26953125 39.1328125 C88.83953125 39.1328125 98.40953125 39.1328125 108.26953125 39.1328125 C109.00860086 42.82816054 109.38966241 45.55143383 109.3671875 49.21484375 C109.36396484 50.14619141 109.36074219 51.07753906 109.35742188 52.03710938 C109.34904297 52.99681641 109.34066406 53.95652344 109.33203125 54.9453125 C109.32751953 55.92435547 109.32300781 56.90339844 109.31835938 57.91210938 C109.30661827 60.31903681 109.28868414 62.72593263 109.26953125 65.1328125 C113.22953125 65.1328125 117.18953125 65.1328125 121.26953125 65.1328125 C121.26953125 73.3828125 121.26953125 81.6328125 121.26953125 90.1328125 C117.30953125 90.1328125 113.34953125 90.1328125 109.26953125 90.1328125 C108.93953125 81.8828125 108.60953125 73.6328125 108.26953125 65.1328125 C98.36953125 65.1328125 88.46953125 65.1328125 78.26953125 65.1328125 C78.26953125 73.3828125 78.26953125 81.6328125 78.26953125 90.1328125 C88.16953125 90.1328125 98.06953125 90.1328125 108.26953125 90.1328125 C108.26953125 98.3828125 108.26953125 106.6328125 108.26953125 115.1328125 C80.6445653 117.07772536 80.6445653 117.07772536 75.57421875 112.8125 C73.26953125 109.7578125 73.26953125 109.7578125 71.30078125 106.44921875 C68.93211479 102.58191524 66.37363684 100.35770348 62.76953125 97.6953125 C62.21120605 97.2813623 61.65288086 96.86741211 61.07763672 96.44091797 C56.36978639 93.05165355 51.60578173 90.37845286 46.26953125 88.1328125 C45.68349121 87.88547363 45.09745117 87.63813477 44.49365234 87.38330078 C37.84667557 84.59846121 31.23075903 82.01833119 24.26953125 80.1328125 C24.26953125 79.4728125 24.26953125 78.8128125 24.26953125 78.1328125 C22.97015625 78.18501953 22.97015625 78.18501953 21.64453125 78.23828125 C15.88251406 78.05821821 10.69833755 75.9562737 5.26953125 74.1328125 C4.09132813 73.74738281 2.913125 73.36195313 1.69921875 72.96484375 C-13.53171742 67.79302037 -23.93626596 62.10741509 -31.56640625 47.68359375 C-34.77484111 40.65303012 -34.97553289 31.93520274 -33.046875 24.49609375 C-28.6365984 14.01024938 -21.31381381 6.39656021 -10.87890625 1.9296875 C-7.1810097 0.55810405 -3.94816157 0.00549391 0 0 Z \",fill:\"#5C5A59\",transform:\"translate(651.73046875,398.8671875)\"})),_path52||(_path52=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.11181641 0.00322266 2.22363281 0.00644531 3.36914062 0.00976562 C4.51962891 0.01814453 5.67011719 0.02652344 6.85546875 0.03515625 C8.02529297 0.03966797 9.19511719 0.04417969 10.40039062 0.04882812 C13.28127198 0.06058682 16.16212694 0.07852151 19.04296875 0.09765625 C19.04296875 8.01765625 19.04296875 15.93765625 19.04296875 24.09765625 C29.27296875 24.09765625 39.50296875 24.09765625 50.04296875 24.09765625 C50.53796875 34.49265625 50.53796875 34.49265625 51.04296875 45.09765625 C60.94296875 45.09765625 70.84296875 45.09765625 81.04296875 45.09765625 C81.04296875 52.68765625 81.04296875 60.27765625 81.04296875 68.09765625 C66.68796875 68.59265625 66.68796875 68.59265625 52.04296875 69.09765625 C50.81236454 71.55886466 50.83719645 73.35542491 50.7265625 76.10546875 C50.68845459 76.99379395 50.65034668 77.88211914 50.61108398 78.79736328 C50.56798096 79.92770996 50.52487793 81.05805664 50.48046875 82.22265625 C50.33609375 85.81140625 50.19171875 89.40015625 50.04296875 93.09765625 C40.47296875 93.09765625 30.90296875 93.09765625 21.04296875 93.09765625 C20.71296875 98.04765625 20.38296875 102.99765625 20.04296875 108.09765625 C19.71296875 108.09765625 19.38296875 108.09765625 19.04296875 108.09765625 C19.04296875 103.14765625 19.04296875 98.19765625 19.04296875 93.09765625 C9.14296875 93.09765625 -0.75703125 93.09765625 -10.95703125 93.09765625 C-10.95703125 101.01765625 -10.95703125 108.93765625 -10.95703125 117.09765625 C-11.28703125 117.09765625 -11.61703125 117.09765625 -11.95703125 117.09765625 C-11.95703125 109.17765625 -11.95703125 101.25765625 -11.95703125 93.09765625 C-21.52703125 93.09765625 -31.09703125 93.09765625 -40.95703125 93.09765625 C-40.95703125 84.84765625 -40.95703125 76.59765625 -40.95703125 68.09765625 C-37.77915584 67.03836445 -35.53114182 66.98306686 -32.1953125 67 C-30.51791992 67.00483398 -30.51791992 67.00483398 -28.80664062 67.00976562 C-27.63939453 67.01814453 -26.47214844 67.02652344 -25.26953125 67.03515625 C-24.09068359 67.03966797 -22.91183594 67.04417969 -21.69726562 67.04882812 C-18.78380336 67.06062352 -15.87044262 67.07708355 -12.95703125 67.09765625 C-12.9319751 66.49703369 -12.90691895 65.89641113 -12.88110352 65.27758789 C-12.76547845 62.57154188 -12.64260189 59.86587342 -12.51953125 57.16015625 C-12.48021484 56.21462891 -12.44089844 55.26910156 -12.40039062 54.29492188 C-12.35849609 53.39580078 -12.31660156 52.49667969 -12.2734375 51.5703125 C-12.23677979 50.73765869 -12.20012207 49.90500488 -12.16235352 49.04711914 C-11.95703125 47.09765625 -11.95703125 47.09765625 -10.95703125 46.09765625 C-11.02189965 43.10486407 -11.14899121 40.14599685 -11.33203125 37.16015625 C-11.37585938 36.32291016 -11.4196875 35.48566406 -11.46484375 34.62304688 C-11.60041942 30.21116192 -11.60041942 30.21116192 -12.95703125 26.09765625 C-21.86703125 25.76765625 -30.77703125 25.43765625 -39.95703125 25.09765625 C-39.95703125 24.76765625 -39.95703125 24.43765625 -39.95703125 24.09765625 C-30.38703125 24.09765625 -20.81703125 24.09765625 -10.95703125 24.09765625 C-10.95703125 16.50765625 -10.95703125 8.91765625 -10.95703125 1.09765625 C-7.00007828 0.30626566 -3.96212115 -0.02031857 0 0 Z \",fill:\"#6A6967\",transform:\"translate(525.95703125,71.90234375)\"})),_path53||(_path53=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.81455688 0.07069702 1.81455688 0.07069702 3.66577148 0.14282227 C4.84083252 0.18592529 6.01589355 0.22902832 7.2265625 0.2734375 C8.7314624 0.33474854 10.2363623 0.39605957 11.78686523 0.45922852 C18.93342773 0.73766602 18.93342773 0.73766602 26.22436523 1.02172852 C26.22436523 10.59172852 26.22436523 20.16172852 26.22436523 30.02172852 C26.71936523 29.52672852 26.71936523 29.52672852 27.22436523 29.02172852 C29.296986 28.93405739 31.37256818 28.91476978 33.44702148 28.92407227 C34.70708008 28.92729492 35.96713867 28.93051758 37.26538086 28.93383789 C38.60587632 28.94219448 39.94637111 28.95065944 41.28686523 28.95922852 C42.63126465 28.96424191 43.97566583 28.9688051 45.32006836 28.97290039 C48.62151956 28.98473355 51.92294783 29.00266966 55.22436523 29.02172852 C55.22436523 36.61172852 55.22436523 44.20172852 55.22436523 52.02172852 C45.65436523 52.02172852 36.08436523 52.02172852 26.22436523 52.02172852 C26.2359668 55.25856445 26.24756836 58.49540039 26.25952148 61.83032227 C26.26731111 64.95117088 26.27338841 68.07201842 26.27929688 71.19287109 C26.28433831 73.36865724 26.29117131 75.54443998 26.29980469 77.72021484 C26.31187861 80.84025918 26.31759528 83.9602589 26.32202148 87.08032227 C26.32718277 88.05948105 26.33234406 89.03863983 26.33766174 90.04747009 C26.33773727 90.9483284 26.33781281 91.84918671 26.33789062 92.77734375 C26.34011124 93.5745433 26.34233185 94.37174286 26.34461975 95.19309998 C26.22436523 97.02172852 26.22436523 97.02172852 25.22436523 98.02172852 C23.42971234 98.12143145 21.6311594 98.15253433 19.83374023 98.15454102 C18.18051758 98.15647461 18.18051758 98.15647461 16.49389648 98.15844727 C15.33245117 98.15458008 14.17100586 98.15071289 12.97436523 98.14672852 C11.82838867 98.1505957 10.68241211 98.15446289 9.50170898 98.15844727 C8.3944043 98.1571582 7.28709961 98.15586914 6.14624023 98.15454102 C4.62401855 98.15284912 4.62401855 98.15284912 3.07104492 98.15112305 C0.22436523 98.02172852 0.22436523 98.02172852 -4.77563477 97.02172852 C-4.77563477 104.94172852 -4.77563477 112.86172852 -4.77563477 121.02172852 C-14.34563477 121.02172852 -23.91563477 121.02172852 -33.77563477 121.02172852 C-33.77563477 113.43172852 -33.77563477 105.84172852 -33.77563477 98.02172852 C-24.70658538 94.99871205 -14.21563573 95.935123 -4.77563477 96.02172852 C-5.10563477 88.43172852 -5.43563477 80.84172852 -5.77563477 73.02172852 C-15.34563477 73.02172852 -24.91563477 73.02172852 -34.77563477 73.02172852 C-34.77563477 66.09172852 -34.77563477 59.16172852 -34.77563477 52.02172852 C-44.34563477 52.02172852 -53.91563477 52.02172852 -63.77563477 52.02172852 C-63.77563477 44.76172852 -63.77563477 37.50172852 -63.77563477 30.02172852 C-53.65063477 28.89672852 -53.65063477 28.89672852 -49.74047852 28.92407227 C-48.99145264 28.92656982 -48.24242676 28.92906738 -47.47070312 28.93164062 C-46.56070557 28.94074463 -45.65070801 28.94984863 -44.71313477 28.95922852 C-40.28907227 28.99016602 -40.28907227 28.99016602 -35.77563477 29.02172852 C-35.77563477 36.28172852 -35.77563477 43.54172852 -35.77563477 51.02172852 C-33.36250977 50.77422852 -33.36250977 50.77422852 -30.90063477 50.52172852 C-22.51838262 49.80813151 -14.1834832 49.95803269 -5.77563477 50.02172852 C-5.11563477 42.76172852 -4.45563477 35.50172852 -3.77563477 28.02172852 C-14.00563477 28.02172852 -24.23563477 28.02172852 -34.77563477 28.02172852 C-34.77563477 19.44172852 -34.77563477 10.86172852 -34.77563477 2.02172852 C-32.54942383 1.96114258 -30.32321289 1.90055664 -28.02954102 1.83813477 C-25.88163713 1.77638733 -23.73378817 1.71298231 -21.5859375 1.64941406 C-20.08924207 1.60601038 -18.59249538 1.56433939 -17.09570312 1.52441406 C-14.94849164 1.46684235 -12.80153955 1.40311136 -10.65454102 1.33813477 C-9.36104736 1.30147705 -8.06755371 1.26481934 -6.73486328 1.22705078 C-3.40311889 0.99588198 -3.28004838 0.02567722 0 0 Z \",fill:\"#737270\",transform:\"translate(339.775634765625,794.978271484375)\"})),_path54||(_path54=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.29159316 -0.05790353 6.58305603 -0.09356261 9.875 -0.125 C10.81214844 -0.14175781 11.74929688 -0.15851562 12.71484375 -0.17578125 C13.61074219 -0.18222656 14.50664063 -0.18867187 15.4296875 -0.1953125 C16.25710449 -0.20578613 17.08452148 -0.21625977 17.93701172 -0.22705078 C20 0 20 0 22 2 C21.67 3.32 21.34 4.64 21 6 C17.7 6 14.4 6 11 6 C11 14.25 11 22.5 11 31 C20.57 31 30.14 31 40 31 C39.67 28.36 39.34 25.72 39 23 C38.34 23 37.68 23 37 23 C36.67 21.35 36.34 19.7 36 18 C41.03163018 22.29785078 46.02718443 26.63425542 51 31 C50.67 31.66 50.34 32.32 50 33 C47.36 32.67 44.72 32.34 42 32 C41.67 40.58 41.34 49.16 41 58 C56.345 57.505 56.345 57.505 72 57 C72 65.25 72 73.5 72 82 C62.1 82 52.2 82 42 82 C41.67 89.92 41.34 97.84 41 106 C26.15 105.505 26.15 105.505 11 105 C11 97.41 11 89.82 11 82 C20.57 81.67 30.14 81.34 40 81 C40 73.74 40 66.48 40 59 C30.43 58.67 20.86 58.34 11 58 C9.875 50.125 9.875 50.125 9.90234375 45.94140625 C9.90484131 45.14677979 9.90733887 44.35215332 9.90991211 43.53344727 C9.91901611 42.55303467 9.92812012 41.57262207 9.9375 40.5625 C9.958125 37.406875 9.97875 34.25125 10 31 C0.1 31.33 -9.8 31.66 -20 32 C-20 40.58 -20 49.16 -20 58 C-17.91816406 57.98839844 -15.83632813 57.97679687 -13.69140625 57.96484375 C-11.68253702 57.95789265 -9.67366749 57.95097611 -7.66479492 57.94506836 C-6.26504772 57.9400292 -4.8653058 57.93319784 -3.46557617 57.92456055 C-1.45754223 57.9124768 0.55052957 57.90730193 2.55859375 57.90234375 C4.37315063 57.89448853 4.37315063 57.89448853 6.22436523 57.88647461 C9 58 9 58 10 59 C10.08700342 60.63472882 10.10701063 62.27314055 10.09765625 63.91015625 C10.09515869 64.800979 10.09266113 65.69180176 10.09008789 66.60961914 C10.08098389 67.74906982 10.07187988 68.88852051 10.0625 70.0625 C10.041875 73.671875 10.02125 77.28125 10 81 C0.1 81 -9.8 81 -20 81 C-20 73.74 -20 66.48 -20 59 C-29.9 59 -39.8 59 -50 59 C-50 64.28 -50 69.56 -50 75 C-50.33 75 -50.66 75 -51 75 C-51.85617989 69.11376326 -52 64.12321914 -52 58 C-61.9 58.33 -71.8 58.66 -82 59 C-82 66.26 -82 73.52 -82 81 C-85.27848901 82.09282967 -87.71440316 82.1293042 -91.1640625 82.1328125 C-92.97003906 82.13474609 -92.97003906 82.13474609 -94.8125 82.13671875 C-96.6996875 82.13091797 -96.6996875 82.13091797 -98.625 82.125 C-100.52378906 82.13080078 -100.52378906 82.13080078 -102.4609375 82.13671875 C-103.66234375 82.13542969 -104.86375 82.13414062 -106.1015625 82.1328125 C-107.20838379 82.13168457 -108.31520508 82.13055664 -109.45556641 82.12939453 C-112 82 -112 82 -113 81 C-113.15971977 78.62661361 -113.2592433 76.27881728 -113.31640625 73.90234375 C-113.33718735 73.19348526 -113.35796844 72.48462677 -113.37937927 71.75428772 C-113.44494598 69.48212695 -113.5037923 67.20984736 -113.5625 64.9375 C-113.60567849 63.40037817 -113.64929255 61.8632685 -113.69335938 60.32617188 C-113.80063449 56.5509041 -113.90188137 52.7755164 -114 49 C-113.67 49 -113.34 49 -113 49 C-112.67 51.97 -112.34 54.94 -112 58 C-102.1 58 -92.2 58 -82 58 C-82 49.09 -82 40.18 -82 31 C-79.16535156 31.01740234 -79.16535156 31.01740234 -76.2734375 31.03515625 C-57.82296704 31.11148164 -39.4365342 30.73693499 -21 30 C-20.67 22.08 -20.34 14.16 -20 6 C-12.08 5.67 -4.16 5.34 4 5 C3.505 3.02 3.505 3.02 3 1 C2.01 0.67 1.02 0.34 0 0 Z \",fill:\"#646261\",transform:\"translate(750,765)\"})),_path55||(_path55=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C12.87 0 25.74 0 39 0 C39 6.27 39 12.54 39 19 C34.80078125 19.29296875 34.80078125 19.29296875 30.6015625 19.5859375 C27.84491121 19.76363964 27.84491121 19.76363964 26 22 C25.5551801 26.08367501 25.5551801 26.08367501 27.125 29.75 C29.60724732 31.40483154 32.14704874 32.17581408 35 33 C35 34.32 35 35.64 35 37 C28.375 37.125 28.375 37.125 25 36 C24.67 36.99 24.34 37.98 24 39 C27.83269257 40.80362003 30.76849335 41.44078194 35 41 C37.92902303 40.04331967 37.92902303 40.04331967 40 38 C40.41746608 34.87364791 40.41746608 34.87364791 40 32 C39.29875 31.731875 38.5975 31.46375 37.875 31.1875 C34.8350176 29.9318551 31.9272226 28.49764877 29 27 C29 25.35 29 23.7 29 22 C34.02254631 21.7045561 36.89542386 22.01485372 41 25 C41.495 23.515 41.495 23.515 42 22 C42.99 22.66 43.98 23.32 45 24 C48.08365871 24.2502157 48.08365871 24.2502157 51 24 C51.495 23.505 51.495 23.505 52 23 C54.52793394 22.76328017 57.02934966 22.5785675 59.5625 22.4375 C62.016875 22.293125 64.47125 22.14875 67 22 C67 30.25 67 38.5 67 47 C64.298125 47.0825 61.59625 47.165 58.8125 47.25 C57.54950073 47.30462402 57.54950073 47.30462402 56.26098633 47.36035156 C52.22122987 47.41989391 50.42878492 47.28329452 46.94921875 44.984375 C46.30597656 44.32953125 45.66273437 43.6746875 45 43 C45.66 44.65 46.32 46.3 47 48 C43.535 48.495 43.535 48.495 40 49 C39.67 56.26 39.34 63.52 39 71 C48.9 71 58.8 71 69 71 C68.67 78.59 68.34 86.18 68 94 C77.9 94 87.8 94 98 94 C99.29945577 96.59891154 99.0223077 98.32666656 98.87890625 101.2265625 C98.83056641 102.2578125 98.78222656 103.2890625 98.73242188 104.3515625 C98.67634766 105.43179688 98.62027344 106.51203125 98.5625 107.625 C98.51029297 108.71296875 98.45808594 109.8009375 98.40429688 110.921875 C98.27437225 113.6148581 98.13939838 116.30749336 98 119 C97.67 118.34 97.34 117.68 97 117 C87.43 116.67 77.86 116.34 68 116 C67 108 67 108 67 95 C57.76 95.33 48.52 95.66 39 96 C38.67 102.6 38.34 109.2 38 116 C26.66666667 121.66666667 12.67105187 117 0 117 C0 78.39 0 39.78 0 0 Z \",fill:\"#666565\",transform:\"translate(0,0)\"})),_path56||(_path56=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.25159912 0.00523682 2.50319824 0.01047363 3.79272461 0.01586914 C4.78942421 0.01799156 4.78942421 0.01799156 5.80625916 0.02015686 C7.93590735 0.02577021 10.06545175 0.03832485 12.19506836 0.05102539 C13.63582205 0.05603868 15.07657739 0.06060188 16.51733398 0.06469727 C20.05581794 0.07489463 23.59407649 0.09446709 27.13256836 0.11352539 C27.13256836 7.70352539 27.13256836 15.29352539 27.13256836 23.11352539 C36.70256836 23.11352539 46.27256836 23.11352539 56.13256836 23.11352539 C55.63756836 19.64852539 55.63756836 19.64852539 55.13256836 16.11352539 C56.12256836 16.77352539 57.11256836 17.43352539 58.13256836 18.11352539 C58.39038086 20.54711914 58.39038086 20.54711914 58.25756836 23.55102539 C58.10607216 28.78395646 58.4325566 33.74676856 59.10913086 38.93383789 C59.12073242 40.0127832 59.12073242 40.0127832 59.13256836 41.11352539 C54.3692669 45.87682685 43.84432122 44.15280385 37.34643555 44.18164062 C33.94174585 44.17407319 30.53715395 44.14120495 27.13256836 44.11352539 C27.13256836 50.71352539 27.13256836 57.31352539 27.13256836 64.11352539 C41.98256836 64.60852539 41.98256836 64.60852539 57.13256836 65.11352539 C57.13256836 72.37352539 57.13256836 79.63352539 57.13256836 87.11352539 C47.23256836 87.11352539 37.33256836 87.11352539 27.13256836 87.11352539 C27.13256836 95.69352539 27.13256836 104.27352539 27.13256836 113.11352539 C37.03256836 113.11352539 46.93256836 113.11352539 57.13256836 113.11352539 C57.13256836 104.86352539 57.13256836 96.61352539 57.13256836 88.11352539 C61.57010851 88.08663121 66.00748676 88.06673762 70.44506836 88.05102539 C71.70770508 88.04264648 72.9703418 88.03426758 74.27124023 88.02563477 C75.47973633 88.02241211 76.68823242 88.01918945 77.93334961 88.01586914 C79.60651245 88.00801392 79.60651245 88.00801392 81.31347656 88 C84.13256836 88.11352539 84.13256836 88.11352539 87.13256836 89.11352539 C87.13256836 97.36352539 87.13256836 105.61352539 87.13256836 114.11352539 C77.23256836 114.11352539 67.33256836 114.11352539 57.13256836 114.11352539 C57.13256836 120.05352539 57.13256836 125.99352539 57.13256836 132.11352539 C46.90256836 132.11352539 36.67256836 132.11352539 26.13256836 132.11352539 C26.13256836 126.17352539 26.13256836 120.23352539 26.13256836 114.11352539 C15.90256836 114.11352539 5.67256836 114.11352539 -4.86743164 114.11352539 C-4.86743164 105.53352539 -4.86743164 96.95352539 -4.86743164 88.11352539 C-14.43743164 87.78352539 -24.00743164 87.45352539 -33.86743164 87.11352539 C-33.86743164 80.18352539 -33.86743164 73.25352539 -33.86743164 66.11352539 C-23.96743164 66.11352539 -14.06743164 66.11352539 -3.86743164 66.11352539 C-3.86743164 73.04352539 -3.86743164 79.97352539 -3.86743164 87.11352539 C6.03256836 87.11352539 15.93256836 87.11352539 26.13256836 87.11352539 C26.13256836 79.85352539 26.13256836 72.59352539 26.13256836 65.11352539 C16.23256836 65.11352539 6.33256836 65.11352539 -3.86743164 65.11352539 C-4.19743164 59.50352539 -4.52743164 53.89352539 -4.86743164 48.11352539 C-14.43743164 48.11352539 -24.00743164 48.11352539 -33.86743164 48.11352539 C-33.86743164 40.19352539 -33.86743164 32.27352539 -33.86743164 24.11352539 C-23.96743164 24.44352539 -14.06743164 24.77352539 -3.86743164 25.11352539 C-3.86743164 31.71352539 -3.86743164 38.31352539 -3.86743164 45.11352539 C-2.87743164 44.61852539 -2.87743164 44.61852539 -1.86743164 44.11352539 C0.23631832 43.9591133 2.34451955 43.863599 4.45288086 43.79711914 C5.7097168 43.75522461 6.96655273 43.71333008 8.26147461 43.67016602 C9.58018555 43.63084961 10.89889648 43.5915332 12.25756836 43.55102539 C13.59742587 43.50783027 14.93726992 43.46421566 16.27709961 43.42016602 C19.56212456 43.31381629 22.84733234 43.21314222 26.13256836 43.11352539 C26.13256836 36.18352539 26.13256836 29.25352539 26.13256836 22.11352539 C16.23256836 22.44352539 6.33256836 22.77352539 -3.86743164 23.11352539 C-3.89836914 17.69946289 -3.89836914 17.69946289 -3.92993164 12.17602539 C-3.93903564 11.03657471 -3.94813965 9.89712402 -3.95751953 8.72314453 C-3.96001709 7.83232178 -3.96251465 6.94149902 -3.96508789 6.02368164 C-3.97294312 4.64901733 -3.97294312 4.64901733 -3.98095703 3.24658203 C-3.80471884 -0.06480094 -3.36426409 0.13319564 0 0 Z \",fill:\"#666463\",transform:\"translate(855.867431640625,891.886474609375)\"})),_path57||(_path57=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.35414799 -0.02929977 6.70826253 -0.0468989 10.0625 -0.0625 C11.00544922 -0.07087891 11.94839844 -0.07925781 12.91992188 -0.08789062 C13.84482422 -0.09111328 14.76972656 -0.09433594 15.72265625 -0.09765625 C16.98734741 -0.10551147 16.98734741 -0.10551147 18.27758789 -0.11352539 C21.53674589 0.02238246 24.77079419 0.53868488 28 1 C28 8.92 28 16.84 28 25 C37.9 25 47.8 25 58 25 C58 33.58 58 42.16 58 51 C48.43 51 38.86 51 29 51 C29 59.58 29 68.16 29 77 C38.9 77 48.8 77 59 77 C59 85.25 59 93.5 59 102 C69.89 102.495 69.89 102.495 81 103 C81 103.33 81 103.66 81 104 C63.58371045 105.13567702 46.42013227 104.79908864 29 104 C29 112.25 29 120.5 29 129 C38.57 129 48.14 129 58 129 C58 137.58 58 146.16 58 155 C43.645 155.99 43.645 155.99 29 157 C28.67 165.25 28.34 173.5 28 182 C18.43 182 8.86 182 -1 182 C-1.0309375 175.874375 -1.0309375 175.874375 -1.0625 169.625 C-1.071604 168.33803223 -1.08070801 167.05106445 -1.09008789 165.72509766 C-1.09258545 164.71495605 -1.09508301 163.70481445 -1.09765625 162.6640625 C-1.10551147 161.10872803 -1.10551147 161.10872803 -1.11352539 159.52197266 C-1 157 -1 157 0 155 C9.24 155 18.48 155 28 155 C28 146.42 28 137.84 28 129 C18.43 129 8.86 129 -1 129 C-1 120.42 -1 111.84 -1 103 C-10.9 103 -20.8 103 -31 103 C-31 94.42 -31 85.84 -31 77 C-21.1 77 -11.2 77 -1 77 C-0.67 85.25 -0.34 93.5 0 102 C13.86 102.495 13.86 102.495 28 103 C28 94.42 28 85.84 28 77 C18.76 77 9.52 77 0 77 C0 68.42 0 59.84 0 51 C9.24 51 18.48 51 28 51 C28 42.75 28 34.5 28 26 C18.43 25.67 8.86 25.34 -1 25 C-1.0309375 20.2046875 -1.0309375 20.2046875 -1.0625 15.3125 C-1.071604 14.31387939 -1.08070801 13.31525879 -1.09008789 12.28637695 C-1.09258545 11.48675537 -1.09508301 10.68713379 -1.09765625 9.86328125 C-1.10289307 9.05157471 -1.10812988 8.23986816 -1.11352539 7.40356445 C-0.9929791 4.85135327 -0.559949 2.48973863 0 0 Z \",fill:\"#5F5D5B\",transform:\"translate(39,539)\"})),_path58||(_path58=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29.495 12.375 29.495 12.375 30 25 C39.57 25 49.14 25 59 25 C59.495 37.375 59.495 37.375 60 50 C63.01447266 49.98259766 63.01447266 49.98259766 66.08984375 49.96484375 C68.02921424 49.9578926 69.96858503 49.95097604 71.90795898 49.94506836 C73.25920386 49.94002943 74.61044326 49.93319823 75.96166992 49.92456055 C77.90020434 49.91247581 79.838778 49.90730172 81.77734375 49.90234375 C83.52905884 49.89448853 83.52905884 49.89448853 85.31616211 49.88647461 C88 50 88 50 89 51 C89.08748207 52.92667507 89.10697334 54.85651861 89.09765625 56.78515625 C89.09515869 57.83840088 89.09266113 58.89164551 89.09008789 59.97680664 C89.08098389 61.32508545 89.07187988 62.67336426 89.0625 64.0625 C89.041875 68.331875 89.02125 72.60125 89 77 C79.1 77 69.2 77 59 77 C59 85.58 59 94.16 59 103 C49.43 103 39.86 103 30 103 C30 94.42 30 85.84 30 77 C20.43 77 10.86 77 1 77 C0.15058981 73.60235924 -0.11761783 71.2302673 -0.09765625 67.796875 C-0.09443359 66.8171875 -0.09121094 65.8375 -0.08789062 64.828125 C-0.07951172 63.81234375 -0.07113281 62.7965625 -0.0625 61.75 C-0.05798828 60.71875 -0.05347656 59.6875 -0.04882812 58.625 C-0.03706088 56.08327427 -0.02062011 53.54166681 0 51 C-0.83772949 51.01047363 -1.67545898 51.02094727 -2.53857422 51.03173828 C-5.64338164 51.06580019 -8.74809392 51.09088911 -11.85302734 51.10986328 C-13.8591136 51.12488107 -15.86511324 51.15028981 -17.87109375 51.17578125 C-19.12792969 51.18222656 -20.38476562 51.18867188 -21.6796875 51.1953125 C-22.84226074 51.20578613 -24.00483398 51.21625977 -25.20263672 51.22705078 C-28 51 -28 51 -30 49 C-30.22705078 46.56982422 -30.22705078 46.56982422 -30.1953125 43.5546875 C-30.19031738 42.58515137 -30.18532227 41.61561523 -30.18017578 40.61669922 C-30.16196777 39.38193848 -30.14375977 38.14717773 -30.125 36.875 C-30.08375 32.95625 -30.0425 29.0375 -30 25 C-20.1 25 -10.2 25 0 25 C0.33 25.66 0.66 26.32 1 27 C1.33 26.34 1.66 25.68 2 25 C1.34 24.67 0.68 24.34 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#61605E\",transform:\"translate(38,257)\"})),_path59||(_path59=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.44013065 4.09074799 13.05784697 10.64024358 18.5 17.0625 C20.92165423 19.88406043 23.4532002 22.36288914 26.25 24.8125 C31.74061853 29.65313877 36.93293082 34.77950077 42.125 39.9375 C42.99157227 40.79126221 43.85814453 41.64502441 44.75097656 42.5246582 C45.55760742 43.32991943 46.36423828 44.13518066 47.1953125 44.96484375 C47.92766113 45.6930835 48.66000977 46.42132324 49.41455078 47.17163086 C51 49 51 49 51 51 C51.89319946 51.4031543 51.89319946 51.4031543 52.80444336 51.81445312 C55.00656704 53.00354604 56.39767157 54.179743 58.12890625 55.96875 C58.68900391 56.53980469 59.24910156 57.11085938 59.82617188 57.69921875 C60.39916016 58.29347656 60.97214844 58.88773438 61.5625 59.5 C62.70730947 60.67934563 63.85436457 61.85651652 65.00390625 63.03125 C65.50736572 63.55267578 66.0108252 64.07410156 66.52954102 64.61132812 C68.15641908 66.2256108 68.15641908 66.2256108 71 68 C71 68.66 71 69.32 71 70 C71.61875 70.309375 72.2375 70.61875 72.875 70.9375 C74.25 71.625 75.625 72.3125 77 73 C77 66.73 77 60.46 77 54 C87.23 54 97.46 54 108 54 C108 61.26 108 68.52 108 76 C110.15402344 75.98839844 112.30804687 75.97679687 114.52734375 75.96484375 C116.60571139 75.95705263 118.68407743 75.95097619 120.76245117 75.94506836 C122.21070073 75.94002899 123.65894517 75.93319747 125.10717773 75.92456055 C127.18474588 75.91247753 129.26224697 75.90676789 131.33984375 75.90234375 C132.59144287 75.89710693 133.84304199 75.89187012 135.13256836 75.88647461 C138 76 138 76 139 77 C141.21855264 77.08783542 143.43988496 77.10694609 145.66015625 77.09765625 C146.32462265 77.0962413 146.98908905 77.09482635 147.6736908 77.09336853 C149.80333899 77.08775518 151.93288339 77.07520054 154.0625 77.0625 C155.50325369 77.05748671 156.94400903 77.05292351 158.38476562 77.04882812 C161.92324958 77.03863076 165.46150813 77.0190583 169 77 C169 84.59 169 92.18 169 100 C167.08574219 100.18175781 165.17148437 100.36351562 163.19921875 100.55078125 C160.69524211 100.80399237 158.19133953 101.05793665 155.6875 101.3125 C153.79354492 101.48942383 153.79354492 101.48942383 151.86132812 101.66992188 C150.04858398 101.85844727 150.04858398 101.85844727 148.19921875 102.05078125 C147.08377686 102.16075439 145.96833496 102.27072754 144.8190918 102.3840332 C141.64926245 102.81086923 141.64926245 102.81086923 139 106 C138.67 103.03 138.34 100.06 138 97 C136.91203125 97.01160156 135.8240625 97.02320313 134.703125 97.03515625 C111.41562728 97.20781364 111.41562728 97.20781364 107 95 C107 89.06 107 83.12 107 77 C98.42 77.33 89.84 77.66 81 78 C83.206875 80.206875 85.41375 82.41375 87.6875 84.6875 C91.44921875 88.44921875 91.44921875 88.44921875 93.2956543 90.29785156 C94.73348397 91.73382756 96.17844275 93.16266003 97.625 94.58984375 C99.79409872 96.79105084 101.87967439 99.04925492 103.94287109 101.34960938 C108.00842315 105.87751833 112.09663634 110.16456388 116.76171875 114.0859375 C119.80732105 116.69037926 122.74468735 119.40551477 125.6875 122.125 C126.2345459 122.62837891 126.7815918 123.13175781 127.34521484 123.65039062 C133.14979852 129.01499216 138.51325764 134.64983135 143.71875 140.59765625 C146.00049952 143.00052604 148.40513106 144.94572875 151 147 C152.67953472 148.65369848 154.34409051 150.32264515 156 152 C156.95266133 152.95871336 157.90571766 153.91703435 158.85913086 154.875 C159.35992661 155.37902344 159.86072235 155.88304687 160.37669373 156.40234375 C162.6345841 158.67374923 164.89525519 160.9423793 167.15600586 163.2109375 C168.34277757 164.402751 169.52865199 165.59545867 170.71362305 166.7890625 C172.44079714 168.52844869 174.1712545 170.26451128 175.90234375 172 C176.42440903 172.52722656 176.9464743 173.05445313 177.48435974 173.59765625 C180.83665561 176.95045455 184.33875798 179.98821168 188 183 C189.11907392 184.21810701 190.20733773 185.4658791 191.25 186.75 C193.81035567 189.7491151 196.47410501 192.39896319 199.4375 195 C205.09854279 199.96981809 210.3633678 205.3086778 215.64233398 210.6796875 C216.30692627 211.35257813 216.97151855 212.02546875 217.65625 212.71875 C218.55053711 213.63043945 218.55053711 213.63043945 219.46289062 214.56054688 C220.95809649 216.09777728 220.95809649 216.09777728 223 217 C223 217.66 223 218.32 223 219 C223.5878125 219.25136719 224.175625 219.50273438 224.78125 219.76171875 C227.27682175 221.15449383 228.66530515 222.63171498 230.5 224.8125 C231.09941406 225.52019531 231.69882812 226.22789062 232.31640625 226.95703125 C234.23559869 229.2858889 236.14207754 231.62185925 238 234 C234.19283739 232.44893375 231.81196719 229.88519315 229 227 C226.4000945 224.37076554 223.79351549 221.74817646 221.1875 219.125 C220.51396484 218.44308594 219.84042969 217.76117187 219.14648438 217.05859375 C215.20703539 213.10029573 211.16043528 209.35557585 206.9309082 205.71044922 C203.8115807 202.94726696 200.91383878 199.97659077 198 197 C193.17404283 192.11709939 188.29814962 187.37673229 183 183 C183 183.66 183 184.32 183 185 C178.04726253 186.98109499 174.23859642 187.08658837 169 187 C169.00523682 187.55461914 169.01047363 188.10923828 169.01586914 188.68066406 C169.03671031 191.20376443 169.04968282 193.72684664 169.0625 196.25 C169.07087891 197.12269531 169.07925781 197.99539063 169.08789062 198.89453125 C169.09111328 199.73886719 169.09433594 200.58320312 169.09765625 201.453125 C169.10289307 202.22817383 169.10812988 203.00322266 169.11352539 203.80175781 C169 206 169 206 168 210 C158.1 210 148.2 210 138 210 C138 218.25 138 226.5 138 235 C128.1 235 118.2 235 108 235 C108 226.42 108 217.84 108 209 C117.9 209 127.8 209 138 209 C138 201.74 138 194.48 138 187 C136.25332031 187.01160156 134.50664063 187.02320313 132.70703125 187.03515625 C130.40885524 187.04453656 128.11067807 187.0536365 125.8125 187.0625 C124.08676758 187.07506836 124.08676758 187.07506836 122.32617188 187.08789062 C121.21435547 187.09111328 120.10253906 187.09433594 118.95703125 187.09765625 C117.93585205 187.10289307 116.91467285 187.10812988 115.86254883 187.11352539 C113 187 113 187 108 186 C108 179.4 108 172.8 108 166 C110.15402344 165.87882813 112.30804687 165.75765625 114.52734375 165.6328125 C116.6058613 165.50930858 118.68415275 165.38250294 120.76245117 165.25537109 C122.21049005 165.16857653 123.65873998 165.0852332 125.10717773 165.00537109 C127.1853812 164.89019184 129.2625174 164.76274871 131.33984375 164.6328125 C132.59144287 164.55949707 133.84304199 164.48618164 135.13256836 164.41064453 C136.0788208 164.27513184 137.02507324 164.13961914 138 164 C139.2451342 161.5097316 138.92184357 160.36665832 138.5625 157.625 C138.18212413 154.65037523 137.99101934 152.08248901 138.31640625 149.09375 C138.81226954 144.32341963 138.88063854 141.20804589 135.97875977 137.22729492 C135.07955811 136.30021729 134.18035645 135.37313965 133.25390625 134.41796875 C132.76383591 133.90615555 132.27376556 133.39434235 131.7688446 132.86701965 C130.19330777 131.23029179 128.59848393 129.61429855 127 128 C125.95955482 126.93464126 124.91951331 125.86888814 123.87988281 124.80273438 C121.24765152 122.11601765 118.59331789 119.45243137 115.9284668 116.7980957 C114.29943428 115.17447771 112.67589272 113.54550397 111.05273438 111.91601562 C106.10217799 106.96296786 101.10293595 102.13964025 95.77758789 97.58618164 C92.65740553 94.80197277 89.87844906 91.71143607 87.0625 88.625 C81.50359813 82.61854437 75.84480793 76.72938657 70.0625 70.9375 C69.03491577 69.90326904 69.03491577 69.90326904 67.98657227 68.84814453 C64.03373482 64.90632845 59.95511689 61.18510369 55.72973633 57.53833008 C53.74996221 55.77763047 52.00474939 53.91251942 50.3125 51.875 C45.43891895 46.16001595 40.0487962 41.22298342 34.40234375 36.28125 C32 34 32 34 30.19140625 31.65625 C27.78949197 28.74483875 25.16058098 26.47772597 22.30078125 24.02978516 C17.85227126 20.10524016 13.69479943 15.87925088 9.5 11.6875 C8.5821875 10.78193359 7.664375 9.87636719 6.71875 8.94335938 C5.8525 8.07904297 4.98625 7.21472656 4.09375 6.32421875 C3.30677734 5.54135498 2.51980469 4.75849121 1.70898438 3.9519043 C0 2 0 2 0 0 Z \",fill:\"#686665\",transform:\"translate(775,770)\"})),_path60||(_path60=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.13142426 -0.00315216 2.26284851 -0.00630432 3.42855835 -0.009552 C5.27690781 -0.00651566 5.27690781 -0.00651566 7.16259766 -0.00341797 C8.41924225 -0.00437469 9.67588684 -0.00533142 10.97061157 -0.00631714 C13.63555301 -0.00699932 16.30040352 -0.00564033 18.96533203 -0.00097656 C22.38073084 0.00470917 25.79605087 0.00144909 29.21144676 -0.00454903 C32.46599987 -0.00903442 35.72054351 -0.005892 38.97509766 -0.00341797 C40.20328217 -0.0054422 41.43146667 -0.00746643 42.6968689 -0.009552 C44.40346176 -0.00482376 44.40346176 -0.00482376 46.14453125 0 C47.64891251 0.00119339 47.64891251 0.00119339 49.1836853 0.00241089 C51.70166016 0.12939453 51.70166016 0.12939453 54.70166016 1.12939453 C54.70166016 9.37939453 54.70166016 17.62939453 54.70166016 26.12939453 C44.80166016 26.12939453 34.90166016 26.12939453 24.70166016 26.12939453 C24.70166016 30.39876953 24.70166016 34.66814453 24.70166016 39.06689453 C24.70166016 43.75439453 24.70166016 48.44189453 24.70166016 53.12939453 C34.27166016 53.12939453 43.84166016 53.12939453 53.70166016 53.12939453 C54.19666016 65.50439453 54.19666016 65.50439453 54.70166016 78.12939453 C64.27166016 78.12939453 73.84166016 78.12939453 83.70166016 78.12939453 C83.70166016 86.04939453 83.70166016 93.96939453 83.70166016 102.12939453 C75.78166016 102.62439453 75.78166016 102.62439453 67.70166016 103.12939453 C67.70166016 95.20939453 67.70166016 87.28939453 67.70166016 79.12939453 C52.19166016 79.12939453 36.68166016 79.12939453 20.70166016 79.12939453 C20.70166016 78.79939453 20.70166016 78.46939453 20.70166016 78.12939453 C12.12166016 78.12939453 3.54166016 78.12939453 -5.29833984 78.12939453 C-5.29833984 86.70939453 -5.29833984 95.28939453 -5.29833984 104.12939453 C-15.52833984 104.12939453 -25.75833984 104.12939453 -36.29833984 104.12939453 C-36.29833984 95.54939453 -36.29833984 86.96939453 -36.29833984 78.12939453 C-26.39833984 78.12939453 -16.49833984 78.12939453 -6.29833984 78.12939453 C-6.29833984 69.87939453 -6.29833984 61.62939453 -6.29833984 53.12939453 C-21.14833984 52.63439453 -21.14833984 52.63439453 -36.29833984 52.12939453 C-36.29833984 43.54939453 -36.29833984 34.96939453 -36.29833984 26.12939453 C-26.39833984 26.12939453 -16.49833984 26.12939453 -6.29833984 26.12939453 C-6.33793125 17.94686656 -6.33793125 17.94686656 -6.38842773 9.7644043 C-6.39092529 8.75176514 -6.39342285 7.73912598 -6.39599609 6.69580078 C-6.40123291 5.65367432 -6.40646973 4.61154785 -6.41186523 3.5378418 C-6.2019778 -0.91493145 -3.9123161 0.00310848 0 0 Z \",fill:\"#767573\",transform:\"translate(460.29833984375,281.87060546875)\"})),_path61||(_path61=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.58 30 17.16 30 26 C40.56 25.67 51.12 25.34 62 25 C61.67 25.66 61.34 26.32 61 27 C60.90983623 28.60354452 60.88243925 30.21082222 60.88647461 31.81689453 C60.88655014 32.81778107 60.88662567 33.8186676 60.88670349 34.84988403 C60.89186478 35.93325043 60.89702606 37.01661682 60.90234375 38.1328125 C60.9037587 39.23978485 60.90517365 40.3467572 60.90663147 41.48727417 C60.91224228 45.03320993 60.92479663 48.57908323 60.9375 52.125 C60.94251361 54.52473867 60.94707675 56.92447833 60.95117188 59.32421875 C60.9613656 65.21618943 60.98093897 71.10802455 61 77 C70.9 77 80.8 77 91 77 C91 68.75 91 60.5 91 52 C82.75 52 74.5 52 66 52 C66 51.67 66 51.34 66 51 C73.26 51 80.52 51 88 51 C88 50.34 88 49.68 88 49 C88.66 49 89.32 49 90 49 C89.67 44.71 89.34 40.42 89 36 C90.485 36.495 90.485 36.495 92 37 C92 41.95 92 46.9 92 52 C101.9 52 111.8 52 122 52 C122 65 122 65 120.0234375 68.0625 C119.14945313 68.701875 118.27546875 69.34125 117.375 70 C116.51648438 70.66 115.65796875 71.32 114.7734375 72 C113.40058594 72.99 113.40058594 72.99 112 74 C99.1769369 83.94977752 91.09050588 100.03314409 89 116 C88.4776508 124.96044191 88.62078635 133.87062333 89.9375 142.75 C90.3880535 147.16166966 89.71964843 149.21591567 86.9375 152.6875 C83.84905232 155.95165805 81.44827897 156.63373359 77 157 C74.21810078 156.98858602 71.46144177 156.82692479 68.6875 156.625 C67.59598633 156.55925781 67.59598633 156.55925781 66.48242188 156.4921875 C61.13324956 156.13324956 61.13324956 156.13324956 60 155 C59.91273777 153.21928754 59.89300959 151.4351686 59.90234375 149.65234375 C59.90717773 148.03295898 59.90717773 148.03295898 59.91210938 146.38085938 C59.92467773 144.67639648 59.92467773 144.67639648 59.9375 142.9375 C59.94201172 141.79732422 59.94652344 140.65714844 59.95117188 139.48242188 C59.96300253 136.65489649 59.9794859 133.8274736 60 131 C58.94039062 131.01160156 57.88078125 131.02320313 56.7890625 131.03515625 C55.40104342 131.04453476 54.01302245 131.05363489 52.625 131.0625 C51.92632813 131.07087891 51.22765625 131.07925781 50.5078125 131.08789062 C45.2265625 131.11328125 45.2265625 131.11328125 43 130 C43 112.51 43 95.02 43 77 C50.92 76.505 50.92 76.505 59 76 C59 68.08 59 60.16 59 52 C49.43 52 39.86 52 30 52 C28.875 43 28.875 43 28.90234375 39.5 C28.90484131 38.8296875 28.90733887 38.159375 28.90991211 37.46875 C28.91901611 36.6540625 28.92812012 35.839375 28.9375 35 C28.958125 32.36 28.97875 29.72 29 27 C19.43 27 9.86 27 0 27 C0 33.93 0 40.86 0 48 C-0.33 48 -0.66 48 -1 48 C-1 41.07 -1 34.14 -1 27 C-2.32 26.67 -3.64 26.34 -5 26 C-3.35 26 -1.7 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#605F5E\",transform:\"translate(485,308)\"})),_path62||(_path62=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.30195312 0.00322266 2.60390625 0.00644531 3.9453125 0.00976562 C5.32552149 0.01812159 6.70572982 0.02658654 8.0859375 0.03515625 C9.47395676 0.04017124 10.86197772 0.04473415 12.25 0.04882812 C15.65366423 0.0606464 19.0573062 0.07858235 22.4609375 0.09765625 C22.4609375 8.67765625 22.4609375 17.25765625 22.4609375 26.09765625 C52.4909375 26.09765625 82.5209375 26.09765625 113.4609375 26.09765625 C113.4609375 33.68765625 113.4609375 41.27765625 113.4609375 49.09765625 C103.41517093 49.75103944 93.5281292 50.2133711 83.4609375 50.09765625 C83.4609375 58.01765625 83.4609375 65.93765625 83.4609375 74.09765625 C73.5609375 74.42765625 63.6609375 74.75765625 53.4609375 75.09765625 C53.1309375 82.02765625 52.8009375 88.95765625 52.4609375 96.09765625 C37.1159375 96.59265625 37.1159375 96.59265625 21.4609375 97.09765625 C21.7909375 89.50765625 22.1209375 81.91765625 22.4609375 74.09765625 C12.2309375 74.09765625 2.0009375 74.09765625 -8.5390625 74.09765625 C-9.0340625 75.08765625 -9.0340625 75.08765625 -9.5390625 76.09765625 C-9.2090625 67.51765625 -8.8790625 58.93765625 -8.5390625 50.09765625 C1.6909375 50.09765625 11.9209375 50.09765625 22.4609375 50.09765625 C21.9659375 38.21765625 21.9659375 38.21765625 21.4609375 26.09765625 C11.5609375 26.09765625 1.6609375 26.09765625 -8.5390625 26.09765625 C-8.5390625 17.84765625 -8.5390625 9.59765625 -8.5390625 1.09765625 C-5.66887809 -0.33743596 -3.20362527 -0.01392881 0 0 Z \",fill:\"#62605F\",transform:\"translate(707.5390625,21.90234375)\"})),_path63||(_path63=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C30.36 0 60.72 0 92 0 C92 12 92 12 91 22 C81.1 22 71.2 22 61 22 C61 30.58 61 39.16 61 48 C51.1 48 41.2 48 31 48 C31 55.59 31 63.18 31 71 C40.57 71 50.14 71 60 71 C60 71.33 60 71.66 60 72 C50.43 72 40.86 72 31 72 C31 79.59 31 87.18 31 95 C20.77 95 10.54 95 0 95 C0 87.08 0 79.16 0 71 C-10.23 71 -20.46 71 -31 71 C-31 63.41 -31 55.82 -31 48 C-24.39672135 47.39970194 -18.08220084 46.83628117 -11.5 46.875 C-10.81164062 46.87113281 -10.12328125 46.86726563 -9.4140625 46.86328125 C-6.33296593 46.8692756 -3.94582063 47.01805979 -1 48 C-1.01160156 46.88109375 -1.02320313 45.7621875 -1.03515625 44.609375 C-1.11915691 29.68125847 -0.53442024 14.96376669 0 0 Z \",fill:\"#6B6B6A\",transform:\"translate(576,0)\"})),_path64||(_path64=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C29.67 8.58 29.34 17.16 29 26 C21.98529768 26.63770021 15.30399141 27.13831216 8.3125 27.0625 C5.569375 27.041875 2.82625 27.02125 0 27 C0 34.92 0 42.84 0 51 C6.87992431 50.96071366 6.87992431 50.96071366 13.75976562 50.90991211 C19.27317754 50.89414497 24.54740413 51.17561943 30 52 C29.99476318 51.2479126 29.98952637 50.4958252 29.98413086 49.72094727 C29.96342773 46.33480658 29.95036123 42.94867916 29.9375 39.5625 C29.92912109 38.37849609 29.92074219 37.19449219 29.91210938 35.97460938 C29.90888672 34.84990234 29.90566406 33.72519531 29.90234375 32.56640625 C29.89710693 31.52427979 29.89187012 30.48215332 29.88647461 29.40844727 C30 27 30 27 31 26 C32.92667507 25.91251793 34.85651861 25.89302666 36.78515625 25.90234375 C37.83840088 25.90484131 38.89164551 25.90733887 39.97680664 25.90991211 C41.32508545 25.91901611 42.67336426 25.92812012 44.0625 25.9375 C48.331875 25.958125 52.60125 25.97875 57 26 C57 34.58 57 43.16 57 52 C48.42 52.33 39.84 52.66 31 53 C30.67 61.25 30.34 69.5 30 78 C30.99 78.495 30.99 78.495 32 79 C31.67 82.63 31.34 86.26 31 90 C30.67 90 30.34 90 30 90 C30 86.37 30 82.74 30 79 C20.1 79 10.2 79 0 79 C0 87.25 0 95.5 0 104 C9.9 104 19.8 104 30 104 C30 121.16 30 138.32 30 156 C20.1 156 10.2 156 0 156 C0 164.25 0 172.5 0 181 C-1.98 181 -3.96 181 -6 181 C-4.68 180.67 -3.36 180.34 -2 180 C-1.67 163.83 -1.34 147.66 -1 131 C-10.9 131 -20.8 131 -31 131 C-30.67 122.09 -30.34 113.18 -30 104 C-20.76 104 -11.52 104 -2 104 C-2.03950954 96.56575914 -2.03950954 96.56575914 -2.09008789 89.1315918 C-2.09258545 88.20515869 -2.09508301 87.27872559 -2.09765625 86.32421875 C-2.10289307 85.37635498 -2.10812988 84.42849121 -2.11352539 83.4519043 C-2 81 -2 81 -1 78 C-0.85060226 76.08234406 -0.75189717 74.16053478 -0.68359375 72.23828125 C-0.64548584 71.23063721 -0.60737793 70.22299316 -0.56811523 69.18481445 C-0.52501221 67.90695068 -0.48190918 66.62908691 -0.4375 65.3125 C-0.293125 61.249375 -0.14875 57.18625 0 53 C-10.23 52.67 -20.46 52.34 -31 52 C-31 43.42 -31 34.84 -31 26 C-20.77 26 -10.54 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#61605E\",transform:\"translate(158,590)\"})),_path65||(_path65=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.35367808 0.00186918 4.70735655 0.00329072 7.06103516 0.00428772 C13.20277006 0.00807353 19.34448064 0.01786938 25.48620605 0.0289917 C31.77465486 0.03929127 38.06310766 0.0438035 44.3515625 0.04882812 C56.65105225 0.05949586 68.95052409 0.07652395 81.25 0.09765625 C81.25 4.38765625 81.25 8.67765625 81.25 13.09765625 C91.15 13.09765625 101.05 13.09765625 111.25 13.09765625 C111.25 21.34765625 111.25 29.59765625 111.25 38.09765625 C101.19614806 38.80318972 91.33150835 39.20267196 81.25 39.09765625 C80.92 30.84765625 80.59 22.59765625 80.25 14.09765625 C70.35 14.09765625 60.45 14.09765625 50.25 14.09765625 C50.25 22.34765625 50.25 30.59765625 50.25 39.09765625 C60.15 39.09765625 70.05 39.09765625 80.25 39.09765625 C80.25 47.34765625 80.25 55.59765625 80.25 64.09765625 C80.91 64.09765625 81.57 64.09765625 82.25 64.09765625 C81.92 65.08765625 81.59 66.07765625 81.25 67.09765625 C81.25 66.43765625 81.25 65.77765625 81.25 65.09765625 C71.02 65.09765625 60.79 65.09765625 50.25 65.09765625 C50.25 56.84765625 50.25 48.59765625 50.25 40.09765625 C35.4 39.60265625 35.4 39.60265625 20.25 39.09765625 C20.25 41.07765625 20.25 43.05765625 20.25 45.09765625 C19.92 45.09765625 19.59 45.09765625 19.25 45.09765625 C19.25 43.11765625 19.25 41.13765625 19.25 39.09765625 C9.68 39.42765625 0.11 39.75765625 -9.75 40.09765625 C-10.08 48.34765625 -10.41 56.59765625 -10.75 65.09765625 C-20.65 65.09765625 -30.55 65.09765625 -40.75 65.09765625 C-40.75 56.51765625 -40.75 47.93765625 -40.75 39.09765625 C-43.39 39.09765625 -46.03 39.09765625 -48.75 39.09765625 C-48.75 38.76765625 -48.75 38.43765625 -48.75 38.09765625 C-45.285 37.60265625 -45.285 37.60265625 -41.75 37.09765625 C-41.42 33.13765625 -41.09 29.17765625 -40.75 25.09765625 C-40.42 25.09765625 -40.09 25.09765625 -39.75 25.09765625 C-39.75 29.71765625 -39.75 34.33765625 -39.75 39.09765625 C-30.18 39.09765625 -20.61 39.09765625 -10.75 39.09765625 C-10.75 30.84765625 -10.75 22.59765625 -10.75 14.09765625 C-20.32 14.09765625 -29.89 14.09765625 -39.75 14.09765625 C-40.08 14.75765625 -40.41 15.41765625 -40.75 16.09765625 C-40.75 11.14765625 -40.75 6.19765625 -40.75 1.09765625 C-27.14993743 0.05676163 -13.63532909 -0.03211885 0 0 Z \",fill:\"#5E5C5B\",transform:\"translate(464.75,242.90234375)\"})),_path66||(_path66=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.25683594 0.00322266 2.51367188 0.00644531 3.80859375 0.00976562 C5.12730469 0.01814453 6.44601562 0.02652344 7.8046875 0.03515625 C9.14452961 0.04017136 10.4843735 0.04473424 11.82421875 0.04882812 C15.10939407 0.0606453 18.39454631 0.07858124 21.6796875 0.09765625 C21.6796875 7.68765625 21.6796875 15.27765625 21.6796875 23.09765625 C23.83371094 23.09765625 25.98773437 23.09765625 28.20703125 23.09765625 C36.36458333 23.09765625 44.52213542 23.09765625 52.6796875 23.09765625 C53.0096875 22.43765625 53.3396875 21.77765625 53.6796875 21.09765625 C57.9696875 21.42765625 62.2596875 21.75765625 66.6796875 22.09765625 C66.6796875 22.75765625 66.6796875 23.41765625 66.6796875 24.09765625 C67.66710937 24.08605469 68.65453125 24.07445312 69.671875 24.0625 C70.95320312 24.05347656 72.23453125 24.04445313 73.5546875 24.03515625 C74.83085938 24.02355469 76.10703125 24.01195312 77.421875 24 C80.6796875 24.09765625 80.6796875 24.09765625 82.6796875 25.09765625 C82.6796875 31.69765625 82.6796875 38.29765625 82.6796875 45.09765625 C112.8746875 46.08765625 112.8746875 46.08765625 143.6796875 47.09765625 C143.6796875 72.39086613 143.6796875 72.39086613 143.1796875 81.47265625 C143.0146875 84.64890625 142.8496875 87.82515625 142.6796875 91.09765625 C133.1096875 91.09765625 123.5396875 91.09765625 113.6796875 91.09765625 C113.3496875 83.83765625 113.0196875 76.57765625 112.6796875 69.09765625 C110.60945312 69.20464844 108.53921875 69.31164062 106.40625 69.421875 C104.4040209 69.5122534 102.4017853 69.60252466 100.39941406 69.68969727 C99.00624779 69.75318538 97.61332085 69.82217061 96.22070312 69.89672852 C94.22076452 70.00285061 92.21973144 70.08767529 90.21875 70.171875 C89.01428223 70.22947998 87.80981445 70.28708496 86.56884766 70.34643555 C85.6154248 70.26433838 84.66200195 70.18224121 83.6796875 70.09765625 C83.0196875 69.10765625 82.3596875 68.11765625 81.6796875 67.09765625 C81.3496875 67.42765625 81.0196875 67.75765625 80.6796875 68.09765625 C74.7261739 69.24318326 68.8519959 69.24757648 62.8046875 69.22265625 C61.84304688 69.22652344 60.88140625 69.23039063 59.890625 69.234375 C58.97796875 69.23308594 58.0653125 69.23179687 57.125 69.23046875 C56.29500488 69.22934082 55.46500977 69.22821289 54.60986328 69.22705078 C52.6796875 69.09765625 52.6796875 69.09765625 51.6796875 68.09765625 C51.59283147 66.5359288 51.57266531 64.97036281 51.58203125 63.40625 C51.58686523 61.98989258 51.58686523 61.98989258 51.59179688 60.54492188 C51.60436523 59.05508789 51.60436523 59.05508789 51.6171875 57.53515625 C51.62169922 56.53806641 51.62621094 55.54097656 51.63085938 54.51367188 C51.64268743 52.04160776 51.65916901 49.56966107 51.6796875 47.09765625 C50.77613525 47.10289307 49.87258301 47.10812988 48.94165039 47.11352539 C45.60017261 47.13053311 42.25874058 47.14308958 38.91723633 47.15258789 C37.46898677 47.15762726 36.02074233 47.16445878 34.57250977 47.1730957 C32.49494162 47.18517872 30.41744053 47.19088836 28.33984375 47.1953125 C27.08824463 47.20054932 25.83664551 47.20578613 24.54711914 47.21118164 C21.6796875 47.09765625 21.6796875 47.09765625 20.6796875 46.09765625 C20.57860436 44.0997778 20.55005688 42.09808487 20.5546875 40.09765625 C20.55210937 39.00453125 20.54953125 37.91140625 20.546875 36.78515625 C20.69970353 32.54191703 21.21079629 28.31767718 21.6796875 24.09765625 C11.7796875 24.09765625 1.8796875 24.09765625 -8.3203125 24.09765625 C-8.3203125 31.35765625 -8.3203125 38.61765625 -8.3203125 46.09765625 C-18.69271747 46.77781395 -28.92383184 47.24594203 -39.3203125 47.09765625 C-39.4770689 39.38175808 -38.99484351 31.78249164 -38.3203125 24.09765625 C-28.60568479 23.16611661 -19.06916559 23.01288361 -9.3203125 23.09765625 C-8.9903125 15.83765625 -8.6603125 8.57765625 -8.3203125 1.09765625 C-5.50207058 -0.31146471 -3.14779968 -0.01417928 0 0 Z \",fill:\"#807F7D\",transform:\"translate(493.3203125,822.90234375)\"})),_path67||(_path67=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30.33 8.25 30.66 16.5 31 25 C40.24 25 49.48 25 59 25 C59.76281388 42.35401587 60.13962361 59.63082292 60 77 C60.55872803 76.99476318 61.11745605 76.98952637 61.69311523 76.98413086 C64.27456494 76.96308281 66.85599649 76.95025266 69.4375 76.9375 C70.31599609 76.92912109 71.19449219 76.92074219 72.09960938 76.91210938 C72.97294922 76.90888672 73.84628906 76.90566406 74.74609375 76.90234375 C75.53685303 76.89710693 76.3276123 76.89187012 77.14233398 76.88647461 C81.10915017 77.04406278 85.05433606 77.5615929 89 78 C89.495 90.375 89.495 90.375 90 103 C99.57 103.33 109.14 103.66 119 104 C119 111.92 119 119.84 119 128 C108.94596347 128.76602183 99.08268146 129.09602554 89 129 C89 120.75 89 112.5 89 104 C86.37236694 104.00785522 86.37236694 104.00785522 83.69165039 104.01586914 C77.91611499 104.03196762 72.14058037 104.04347267 66.36502934 104.05181217 C62.86191115 104.05703989 59.35881715 104.0641355 55.85571289 104.07543945 C51.83219159 104.08834206 47.80869586 104.09322912 43.78515625 104.09765625 C42.52163834 104.10281754 41.25812042 104.10797882 39.95631409 104.11329651 C38.795186 104.11337204 37.63405792 104.11344757 36.43774414 104.11352539 C34.8955294 104.11685631 34.8955294 104.11685631 33.32215881 104.12025452 C31 104 31 104 30 103 C29.91262355 101.14630389 29.89301847 99.28932459 29.90234375 97.43359375 C29.90484131 96.42095459 29.90733887 95.40831543 29.90991211 94.36499023 C29.91901611 93.06891846 29.92812012 91.77284668 29.9375 90.4375 C29.958125 86.333125 29.97875 82.22875 30 78 C20.1 78 10.2 78 0 78 C0 69.09 0 60.18 0 51 C9.9 51 19.8 51 30 51 C30 50.67 30 50.34 30 50 C30 41.66666667 30 33.33333333 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#615F5E\",transform:\"translate(8,335)\"})),_path68||(_path68=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.495 6.93 1.495 6.93 2 14 C5.77338276 14.75467655 8.94534972 15.17442486 12.73828125 15.31640625 C13.70032471 15.35451416 14.66236816 15.39262207 15.65356445 15.43188477 C17.46473755 15.49653931 17.46473755 15.49653931 19.3125 15.5625 C23.169375 15.706875 27.02625 15.85125 31 16 C31 24.25 31 32.5 31 41 C50.8 41 70.6 41 91 41 C91 36.71 91 32.42 91 28 C91.33 28 91.66 28 92 28 C92 40.87 92 53.74 92 67 C87.545 67.495 87.545 67.495 83 68 C85.97 68.33 88.94 68.66 92 69 C92 77.25 92 85.5 92 94 C82.26066293 94.11067428 72.7099512 93.67547487 63 93 C63 85.08 63 77.16 63 69 C52.44 68.67 41.88 68.34 31 68 C31 76.58 31 85.16 31 94 C21.1 94 11.2 94 1 94 C1 85.42 1 76.84 1 68 C-4.94 68 -10.88 68 -17 68 C-17 59.09 -17 50.18 -17 41 C-11.06 41 -5.12 41 1 41 C1 32.75 1 24.5 1 16 C-4.28 16 -9.56 16 -15 16 C-15.33 15.34 -15.66 14.68 -16 14 C-10.72 14 -5.44 14 0 14 C0 9.38 0 4.76 0 0 Z \",fill:\"#6E6D6B\",transform:\"translate(821,548)\"})),_path69||(_path69=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0 20.46 0 31 0 C31.07875684 16.0663947 30.9717299 31.96645667 30 48 C20.1 48 10.2 48 0 48 C0 55.59 0 63.18 0 71 C10.23 71 20.46 71 31 71 C31 78.92 31 86.84 31 95 C41.23 95 51.46 95 62 95 C62 87.41 62 79.82 62 72 C71.9 71.67 81.8 71.34 92 71 C92.33 79.58 92.66 88.16 93 97 C83.1 97 73.2 97 63 97 C62.67 103.6 62.34 110.2 62 117 C52.1 117 42.2 117 32 117 C31.08617533 112.43087664 30.88433395 108.29977272 30.9375 103.6875 C30.958125 101.150625 30.97875 98.61375 31 96 C20.77 96 10.54 96 0 96 C0 88.08 0 80.16 0 72 C-9.9 72.33 -19.8 72.66 -30 73 C-30 80.59 -30 88.18 -30 96 C-29.34 96.33 -28.68 96.66 -28 97 C-29.3929126 96.99214478 -29.3929126 96.99214478 -30.81396484 96.98413086 C-34.25423805 96.96710407 -37.69446659 96.95455727 -41.13476562 96.94506836 C-42.62468166 96.94003486 -44.11459274 96.93320758 -45.60449219 96.92456055 C-47.74415304 96.91245195 -49.88374868 96.90676193 -52.0234375 96.90234375 C-53.95582275 96.89448853 -53.95582275 96.89448853 -55.92724609 96.88647461 C-58.91405228 96.78457369 -58.91405228 96.78457369 -61 98 C-60.67 89.42 -60.34 80.84 -60 72 C-50.43 72 -40.86 72 -31 72 C-31 64.74 -31 57.48 -31 50 C-20.82658017 46.60886006 -11.61587766 46.91153435 -1 47 C-1 38.75 -1 30.5 -1 22 C-2.32 21.67 -3.64 21.34 -5 21 C-3.68 20.67 -2.36 20.34 -1 20 C-0.67 13.4 -0.34 6.8 0 0 Z \",fill:\"#605E5D\",transform:\"translate(545,0)\"})),_path70||(_path70=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 10.56 1 21.12 1 32 C10.57 32 20.14 32 30 32 C30.495 43.385 30.495 43.385 31 55 C40.9 55 50.8 55 61 55 C60.96056498 48.92720042 60.96056498 48.92720042 60.90991211 42.85449219 C60.90741455 42.09297852 60.90491699 41.33146484 60.90234375 40.546875 C60.89710693 39.77182617 60.89187012 38.99677734 60.88647461 38.19824219 C61 36 61 36 62 32 C71.9 32 81.8 32 92 32 C92 39.92 92 47.84 92 56 C81.77 56 71.54 56 61 56 C61 70.85 61 85.7 61 101 C51.1 101 41.2 101 31 101 C30.34 94.07 29.68 87.14 29 80 C27.25460937 80.01160156 25.50921875 80.02320312 23.7109375 80.03515625 C5.77949424 80.11513481 -12.08271367 79.70709516 -30 79 C-30 71.41 -30 63.82 -30 56 C-19.93103696 55.07411834 -10.10948884 54.91780903 0 55 C0 47.41 0 39.82 0 32 C-9.9 32 -19.8 32 -30 32 C-30 23.42 -30 14.84 -30 6 C-20.1 6 -10.2 6 0 6 C0 4.02 0 2.04 0 0 Z \",fill:\"#6F6E6C\",transform:\"translate(821,16)\"})),_path71||(_path71=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 81.51 1 163.02 1 247 C7.6 247 14.2 247 21 247 C22 248 22 248 22.11352539 250.22485352 C22.10828857 251.18319092 22.10305176 252.14152832 22.09765625 253.12890625 C22.09443359 254.16337891 22.09121094 255.19785156 22.08789062 256.26367188 C22.07951172 257.35228516 22.07113281 258.44089844 22.0625 259.5625 C22.05798828 260.65498047 22.05347656 261.74746094 22.04882812 262.87304688 C22.0369984 265.58205432 22.01906231 268.2910338 22 271 C15.07 271 8.14 271 1 271 C1 279.91 1 288.82 1 298 C7.93 298 14.86 298 22 298 C22 289.42 22 280.84 22 272 C29 271 29 271 40 271 C40.33 295.75 40.66 320.5 41 346 C43.97 346.33 46.94 346.66 50 347 C51.68158146 350.66864051 52.24028871 353.49416047 52.1953125 357.51953125 C52.19031738 358.44096924 52.18532227 359.36240723 52.18017578 360.31176758 C52.16196777 361.46700928 52.14375977 362.62225098 52.125 363.8125 C52.08375 367.504375 52.0425 371.19625 52 375 C42.1 375 32.2 375 22 375 C22 366.75 22 358.5 22 350 C15.07 349.67 8.14 349.34 1 349 C1 357.91 1 366.82 1 376 C7.6 376 14.2 376 21 376 C21 384.58 21 393.16 21 402 C14.4 401.67 7.8 401.34 1 401 C1 409.91 1 418.82 1 428 C7.6 428 14.2 428 21 428 C21 433.28 21 438.56 21 444 C26.61 444 32.22 444 38 444 C38 444.33 38 444.66 38 445 C25.46 445 12.92 445 0 445 C0 298.15 0 151.3 0 0 Z \",fill:\"#5F5E5C\",transform:\"translate(251,292)\"})),_path72||(_path72=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.20970459 0.00523682 2.41940918 0.01047363 3.66577148 0.01586914 C4.97094727 0.0190918 6.27612305 0.02231445 7.62084961 0.02563477 C9.00952213 0.03399138 10.39819401 0.04245634 11.78686523 0.05102539 C13.17944179 0.05603873 14.57202005 0.06060193 15.96459961 0.06469727 C19.38453974 0.07653097 22.80445773 0.09446708 26.22436523 0.11352539 C26.22436523 8.03352539 26.22436523 15.95352539 26.22436523 24.11352539 C36.12436523 24.11352539 46.02436523 24.11352539 56.22436523 24.11352539 C56.22436523 32.03352539 56.22436523 39.95352539 56.22436523 48.11352539 C46.32436523 48.11352539 36.42436523 48.11352539 26.22436523 48.11352539 C26.22436523 55.04352539 26.22436523 61.97352539 26.22436523 69.11352539 C16.65436523 69.11352539 7.08436523 69.11352539 -2.77563477 69.11352539 C-2.77563477 79.67352539 -2.77563477 90.23352539 -2.77563477 101.11352539 C-3.10563477 101.11352539 -3.43563477 101.11352539 -3.77563477 101.11352539 C-3.77563477 98.47352539 -3.77563477 95.83352539 -3.77563477 93.11352539 C-13.01563477 93.11352539 -22.25563477 93.11352539 -31.77563477 93.11352539 C-31.77563477 85.19352539 -31.77563477 77.27352539 -31.77563477 69.11352539 C-22.53563477 69.11352539 -13.29563477 69.11352539 -3.77563477 69.11352539 C-3.77563477 62.51352539 -3.77563477 55.91352539 -3.77563477 49.11352539 C-5.96188477 49.13415039 -8.14813477 49.15477539 -10.40063477 49.17602539 C-17.9070649 49.21017961 -25.29058434 48.73084914 -32.77563477 48.11352539 C-32.77563477 40.19352539 -32.77563477 32.27352539 -32.77563477 24.11352539 C-42.67563477 24.11352539 -52.57563477 24.11352539 -62.77563477 24.11352539 C-62.77563477 16.52352539 -62.77563477 8.93352539 -62.77563477 1.11352539 C-52.87563477 1.11352539 -42.97563477 1.11352539 -32.77563477 1.11352539 C-32.44563477 8.70352539 -32.11563477 16.29352539 -31.77563477 24.11352539 C-22.53563477 24.11352539 -13.29563477 24.11352539 -3.77563477 24.11352539 C-3.8152231 16.58919765 -3.8152231 16.58919765 -3.86572266 9.06494141 C-3.86822021 8.13351318 -3.87071777 7.20208496 -3.87329102 6.24243164 C-3.87852783 5.28409424 -3.88376465 4.32575684 -3.88916016 3.33837891 C-3.71920217 0.00756797 -3.37270508 0.13794598 0 0 Z \",fill:\"#62605F\",transform:\"translate(70.775634765625,139.886474609375)\"})),_path73||(_path73=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0.33 20.46 0.66 31 1 C31 8.26 31 15.52 31 23 C21.43 23 11.86 23 2 23 C2 31.58 2 40.16 2 49 C-18.13 49 -38.26 49 -59 49 C-59 54.94 -59 60.88 -59 67 C-91.01 67 -123.02 67 -156 67 C-150 59 -150 59 -147 58 C-146.73316406 57.43796875 -146.46632812 56.8759375 -146.19140625 56.296875 C-144.45176226 52.94306954 -141.71676306 50.73394911 -138.9375 48.25 C-138.35476318 47.71922852 -137.77202637 47.18845703 -137.17163086 46.64160156 C-133.84754654 43.62278563 -130.46688 40.67799918 -127.0625 37.75 C-123.62229818 34.73194749 -120.94579529 31.55038161 -118.38671875 27.76171875 C-116.0628913 24.80947599 -114.14268416 23.14645759 -110.34277344 22.65942383 C-109.35825195 22.67513428 -108.37373047 22.69084473 -107.359375 22.70703125 C-106.39483398 22.71452393 -105.43029297 22.7220166 -104.43652344 22.72973633 C-103.2199707 22.75704834 -102.00341797 22.78436035 -100.75 22.8125 C-94.93375 22.9053125 -94.93375 22.9053125 -89 23 C-89 31.25 -89 39.5 -89 48 C-79.1 48 -69.2 48 -59 48 C-59 39.75 -59 31.5 -59 23 C-49.1 23 -39.2 23 -29 23 C-28.505 23.99 -28.505 23.99 -28 25 C-27.01 24.34 -26.02 23.68 -25 23 C-22.27270508 22.77294922 -22.27270508 22.77294922 -19.01953125 22.8046875 C-17.27446289 22.81435547 -17.27446289 22.81435547 -15.49414062 22.82421875 C-14.27919922 22.84097656 -13.06425781 22.85773437 -11.8125 22.875 C-10.58595703 22.88402344 -9.35941406 22.89304687 -8.09570312 22.90234375 C-5.06371915 22.92593896 -2.03183527 22.96181033 1 23 C0.67 15.41 0.34 7.82 0 0 Z \",fill:\"#6B6968\",transform:\"translate(156,957)\"})),_path74||(_path74=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.02911749 3.02911749 2.31975274 6.49505944 2.33813477 10.5612793 C2.34967087 11.44765579 2.36120697 12.33403229 2.37309265 13.24726868 C2.40749607 16.18960298 2.42592314 19.13172709 2.44140625 22.07421875 C2.45176061 23.58085555 2.45176061 23.58085555 2.46232414 25.11792946 C2.49820321 30.43628735 2.52171785 35.75453855 2.53540039 41.07299805 C2.55193285 46.56349822 2.6103227 52.05270686 2.67854404 57.54277325 C2.72336392 61.76620962 2.73689763 65.98933792 2.74201775 70.21299171 C2.74990805 72.23640714 2.7695435 74.25981271 2.80124092 76.28299522 C2.84275008 79.12025941 2.83983966 81.95428332 2.82641602 84.79174805 C2.85945328 86.03968643 2.85945328 86.03968643 2.89315796 87.31283569 C2.81609023 92.12201684 2.00829503 94.49542519 -1.42001343 97.95768738 C-2.59464566 98.99339014 -3.78596905 100.01077305 -5 101 C-5.69504639 101.62213379 -6.39009277 102.24426758 -7.10620117 102.88525391 C-7.68345947 103.36913574 -8.26071777 103.85301758 -8.85546875 104.3515625 C-13.59672793 108.44353733 -17.93092685 112.90517451 -22.3125 117.375 C-28.1573061 123.28233245 -33.96376099 128.91485935 -40.51953125 134.02734375 C-44.32697395 137.05530999 -47.86288136 140.36812624 -51.4453125 143.65625 C-56.43959543 148.23816095 -61.49991494 152.62046342 -66.875 156.75 C-72.59426681 161.26147133 -77.24957417 166.50163478 -82 172 C-83.32 171.67 -84.64 171.34 -86 171 C-86 167.37 -86 163.74 -86 160 C-95.57 160 -105.14 160 -115 160 C-115 151.75 -115 143.5 -115 135 C-110.88822073 134.97708606 -106.77660342 134.95716049 -102.66479492 134.94506836 C-101.26504772 134.9400292 -99.8653058 134.93319784 -98.46557617 134.92456055 C-96.45754223 134.9124768 -94.44947043 134.90730193 -92.44140625 134.90234375 C-90.62684937 134.89448853 -90.62684937 134.89448853 -88.77563477 134.88647461 C-86 135 -86 135 -85 136 C-84.89930564 138.76021008 -84.86131408 141.49000634 -84.875 144.25 C-84.86919922 145.39662109 -84.86919922 145.39662109 -84.86328125 146.56640625 C-84.86457031 147.31277344 -84.86585938 148.05914063 -84.8671875 148.828125 C-84.86831543 149.5077832 -84.86944336 150.18744141 -84.87060547 150.88769531 C-85 153 -85 153 -86 158 C-81.71 157.67 -77.42 157.34 -73 157 C-73.268125 155.7625 -73.53625 154.525 -73.8125 153.25 C-74.26953125 151.140625 -74.26953125 151.140625 -74 149 C-73.24895996 148.4330542 -72.49791992 147.8661084 -71.72412109 147.28198242 C-68.60617771 144.67009706 -66.96747933 141.90092003 -65.14453125 138.34765625 C-64.80116226 137.69969086 -64.45779327 137.05172546 -64.10401917 136.38412476 C-62.99506704 134.28286169 -61.90327536 132.17324789 -60.8125 130.0625 C-60.0501322 128.60594446 -59.28727107 127.14964702 -58.52392578 125.69360352 C-52.72914828 114.59560711 -47.23308308 103.3737111 -42 92 C-41.09803011 90.06359657 -40.1929477 88.1286724 -39.28759766 86.19384766 C-38.44800803 84.39748271 -37.61264828 82.59914276 -36.77734375 80.80078125 C-35.47220004 77.99915217 -34.14823522 75.20700929 -32.81640625 72.41796875 C-28.91041888 64.23387683 -25.10159063 56.03265142 -21.52124023 47.70068359 C-19.67838678 43.44876355 -17.67786856 39.31318497 -15.5625 35.1875 C-11.96541685 28.12295831 -8.91699314 20.86851736 -5.89453125 13.54296875 C-4.01393613 8.99052232 -2.02204404 4.49113636 0 0 Z \",fill:\"#615F5E\",transform:\"translate(481,455)\"})),_path75||(_path75=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 8.91 1 17.82 1 27 C10.9 27 20.8 27 31 27 C31 25.02 31 23.04 31 21 C31.33 21 31.66 21 32 21 C32 31.56 32 42.12 32 53 C37.75749802 52.96093657 37.75749802 52.96093657 43.51489258 52.90991211 C49.80185819 52.88880806 55.66468797 53.42406254 62 54 C62 62.25 62 70.5 62 79 C72.23 79 82.46 79 93 79 C93 76.69 93 74.38 93 72 C93.33 72 93.66 72 94 72 C94 74.31 94 76.62 94 79 C102.25 79 110.5 79 119 79 C119 79.33 119 79.66 119 80 C105.635 80.495 105.635 80.495 92 81 C92 89.25 92 97.5 92 106 C89.463125 106.165 86.92625 106.33 84.3125 106.5 C83.54333252 106.55220703 82.77416504 106.60441406 81.98168945 106.65820312 C75.28132819 107.07179554 68.76265238 107 62 107 C62 115.58 62 124.16 62 133 C51.44 133 40.88 133 30 133 C30.33 124.09 30.66 115.18 31 106 C41.23 106 51.46 106 62 106 C62 97.42 62 88.84 62 80 C51.77 80 41.54 80 31 80 C31 71.42 31 62.84 31 54 C21.1 54.33 11.2 54.66 1 55 C0.67 63.25 0.34 71.5 0 80 C-9.57 80 -19.14 80 -29 80 C-29 71.09 -29 62.18 -29 53 C-19.76 53 -10.52 53 -1 53 C-0.67 44.75 -0.34 36.5 0 28 C-5.61 28 -11.22 28 -17 28 C-17.02702297 24.60411312 -17.0468505 21.20844234 -17.0625 17.8125 C-17.07087891 16.85279297 -17.07925781 15.89308594 -17.08789062 14.90429688 C-17.09111328 13.97294922 -17.09433594 13.04160156 -17.09765625 12.08203125 C-17.10289307 11.22843018 -17.10812988 10.3748291 -17.11352539 9.49536133 C-17 7 -17 7 -16 2 C-10.72 2 -5.44 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#5A5958\",transform:\"translate(545,588)\"})),_path76||(_path76=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.6 0 13.2 0 20 0 C20 39.93 20 79.86 20 121 C13.4 121 6.8 121 0 121 C0 128.59 0 136.18 0 144 C-9.57 144 -19.14 144 -29 144 C-29 136.08 -29 128.16 -29 120 C-19.43 120 -9.86 120 0 120 C0 113.07 0 106.14 0 99 C-7.92 99 -15.84 99 -24 99 C-24 98.67 -24 98.34 -24 98 C-25.98 97.34 -27.96 96.68 -30 96 C-30.02888146 92.68751813 -30.04675799 89.37506833 -30.0625 86.0625 C-30.07087891 85.11697266 -30.07925781 84.17144531 -30.08789062 83.19726562 C-30.09111328 82.29814453 -30.09433594 81.39902344 -30.09765625 80.47265625 C-30.10289307 79.64000244 -30.10812988 78.80734863 -30.11352539 77.94946289 C-30 76 -30 76 -29 75 C-27.18490824 74.7837657 -25.36245529 74.62866278 -23.5390625 74.5 C-22.42789063 74.4175 -21.31671875 74.335 -20.171875 74.25 C-19.00140625 74.1675 -17.8309375 74.085 -16.625 74 C-14.32527033 73.83682628 -12.02577455 73.670312 -9.7265625 73.5 C-8.18863037 73.39171875 -8.18863037 73.39171875 -6.61962891 73.28125 C-3.89254531 73.08259832 -3.89254531 73.08259832 -1 72 C-0.67 65.07 -0.34 58.14 0 51 C-2.74570312 51.01740234 -2.74570312 51.01740234 -5.546875 51.03515625 C-7.94791565 51.04453532 -10.3489574 51.05363539 -12.75 51.0625 C-14.55984375 51.07506836 -14.55984375 51.07506836 -16.40625 51.08789062 C-17.56640625 51.09111328 -18.7265625 51.09433594 -19.921875 51.09765625 C-20.99018555 51.10289307 -22.05849609 51.10812988 -23.15917969 51.11352539 C-26 51 -26 51 -30 50 C-30 41.75 -30 33.5 -30 25 C-15.15 24.505 -15.15 24.505 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#696765\",transform:\"translate(1004,772)\"})),_path77||(_path77=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30.375 12.375 30.375 12.375 30.47802734 16.27490234 C30.53144287 17.79011475 30.53144287 17.79011475 30.5859375 19.3359375 C30.6173584 20.37282715 30.6487793 21.4097168 30.68115234 22.47802734 C30.75954472 25.16809835 30.75954472 25.16809835 33 27 C22.11 26.67 11.22 26.34 0 26 C0 34.25 0 42.5 0 51 C9.9 51 19.8 51 30 51 C30.33 59.91 30.66 68.82 31 78 C30.34 77.67 29.68 77.34 29 77 C26.82175039 76.91440882 24.64084745 76.89286588 22.4609375 76.90234375 C21.15898438 76.90556641 19.85703125 76.90878906 18.515625 76.91210938 C17.13541601 76.92046534 15.75520768 76.92893029 14.375 76.9375 C12.98698074 76.94251499 11.59895978 76.9470779 10.2109375 76.95117188 C6.80727327 76.96299015 3.4036313 76.9809261 0 77 C0 84.92 0 92.84 0 101 C-10.23 101 -20.46 101 -31 101 C-31 109.25 -31 117.5 -31 126 C-16.15 126.495 -16.15 126.495 -1 127 C-0.505 138.88 -0.505 138.88 0 151 C-10.23 151 -20.46 151 -31 151 C-31 143.08 -31 135.16 -31 127 C-38.67305567 126.71150915 -38.67305567 126.71150915 -46.34643555 126.43188477 C-47.308479 126.39377686 -48.27052246 126.35566895 -49.26171875 126.31640625 C-50.24100342 126.27974854 -51.22028809 126.24309082 -52.22924805 126.20532227 C-55 126 -55 126 -60 125 C-60 117.08 -60 109.16 -60 101 C-50.76 100.67 -41.52 100.34 -32 100 C-32.0309375 94.8025 -32.0309375 94.8025 -32.0625 89.5 C-32.09826533 76.98038945 -31.62978169 64.50183651 -31 52 C-30.67 52 -30.34 52 -30 52 C-30 59.92 -30 67.84 -30 76 C-20.43 76 -10.86 76 -1 76 C-1 67.75 -1 59.5 -1 51 C-8.43424086 51.03950954 -8.43424086 51.03950954 -15.8684082 51.09008789 C-16.79484131 51.09258545 -17.72127441 51.09508301 -18.67578125 51.09765625 C-19.62364502 51.10289307 -20.57150879 51.10812988 -21.5480957 51.11352539 C-24 51 -24 51 -27 50 C-27 49.01 -27 48.02 -27 47 C-28.485 47.495 -28.485 47.495 -30 48 C-30 40.74 -30 33.48 -30 26 C-26.70265354 24.90088451 -24.27041255 24.8860544 -20.80078125 24.90234375 C-19.59228516 24.90556641 -18.38378906 24.90878906 -17.13867188 24.91210938 C-15.2447168 24.92467773 -15.2447168 24.92467773 -13.3125 24.9375 C-11.40114258 24.94426758 -11.40114258 24.94426758 -9.45117188 24.95117188 C-6.3007613 24.96297117 -3.15037481 24.98090682 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#5E5C5A\",transform:\"translate(883,413)\"})),_path78||(_path78=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C29.37 0 58.74 0 89 0 C89 20 89 20 88 22 C87.915085 23.8863912 87.892807 25.77578515 87.90234375 27.6640625 C87.90556641 28.78554688 87.90878906 29.90703125 87.91210938 31.0625 C87.92048828 32.238125 87.92886719 33.41375 87.9375 34.625 C87.94201172 35.80835938 87.94652344 36.99171875 87.95117188 38.2109375 C87.96298533 41.14067507 87.97945742 44.07031272 88 47 C87.30438965 47.05534912 86.6087793 47.11069824 85.89208984 47.16772461 C82.71950822 47.42166855 79.54725817 47.67954821 76.375 47.9375 C75.28058594 48.02451172 74.18617188 48.11152344 73.05859375 48.20117188 C71.46337891 48.33168945 71.46337891 48.33168945 69.8359375 48.46484375 C68.86188965 48.543396 67.8878418 48.62194824 66.88427734 48.70288086 C63.89438866 49.01087938 60.95904078 49.47612313 58 50 C58 49.34 58 48.68 58 48 C56.9179126 48.05329468 56.9179126 48.05329468 55.81396484 48.10766602 C36.78400442 49.00451466 18.02704602 48.89312691 -1 48 C-1.03032084 44.31251906 -1.04721699 40.62507144 -1.0625 36.9375 C-1.07087891 35.93783203 -1.07925781 34.93816406 -1.08789062 33.90820312 C-1.1226005 22.55807438 -0.49511359 11.38761251 0 0 Z \",fill:\"#5F5E5C\",transform:\"translate(456,0)\"})),_path79||(_path79=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0 20.46 0 31 0 C31 1.98 31 3.96 31 6 C40.57 5.67 50.14 5.34 60 5 C60.66 3.68 61.32 2.36 62 1 C62 2.32 62 3.64 62 5 C62.73114014 4.99476318 63.46228027 4.98952637 64.21557617 4.98413086 C67.53954198 4.96329839 70.86349403 4.95031986 74.1875 4.9375 C75.91323242 4.92493164 75.91323242 4.92493164 77.67382812 4.91210938 C78.78564453 4.90888672 79.89746094 4.90566406 81.04296875 4.90234375 C82.06414795 4.89710693 83.08532715 4.89187012 84.13745117 4.88647461 C86.86901616 4.99480533 89.34169374 5.38293132 92 6 C92 4.35 92 2.7 92 1 C92.66 1 93.32 1 94 1 C94.495 2.98 94.495 2.98 95 5 C95.71655762 4.98952637 96.43311523 4.97905273 97.17138672 4.96826172 C100.40588905 4.92678701 103.64033553 4.90070108 106.875 4.875 C108.00292969 4.85824219 109.13085938 4.84148438 110.29296875 4.82421875 C111.36933594 4.81777344 112.44570313 4.81132813 113.5546875 4.8046875 C114.54968262 4.79421387 115.54467773 4.78374023 116.56982422 4.77294922 C119 5 119 5 121 7 C120.2479126 7.02505615 119.4958252 7.0501123 118.72094727 7.07592773 C115.33460804 7.19150514 111.94857387 7.31440345 108.5625 7.4375 C107.37849609 7.47681641 106.19449219 7.51613281 104.97460938 7.55664062 C103.28754883 7.61948242 103.28754883 7.61948242 101.56640625 7.68359375 C100.52427979 7.72025146 99.48215332 7.75690918 98.40844727 7.79467773 C96.0500174 7.73515341 96.0500174 7.73515341 95 9 C94.84285346 10.63256758 94.74914586 12.27135338 94.68359375 13.91015625 C94.64169922 14.89951172 94.59980469 15.88886719 94.55664062 16.90820312 C94.51732422 17.94912109 94.47800781 18.99003906 94.4375 20.0625 C94.37272461 21.62967773 94.37272461 21.62967773 94.30664062 23.22851562 C94.20018775 25.81886884 94.0981724 28.40932186 94 31 C93.09644775 30.99476318 92.19289551 30.98952637 91.26196289 30.98413086 C87.92048511 30.96712314 84.57905308 30.95456667 81.23754883 30.94506836 C79.78929927 30.94002899 78.34105483 30.93319747 76.89282227 30.92456055 C74.81525412 30.91247753 72.73775303 30.90676789 70.66015625 30.90234375 C69.40855713 30.89710693 68.15695801 30.89187012 66.86743164 30.88647461 C64.10267706 30.67112965 64.10267706 30.67112965 63 32 C60.70848583 32.08790975 58.41427476 32.10694038 56.12109375 32.09765625 C55.09110008 32.09553383 55.09110008 32.09553383 54.04029846 32.09336853 C51.83932199 32.08775479 49.63844591 32.07520007 47.4375 32.0625 C45.94856917 32.05748676 44.45963676 32.05292355 42.97070312 32.04882812 C39.31373195 32.03863021 35.65697883 32.01905779 32 32 C32 40.58 32 49.16 32 58 C42.23 58 52.46 58 63 58 C63 68 63 68 62 81 C51.77 81 41.54 81 31 81 C31 73.74 31 66.48 31 59 C21.43 59 11.86 59 2 59 C1.34 50.09 0.68 41.18 0 32 C-4.29 31.67 -8.58 31.34 -13 31 C-13 30.67 -13 30.34 -13 30 C-8.71 30 -4.42 30 0 30 C0 20.1 0 10.2 0 0 Z \",fill:\"#6A6968\",transform:\"translate(273,765)\"})),_path80||(_path80=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C11 0 11 0 17 1 C17.33 9.25 17.66 17.5 18 26 C21.95142546 26.06883128 25.90132632 26.1285718 29.85302734 26.16479492 C31.85919374 26.18732251 33.86516526 26.2254357 35.87109375 26.26367188 C37.12792969 26.27333984 38.38476562 26.28300781 39.6796875 26.29296875 C41.42354736 26.31653442 41.42354736 26.31653442 43.20263672 26.34057617 C44.1257666 26.22818604 45.04889648 26.1157959 46 26 C46.66 25.01 47.32 24.02 48 23 C47.67 32.9 47.34 42.8 47 53 C67.46 53 87.92 53 109 53 C109 44.75 109 36.5 109 28 C112.41751653 26.86082782 115.03487937 26.88661519 118.63671875 26.90234375 C119.93544922 26.90556641 121.23417969 26.90878906 122.57226562 26.91210938 C123.94401108 26.92046469 125.31575587 26.92892963 126.6875 26.9375 C128.07096195 26.94251665 129.45442563 26.94707927 130.83789062 26.95117188 C134.22530395 26.96297471 137.61263033 26.97943981 141 27 C140.34 27.33 139.68 27.66 139 28 C139 36.25 139 44.5 139 53 C129.1 53.33 119.2 53.66 109 54 C109 62.58 109 71.16 109 80 C117.37649761 79.96051213 117.37649761 79.96051213 125.75292969 79.90991211 C127.32155762 79.90616577 127.32155762 79.90616577 128.921875 79.90234375 C129.99018555 79.89710693 131.05849609 79.89187012 132.15917969 79.88647461 C135 80 135 80 139 81 C139 89.25 139 97.5 139 106 C133.245625 106.0309375 133.245625 106.0309375 127.375 106.0625 C126.17665527 106.071604 124.97831055 106.08070801 123.74365234 106.09008789 C122.78410645 106.09258545 121.82456055 106.09508301 120.8359375 106.09765625 C119.37486572 106.10551147 119.37486572 106.10551147 117.88427734 106.11352539 C115 106 115 106 109 105 C108.67 97.08 108.34 89.16 108 81 C93.15 80.505 93.15 80.505 78 80 C78 81.98 78 83.96 78 86 C77.67 86 77.34 86 77 86 C77.33 75.44 77.66 64.88 78 54 C63.645 54.495 63.645 54.495 49 55 C49 62.92 49 70.84 49 79 C55.27 79 61.54 79 68 79 C68 79.33 68 79.66 68 80 C61.07 80 54.14 80 47 80 C46.505 67.13 46.505 67.13 46 54 C36.1 54 26.2 54 16 54 C16 62.58 16 71.16 16 80 C10.72 80 5.44 80 0 80 C0 71.09 0 62.18 0 53 C5.61 53 11.22 53 17 53 C16.835 51.659375 16.67 50.31875 16.5 48.9375 C15.78614965 41.94980995 15.93619659 35.01837493 16 28 C10.72 27.67 5.44 27.34 0 27 C0 18.09 0 9.18 0 0 Z \",fill:\"#61605E\",transform:\"translate(805,641)\"})),_path81||(_path81=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0.33 19.14 0.66 29 1 C29.495 11.395 29.495 11.395 30 22 C39.57 22.33 49.14 22.66 59 23 C59 31.58 59 40.16 59 49 C49.43 49 39.86 49 30 49 C30 54.94 30 60.88 30 67 C19.77 67 9.54 67 -1 67 C-1 61.06 -1 55.12 -1 49 C-10.24 49 -19.48 49 -29 49 C-29.495 36.13 -29.495 36.13 -30 23 C-39.57 23 -49.14 23 -59 23 C-59 15.74 -59 8.48 -59 1 C-49.1 1 -39.2 1 -29 1 C-29 8.26 -29 15.52 -29 23 C-19.76 23 -10.52 23 -1 23 C-1 19.04 -1 15.08 -1 11 C-0.67 7.37 -0.34 3.74 0 0 Z \",fill:\"#62615F\",transform:\"translate(425,957)\"})),_path82||(_path82=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.25159912 0.00523682 2.50319824 0.01047363 3.79272461 0.01586914 C4.78942421 0.01799156 4.78942421 0.01799156 5.80625916 0.02015686 C7.93590735 0.02577021 10.06545175 0.03832485 12.19506836 0.05102539 C13.63582205 0.05603868 15.07657739 0.06060188 16.51733398 0.06469727 C20.05581794 0.07489463 23.59407649 0.09446709 27.13256836 0.11352539 C27.13256836 8.69352539 27.13256836 17.27352539 27.13256836 26.11352539 C37.36256836 26.11352539 47.59256836 26.11352539 58.13256836 26.11352539 C58.13256836 34.69352539 58.13256836 43.27352539 58.13256836 52.11352539 C47.90256836 52.11352539 37.67256836 52.11352539 27.13256836 52.11352539 C27.17216112 60.62515364 27.17216112 60.62515364 27.22265625 69.13671875 C27.22515381 70.18996338 27.22765137 71.24320801 27.23022461 72.32836914 C27.23546143 73.41239014 27.24069824 74.49641113 27.24609375 75.61328125 C27.13256836 78.11352539 27.13256836 78.11352539 26.13256836 79.11352539 C24.65493551 79.25855993 23.17100155 79.34062199 21.68725586 79.39477539 C20.77459961 79.4321582 19.86194336 79.46954102 18.92163086 79.50805664 C17.95999023 79.54286133 16.99834961 79.57766602 16.00756836 79.61352539 C9.98083849 79.83704422 4.08667749 80.12392276 -1.86743164 81.11352539 C-2.19743164 82.76352539 -2.52743164 84.41352539 -2.86743164 86.11352539 C-3.19743164 86.11352539 -3.52743164 86.11352539 -3.86743164 86.11352539 C-4.36243164 82.64852539 -4.36243164 82.64852539 -4.86743164 79.11352539 C-14.43743164 79.11352539 -24.00743164 79.11352539 -33.86743164 79.11352539 C-34.24243164 66.23852539 -34.24243164 66.23852539 -34.34545898 62.18041992 C-34.38106934 61.12967285 -34.41667969 60.07892578 -34.45336914 58.99633789 C-34.48479004 57.91755371 -34.51621094 56.83876953 -34.54858398 55.72729492 C-34.61419486 52.95590885 -34.61419486 52.95590885 -36.86743164 51.11352539 C-36.20743164 51.11352539 -35.54743164 51.11352539 -34.86743164 51.11352539 C-34.53743164 50.12352539 -34.20743164 49.13352539 -33.86743164 48.11352539 C-33.86743164 49.43352539 -33.86743164 50.75352539 -33.86743164 52.11352539 C-23.96743164 52.11352539 -14.06743164 52.11352539 -3.86743164 52.11352539 C-3.8790332 48.44356445 -3.89063477 44.77360352 -3.90258789 40.99243164 C-3.91037716 37.45459072 -3.91645466 33.91675075 -3.92236328 30.37890625 C-3.9274052 27.91210506 -3.93423855 25.44530687 -3.94287109 22.97851562 C-3.95494289 19.4414801 -3.9606612 15.90448394 -3.96508789 12.36743164 C-3.97024918 11.25703018 -3.97541046 10.14662872 -3.98072815 9.00257874 C-3.98080368 7.98159592 -3.98087921 6.9606131 -3.98095703 5.90869141 C-3.98317764 5.0049025 -3.98539825 4.10111359 -3.98768616 3.16993713 C-3.79744768 -0.08323495 -3.30664234 0.13091432 0 0 Z \",fill:\"#5C5A58\",transform:\"translate(548.867431640625,641.886474609375)\"})),_path83||(_path83=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0 20.46 0 31 0 C31 7.59 31 15.18 31 23 C21.1 23 11.2 23 1 23 C1 30.26 1 37.52 1 45 C4.09375 44.95875 7.1875 44.9175 10.375 44.875 C17.52139636 44.82762696 24.05358374 45.14762233 31 47 C31 52.94 31 58.88 31 65 C21.1 65.33 11.2 65.66 1 66 C1.33 73.26 1.66 80.52 2 88 C11.57 88.33 21.14 88.66 31 89 C31 97.58 31 106.16 31 115 C21.1 115 11.2 115 1 115 C1 120.61 1 126.22 1 132 C-9.23 132 -19.46 132 -30 132 C-30 126.06 -30 120.12 -30 114 C-20.1 114 -10.2 114 0 114 C0 105.42 0 96.84 0 88 C-9.9 88 -19.8 88 -30 88 C-30.33 80.74 -30.66 73.48 -31 66 C-27.14578575 65.97292121 -23.29176362 65.95312238 -19.4375 65.9375 C-18.35146484 65.92912109 -17.26542969 65.92074219 -16.14648438 65.91210938 C-15.08623047 65.90888672 -14.02597656 65.90566406 -12.93359375 65.90234375 C-11.96478271 65.89710693 -10.99597168 65.89187012 -9.99780273 65.88647461 C-6.64699718 66.01336805 -3.31950596 66.52578486 0 67 C0 60.73 0 54.46 0 48 C-2.08183594 48.08378906 -4.16367187 48.16757812 -6.30859375 48.25390625 C-8.3174501 48.33036791 -10.32630799 48.40679388 -12.33520508 48.48217773 C-13.73501681 48.53566026 -15.13475904 48.59099434 -16.53442383 48.64819336 C-18.5422896 48.72992949 -20.55044187 48.80453025 -22.55859375 48.87890625 C-23.76829834 48.9260376 -24.97800293 48.97316895 -26.22436523 49.02172852 C-29 49 -29 49 -30 48 C-30.08726223 46.21928754 -30.10699041 44.4351686 -30.09765625 42.65234375 C-30.09515869 41.68031006 -30.09266113 40.70827637 -30.09008789 39.70678711 C-30.08098389 38.46292236 -30.07187988 37.21905762 -30.0625 35.9375 C-30.041875 31.998125 -30.02125 28.05875 -30 24 C-20.1 24 -10.2 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#61605E\",transform:\"translate(335,892)\"})),_path84||(_path84=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C12.4059375 -0.0309375 12.4059375 -0.0309375 25.0625 -0.0625 C28.92980835 -0.07615601 28.92980835 -0.07615601 32.87524414 -0.09008789 C44.30429781 -0.11306649 55.60963692 0.02849153 67 1 C67 7.6 67 14.2 67 21 C57.76 21 48.52 21 39 21 C39 28.92 39 36.84 39 45 C48.24 45 57.48 45 67 45 C68.13841808 54.10734463 68.13841808 54.10734463 68.125 58.75 C68.12886719 60.10351562 68.12886719 60.10351562 68.1328125 61.484375 C68 64 68 64 67 68 C47.53 68 28.06 68 8 68 C8 73.28 8 78.56 8 84 C7.4375 90.75 7.4375 90.75 7 94 C4.69 93.67 2.38 93.34 0 93 C0 62.31 0 31.62 0 0 Z \",fill:\"#797776\",transform:\"translate(0,188)\"})),_path85||(_path85=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.92 29 15.84 29 24 C14.645 24.495 14.645 24.495 0 25 C0.495 36.385 0.495 36.385 1 48 C14.86 48.495 14.86 48.495 29 49 C29 57.25 29 65.5 29 74 C37.25 74 45.5 74 54 74 C54 74.33 54 74.66 54 75 C46.41 75 38.82 75 31 75 C31 82.92 31 90.84 31 99 C30.34 99 29.68 99 29 99 C28.67 91.08 28.34 83.16 28 75 C18.76 75 9.52 75 0 75 C0 83.58 0 92.16 0 101 C9.57 101 19.14 101 29 101 C29 101.33 29 101.66 29 102 C19.76 102 10.52 102 1 102 C1.07910003 109.47939301 1.07910003 109.47939301 1.18017578 116.95849609 C1.1851709 117.88742676 1.19016602 118.81635742 1.1953125 119.7734375 C1.21102295 121.20308838 1.21102295 121.20308838 1.22705078 122.66162109 C1 125 1 125 -1 127 C-1 118.42 -1 109.84 -1 101 C-10.57 101.33 -20.14 101.66 -30 102 C-30.33 110.25 -30.66 118.5 -31 127 C-40.9 127 -50.8 127 -61 127 C-61 118.42 -61 109.84 -61 101 C-51.1 101 -41.2 101 -31 101 C-31.144375 96.75125 -31.28875 92.5025 -31.4375 88.125 C-31.48060303 86.7858252 -31.52370605 85.44665039 -31.56811523 84.06689453 C-31.6252771 82.49077393 -31.6252771 82.49077393 -31.68359375 80.8828125 C-31.72025146 79.80402832 -31.75690918 78.72524414 -31.79467773 77.61376953 C-31.83376643 75.01930464 -31.83376643 75.01930464 -33 73 C-32.9129796 71.28766312 -32.75902838 69.57824594 -32.5625 67.875 C-32.46066406 66.96492188 -32.35882813 66.05484375 -32.25390625 65.1171875 C-32.17011719 64.41851562 -32.08632812 63.71984375 -32 63 C-31.67 63 -31.34 63 -31 63 C-31 66.63 -31 70.26 -31 74 C-21.1 74 -11.2 74 -1 74 C-1 65.75 -1 57.5 -1 49 C-10.9 49 -20.8 49 -31 49 C-31 40.75 -31 32.5 -31 24 C-20.77 24 -10.54 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#5E5C5A\",transform:\"translate(158,233)\"})),_path86||(_path86=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.12497937 -0.02956676 6.24992177 -0.04698543 9.375 -0.0625 C10.24511719 -0.07087891 11.11523438 -0.07925781 12.01171875 -0.08789062 C13.31689453 -0.09272461 13.31689453 -0.09272461 14.6484375 -0.09765625 C15.43395996 -0.10289307 16.21948242 -0.10812988 17.02880859 -0.11352539 C21.36527751 0.05216549 25.68190359 0.56819036 30 1 C30 8.92 30 16.84 30 25 C40.23 25 50.46 25 61 25 C60.67 17.41 60.34 9.82 60 2 C56.04 1.67 52.08 1.34 48 1 C48 0.67 48 0.34 48 0 C57.97248469 -0.06999599 67.90862611 0.13811989 77.875 0.5 C79.25650264 0.54839969 80.63801306 0.59657773 82.01953125 0.64453125 C85.34643681 0.76085662 88.67324796 0.87937717 92 1 C92.01458252 1.71655762 92.02916504 2.43311523 92.04418945 3.17138672 C92.11849 6.40647983 92.21520861 9.64052019 92.3125 12.875 C92.33505859 14.00292969 92.35761719 15.13085938 92.38085938 16.29296875 C92.41630859 17.36933594 92.45175781 18.44570312 92.48828125 19.5546875 C92.51446533 20.54968262 92.54064941 21.54467773 92.56762695 22.56982422 C92.71031006 23.37178223 92.85299316 24.17374023 93 25 C93.99 25.66 94.98 26.32 96 27 C94.35 28.32 92.7 29.64 91 31 C91.33 29.68 91.66 28.36 92 27 C91.13375 27.185625 90.2675 27.37125 89.375 27.5625 C85.85027339 28.019409 83.4929704 27.58216173 80 27 C76.87823032 26.74389263 73.75334423 26.58984518 70.625 26.4375 C66.355625 26.2209375 66.355625 26.2209375 62 26 C62 33.92 62 41.84 62 50 C51.77 50 41.54 50 31 50 C31 57.92 31 65.84 31 74 C20.77 74 10.54 74 0 74 C-0.495 61.625 -0.495 61.625 -1 49 C-10.57 49 -20.14 49 -30 49 C-30 41.08 -30 33.16 -30 25 C-20.1 25 -10.2 25 0 25 C0 32.92 0 40.84 0 49 C3.96 49 7.92 49 12 49 C15.25679432 49.13943462 18.49839787 49.29559195 21.75 49.5 C25.83375 49.7475 25.83375 49.7475 30 50 C30 42.08 30 34.16 30 26 C20.43 25.67 10.86 25.34 1 25 C0.33417487 19.00757381 -0.13526736 13.41002135 -0.0625 7.4375 C-0.05798828 6.71498047 -0.05347656 5.99246094 -0.04882812 5.24804688 C-0.03724279 3.49866056 -0.01931762 1.74931801 0 0 Z \",fill:\"#62605E\",transform:\"translate(760,140)\"})),_path87||(_path87=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.495 5.445 0.495 5.445 1 11 C2.4394397 10.88410522 2.4394397 10.88410522 3.90795898 10.76586914 C16.32204839 9.85556756 28.62919946 10.08011007 41.0625 10.4375 C43.10480067 10.4908903 45.14711849 10.54362857 47.18945312 10.59570312 C52.12660664 10.72178366 57.06312435 10.8611437 62 11 C62 19.58 62 28.16 62 37 C52.1 37 42.2 37 32 37 C32 45.58 32 54.16 32 63 C27.99644666 63.13849576 23.99905961 63.25765819 19.99438477 63.32958984 C18.63537303 63.35959295 17.27655219 63.40041185 15.91821289 63.45263672 C3.1811989 63.92974852 3.1811989 63.92974852 -1.22265625 60.2109375 C-2.7565918 58.55517578 -2.7565918 58.55517578 -4 57 C-4.93972656 56.01773438 -4.93972656 56.01773438 -5.8984375 55.015625 C-6.38570312 54.43296875 -6.87296875 53.8503125 -7.375 53.25 C-7.95121094 52.57453125 -8.52742187 51.8990625 -9.12109375 51.203125 C-9.74113281 50.47609375 -10.36117187 49.7490625 -11 49 C-17.6456164 41.45307939 -24.38063961 34.07968159 -32 27.5 C-43.94207317 17.18639135 -43.94207317 17.18639135 -46 12 C-46 11.01 -46 10.02 -46 9 C-45.13761719 8.97421875 -44.27523437 8.9484375 -43.38671875 8.921875 C-29.92136586 8.29624086 -16.07199663 6.3808772 -3.71484375 0.734375 C-2 0 -2 0 0 0 Z \",fill:\"#6D6B6A\",transform:\"translate(698,631)\"})),_path88||(_path88=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.92 29 15.84 29 24 C30.98515625 23.98839844 32.9703125 23.97679687 35.015625 23.96484375 C53.04629118 23.89343517 70.98026816 24.24917784 89 25 C89 41.17 89 57.34 89 74 C84.235625 74.020625 79.47125 74.04125 74.5625 74.0625 C73.0576001 74.071604 71.5527002 74.08070801 70.00219727 74.09008789 C68.82713623 74.09258545 67.6520752 74.09508301 66.44140625 74.09765625 C65.23170166 74.10289307 64.02199707 74.10812988 62.77563477 74.11352539 C60 74 60 74 59 73 C58.91286169 71.29227642 58.89299993 69.58101351 58.90234375 67.87109375 C58.90717773 66.31938477 58.90717773 66.31938477 58.91210938 64.73632812 C58.92467773 63.1034082 58.92467773 63.1034082 58.9375 61.4375 C58.94201172 60.34501953 58.94652344 59.25253906 58.95117188 58.12695312 C58.96300174 55.41791505 58.97948457 52.70898401 59 50 C58.27781281 50.00222061 57.55562561 50.00444122 56.81155396 50.00672913 C50.0133223 50.02674692 43.21509503 50.04198176 36.41684151 50.05181217 C32.92159902 50.05703593 29.42638084 50.06412441 25.93115234 50.07543945 C21.91503666 50.08835974 17.8989466 50.0932324 13.8828125 50.09765625 C11.99527756 50.10539818 11.99527756 50.10539818 10.0696106 50.11329651 C8.90855804 50.11337204 7.74750549 50.11344757 6.55126953 50.11352539 C5.52534698 50.115746 4.49942444 50.11796661 3.44241333 50.12025452 C1 50 1 50 -1 49 C-1 56.92 -1 64.84 -1 73 C-1.33 73 -1.66 73 -2 73 C-2.33 65.41 -2.66 57.82 -3 50 C-6.96 49.67 -10.92 49.34 -15 49 C-15 48.67 -15 48.34 -15 48 C-10.71 48 -6.42 48 -2 48 C-2.02320313 46.71351563 -2.04640625 45.42703125 -2.0703125 44.1015625 C-2.24790682 29.28631138 -1.2700835 14.76472073 0 0 Z \",fill:\"#676564\",transform:\"translate(915,490)\"})),_path89||(_path89=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.33 8.58 -0.66 17.16 -1 26 C8.57 26 18.14 26 28 26 C27.67 21.38 27.34 16.76 27 12 C27 7.71 27 3.42 27 -1 C37.23 -0.67 47.46 -0.34 58 0 C58 8.58 58 17.16 58 26 C71.53 26 85.06 26 99 26 C99 26.33 99 26.66 99 27 C95.37 27 91.74 27 88 27 C88 35.91 88 44.82 88 54 C78.1 54 68.2 54 58 54 C58 58.62 58 63.24 58 68 C57.67 68 57.34 68 57 68 C57 54.14 57 40.28 57 26 C47.76 26.33 38.52 26.66 29 27 C28.67 40.53 28.34 54.06 28 68 C18.1 68 8.2 68 -2 68 C-2 63.05 -2 58.1 -2 53 C-11.9 53 -21.8 53 -32 53 C-31.67 51.68 -31.34 50.36 -31 49 C-31 49.99 -31 50.98 -31 52 C-21.43 52 -11.86 52 -2 52 C-2 43.42 -2 34.84 -2 26 C-4.165625 26.165 -6.33125 26.33 -8.5625 26.5 C-16.39127539 27.05770206 -24.15244614 27.07473861 -32 27 C-31.67 18.09 -31.34 9.18 -31 0 C-26.90669503 -0.16566925 -22.81346519 -0.32810711 -18.71972656 -0.48217773 C-17.32674778 -0.53559149 -15.93384107 -0.59092043 -14.54101562 -0.64819336 C-12.54056398 -0.73012069 -10.5398125 -0.80462098 -8.5390625 -0.87890625 C-6.73236084 -0.94960327 -6.73236084 -0.94960327 -4.88916016 -1.02172852 C-2 -1 -2 -1 0 0 Z \",fill:\"#5F5E5C\",transform:\"translate(397,668)\"})),_path90||(_path90=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.74216797 0.0611499 1.74216797 0.0611499 3.51953125 0.12353516 C5.40285156 0.18927734 5.40285156 0.18927734 7.32421875 0.25634766 C7.98131836 0.28212891 8.63841797 0.30791016 9.31542969 0.33447266 C11.32337543 0.41226232 13.33147961 0.47941683 15.33984375 0.54541016 C25.20444929 0.9100157 25.20444929 0.9100157 26.33203125 2.03759766 C26.4896753 3.81629492 26.58303802 5.60078242 26.6484375 7.38525391 C26.69033203 8.46484375 26.73222656 9.54443359 26.77539062 10.65673828 C26.81470703 11.79304687 26.85402344 12.92935547 26.89453125 14.10009766 C26.93771484 15.24027344 26.98089844 16.38044922 27.02539062 17.55517578 C27.13185964 20.38251961 27.23387332 23.20995504 27.33203125 26.03759766 C26.01203125 26.03759766 24.69203125 26.03759766 23.33203125 26.03759766 C24.65203125 26.36759766 25.97203125 26.69759766 27.33203125 27.03759766 C27.33203125 35.61759766 27.33203125 44.19759766 27.33203125 53.03759766 C37.23203125 53.03759766 47.13203125 53.03759766 57.33203125 53.03759766 C57.33203125 60.95759766 57.33203125 68.87759766 57.33203125 77.03759766 C42.48203125 76.54259766 42.48203125 76.54259766 27.33203125 76.03759766 C26.83703125 68.61259766 26.83703125 68.61259766 26.33203125 61.03759766 C26.35265625 62.41947266 26.37328125 63.80134766 26.39453125 65.22509766 C26.44557079 68.64474677 26.08500566 71.69960875 25.33203125 75.03759766 C15.61088816 75.87640199 6.08326022 76.12959038 -3.66796875 76.03759766 C-3.66796875 68.44759766 -3.66796875 60.85759766 -3.66796875 53.03759766 C-13.56796875 53.03759766 -23.46796875 53.03759766 -33.66796875 53.03759766 C-33.66796875 44.12759766 -33.66796875 35.21759766 -33.66796875 26.03759766 C-24.09796875 25.70759766 -14.52796875 25.37759766 -4.66796875 25.03759766 C-4.37869069 17.18439021 -4.37869069 17.18439021 -4.09985352 9.33081055 C-4.04269165 7.87276001 -4.04269165 7.87276001 -3.984375 6.38525391 C-3.94771729 5.38502197 -3.91105957 4.38479004 -3.87329102 3.35424805 C-3.57823446 0.025126 -3.38128187 0.04764984 0 0 Z \",fill:\"#7F7D7C\",transform:\"translate(916.66796875,769.96240234375)\"})),_path91||(_path91=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.1171875 0.27734375 3.1171875 0.27734375 5.26171875 1.9921875 C6.08736328 3.09240234 6.08736328 3.09240234 6.9296875 4.21484375 C9.12230451 7.22868025 9.12230451 7.22868025 12.1171875 9.27734375 C11.98006348 9.8295459 11.84293945 10.38174805 11.70166016 10.95068359 C9.97518891 18.58765262 9.68516775 26.09468447 9.4921875 33.90234375 C9.45351562 35.19269531 9.41484375 36.48304688 9.375 37.8125 C9.28152408 40.96731245 9.19576437 44.12213102 9.1171875 47.27734375 C7.1371875 47.27734375 5.1571875 47.27734375 3.1171875 47.27734375 C3.14748047 47.89851074 3.17777344 48.51967773 3.20898438 49.15966797 C3.98726561 65.54248791 4.2479704 81.87716777 4.1171875 98.27734375 C0.73327172 99.32862303 -2.21484675 99.31821973 -5.7421875 99.15625 C-7.24990723 99.09159546 -7.24990723 99.09159546 -8.78808594 99.02563477 C-10.0568457 98.96432373 -11.32560547 98.9030127 -12.6328125 98.83984375 C-16.6753125 98.65421875 -20.7178125 98.46859375 -24.8828125 98.27734375 C-24.8828125 90.02734375 -24.8828125 81.77734375 -24.8828125 73.27734375 C-27.89728516 73.29474609 -27.89728516 73.29474609 -30.97265625 73.3125 C-32.91202674 73.31945115 -34.85139753 73.32636771 -36.79077148 73.33227539 C-38.14201636 73.33731432 -39.49325576 73.34414552 -40.84448242 73.3527832 C-42.78301684 73.36486794 -44.7215905 73.37004203 -46.66015625 73.375 C-48.41187134 73.38285522 -48.41187134 73.38285522 -50.19897461 73.39086914 C-52.8828125 73.27734375 -52.8828125 73.27734375 -53.8828125 72.27734375 C-53.96995081 70.56962017 -53.98981257 68.85835726 -53.98046875 67.1484375 C-53.97724609 66.11396484 -53.97402344 65.07949219 -53.97070312 64.01367188 C-53.95813477 62.38075195 -53.95813477 62.38075195 -53.9453125 60.71484375 C-53.94080078 59.62236328 -53.93628906 58.52988281 -53.93164062 57.40429688 C-53.91981076 54.6952588 -53.90332793 51.98632776 -53.8828125 49.27734375 C-47.14628276 48.48084923 -40.53845502 48.14576197 -33.7578125 48.21484375 C-32.89671875 48.21935547 -32.035625 48.22386719 -31.1484375 48.22851562 C-29.05986465 48.24011881 -26.97132843 48.25804535 -24.8828125 48.27734375 C-24.89066772 47.1946521 -24.89066772 47.1946521 -24.89868164 46.09008789 C-24.91938608 42.84001526 -24.93245168 39.58995647 -24.9453125 36.33984375 C-24.95369141 35.20353516 -24.96207031 34.06722656 -24.97070312 32.89648438 C-24.97553711 31.27709961 -24.97553711 31.27709961 -24.98046875 29.625 C-24.98832397 28.1246521 -24.98832397 28.1246521 -24.99633789 26.59399414 C-24.8828125 24.27734375 -24.8828125 24.27734375 -23.8828125 23.27734375 C-23.72566596 21.64477617 -23.63195836 20.00599037 -23.56640625 18.3671875 C-23.52451172 17.37783203 -23.48261719 16.38847656 -23.43945312 15.36914062 C-23.40013672 14.32822266 -23.36082031 13.28730469 -23.3203125 12.21484375 C-23.27712891 11.17005859 -23.23394531 10.12527344 -23.18945312 9.04882812 C-23.08300025 6.45847491 -22.9809849 3.86802189 -22.8828125 1.27734375 C-19.8620932 1.10835246 -16.84126427 0.94208246 -13.8203125 0.77734375 C-12.97275391 0.72964844 -12.12519531 0.68195313 -11.25195312 0.6328125 C-9.57733758 0.54229274 -7.90225168 0.46006111 -6.22680664 0.38647461 C-4.14946065 0.28975826 -2.07431133 0.1481651 0 0 Z \",fill:\"#636160\",transform:\"translate(211.8828125,208.72265625)\"})),_path92||(_path92=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.66 0 1.32 0 2 C5.61 2 11.22 2 17 2 C17 9.92 17 17.84 17 26 C7.43 26 -2.14 26 -12 26 C-12 32.93 -12 39.86 -12 47 C-2.43 47 7.14 47 17 47 C17.33 42.71 17.66 38.42 18 34 C18.33 34 18.66 34 19 34 C19.20110238 46.69179475 18.56978882 59.32219884 18 72 C7.77 72 -2.46 72 -13 72 C-13 63.75 -13 55.5 -13 47 C-22.57 47 -32.14 47 -42 47 C-42 62.51 -42 78.02 -42 94 C-32.43 94.33 -22.86 94.66 -13 95 C-13 103.25 -13 111.5 -13 120 C-22.9 120 -32.8 120 -43 120 C-43 111.75 -43 103.5 -43 95 C-48.17558985 95.03951482 -48.17558985 95.03951482 -53.35107422 95.09008789 C-58.77777778 95.11111111 -58.77777778 95.11111111 -61 94 C-64.78477336 62.60990227 -64.78477336 62.60990227 -58.71484375 54.42578125 C-55.47599736 50.9947999 -51.86809848 48.19825568 -47.99658203 45.5168457 C-45.33641969 43.49586397 -43.36672956 41.1261541 -41.27172852 38.54223633 C-39.75482079 36.70266902 -38.09105339 35.19863011 -36.25 33.6875 C-30.01738825 28.37425818 -24.09811695 22.6284974 -18.875 16.3125 C-16.18956254 13.08087187 -13.16283896 10.42212609 -9.9609375 7.7109375 C-8.08220725 6.07172664 -6.35317179 4.35811264 -4.625 2.5625 C-2 0 -2 0 0 0 Z \",fill:\"#62605F\",transform:\"translate(865,162)\"})),_path93||(_path93=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C16.17 0 32.34 0 49 0 C42.18544951 10.22182573 33.65599754 19.00970386 25.1875 27.875 C24.70887386 28.37738316 24.23024773 28.87976631 23.73711777 29.3973732 C2.99743963 51.05392915 2.99743963 51.05392915 -9.9594574 51.99267578 C-16.52359266 52.0465227 -22.70066423 50.80714821 -29 49 C-29.33 56.92 -29.66 64.84 -30 73 C-39.9 73 -49.8 73 -60 73 C-60 80.92 -60 88.84 -60 97 C-69.57 97 -79.14 97 -89 97 C-89.33 103.6 -89.66 110.2 -90 117 C-90.33 117 -90.66 117 -91 117 C-91 102.15 -91 87.3 -91 72 C-80.77 72 -70.54 72 -60 72 C-60 64.08 -60 56.16 -60 48 C-55.50737965 47.35819709 -51.74419109 46.86263824 -47.3125 46.875 C-45.94544922 46.87113281 -45.94544922 46.87113281 -44.55078125 46.8671875 C-39.35708404 47.0614512 -34.1793762 47.56838532 -29 48 C-29.495 35.13 -29.495 35.13 -30 22 C-20.1 22 -10.2 22 0 22 C0 14.74 0 7.48 0 0 Z M-109 117 C-103.06 117 -97.12 117 -91 117 C-91 117.33 -91 117.66 -91 118 C-96.94 118 -102.88 118 -109 118 C-109 117.67 -109 117.34 -109 117 Z \",fill:\"#666462\",transform:\"translate(973,0)\"})),_path94||(_path94=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.6 0 13.2 0 20 0 C20 8.58 20 17.16 20 26 C13.4 26 6.8 26 0 26 C0 33.92 0 41.84 0 50 C-11.25 51.125 -11.25 51.125 -15.3515625 51.09765625 C-16.13869629 51.09515869 -16.92583008 51.09266113 -17.73681641 51.09008789 C-18.68991699 51.08098389 -19.64301758 51.07187988 -20.625 51.0625 C-23.71875 51.041875 -26.8125 51.02125 -30 51 C-30 59.25 -30 67.5 -30 76 C-15.15 76.495 -15.15 76.495 0 77 C0 83.93 0 90.86 0 98 C-3.82818288 99.91409144 -5.71883789 100.33705985 -9.859375 100.6328125 C-10.97441406 100.71660156 -12.08945312 100.80039062 -13.23828125 100.88671875 C-14.39714844 100.96535156 -15.55601562 101.04398438 -16.75 101.125 C-17.92433594 101.21136719 -19.09867188 101.29773438 -20.30859375 101.38671875 C-23.20518881 101.59866473 -26.10253344 101.80032122 -29 102 C-29.33 108.93 -29.66 115.86 -30 123 C-34.43754015 123.02689418 -38.8749184 123.04678777 -43.3125 123.0625 C-44.57513672 123.07087891 -45.83777344 123.07925781 -47.13867188 123.08789062 C-48.34716797 123.09111328 -49.55566406 123.09433594 -50.80078125 123.09765625 C-51.91622314 123.10289307 -53.03166504 123.10812988 -54.1809082 123.11352539 C-57 123 -57 123 -60 122 C-60 115.07 -60 108.14 -60 101 C-75.345 101.495 -75.345 101.495 -91 102 C-91 101.34 -91 100.68 -91 100 C-81.76 99.34 -72.52 98.68 -63 98 C-61.90409873 93.61639491 -62.01005538 89.93994736 -62.16015625 85.4609375 C-62 83 -62 83 -60 81 C-60 87.27 -60 93.54 -60 100 C-58.33710937 99.98839844 -56.67421875 99.97679687 -54.9609375 99.96484375 C-52.76562613 99.95546208 -50.57031353 99.94636228 -48.375 99.9375 C-47.28058594 99.92912109 -46.18617188 99.92074219 -45.05859375 99.91210938 C-43.46337891 99.90727539 -43.46337891 99.90727539 -41.8359375 99.90234375 C-40.86188965 99.89710693 -39.8878418 99.89187012 -38.88427734 99.88647461 C-36 100 -36 100 -30 101 C-30 93.08 -30 85.16 -30 77 C-39.9 77 -49.8 77 -60 77 C-60 68.42 -60 59.84 -60 51 C-63.96 50.67 -67.92 50.34 -72 50 C-72 49.67 -72 49.34 -72 49 C-58.14 49.33 -44.28 49.66 -30 50 C-29.67 41.75 -29.34 33.5 -29 25 C-19.43 25 -9.86 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#646260\",transform:\"translate(1004,746)\"})),_path95||(_path95=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.41375 -0.061875 8.8275 -0.12375 13.375 -0.1875 C15.46207275 -0.22846802 15.46207275 -0.22846802 17.59130859 -0.27026367 C19.2283374 -0.28150269 19.2283374 -0.28150269 20.8984375 -0.29296875 C22.01911621 -0.3086792 23.13979492 -0.32438965 24.29443359 -0.34057617 C25.18727051 -0.22818604 26.08010742 -0.1157959 27 0 C29.19164944 3.28747416 29.28679386 4.48494825 29.4140625 8.32421875 C29.45273437 9.35224609 29.49140625 10.38027344 29.53125 11.43945312 C29.5621875 12.51130859 29.593125 13.58316406 29.625 14.6875 C29.66367187 15.77095703 29.70234375 16.85441406 29.7421875 17.97070312 C29.83650509 20.64696467 29.92210005 23.32321843 30 26 C30.66008057 25.99476318 31.32016113 25.98952637 32.00024414 25.98413086 C35.02098622 25.96321049 38.041713 25.9502922 41.0625 25.9375 C42.10083984 25.92912109 43.13917969 25.92074219 44.20898438 25.91210938 C49.58723069 25.89503558 54.70333211 26.04584848 60 27 C60.02895225 30.29164829 60.0467823 33.58326399 60.0625 36.875 C60.07087891 37.81214844 60.07925781 38.74929688 60.08789062 39.71484375 C60.09111328 40.61074219 60.09433594 41.50664063 60.09765625 42.4296875 C60.10289307 43.25710449 60.10812988 44.08452148 60.11352539 44.93701172 C60 47 60 47 59 49 C56.55175791 49.32277819 54.21010485 49.51704627 51.75 49.625 C51.03650391 49.66294678 50.32300781 49.70089355 49.58789062 49.73999023 C43.05909837 50.05990105 36.53547445 50.10071793 30 50 C30.01160156 50.82242188 30.02320313 51.64484375 30.03515625 52.4921875 C30.09101958 59.40327971 29.86694034 66.14188265 29 73 C30.22009766 72.89171875 30.22009766 72.89171875 31.46484375 72.78125 C41.01783413 72.00755449 50.41659888 71.92144753 60 72 C60 64.74 60 57.48 60 50 C69.9 50 79.8 50 90 50 C89.67 57.26 89.34 64.52 89 72 C79.5625 72.4375 79.5625 72.4375 76.64672852 72.56811523 C75.85709717 72.60622314 75.06746582 72.64433105 74.25390625 72.68359375 C73.46314697 72.72025146 72.6723877 72.75690918 71.85766602 72.79467773 C67.89495846 73.07939683 63.94862342 73.56126406 60 74 C59.67 80.93 59.34 87.86 59 95 C49.1 95.33 39.2 95.66 29 96 C28 83 28 83 28 73 C18.43 73.33 8.86 73.66 -1 74 C-1 66.08 -1 58.16 -1 50 C8.9 50 18.8 50 29 50 C29 42.41 29 34.82 29 27 C19.43 27 9.86 27 0 27 C0 18.09 0 9.18 0 0 Z \",fill:\"#61605F\",transform:\"translate(425,797)\"})),_path96||(_path96=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.20970459 0.00523682 2.41940918 0.01047363 3.66577148 0.01586914 C4.97094727 0.0190918 6.27612305 0.02231445 7.62084961 0.02563477 C9.00952213 0.03399138 10.39819401 0.04245634 11.78686523 0.05102539 C13.17944179 0.05603873 14.57202005 0.06060193 15.96459961 0.06469727 C19.38453974 0.07653097 22.80445773 0.09446708 26.22436523 0.11352539 C26.22436523 5.72352539 26.22436523 11.33352539 26.22436523 17.11352539 C28.37838867 17.10192383 30.53241211 17.09032227 32.75170898 17.07836914 C34.83007663 17.07057802 36.90844266 17.06450158 38.98681641 17.05859375 C40.43506596 17.05355438 41.8833104 17.04672286 43.33154297 17.03808594 C45.40911111 17.02600292 47.48661221 17.02029328 49.56420898 17.01586914 C50.81580811 17.01063232 52.06740723 17.00539551 53.35693359 17 C56.22436523 17.11352539 56.22436523 17.11352539 57.22436523 18.11352539 C57.31136866 19.74825421 57.33137586 21.38666594 57.32202148 23.02368164 C57.3171875 24.50771484 57.3171875 24.50771484 57.31225586 26.02172852 C57.2996875 27.58310547 57.2996875 27.58310547 57.28686523 29.17602539 C57.28235352 30.22081055 57.2778418 31.2655957 57.27319336 32.34204102 C57.26136436 34.93259199 57.24488213 37.52303098 57.22436523 40.11352539 C56.32081299 40.10828857 55.41726074 40.10305176 54.48632812 40.09765625 C51.14485034 40.08064853 47.80341832 40.06809206 44.46191406 40.05859375 C43.01366451 40.05355438 41.56542007 40.04672286 40.1171875 40.03808594 C38.03961935 40.02600292 35.96211826 40.02029328 33.88452148 40.01586914 C32.63292236 40.01063232 31.38132324 40.00539551 30.09179688 40 C27.32704229 39.78465504 27.32704229 39.78465504 26.22436523 41.11352539 C26.22436523 49.03352539 26.22436523 56.95352539 26.22436523 65.11352539 C6.09436523 65.11352539 -14.03563477 65.11352539 -34.77563477 65.11352539 C-34.77563477 40.11352539 -34.77563477 40.11352539 -33.77563477 39.11352539 C-31.3524796 38.86940155 -28.95548077 38.68660456 -26.52563477 38.55102539 C-25.81213867 38.50856689 -25.09864258 38.4661084 -24.36352539 38.42236328 C-17.83283926 38.06172428 -11.3153055 38.01274279 -4.77563477 38.11352539 C-4.78723633 36.86700195 -4.79883789 35.62047852 -4.81079102 34.33618164 C-4.86628617 25.68662135 -4.83212387 17.06380454 -4.33813477 8.42602539 C-4.29889893 7.70229736 -4.25966309 6.97856934 -4.21923828 6.23291016 C-3.83398249 0.15681255 -3.83398249 0.15681255 0 0 Z \",fill:\"#72706F\",transform:\"translate(641.775634765625,939.886474609375)\"})),_path97||(_path97=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 0 3.96 0 6 0 C6 40.92 6 81.84 6 124 C5.67 124 5.34 124 5 124 C5 117.4 5 110.8 5 104 C2.69 104 0.38 104 -2 104 C-2 112.58 -2 121.16 -2 130 C-10.58 130.33 -19.16 130.66 -28 131 C-28.33 138.92 -28.66 146.84 -29 155 C-38.57 155 -48.14 155 -58 155 C-58 146.75 -58 138.5 -58 130 C-48.1 130 -38.2 130 -28 130 C-28 112.84 -28 95.68 -28 78 C-37.9 78 -47.8 78 -58 78 C-58 69.75 -58 61.5 -58 53 C-48.43 53 -38.86 53 -29 53 C-28.505 64.385 -28.505 64.385 -28 76 C-27.34 76.33 -26.68 76.66 -26 77 C-26 77.66 -26 78.32 -26 79 C-17.42 79 -8.84 79 0 79 C0 70.09 0 61.18 0 52 C1.65 52 3.3 52 5 52 C5 43.09 5 34.18 5 25 C3.35 24.67 1.7 24.34 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#7F7E7D\",transform:\"translate(216,616)\"})),_path98||(_path98=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 15.84 1 31.68 1 48 C-5.27 48 -11.54 48 -18 48 C-17.98839844 49.40894531 -17.97679687 50.81789062 -17.96484375 52.26953125 C-17.95546479 54.11718618 -17.9463647 55.96484253 -17.9375 57.8125 C-17.92912109 58.74126953 -17.92074219 59.67003906 -17.91210938 60.62695312 C-17.90888672 61.51962891 -17.90566406 62.41230469 -17.90234375 63.33203125 C-17.89710693 64.15421143 -17.89187012 64.9763916 -17.88647461 65.82348633 C-18 68 -18 68 -19 71 C-28.57 71 -38.14 71 -48 71 C-48 78.92 -48 86.84 -48 95 C-58.23 95 -68.46 95 -79 95 C-79 102.26 -79 109.52 -79 117 C-88.57 117.33 -98.14 117.66 -108 118 C-108.33 121.3 -108.66 124.6 -109 128 C-109.33 128 -109.66 128 -110 128 C-110.03738281 127.30132812 -110.07476563 126.60265625 -110.11328125 125.8828125 C-110.17902344 124.97273438 -110.24476563 124.06265625 -110.3125 123.125 C-110.37050781 122.22007813 -110.42851563 121.31515625 -110.48828125 120.3828125 C-110.7882039 117.63778399 -110.7882039 117.63778399 -114 116 C-108.40429043 110.38099786 -102.80579374 104.76479316 -97.20383453 99.15202236 C-94.6019914 96.54498711 -92.00107556 93.93704126 -89.40234375 91.3269043 C-86.88881107 88.80241107 -84.37275828 86.28045389 -81.85502625 83.760149 C-80.43992487 82.34233321 -79.02736472 80.92198251 -77.61486816 79.50157166 C-73.10248278 74.98879911 -68.53505524 70.6251154 -63.69226074 66.46864319 C-61.55222511 64.61139467 -59.54821766 62.64555481 -57.5625 60.625 C-56.81226563 59.86703125 -56.06203125 59.1090625 -55.2890625 58.328125 C-54.53367187 57.55984375 -53.77828125 56.7915625 -53 56 C-48.05367866 50.96927045 -43.07003634 46.08876392 -37.71923828 41.48779297 C-33.10291527 37.49292327 -28.88438899 33.0891906 -24.9375 28.4375 C-21.9555607 24.94476555 -18.7410894 21.75196357 -15.46166992 18.54345703 C-7.38533415 10.64703165 -7.38533415 10.64703165 -0.8828125 1.44140625 C-0.59148437 0.96574219 -0.30015625 0.49007812 0 0 Z \",fill:\"#646260\",transform:\"translate(1023,0)\"})),_path99||(_path99=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.33 25.08 1.66 50.16 2 76 C2.99 76 3.98 76 5 76 C4.34 85.24 3.68 94.48 3 104 C5.31 104 7.62 104 10 104 C10 104.33 10 104.66 10 105 C-8.315 104.505 -8.315 104.505 -27 104 C-27 95.42 -27 86.84 -27 78 C-37.56 78 -48.12 78 -59 78 C-58.67 69.09 -58.34 60.18 -58 51 C-48.1 51 -38.2 51 -28 51 C-28.33 47.04 -28.66 43.08 -29 39 C-29.10779289 34.3261005 -29.04676386 29.67638578 -29 25 C-20.09 24.67 -11.18 24.34 -2 24 C-1.04831317 21.14493951 -0.8099054 19.09062718 -0.68359375 16.11328125 C-0.62075195 14.7065918 -0.62075195 14.7065918 -0.55664062 13.27148438 C-0.51732422 12.29501953 -0.47800781 11.31855469 -0.4375 10.3125 C-0.37272461 8.83040039 -0.37272461 8.83040039 -0.30664062 7.31835938 C-0.20058346 4.87904454 -0.09852286 2.43962887 0 0 Z \",fill:\"#60605D\",transform:\"translate(482,564)\"})),_path100||(_path100=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.20970459 0.00523682 2.41940918 0.01047363 3.66577148 0.01586914 C4.97094727 0.0190918 6.27612305 0.02231445 7.62084961 0.02563477 C9.00952213 0.03399138 10.39819401 0.04245634 11.78686523 0.05102539 C13.17944179 0.05603873 14.57202005 0.06060193 15.96459961 0.06469727 C19.38456394 0.07653105 22.80444367 0.09301659 26.22436523 0.11352539 C26.55436523 0.77352539 26.88436523 1.43352539 27.22436523 2.11352539 C27.55436523 1.78352539 27.88436523 1.45352539 28.22436523 1.11352539 C32.87844144 0.71179206 37.5557885 0.63216973 42.22436523 0.48852539 C42.91688385 0.4660675 43.60940247 0.44360962 44.32290649 0.42047119 C77.31709641 -0.61329182 77.31709641 -0.61329182 88.22436523 2.11352539 C88.71936523 11.51852539 88.71936523 11.51852539 89.22436523 21.11352539 C90.70936523 21.60852539 90.70936523 21.60852539 92.22436523 22.11352539 C90.90436523 22.11352539 89.58436523 22.11352539 88.22436523 22.11352539 C88.29582764 22.72558838 88.36729004 23.33765137 88.44091797 23.96826172 C89.30995987 32.25262183 89.33964089 40.47939996 89.28686523 48.80102539 C89.28183551 50.19620606 89.27727523 51.5913885 89.27319336 52.98657227 C89.26151275 56.36226976 89.24513356 59.73787365 89.22436523 63.11352539 C88.89436523 63.11352539 88.56436523 63.11352539 88.22436523 63.11352539 C88.22436523 56.51352539 88.22436523 49.91352539 88.22436523 43.11352539 C78.32436523 43.11352539 68.42436523 43.11352539 58.22436523 43.11352539 C58.22436523 42.12352539 58.22436523 41.13352539 58.22436523 40.11352539 C47.99436523 40.11352539 37.76436523 40.11352539 27.22436523 40.11352539 C27.22436523 33.84352539 27.22436523 27.57352539 27.22436523 21.11352539 C16.99436523 20.78352539 6.76436523 20.45352539 -3.77563477 20.11352539 C-3.80657227 15.44196289 -3.80657227 15.44196289 -3.83813477 10.67602539 C-3.84723877 9.6931958 -3.85634277 8.71036621 -3.86572266 7.69775391 C-3.86822021 6.92874756 -3.87071777 6.15974121 -3.87329102 5.36743164 C-3.88114624 4.18129272 -3.88114624 4.18129272 -3.88916016 2.97119141 C-3.70218952 -0.08829159 -3.09001371 0.12638371 0 0 Z \",fill:\"#7D7C7B\",transform:\"translate(671.775634765625,914.886474609375)\"})),_path101||(_path101=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3 8.25 3 16.5 3 25 C-0.63 25 -4.26 25 -8 25 C-8 42.49 -8 59.98 -8 78 C-13.94 78 -19.88 78 -26 78 C-26 86.25 -26 94.5 -26 103 C-24.515 103.495 -24.515 103.495 -23 104 C-23.99 104 -24.98 104 -26 104 C-26 119.84 -26 135.68 -26 152 C-20.39 152 -14.78 152 -9 152 C-9 160.58 -9 169.16 -9 178 C-14.61 178 -20.22 178 -26 178 C-27.12752418 169.96639021 -27.07296682 162.09931684 -27 154 C-33.6 154 -40.2 154 -47 154 C-47 128.59 -47 103.18 -47 77 C-40.4 77 -33.8 77 -27 77 C-27 59.84 -27 42.68 -27 25 C-2 23 -2 23 1 23 C1.33 15.74 1.66 8.48 2 1 C1.34 0.67 0.68 0.34 0 0 Z \",fill:\"#5E5D5C\",transform:\"translate(299,335)\"})),_path102||(_path102=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 8.58 0.66 17.16 1 26 C14.53 26 28.06 26 42 26 C36.41657235 32.51399892 30.88201196 38.6204405 24.3125 44.125 C19.72076873 48.04388352 15.74428209 52.51793632 11.7434082 57.02587891 C10.95389771 57.90058838 10.95389771 57.90058838 10.1484375 58.79296875 C9.68614746 59.3139917 9.22385742 59.83501465 8.74755859 60.37182617 C6.41209501 62.54774216 3.65592233 64.22938511 1 66 C1 61.05 1 56.1 1 51 C-19.46 51 -39.92 51 -61 51 C-61 42.75 -61 34.5 -61 26 C-50.77 26 -40.54 26 -30 26 C-30 17.75 -30 9.5 -30 1 C-19.94614806 0.29446653 -10.08150835 -0.10501571 0 0 Z \",fill:\"#7A7977\",transform:\"translate(698,256)\"})),_path103||(_path103=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30.33 7.92 30.66 15.84 31 24 C32.91425781 24.06058594 34.82851563 24.12117188 36.80078125 24.18359375 C39.30469539 24.26799535 41.80860123 24.35264354 44.3125 24.4375 C45.57513672 24.47681641 46.83777344 24.51613281 48.13867188 24.55664062 C49.95141602 24.61948242 49.95141602 24.61948242 51.80078125 24.68359375 C52.91622314 24.72025146 54.03166504 24.75690918 55.1809082 24.79467773 C58 25 58 25 61 26 C61 33.59 61 41.18 61 49 C70.9 49 80.8 49 91 49 C91 41.08 91 33.16 91 25 C100.9 25 110.8 25 121 25 C121.4375 37.125 121.4375 37.125 121.56811523 40.91455078 C121.60622314 41.91470215 121.64433105 42.91485352 121.68359375 43.9453125 C121.72025146 44.96125488 121.75690918 45.97719727 121.79467773 47.02392578 C121.95340265 50.04950691 121.95340265 50.04950691 122.54711914 53.19873047 C123.02116943 56.13094232 122.75438073 58.15011725 122 61 C121.67 61 121.34 61 121 61 C120.67 57.7 120.34 54.4 120 51 C110.43 50.67 100.86 50.34 91 50 C91 57.92 91 65.84 91 74 C81.1 74 71.2 74 61 74 C60.67 66.41 60.34 58.82 60 51 C45.15 50.505 45.15 50.505 30 50 C30 41.75 30 33.5 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#5D5B5A\",transform:\"translate(424,140)\"})),_path104||(_path104=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.26 30 14.52 30 22 C39.57 22 49.14 22 59 22 C59.63395002 28.33950021 60.13971794 34.3122629 60.0625 40.625 C60.041875 43.05875 60.02125 45.4925 60 48 C69.24 48 78.48 48 88 48 C88 53.94 88 59.88 88 66 C58.96 66 29.92 66 0 66 C0 60.39 0 54.78 0 49 C9.9 49 19.8 49 30 49 C30 40.42 30 31.84 30 23 C27.91816406 23.01160156 25.83632813 23.02320313 23.69140625 23.03515625 C21.68253702 23.04210735 19.67366749 23.04902389 17.66479492 23.05493164 C16.26504772 23.0599708 14.8653058 23.06680216 13.46557617 23.07543945 C11.45754223 23.0875232 9.44947043 23.09269807 7.44140625 23.09765625 C6.23170166 23.10289307 5.02199707 23.10812988 3.77563477 23.11352539 C1 23 1 23 0 22 C-0.08700342 20.36527118 -0.10701063 18.72685945 -0.09765625 17.08984375 C-0.09515869 16.199021 -0.09266113 15.30819824 -0.09008789 14.39038086 C-0.08098389 13.25093018 -0.07187988 12.11147949 -0.0625 10.9375 C-0.041875 7.328125 -0.02125 3.71875 0 0 Z \",fill:\"#636362\",transform:\"translate(336,958)\"})),_path105||(_path105=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.279375 -0.020625 6.55875 -0.04125 9.9375 -0.0625 C10.95191162 -0.071604 11.96632324 -0.08070801 13.01147461 -0.09008789 C14.25682983 -0.09383423 14.25682983 -0.09383423 15.52734375 -0.09765625 C16.77632446 -0.10551147 16.77632446 -0.10551147 18.05053711 -0.11352539 C22.04798822 0.04033727 26.02405646 0.5582285 30 1 C30 8.26 30 15.52 30 23 C31.5675 22.98839844 33.135 22.97679687 34.75 22.96484375 C36.83333214 22.95545937 38.91666557 22.94635987 41 22.9375 C42.02996094 22.92912109 43.05992187 22.92074219 44.12109375 22.91210938 C45.13300781 22.90888672 46.14492188 22.90566406 47.1875 22.90234375 C48.57001953 22.89448853 48.57001953 22.89448853 49.98046875 22.88647461 C53.66974531 23.02518043 57.33662607 23.54207826 61 24 C61 31.59 61 39.18 61 47 C71.23 47 81.46 47 92 47 C92 39.08 92 31.16 92 23 C95.56029909 22.10992523 98.19918094 21.87119591 101.82421875 21.8671875 C102.93474609 21.86589844 104.04527344 21.86460937 105.18945312 21.86328125 C106.34380859 21.86714844 107.49816406 21.87101562 108.6875 21.875 C109.85345703 21.87113281 111.01941406 21.86726563 112.22070312 21.86328125 C113.32736328 21.86457031 114.43402344 21.86585938 115.57421875 21.8671875 C117.09921997 21.86887939 117.09921997 21.86887939 118.6550293 21.87060547 C121 22 121 22 122 23 C122.08726223 24.78071246 122.10699041 26.5648314 122.09765625 28.34765625 C122.09515869 29.31968994 122.09266113 30.29172363 122.09008789 31.29321289 C122.08098389 32.53707764 122.07187988 33.78094238 122.0625 35.0625 C122.041875 39.001875 122.02125 42.94125 122 47 C107.645 47.495 107.645 47.495 93 48 C92.67 55.92 92.34 63.84 92 72 C81.77 72 71.54 72 61 72 C61 64.08 61 56.16 61 48 C50.77 48 40.54 48 30 48 C30 40.08 30 32.16 30 24 C20.1 24 10.2 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#605E5C\",transform:\"translate(607,117)\"})),_path106||(_path106=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.20970459 0.00523682 2.41940918 0.01047363 3.66577148 0.01586914 C4.97094727 0.0190918 6.27612305 0.02231445 7.62084961 0.02563477 C9.00952213 0.03399138 10.39819401 0.04245634 11.78686523 0.05102539 C13.17944179 0.05603873 14.57202005 0.06060193 15.96459961 0.06469727 C19.38456394 0.07653105 22.80444367 0.09301659 26.22436523 0.11352539 C26.24927753 5.48461579 26.26732484 10.85567178 26.27929688 16.22680664 C26.2842934 18.0500548 26.29109288 19.87329901 26.29980469 21.6965332 C26.3120771 24.33293639 26.31764048 26.96928613 26.32202148 29.60571289 C26.32718277 30.40717743 26.33234406 31.20864197 26.33766174 32.03439331 C26.33821799 37.77913808 25.88720015 43.40847598 25.22436523 49.11352539 C26.21436523 49.60852539 26.21436523 49.60852539 27.22436523 50.11352539 C27.22436523 58.36352539 27.22436523 66.61352539 27.22436523 75.11352539 C7.42436523 75.11352539 -12.37563477 75.11352539 -32.77563477 75.11352539 C-34.05425091 72.5562931 -33.88900086 70.74615437 -33.87329102 67.88696289 C-33.87079346 66.95803223 -33.8682959 66.02910156 -33.86572266 65.07202148 C-33.85661865 63.88946777 -33.84751465 62.70691406 -33.83813477 61.48852539 C-33.81750977 57.73477539 -33.79688477 53.98102539 -33.77563477 50.11352539 C-24.20563477 49.78352539 -14.63563477 49.45352539 -4.77563477 49.11352539 C-4.68475586 43.93342773 -4.68475586 43.93342773 -4.59204102 38.64868164 C-4.53030637 35.31931241 -4.46689602 31.98997905 -4.40332031 28.66064453 C-4.35989738 26.33938766 -4.31822793 24.01809731 -4.27832031 21.69677734 C-4.22079537 18.36814261 -4.15705052 15.03967754 -4.09204102 11.71118164 C-4.06697227 10.14401146 -4.06697227 10.14401146 -4.04139709 8.54518127 C-4.02145187 7.58426071 -4.00150665 6.62334015 -3.98095703 5.63330078 C-3.96541275 4.78280655 -3.94986847 3.93231232 -3.93385315 3.05604553 C-3.68011314 -0.05923767 -3.1684309 0.12959103 0 0 Z \",fill:\"#767573\",transform:\"translate(130.775634765625,720.886474609375)\"})),_path107||(_path107=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C24.42 0 48.84 0 74 0 C74 0.33 74 0.66 74 1 C68.72 1 63.44 1 58 1 C58.495 7.435 58.495 7.435 59 14 C68.57 14 78.14 14 88 14 C88 22.25 88 30.5 88 39 C78.43 39 68.86 39 59 39 C58.67 38.34 58.34 37.68 58 37 C58 37.66 58 38.32 58 39 C58 47.66666667 58 56.33333333 58 65 C48.43 65 38.86 65 29 65 C29.5 52.625 29.5 52.625 29.65820312 48.72509766 C29.69880859 47.71495605 29.73941406 46.70481445 29.78125 45.6640625 C29.82314453 44.62717285 29.86503906 43.5902832 29.90820312 42.52197266 C30.03238085 39.11038794 29.91906607 35.74688535 29.78125 32.3359375 C29.74064453 31.3257959 29.70003906 30.3156543 29.65820312 29.27490234 C29.57989258 27.34445068 29.57989258 27.34445068 29.5 25.375 C29.335 21.29125 29.17 17.2075 29 13 C19.1 13 9.2 13 -1 13 C-0.67 8.71 -0.34 4.42 0 0 Z \",fill:\"#727170\",transform:\"translate(366,243)\"})),_path108||(_path108=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.12101105 0.00007553 2.24202209 0.00015106 3.39700317 0.00022888 C4.61161224 0.00539017 5.82622131 0.01055145 7.07763672 0.01586914 C8.31778534 0.01728409 9.55793396 0.01869904 10.83566284 0.02015686 C14.13350555 0.02481443 17.43129968 0.033801 20.72912598 0.04486084 C24.09398808 0.05508808 27.4588573 0.0596573 30.82373047 0.06469727 C37.42661415 0.0757427 44.02946521 0.09249292 50.63232422 0.11352539 C51.32235761 16.52098601 51.93808209 32.7190099 50.63232422 49.11352539 C41.06232422 49.11352539 31.49232422 49.11352539 21.63232422 49.11352539 C20.63232422 39.11352539 20.63232422 39.11352539 20.63232422 25.11352539 C11.39232422 25.11352539 2.15232422 25.11352539 -7.36767578 25.11352539 C-7.36767578 33.03352539 -7.36767578 40.95352539 -7.36767578 49.11352539 C-17.26767578 49.11352539 -27.16767578 49.11352539 -37.36767578 49.11352539 C-37.36767578 41.19352539 -37.36767578 33.27352539 -37.36767578 25.11352539 C-38.02767578 24.78352539 -38.68767578 24.45352539 -39.36767578 24.11352539 C-36.4215104 22.6404427 -33.89004984 23.11057847 -30.60986328 23.23461914 C-29.94681183 23.25823013 -29.28376038 23.28184113 -28.60061646 23.3061676 C-26.48108449 23.38279355 -24.36191893 23.46682182 -22.24267578 23.55102539 C-20.80649584 23.6042472 -19.37029798 23.65698759 -17.93408203 23.70922852 C-14.41164693 23.83750216 -10.8898042 23.97577669 -7.36767578 24.11352539 C-7.36767578 16.52352539 -7.36767578 8.93352539 -7.36767578 1.11352539 C-4.77439735 -0.18311382 -2.9035951 -0.0065103 0 0 Z \",fill:\"#5E5C5B\",transform:\"translate(403.36767578125,164.886474609375)\"})),_path109||(_path109=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C59.69 24.01 59.69 24.01 91 23 C91 30.92 91 38.84 91 47 C88.9822395 49.0177605 85.02494139 48.41748482 82.25 48.5625 C81.48953369 48.6049585 80.72906738 48.64741699 79.94555664 48.69116211 C73.29194856 49.03731967 66.66250508 49.10428269 60 49 C59.505 49.99 59.505 49.99 59 51 C59 50.01 59 49.02 59 48 C57.89459618 48.00333092 57.89459618 48.00333092 56.76686096 48.00672913 C49.83587231 48.02673203 42.90488796 48.04197413 35.97387791 48.05181217 C32.41022578 48.05703995 28.84659743 48.06413569 25.28295898 48.07543945 C21.18993903 48.08834176 17.0969442 48.09322906 13.00390625 48.09765625 C11.07581871 48.10539818 11.07581871 48.10539818 9.10877991 48.11329651 C7.33705666 48.11340981 7.33705666 48.11340981 5.52954102 48.11352539 C3.96067894 48.11685631 3.96067894 48.11685631 2.36012268 48.12025452 C0 48 0 48 -1 47 C-1.10013596 45.48964748 -1.13081294 43.97460455 -1.1328125 42.4609375 C-1.13474609 41.49800781 -1.13667969 40.53507812 -1.13867188 39.54296875 C-1.13416016 38.49753906 -1.12964844 37.45210937 -1.125 36.375 C-1.12306641 35.31152344 -1.12113281 34.24804688 -1.11914062 33.15234375 C-1.0604674 22.08266245 -0.55276679 11.05533587 0 0 Z \",fill:\"#72706E\",transform:\"translate(823,209)\"})),_path110||(_path110=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.58 29 17.16 29 26 C37.09244093 25.96048092 37.09244093 25.96048092 45.18481445 25.90991211 C46.1924585 25.90741455 47.20010254 25.90491699 48.23828125 25.90234375 C49.26993408 25.89710693 50.30158691 25.89187012 51.36450195 25.88647461 C54 26 54 26 57 27 C57 32.61 57 38.22 57 44 C18.06 44 -20.88 44 -61 44 C-61 38.06 -61 32.12 -61 26 C-40.87 26 -20.74 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#7C7B7A\",transform:\"translate(158,980)\"})),_path111||(_path111=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C10.57 2 20.14 2 30 2 C30.33 1.34 30.66 0.68 31 0 C31.66 0.66 32.32 1.32 33 2 C32.34 2.33 31.68 2.66 31 3 C30.67 11.58 30.34 20.16 30 29 C39.9 29 49.8 29 60 29 C60.33 37.58 60.66 46.16 61 55 C70.9 55 80.8 55 91 55 C91.020625 58.939375 91.04125 62.87875 91.0625 66.9375 C91.071604 68.18136475 91.08070801 69.42522949 91.09008789 70.70678711 C91.09258545 71.6788208 91.09508301 72.65085449 91.09765625 73.65234375 C91.10289307 74.65257568 91.10812988 75.65280762 91.11352539 76.68334961 C91 79 91 79 90 80 C84.777886 80.95682605 79.72217535 81.15318494 74.4375 81.125 C73.70853516 81.12886719 72.97957031 81.13273437 72.22851562 81.13671875 C71.51244141 81.13542969 70.79636719 81.13414062 70.05859375 81.1328125 C69.42236084 81.13168457 68.78612793 81.13055664 68.13061523 81.12939453 C65.39942044 80.96352616 62.69899753 80.44983292 60 80 C60 71.75 60 63.5 60 55 C50.1 55 40.2 55 30 55 C30 46.75 30 38.5 30 30 C20.43 30 10.86 30 1 30 C0.67 38.25 0.34 46.5 0 55 C-5.94 55 -11.88 55 -18 55 C-18 46.09 -18 37.18 -18 28 C-12.06 28 -6.12 28 0 28 C-0.12568359 25.09380859 -0.12568359 25.09380859 -0.25390625 22.12890625 C-0.35704145 19.60678188 -0.45989135 17.08464584 -0.5625 14.5625 C-0.61857422 13.28310547 -0.67464844 12.00371094 -0.73242188 10.68554688 C-0.78076172 9.47060547 -0.82910156 8.25566406 -0.87890625 7.00390625 C-0.9260376 5.87799072 -0.97316895 4.7520752 -1.02172852 3.59204102 C-1 1 -1 1 0 0 Z \",fill:\"#62615F\",transform:\"translate(822,305)\"})),_path112||(_path112=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.12591553 0.00523682 2.25183105 0.01047363 3.41186523 0.01586914 C4.62680664 0.0190918 5.84174805 0.02231445 7.09350586 0.02563477 C8.37290039 0.03401367 9.65229492 0.04239258 10.97045898 0.05102539 C12.2537207 0.05553711 13.53698242 0.06004883 14.85913086 0.06469727 C18.04211921 0.07652994 21.22501661 0.09301471 24.40795898 0.11352539 C25.03969689 8.1681837 25.40795898 16.00895156 25.40795898 24.11352539 C34.64795898 24.11352539 43.88795898 24.11352539 53.40795898 24.11352539 C53.90295898 36.48852539 53.90295898 36.48852539 54.40795898 49.11352539 C63.97795898 49.11352539 73.54795898 49.11352539 83.40795898 49.11352539 C83.40795898 57.36352539 83.40795898 65.61352539 83.40795898 74.11352539 C73.50795898 74.11352539 63.60795898 74.11352539 53.40795898 74.11352539 C53.40795898 66.19352539 53.40795898 58.27352539 53.40795898 50.11352539 C39.54795898 49.61852539 39.54795898 49.61852539 25.40795898 49.11352539 C25.07795898 57.03352539 24.74795898 64.95352539 24.40795898 73.11352539 C14.50795898 73.11352539 4.60795898 73.11352539 -5.59204102 73.11352539 C-5.59204102 65.52352539 -5.59204102 57.93352539 -5.59204102 50.11352539 C-2.7737991 48.70440443 -0.4195282 49.00168986 2.72827148 49.01586914 C3.98510742 49.0190918 5.24194336 49.02231445 6.53686523 49.02563477 C7.85557617 49.03401367 9.17428711 49.04239258 10.53295898 49.05102539 C11.8728011 49.0560405 13.21264499 49.06060339 14.55249023 49.06469727 C17.83766555 49.07651444 21.12281779 49.09445038 24.40795898 49.11352539 C24.40795898 40.53352539 24.40795898 31.95352539 24.40795898 23.11352539 C22.42795898 23.11352539 20.44795898 23.11352539 18.40795898 23.11352539 C17.74795898 22.45352539 17.08795898 21.79352539 16.40795898 21.11352539 C16.73795898 20.45352539 17.06795898 19.79352539 17.40795898 19.11352539 C16.74795898 19.44352539 16.08795898 19.77352539 15.40795898 20.11352539 C14.80421106 22.64926666 14.45014772 25.18807711 14.06811523 27.76586914 C13.40795898 30.11352539 13.40795898 30.11352539 10.40795898 32.11352539 C6.70136168 32.45672884 3.99995416 32.31505566 0.47045898 31.11352539 C-1.59204102 29.11352539 -1.59204102 29.11352539 -1.89672852 27.13305664 C-1.90384026 25.12399009 -1.7561692 23.11588923 -1.59204102 21.11352539 C0.38795898 21.44352539 2.36795898 21.77352539 4.40795898 22.11352539 C4.40795898 24.42352539 4.40795898 26.73352539 4.40795898 29.11352539 C6.38332643 28.76565831 6.38332643 28.76565831 8.40795898 28.11352539 C9.88628158 25.1568802 9.46828681 22.37122802 9.40795898 19.11352539 C5.77795898 18.12352539 2.14795898 17.13352539 -1.59204102 16.11352539 C-3.84169427 5.56827574 -3.84169427 5.56827574 -3.59204102 1.11352539 C-2.59204102 0.11352539 -2.59204102 0.11352539 0 0 Z \",fill:\"#898886\",transform:\"translate(13.592041015625,489.886474609375)\"})),_path113||(_path113=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.79681084 8.02502344 2.12867289 15.93649887 2 24 C2.66 24.33 3.32 24.66 4 25 C3.01 25 2.02 25 1 25 C1 33.58 1 42.16 1 51 C7.17668275 50.96080098 7.17668275 50.96080098 13.35327148 50.90991211 C18.98439941 50.89210118 24.41464362 51.27839241 30 52 C30.02716824 54.54173977 30.04691969 57.08318415 30.0625 59.625 C30.07087891 60.33785156 30.07925781 61.05070313 30.08789062 61.78515625 C30.09111328 62.48769531 30.09433594 63.19023438 30.09765625 63.9140625 C30.10289307 64.5529541 30.10812988 65.1918457 30.11352539 65.85009766 C29.96894244 68.58815676 29.45076127 71.29543235 29 74 C19.76 74.66 10.52 75.32 1 76 C1.03958834 83.52432774 1.03958834 83.52432774 1.09008789 91.04858398 C1.09258545 91.98001221 1.09508301 92.91144043 1.09765625 93.87109375 C1.10551147 95.30859985 1.10551147 95.30859985 1.11352539 96.77514648 C1 99 1 99 0 100 C-0.14386104 101.32886073 -0.22676288 102.66448587 -0.28125 104 C-0.31863281 104.804375 -0.35601562 105.60875 -0.39453125 106.4375 C-0.42933594 107.283125 -0.46414063 108.12875 -0.5 109 C-0.56860509 110.66684971 -0.64130223 112.33353774 -0.71875 114 C-0.74904297 114.7425 -0.77933594 115.485 -0.81054688 116.25 C-1 118 -1 118 -2 119 C-3.99782126 119.15825258 -6.00088834 119.25119171 -8.00390625 119.31640625 C-9.09775635 119.35451416 -10.19160645 119.39262207 -11.31860352 119.43188477 C-13.41933228 119.49653931 -13.41933228 119.49653931 -15.5625 119.5625 C-19.996875 119.706875 -24.43125 119.85125 -29 120 C-29 105.15 -29 90.3 -29 75 C-19.43 75 -9.86 75 0 75 C0 67.41 0 59.82 0 52 C-9.24 52.33 -18.48 52.66 -28 53 C-28.33 59.93 -28.66 66.86 -29 74 C-29.33 74 -29.66 74 -30 74 C-30.15746272 57.30168421 -29.69162775 40.68551942 -29 24 C-19.43 24 -9.86 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#605F5D\",transform:\"translate(395,772)\"})),_path114||(_path114=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.20720703 -0.00128906 2.41441406 -0.00257813 3.65820312 -0.00390625 C5.55795898 0.00189453 5.55795898 0.00189453 7.49609375 0.0078125 C8.76646484 0.00394531 10.03683594 0.00007813 11.34570312 -0.00390625 C13.15458008 -0.00197266 13.15458008 -0.00197266 15 0 C16.11318604 0.00112793 17.22637207 0.00225586 18.37329102 0.00341797 C20.93359375 0.1328125 20.93359375 0.1328125 21.93359375 1.1328125 C22.03291528 2.82839976 22.06439382 4.52806997 22.06640625 6.2265625 C22.06833984 7.77150391 22.06833984 7.77150391 22.0703125 9.34765625 C22.06644531 10.43175781 22.06257812 11.51585937 22.05859375 12.6328125 C22.06439453 14.25896484 22.06439453 14.25896484 22.0703125 15.91796875 C22.06902344 16.94792969 22.06773437 17.97789062 22.06640625 19.0390625 C22.06527832 19.99103516 22.06415039 20.94300781 22.06298828 21.92382812 C21.93359375 24.1328125 21.93359375 24.1328125 20.93359375 25.1328125 C18.86097299 25.22048362 16.78539081 25.23977123 14.7109375 25.23046875 C13.45087891 25.22724609 12.19082031 25.22402344 10.89257812 25.22070312 C9.55208266 25.21234653 8.21158787 25.20388157 6.87109375 25.1953125 C5.52669433 25.1902991 4.18229315 25.18573592 2.83789062 25.18164062 C-0.46356058 25.16980747 -3.76498885 25.15187136 -7.06640625 25.1328125 C-7.06640625 33.0528125 -7.06640625 40.9728125 -7.06640625 49.1328125 C-5.22433594 49.19339844 -3.38226562 49.25398437 -1.484375 49.31640625 C0.92578941 49.40080889 3.33594524 49.48545703 5.74609375 49.5703125 C6.96103516 49.60962891 8.17597656 49.64894531 9.42773438 49.68945312 C10.59111328 49.73134766 11.75449219 49.77324219 12.953125 49.81640625 C14.02667236 49.85306396 15.10021973 49.88972168 16.20629883 49.92749023 C18.93359375 50.1328125 18.93359375 50.1328125 21.93359375 51.1328125 C21.93359375 59.0528125 21.93359375 66.9728125 21.93359375 75.1328125 C18.11796875 75.1740625 14.30234375 75.2153125 10.37109375 75.2578125 C9.18185303 75.27602051 7.9926123 75.29422852 6.76733398 75.31298828 C-2.01415019 75.35882143 -2.01415019 75.35882143 -6.09375 74.0625 C-9.20887802 73.08825497 -10.08907014 73.15852162 -13.06640625 74.1328125 C-16.73830677 74.26102132 -20.39078646 74.17656988 -24.06640625 74.1328125 C-18.78640625 74.4628125 -13.50640625 74.7928125 -8.06640625 75.1328125 C-8.06640625 83.3828125 -8.06640625 91.6328125 -8.06640625 100.1328125 C-14.00640625 100.1328125 -19.94640625 100.1328125 -26.06640625 100.1328125 C-26.06640625 75.3828125 -26.06640625 50.6328125 -26.06640625 25.1328125 C-20.12640625 25.1328125 -14.18640625 25.1328125 -8.06640625 25.1328125 C-8.06640625 17.2128125 -8.06640625 9.2928125 -8.06640625 1.1328125 C-5.31285665 -0.2439623 -3.07800216 0.00311561 0 0 Z \",fill:\"#646463\",transform:\"translate(830.06640625,488.8671875)\"})),_path115||(_path115=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.70028824 -0.00136459 1.40057648 -0.00272919 2.12208557 -0.00413513 C4.41477112 -0.006168 6.70732753 0.00017214 9 0.0078125 C9.77834198 0.00903107 10.55668396 0.01024963 11.35861206 0.01150513 C22.09951297 0.031237 32.82772975 0.18777184 43.5625 0.5703125 C45.2630957 0.62904541 45.2630957 0.62904541 46.99804688 0.68896484 C54.74280428 1.00421464 54.74280428 1.00421464 57 2.1328125 C57 10.3828125 57 18.6328125 57 27.1328125 C47.76 27.1328125 38.52 27.1328125 29 27.1328125 C29 35.7128125 29 44.2928125 29 53.1328125 C38.24 53.1328125 47.48 53.1328125 57 53.1328125 C57 61.7128125 57 70.2928125 57 79.1328125 C53.0306345 79.15572737 49.0614368 79.17565265 45.09204102 79.18774414 C43.74079614 79.19278307 42.38955674 79.19961427 41.03833008 79.20825195 C39.09979566 79.22033669 37.161222 79.22551078 35.22265625 79.23046875 C33.47094116 79.23832397 33.47094116 79.23832397 31.68383789 79.24633789 C29 79.1328125 29 79.1328125 28 78.1328125 C27.90666295 76.53670268 27.88254628 74.93647822 27.88647461 73.33764648 C27.88655014 72.31666367 27.88662567 71.29568085 27.88670349 70.24375916 C27.89186478 69.1333577 27.89702606 68.02295624 27.90234375 66.87890625 C27.9037587 65.74832291 27.90517365 64.61773956 27.90663147 63.45289612 C27.91224981 59.82534185 27.92480542 56.19784826 27.9375 52.5703125 C27.94251264 50.11783943 27.94707595 47.6653654 27.95117188 45.21289062 C27.9613763 39.18615546 27.98094814 33.15955228 28 27.1328125 C18.1 27.1328125 8.2 27.1328125 -2 27.1328125 C-2 35.3828125 -2 43.6328125 -2 52.1328125 C-4.64 52.1328125 -7.28 52.1328125 -10 52.1328125 C-10 35.3028125 -10 18.4728125 -10 1.1328125 C-6.48514809 -0.0388048 -3.70956611 0.00327205 0 0 Z \",fill:\"#5F5E5C\",transform:\"translate(10,562.8671875)\"})),_path116||(_path116=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.44013065 4.09074799 13.05784697 10.64024358 18.5 17.0625 C20.92165423 19.88406043 23.4532002 22.36288914 26.25 24.8125 C31.74061853 29.65313877 36.93293082 34.77950077 42.125 39.9375 C42.99157227 40.79126221 43.85814453 41.64502441 44.75097656 42.5246582 C45.55760742 43.32991943 46.36423828 44.13518066 47.1953125 44.96484375 C47.92766113 45.6930835 48.66000977 46.42132324 49.41455078 47.17163086 C51 49 51 49 51 51 C51.89319946 51.4031543 51.89319946 51.4031543 52.80444336 51.81445312 C55.00656704 53.00354604 56.39767157 54.179743 58.12890625 55.96875 C58.68900391 56.53980469 59.24910156 57.11085938 59.82617188 57.69921875 C60.39916016 58.29347656 60.97214844 58.88773438 61.5625 59.5 C62.70730947 60.67934563 63.85436457 61.85651652 65.00390625 63.03125 C65.50736572 63.55267578 66.0108252 64.07410156 66.52954102 64.61132812 C68.15641908 66.2256108 68.15641908 66.2256108 71 68 C71 68.66 71 69.32 71 70 C71.61875 70.309375 72.2375 70.61875 72.875 70.9375 C74.25 71.625 75.625 72.3125 77 73 C77 66.73 77 60.46 77 54 C87.23 54 97.46 54 108 54 C108 61.26 108 68.52 108 76 C110.15402344 75.98839844 112.30804687 75.97679687 114.52734375 75.96484375 C116.60571139 75.95705263 118.68407743 75.95097619 120.76245117 75.94506836 C122.21070073 75.94002899 123.65894517 75.93319747 125.10717773 75.92456055 C127.18474588 75.91247753 129.26224697 75.90676789 131.33984375 75.90234375 C132.59144287 75.89710693 133.84304199 75.89187012 135.13256836 75.88647461 C138 76 138 76 139 77 C141.21855264 77.08783542 143.43988496 77.10694609 145.66015625 77.09765625 C146.32462265 77.0962413 146.98908905 77.09482635 147.6736908 77.09336853 C149.80333899 77.08775518 151.93288339 77.07520054 154.0625 77.0625 C155.50325369 77.05748671 156.94400903 77.05292351 158.38476562 77.04882812 C161.92324958 77.03863076 165.46150813 77.0190583 169 77 C169 84.59 169 92.18 169 100 C167.08574219 100.18175781 165.17148437 100.36351562 163.19921875 100.55078125 C160.69524211 100.80399237 158.19133953 101.05793665 155.6875 101.3125 C153.79354492 101.48942383 153.79354492 101.48942383 151.86132812 101.66992188 C150.04858398 101.85844727 150.04858398 101.85844727 148.19921875 102.05078125 C147.08377686 102.16075439 145.96833496 102.27072754 144.8190918 102.3840332 C141.64926245 102.81086923 141.64926245 102.81086923 139 106 C138.67 103.03 138.34 100.06 138 97 C136.91203125 97.01160156 135.8240625 97.02320313 134.703125 97.03515625 C111.41562728 97.20781364 111.41562728 97.20781364 107 95 C107 89.06 107 83.12 107 77 C98.42 77.33 89.84 77.66 81 78 C83.206875 80.206875 85.41375 82.41375 87.6875 84.6875 C91.44921875 88.44921875 91.44921875 88.44921875 93.2956543 90.29785156 C94.73348397 91.73382756 96.17844275 93.16266003 97.625 94.58984375 C99.79409872 96.79105084 101.87967439 99.04925492 103.94287109 101.34960938 C108.00842315 105.87751833 112.09663634 110.16456388 116.76171875 114.0859375 C119.80732105 116.69037926 122.74468735 119.40551477 125.6875 122.125 C126.2345459 122.62837891 126.7815918 123.13175781 127.34521484 123.65039062 C133.14979852 129.01499216 138.51325764 134.64983135 143.71875 140.59765625 C146.00049952 143.00052604 148.40513106 144.94572875 151 147 C152.67953472 148.65369848 154.34409051 150.32264515 156 152 C156.95266133 152.95871336 157.90571766 153.91703435 158.85913086 154.875 C159.35992661 155.37902344 159.86072235 155.88304687 160.37669373 156.40234375 C162.6345841 158.67374923 164.89525519 160.9423793 167.15600586 163.2109375 C168.34277757 164.402751 169.52865199 165.59545867 170.71362305 166.7890625 C172.44079714 168.52844869 174.1712545 170.26451128 175.90234375 172 C176.42440903 172.52722656 176.9464743 173.05445313 177.48435974 173.59765625 C180.83665561 176.95045455 184.33875798 179.98821168 188 183 C189.11907392 184.21810701 190.20733773 185.4658791 191.25 186.75 C193.81035567 189.7491151 196.47410501 192.39896319 199.4375 195 C205.09854279 199.96981809 210.3633678 205.3086778 215.64233398 210.6796875 C216.30692627 211.35257813 216.97151855 212.02546875 217.65625 212.71875 C218.55053711 213.63043945 218.55053711 213.63043945 219.46289062 214.56054688 C220.95809649 216.09777728 220.95809649 216.09777728 223 217 C223 217.66 223 218.32 223 219 C223.5878125 219.25136719 224.175625 219.50273438 224.78125 219.76171875 C227.27682175 221.15449383 228.66530515 222.63171498 230.5 224.8125 C231.09941406 225.52019531 231.69882812 226.22789062 232.31640625 226.95703125 C234.23559869 229.2858889 236.14207754 231.62185925 238 234 C234.19283739 232.44893375 231.81196719 229.88519315 229 227 C226.4000945 224.37076554 223.79351549 221.74817646 221.1875 219.125 C220.51396484 218.44308594 219.84042969 217.76117187 219.14648438 217.05859375 C215.20703539 213.10029573 211.16043528 209.35557585 206.9309082 205.71044922 C203.81159586 202.94728039 200.91366229 199.97674285 198 197 C194.3308202 193.28361096 190.68659818 189.61597442 186.6875 186.25 C182.82340748 182.97911571 179.5620051 179.26223955 176.2109375 175.4765625 C171.34848352 170.02992677 166.28229964 165.16742781 160.5625 160.625 C155.92514034 156.91383476 152.12795923 152.89407804 148.25390625 148.41015625 C145.3032675 145.25496716 142.03627965 142.72347705 138.5546875 140.1796875 C136.44770269 138.38198486 134.81708091 136.69731737 133.03515625 134.60546875 C128.11608468 128.86035439 122.72984504 123.58061377 117.37573242 118.24536133 C115.56639067 116.44137915 113.76245681 114.63211335 111.95898438 112.82226562 C106.68810048 107.54897636 101.4109901 102.38148853 95.73364258 97.54223633 C92.62527689 94.77705592 89.86387015 91.69545678 87.0625 88.625 C81.50359813 82.61854437 75.84480793 76.72938657 70.0625 70.9375 C69.03491577 69.90326904 69.03491577 69.90326904 67.98657227 68.84814453 C64.03373482 64.90632845 59.95511689 61.18510369 55.72973633 57.53833008 C53.74996221 55.77763047 52.00474939 53.91251942 50.3125 51.875 C45.43891895 46.16001595 40.0487962 41.22298342 34.40234375 36.28125 C32 34 32 34 30.19140625 31.65625 C27.78949197 28.74483875 25.16058098 26.47772597 22.30078125 24.02978516 C17.85227126 20.10524016 13.69479943 15.87925088 9.5 11.6875 C8.5821875 10.78193359 7.664375 9.87636719 6.71875 8.94335938 C5.8525 8.07904297 4.98625 7.21472656 4.09375 6.32421875 C3.30677734 5.54135498 2.51980469 4.75849121 1.70898438 3.9519043 C0 2 0 2 0 0 Z \",fill:\"#7E7D7B\",transform:\"translate(775,770)\"})),_path117||(_path117=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C30.125 13.5 30.125 13.5 30.09765625 20.171875 C30.0962413 20.86516907 30.09482635 21.55846313 30.09336853 22.27276611 C30.08788502 24.43189295 30.07535753 26.5909059 30.0625 28.75 C30.05746985 30.23697764 30.05290965 31.72395695 30.04882812 33.2109375 C30.03881579 36.80736809 30.01922088 40.40356052 30 44 C20.43 44 10.86 44 1 44 C0.27844799 29.2983777 -0.10150351 14.7180084 0 0 Z M-29 21 C-19.43 21 -9.86 21 0 21 C0 36.51 0 52.02 0 68 C-9.57 68.33 -19.14 68.66 -29 69 C-29 53.16 -29 37.32 -29 21 Z \",fill:\"#83817F\",transform:\"translate(97,188)\"})),_path118||(_path118=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 6.93 0 13.86 0 21 C3.07054687 20.98259766 3.07054687 20.98259766 6.203125 20.96484375 C8.19221882 20.95788888 10.18131294 20.95097002 12.17041016 20.94506836 C13.54964973 20.94004882 14.92888402 20.93323181 16.30810547 20.92456055 C18.29392183 20.9123908 20.27977749 20.90728367 22.265625 20.90234375 C23.45961914 20.89710693 24.65361328 20.89187012 25.88378906 20.88647461 C28.52087234 20.9825451 30.48298016 21.34908927 33 22 C35.1694408 22.1472796 37.34229053 22.2472547 39.515625 22.31640625 C40.76601563 22.35830078 42.01640625 22.40019531 43.3046875 22.44335938 C44.60664062 22.48267578 45.90859375 22.52199219 47.25 22.5625 C49.22613281 22.62727539 49.22613281 22.62727539 51.2421875 22.69335938 C54.49466854 22.79941854 57.74732053 22.90021153 61 23 C61 30.26 61 37.52 61 45 C70.9 45 80.8 45 91 45 C91 51.6 91 58.2 91 65 C81.27599762 65.80197958 71.75038738 66.12290404 62 66 C60.73417781 62.13276369 60.8881235 58.26848738 60.9375 54.25 C60.94201172 53.55261719 60.94652344 52.85523438 60.95117188 52.13671875 C60.9628998 50.42444197 60.98083347 48.71220967 61 47 C59.69796631 46.970271 59.69796631 46.970271 58.36962891 46.93994141 C55.15273733 46.86190128 51.93622955 46.77521119 48.71972656 46.68261719 C47.32691428 46.64430673 45.93400235 46.60945741 44.54101562 46.578125 C42.54013692 46.53252093 40.53957854 46.47348377 38.5390625 46.4140625 C37.33459473 46.3826416 36.13012695 46.3512207 34.88916016 46.31884766 C32 46 32 46 30 44 C26.88961056 43.72095371 26.88961056 43.72095371 23.2421875 43.8046875 C22.24761032 43.80893234 22.24761032 43.80893234 21.23294067 43.81326294 C19.11344417 43.82446565 16.99436896 43.84956949 14.875 43.875 C13.43880818 43.88502972 12.00260975 43.89415559 10.56640625 43.90234375 C7.04397762 43.92270461 3.52246083 43.9618506 0 44 C0 36.74 0 29.48 0 22 C-9.9 22 -19.8 22 -30 22 C-30 15.07 -30 8.14 -30 1 C-19.94144569 -0.0316466 -10.10350885 -0.07654173 0 0 Z \",fill:\"#878685\",transform:\"translate(699,870)\"})),_path119||(_path119=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 8.58 1 17.16 1 26 C10.57 26 20.14 26 30 26 C30 34.58 30 43.16 30 52 C27.91816406 51.98839844 25.83632813 51.97679687 23.69140625 51.96484375 C21.68253702 51.95789265 19.67366749 51.95097611 17.66479492 51.94506836 C16.26504772 51.9400292 14.8653058 51.93319784 13.46557617 51.92456055 C11.45754223 51.9124768 9.44947043 51.90730193 7.44140625 51.90234375 C6.23170166 51.89710693 5.02199707 51.89187012 3.77563477 51.88647461 C1.09187983 51.68224715 1.09187983 51.68224715 0 53 C-2.21855264 53.08783542 -4.43988496 53.10694609 -6.66015625 53.09765625 C-7.65685585 53.09553383 -7.65685585 53.09553383 -8.6736908 53.09336853 C-10.80333899 53.08775518 -12.93288339 53.07520054 -15.0625 53.0625 C-16.50325369 53.05748671 -17.94400903 53.05292351 -19.38476562 53.04882812 C-22.92324958 53.03863076 -26.46150813 53.0190583 -30 53 C-30 58.28 -30 63.56 -30 69 C-44.19 69 -58.38 69 -73 69 C-73 68.34 -73 67.68 -73 67 C-72.34 67 -71.68 67 -71 67 C-70.73445313 66.40832031 -70.46890625 65.81664062 -70.1953125 65.20703125 C-67.43691178 60.11390574 -62.46361845 56.3648891 -58.125 52.625 C-52.1646155 47.47163081 -46.60029516 41.94477606 -41.5 35.9375 C-40.33540506 34.62316139 -39.16845469 33.31090846 -38 32 C-37.1184021 30.94341187 -37.1184021 30.94341187 -36.21899414 29.86547852 C-32.88804306 26.34225534 -30.42977271 24.2285085 -25.55224609 23.44897461 C-21.6430634 23.43709183 -17.83143991 23.65839265 -13.9375 24 C-12.58162833 24.08852157 -11.22549922 24.17318813 -9.86914062 24.25390625 C-6.57678769 24.4648043 -3.2878075 24.727259 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#686664\",transform:\"translate(365,668)\"})),_path120||(_path120=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C10.9 2 20.8 2 31 2 C31 9.92 31 17.84 31 26 C37.93 26.495 37.93 26.495 45 27 C44.03040977 30.8783609 43.76032825 31.61430308 41.12109375 34.20703125 C40.52876953 34.79419922 39.93644531 35.38136719 39.32617188 35.98632812 C38.3912793 36.8902832 38.3912793 36.8902832 37.4375 37.8125 C36.84130859 38.40353516 36.24511719 38.99457031 35.63085938 39.60351562 C32.58122256 42.60085428 29.46932596 45.48306097 26.22265625 48.265625 C20.8857561 52.88610185 15.96605404 57.92633097 11 62.9375 C10.02497614 63.9175531 9.0497172 64.8973724 8.07421875 65.87695312 C5.71383382 68.24902313 3.35583095 70.6234086 1 73 C-0.22625047 70.54749907 -0.03425355 69.15689565 0.12109375 66.4296875 C0.18574829 65.21901611 0.18574829 65.21901611 0.25170898 63.98388672 C0.31302002 62.9579541 0.37433105 61.93202148 0.4375 60.875 C0.623125 57.61625 0.80875 54.3575 1 51 C-8.9 51.33 -18.8 51.66 -29 52 C-29 43.42 -29 34.84 -29 26 C-19.43 26 -9.86 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#848282\",transform:\"translate(127,821)\"})),_path121||(_path121=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29.020625 3.073125 29.04125 6.14625 29.0625 9.3125 C29.071604 10.27712158 29.08070801 11.24174316 29.09008789 12.2355957 C29.09258545 12.99960693 29.09508301 13.76361816 29.09765625 14.55078125 C29.10289307 15.33106689 29.10812988 16.11135254 29.11352539 16.9152832 C29 19 29 19 28 22 C18.76 22 9.52 22 0 22 C0.495 31.405 0.495 31.405 1 41 C14.86 41.495 14.86 41.495 29 42 C29 49.26 29 56.52 29 64 C19.43 64 9.86 64 0 64 C0 57.07 0 50.14 0 43 C-9.24 43 -18.48 43 -28 43 C-28.66 36.07 -29.32 29.14 -30 22 C-39.24 22 -48.48 22 -58 22 C-58 15.07 -58 8.14 -58 1 C-48.43 1 -38.86 1 -29 1 C-29 7.27 -29 13.54 -29 20 C-19.43 20 -9.86 20 0 20 C0 13.4 0 6.8 0 0 Z \",fill:\"#646261\",transform:\"translate(216,915)\"})),_path122||(_path122=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 7.92 1 15.84 1 24 C4.96 24 8.92 24 13 24 C13 24.33 13 24.66 13 25 C9.37 25.33 5.74 25.66 2 26 C1.93941406 27.63710938 1.87882812 29.27421875 1.81640625 30.9609375 C1.73201032 33.0989678 1.64736185 35.23698814 1.5625 37.375 C1.52318359 38.45523438 1.48386719 39.53546875 1.44335938 40.6484375 C1.40146484 41.6796875 1.35957031 42.7109375 1.31640625 43.7734375 C1.27974854 44.72653809 1.24309082 45.67963867 1.20532227 46.66162109 C1 49 1 49 0 51 C-10.23 51 -20.46 51 -31 51 C-31.020625 55.269375 -31.04125 59.53875 -31.0625 63.9375 C-31.071604 65.28577881 -31.08070801 66.63405762 -31.09008789 68.02319336 C-31.09258545 69.07643799 -31.09508301 70.12968262 -31.09765625 71.21484375 C-31.10289307 72.29886475 -31.10812988 73.38288574 -31.11352539 74.49975586 C-31.28426897 76.94049948 -31.28426897 76.94049948 -30 78 C-29.92728259 80.35313555 -29.91629132 82.70833668 -29.9375 85.0625 C-29.94652344 86.35285156 -29.95554687 87.64320313 -29.96484375 88.97265625 C-29.97644531 89.97167969 -29.98804688 90.97070312 -30 92 C-30.99 92.495 -30.99 92.495 -32 93 C-32 92.34 -32 91.68 -32 91 C-33.98 91.495 -33.98 91.495 -36 92 C-36.38220703 91.58226318 -36.76441406 91.16452637 -37.15820312 90.73413086 C-46.30394446 80.67340831 -46.30394446 80.67340831 -56.3125 71.49609375 C-59.20189265 68.93443313 -61.56168533 65.98693547 -64 63 C-63.34 63 -62.68 63 -62 63 C-62 59.04 -62 55.08 -62 51 C-60.515 50.505 -60.515 50.505 -59 50 C-59.33 49.67 -59.66 49.34 -60 49 C-60 41.08 -60 33.16 -60 25 C-40.2 25 -20.4 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#6C6A68\",transform:\"translate(395,257)\"})),_path123||(_path123=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.66195231 3.27039855 5.14882055 6.60619444 7.5625 10.0625 C24.52111822 33.34148885 45.69661901 46.51561483 74.10888672 51.0871582 C76.07195965 51.39548665 78.03589382 51.69832356 80 52 C80.33 52.99 80.66 53.98 81 55 C76.38 54.34 71.76 53.68 67 53 C67.33 53.66 67.66 54.32 68 55 C68.08471364 56.81341842 68.10721083 58.62994161 68.09765625 60.4453125 C68.09515869 61.41484863 68.09266113 62.38438477 68.09008789 63.38330078 C68.08098389 64.61806152 68.07187988 65.85282227 68.0625 67.125 C68.041875 71.04375 68.02125 74.9625 68 79 C58.1 79 48.2 79 38 79 C38 70.75 38 62.5 38 54 C34.37 54 30.74 54 27 54 C23.59918935 53.85777043 20.20931293 53.69885579 16.8125 53.5 C13.904375 53.335 10.99625 53.17 8 53 C7.505 40.13 7.505 40.13 7 27 C-2.9 27 -12.8 27 -23 27 C-23 19.08 -23 11.16 -23 3 C-15.41 2.67 -7.82 2.34 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#797978\",transform:\"translate(569,588)\"})),_path124||(_path124=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0.33 20.46 0.66 31 1 C31 9.25 31 17.5 31 26 C40.57 26 50.14 26 60 26 C60 29.63 60 33.26 60 37 C60.99 37 61.98 37 63 37 C61.64657559 40.0611288 60.16788553 42.02924514 57.69921875 44.27734375 C57.05146484 44.87353516 56.40371094 45.46972656 55.73632812 46.08398438 C55.06021484 46.69564453 54.38410156 47.30730469 53.6875 47.9375 C52.35732924 49.15413534 51.02788779 50.37156858 49.69921875 51.58984375 C49.06242187 52.1727417 48.425625 52.75563965 47.76953125 53.35620117 C45.45050965 55.51044681 43.22086202 57.74508728 41 60 C40.27039063 60.71800781 39.54078125 61.43601562 38.7890625 62.17578125 C34.52177478 66.38915018 30.44546289 70.66544453 26.60546875 75.2734375 C24.16304364 77.90008446 22.29426406 79.864816 18.61816406 80.2487793 C17.32990723 80.16237183 17.32990723 80.16237183 16.015625 80.07421875 C15.08105469 80.01943359 14.14648438 79.96464844 13.18359375 79.90820312 C11.73146484 79.79895508 11.73146484 79.79895508 10.25 79.6875 C9.26644531 79.62626953 8.28289062 79.56503906 7.26953125 79.50195312 C4.84504416 79.34895151 2.42251973 79.18114966 0 79 C-0.33 80.32 -0.66 81.64 -1 83 C-1 72.77 -1 62.54 -1 52 C9.23 52 19.46 52 30 52 C30 43.75 30 35.5 30 27 C20.1 27.33 10.2 27.66 0 28 C0 18.76 0 9.52 0 0 Z \",fill:\"#535251\",transform:\"translate(335,589)\"})),_path125||(_path125=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.88591396 0.11643579 3.77550782 0.17663461 5.66479492 0.20532227 C6.82577194 0.22526749 7.98674896 0.24521271 9.1829071 0.26576233 C10.43610245 0.28247482 11.68929779 0.29918732 12.98046875 0.31640625 C14.26359451 0.33718735 15.54672028 0.35796844 16.86872864 0.37937927 C20.27662815 0.43451906 23.68458741 0.48396389 27.09259033 0.53222656 C30.57154648 0.58250079 34.05041607 0.63815591 37.52929688 0.69335938 C44.3527911 0.80084191 51.17636577 0.9018114 58 1 C58 9.25 58 17.5 58 26 C48.1 26.33 38.2 26.66 28 27 C27.67 35.25 27.34 43.5 27 52 C21.7096875 52.4021875 21.7096875 52.4021875 16.3125 52.8125 C15.20946533 52.91022705 14.10643066 53.0079541 12.9699707 53.10864258 C11.64872192 53.18828247 11.64872192 53.18828247 10.30078125 53.26953125 C9.40528564 53.33760986 8.50979004 53.40568848 7.5871582 53.47583008 C3.84246164 52.78710557 2.49743741 50.80937319 0 48 C-1.76648677 46.24434853 -3.53343427 44.48916054 -5.30078125 42.734375 C-6.79310543 41.2494054 -8.28496186 39.76396765 -9.77661133 38.27832031 C-10.80861619 37.25140084 -11.84150808 36.22537208 -12.87524414 35.20019531 C-14.37358173 33.7139049 -15.86873817 32.22447967 -17.36328125 30.734375 C-18.25313721 29.84975586 -19.14299316 28.96513672 -20.05981445 28.05371094 C-22 26 -22 26 -22 25 C-15.73 25 -9.46 25 -3 25 C-3.020625 23.453125 -3.04125 21.90625 -3.0625 20.3125 C-3.07093367 13.83543894 -2.55496245 7.45143848 -2 1 C-6.62 1 -11.24 1 -16 1 C-16 0.67 -16 0.34 -16 0 C-13.89651926 -0.19504458 -11.79217415 -0.38078496 -9.6875 -0.5625 C-8.51574219 -0.66691406 -7.34398437 -0.77132812 -6.13671875 -0.87890625 C-3 -1 -3 -1 0 0 Z \",fill:\"#666462\",transform:\"translate(824,770)\"})),_path126||(_path126=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C15.2317327 -0.10465778 30.46014136 -0.1033564 45.6875 0.3125 C47.47559082 0.34621704 47.47559082 0.34621704 49.29980469 0.38061523 C50.95157715 0.43390991 50.95157715 0.43390991 52.63671875 0.48828125 C53.60311279 0.51446533 54.56950684 0.54064941 55.56518555 0.56762695 C58 1 58 1 59.83056641 2.19921875 C61.45621535 4.70251449 61.25418952 6.36288158 61.07421875 9.32421875 C61.01943359 10.35224609 60.96464844 11.38027344 60.90820312 12.43945312 C60.79895508 14.04723633 60.79895508 14.04723633 60.6875 15.6875 C60.62626953 16.77095703 60.56503906 17.85441406 60.50195312 18.97070312 C60.3486115 21.64828378 60.18075343 24.32415282 60 27 C60.91523438 26.91621094 61.83046875 26.83242188 62.7734375 26.74609375 C63.96195312 26.64425781 65.15046875 26.54242188 66.375 26.4375 C67.55835938 26.33308594 68.74171875 26.22867187 69.9609375 26.12109375 C73 26 73 26 75 27 C74.40884323 31.39262323 72.6552316 34.76491826 70.5 38.5625 C66.68780071 45.47657796 63.41618903 52.5656121 60.2277832 59.78515625 C58.16441917 64.44601597 56.02440094 69.02997174 53.6875 73.5625 C51.35933001 78.10339353 49.60748834 82.68889934 47.9453125 87.5078125 C46.6458109 90.93377126 44.93291202 93.89353425 43 97 C38.37502441 91.11852815 35.49665038 84.31664448 32.69921875 77.41796875 C30.08474121 71.1019108 27.17811026 64.95755647 24.1875 58.8125 C23.13385235 56.62773061 22.08046802 54.44283422 21.02734375 52.2578125 C19.57782351 49.25839605 18.12652592 46.25991866 16.66845703 43.26464844 C15.52240645 40.90870045 14.38529225 38.54864539 13.25 36.1875 C12.91508545 35.50727783 12.5801709 34.82705566 12.23510742 34.1262207 C10.61813551 30.7464665 10 28.83537615 10 25 C16.64409958 24.78567421 22.53205867 25.48766299 29 27 C30.29235715 31.91502758 30.11135517 36.77290102 30.0625 41.8125 C30.05798828 42.69615234 30.05347656 43.57980469 30.04882812 44.49023438 C30.03709866 46.66018559 30.01916495 48.83010172 30 51 C31.08796875 50.97679687 32.1759375 50.95359375 33.296875 50.9296875 C34.78124301 50.91089803 36.26561861 50.89270131 37.75 50.875 C38.46027344 50.85824219 39.17054688 50.84148437 39.90234375 50.82421875 C46.65565372 50.76445494 52.05071929 51.84178655 59 53 C59 44.42 59 35.84 59 27 C56.00292969 27.01740234 56.00292969 27.01740234 52.9453125 27.03515625 C51.01253382 27.04210869 49.07975482 27.04902605 47.14697266 27.05493164 C45.14093449 27.06244036 43.13491798 27.0751447 41.12890625 27.08789062 C39.24365234 27.09272461 39.24365234 27.09272461 37.3203125 27.09765625 C35.57645264 27.10551147 35.57645264 27.10551147 33.79736328 27.11352539 C31 27 31 27 29 26 C29 17.75 29 9.5 29 1 C19.43 1 9.86 1 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#555453\",transform:\"translate(365,412)\"})),_path127||(_path127=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0 20.46 0 31 0 C30.67 7.59 30.34 15.18 30 23 C39.9 23 49.8 23 60 23 C61.29945577 25.59891154 61.0223077 27.32666656 60.87890625 30.2265625 C60.83056641 31.2578125 60.78222656 32.2890625 60.73242188 33.3515625 C60.67634766 34.43179688 60.62027344 35.51203125 60.5625 36.625 C60.51029297 37.71296875 60.45808594 38.8009375 60.40429688 39.921875 C60.27437225 42.6148581 60.13939838 45.30749336 60 48 C59.67 47.34 59.34 46.68 59 46 C49.43 45.67 39.86 45.34 30 45 C29 37 29 37 29 24 C19.76 24.33 10.52 24.66 1 25 C0.67 31.6 0.34 38.2 0 45 C-3.17325294 46.58662647 -6.58783547 46.12088252 -10.0703125 46.09765625 C-10.77599365 46.09664917 -11.4816748 46.09564209 -12.20874023 46.09460449 C-14.84750999 46.08936828 -17.48625661 46.07540702 -20.125 46.0625 C-28.973125 46.0315625 -28.973125 46.0315625 -38 46 C-38 31.15 -38 16.3 -38 1 C-35.36 1 -32.72 1 -30 1 C-29.67 8.26 -29.34 15.52 -29 23 C-19.43 23 -9.86 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#605E5D\",transform:\"translate(38,71)\"})),_path128||(_path128=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.70556641 -0.34057617 2.70556641 -0.34057617 6.1015625 -0.29296875 C7.91914063 -0.2784668 7.91914063 -0.2784668 9.7734375 -0.26367188 C11.04445312 -0.23853516 12.31546875 -0.21339844 13.625 -0.1875 C14.90375 -0.17396484 16.1825 -0.16042969 17.5 -0.14648438 C20.66684469 -0.11103462 23.83347397 -0.05722637 27 0 C27 7.92 27 15.84 27 24 C36.57 24 46.14 24 56 24 C56 31.92 56 39.84 56 48 C65.57 48.33 75.14 48.66 85 49 C85 56.92 85 64.84 85 73 C75.43 73 65.86 73 56 73 C56 65.08 56 57.16 56 49 C46.43 49 36.86 49 27 49 C27 54.61 27 60.22 27 66 C22.6842186 62.43478928 18.57837078 58.71412126 14.5625 54.8125 C13.69753906 53.97332031 12.83257812 53.13414062 11.94140625 52.26953125 C10 50 10 50 10 47 C15.28 47 20.56 47 26 47 C26 39.41 26 31.82 26 24 C16.76 24 7.52 24 -2 24 C-2 28.62 -2 33.24 -2 38 C-7.27002208 33.60831493 -12.35302051 29.0573621 -17 24 C-17 23.67 -17 23.34 -17 23 C-12.05 23 -7.1 23 -2 23 C-2.02320313 21.59105469 -2.04640625 20.18210938 -2.0703125 18.73046875 C-2.08907038 16.88281779 -2.10727056 15.03516111 -2.125 13.1875 C-2.14175781 12.25873047 -2.15851563 11.32996094 -2.17578125 10.37304688 C-2.18222656 9.48037109 -2.18867188 8.58769531 -2.1953125 7.66796875 C-2.20578613 6.84578857 -2.21625977 6.0236084 -2.22705078 5.17651367 C-2 3 -2 3 0 0 Z \",fill:\"#605E5C\",transform:\"translate(189,141)\"})),_path129||(_path129=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.48591148 1.48995397 5.6963151 3.47583947 8.3359375 6.17578125 C9.15320313 7.00400391 9.97046875 7.83222656 10.8125 8.68554688 C11.658125 9.55244141 12.50375 10.41933594 13.375 11.3125 C18.41405896 16.45621634 23.37016544 21.50305073 29 26 C32.30497721 29.1263298 35.3030265 32.46872949 38.3125 35.875 C41.05767733 38.94633701 43.80556003 41.82453711 46.9375 44.5 C50.1950886 47.28375753 53.38313921 50.12099003 56.5 53.0625 C57.3559375 53.85785156 58.211875 54.65320313 59.09375 55.47265625 C61 58 61 58 61.46875 61.05859375 C60.93920309 64.38150058 60.35370804 65.62822168 58 68 C55.39936829 68.48101807 55.39936829 68.48101807 52.2434082 68.45410156 C50.47191154 68.45364838 50.47191154 68.45364838 48.66462708 68.45318604 C46.75202339 68.42221832 46.75202339 68.42221832 44.80078125 68.390625 C43.49545944 68.38496521 42.19013763 68.37930542 40.84526062 68.37347412 C37.37781054 68.35821392 33.91103251 68.31893032 30.44384766 68.2746582 C26.90471488 68.23371291 23.36547332 68.21546479 19.82617188 68.1953125 C12.88383881 68.15243532 5.94195168 68.08418015 -1 68 C-1.20638953 19.02217771 -1.20638953 19.02217771 0 0 Z \",fill:\"#61605F\",transform:\"translate(98,96)\"})),_path130||(_path130=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.11177927 -0.02291394 8.22339658 -0.04283951 12.33520508 -0.05493164 C13.73495228 -0.0599708 15.1346942 -0.06680216 16.53442383 -0.07543945 C18.54245777 -0.0875232 20.55052957 -0.09269807 22.55859375 -0.09765625 C24.37315063 -0.10551147 24.37315063 -0.10551147 26.22436523 -0.11352539 C29 0 29 0 30 1 C30.15920653 2.63106242 30.25150421 4.26872166 30.31640625 5.90625 C30.35838135 6.9492627 30.40035645 7.99227539 30.44360352 9.06689453 C30.48283936 10.19981934 30.5220752 11.33274414 30.5625 12.5 C30.6049585 13.65226074 30.64741699 14.80452148 30.69116211 15.99169922 C31.09651273 27.99888599 31.06904161 39.98675921 31 52 C40.9 52 50.8 52 61 52 C61 60.58 61 69.16 61 78 C70.24 78 79.48 78 89 78 C89 86.25 89 94.5 89 103 C90.485 103.495 90.485 103.495 92 104 C91.01 104.495 91.01 104.495 90 105 C90 107.97 90 110.94 90 114 C89.67 114 89.34 114 89 114 C89 110.7 89 107.4 89 104 C79.76 104 70.52 104 61 104 C61 95.75 61 87.5 61 79 C51.1 79 41.2 79 31 79 C31 70.42 31 61.84 31 53 C27.7 53.144375 24.4 53.28875 21 53.4375 C19.97648437 53.48060303 18.95296875 53.52370605 17.8984375 53.56811523 C12.5494877 53.81289593 7.30294165 54.2558372 2 55 C1.67 59.29 1.34 63.58 1 68 C0.67 68 0.34 68 0 68 C0 62.72 0 57.44 0 52 C9.57 52 19.14 52 29 52 C29 43.42 29 34.84 29 26 C19.43 26 9.86 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#615F5D\",transform:\"translate(127,360)\"})),_path131||(_path131=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C17.81815308 -0.07906977 35.62270844 0.16954199 53.4375 0.5 C56.12694565 0.54859708 58.81640231 0.59657081 61.50585938 0.64453125 C68.00394693 0.76087478 74.50198417 0.87971969 81 1 C81 4.96 81 8.92 81 13 C70.77 13 60.54 13 50 13 C50 17.62 50 22.24 50 27 C49.71091633 30.68581675 49.41910791 34.33280582 49 38 C50.08099976 38.03758423 50.08099976 38.03758423 51.18383789 38.07592773 C54.47687464 38.19260076 57.76967501 38.31500179 61.0625 38.4375 C62.7630957 38.49647461 62.7630957 38.49647461 64.49804688 38.55664062 C65.60341797 38.59853516 66.70878906 38.64042969 67.84765625 38.68359375 C68.85836182 38.72025146 69.86906738 38.75690918 70.91040039 38.79467773 C74.29005886 39.01927614 77.64692901 39.52098986 81 40 C81 47.92 81 55.84 81 64 C76.05 64.495 76.05 64.495 71 65 C70.01 66.98 70.01 66.98 69 69 C63.80747033 66.37852871 60.18527752 62.37188538 56.1875 58.25 C51.54738852 53.49000047 46.86801167 48.89411487 41.80395508 44.58300781 C39.95358684 42.95927149 38.2224362 41.25812096 36.5 39.5 C34.13778618 37.0896868 31.70393687 34.86379653 29.125 32.6875 C25.16024104 29.27933221 21.80640096 25.47167467 18.36328125 21.546875 C15.97255443 18.97042229 13.46367228 16.6803672 10.8125 14.375 C6.61082312 10.68460361 2.85750319 6.84381639 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#686666\",transform:\"translate(253,242)\"})),_path132||(_path132=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30.495 12.375 30.495 12.375 31 25 C40.57 25.33 50.14 25.66 60 26 C60 19.07 60 12.14 60 5 C60.33 5 60.66 5 61 5 C61.14459395 21.03386198 60.68907573 36.97898927 60 53 C50.1 53 40.2 53 30 53 C30 44.09 30 35.18 30 26 C24.61645007 26.32506574 24.61645007 26.32506574 19.23339844 26.65820312 C12.78613679 27.03169966 6.49476475 27 0 27 C0 35.25 0 43.5 0 52 C0.66 52.33 1.32 52.66 2 53 C1.34 53.66 0.68 54.32 0 55 C0 54.34 0 53.68 0 53 C-14.85 52.505 -14.85 52.505 -30 52 C-30 43.42 -30 34.84 -30 26 C-20.1 26 -10.2 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#5F5D5B\",transform:\"translate(944,590)\"})),_path133||(_path133=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 7.26 1 14.52 1 22 C3.61808594 21.98259766 3.61808594 21.98259766 6.2890625 21.96484375 C24.22050576 21.88486519 42.08271367 22.29290484 60 23 C60.495 34.88 60.495 34.88 61 47 C65.29 47 69.58 47 74 47 C69.4124469 52.49490142 64.55823607 57.62481908 59.5 62.6875 C58.76652344 63.43322266 58.03304687 64.17894531 57.27734375 64.94726562 C49.39768933 72.84806402 49.39768933 72.84806402 45 75 C40.1585764 74.93779756 35.7859879 73.90301659 31 73 C31 65.08 31 57.16 31 49 C21.1 49 11.2 49 1 49 C-0.30475618 46.39048764 -0.11301572 44.47298715 -0.09765625 41.5546875 C-0.09282227 39.94013672 -0.09282227 39.94013672 -0.08789062 38.29296875 C-0.07951172 37.16503906 -0.07113281 36.03710938 -0.0625 34.875 C-0.05798828 33.73933594 -0.05347656 32.60367188 -0.04882812 31.43359375 C-0.03701615 28.62234362 -0.02054507 25.8111977 0 23 C-2.31 23 -4.62 23 -7 23 C-7 22.67 -7 22.34 -7 22 C-4.69 22 -2.38 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#706E6D\",transform:\"translate(127,774)\"})),_path134||(_path134=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 2.97 1 5.94 1 9 C2.35532837 8.99214478 2.35532837 8.99214478 3.73803711 8.98413086 C7.07951489 8.96712314 10.42094692 8.95456667 13.76245117 8.94506836 C15.21070073 8.94002899 16.65894517 8.93319747 18.10717773 8.92456055 C20.18474588 8.91247753 22.26224697 8.90676789 24.33984375 8.90234375 C25.59144287 8.89710693 26.84304199 8.89187012 28.13256836 8.88647461 C31 9 31 9 32 10 C32.08685603 11.56172745 32.10702219 13.12729344 32.09765625 14.69140625 C32.09515869 15.54162354 32.09266113 16.39184082 32.09008789 17.26782227 C32.08098389 18.35506592 32.07187988 19.44230957 32.0625 20.5625 C32.041875 24.006875 32.02125 27.45125 32 31 C41.9 31 51.8 31 62 31 C62 23.74 62 16.48 62 9 C62.33 9 62.66 9 63 9 C63 15.93 63 22.86 63 30 C68.75749802 29.96093657 68.75749802 29.96093657 74.51489258 29.90991211 C80.80185819 29.88880806 86.66468797 30.42406254 93 31 C93 39.58 93 48.16 93 57 C82.77 57 72.54 57 62 57 C62 62.94 62 68.88 62 75 C61.67 75 61.34 75 61 75 C61 69.06 61 63.12 61 57 C51.43 57 41.86 57 32 57 C31.36604998 50.66049979 30.86028206 44.6877371 30.9375 38.375 C30.958125 35.94125 30.97875 33.5075 31 31 C21.1 31 11.2 31 1 31 C0.649375 27.555625 0.29875 24.11125 -0.0625 20.5625 C-0.17601807 19.49588135 -0.28953613 18.4292627 -0.40649414 17.33032227 C-0.98187932 11.34443348 -0.8800528 5.9511263 0 0 Z \",fill:\"#676664\",transform:\"translate(514,949)\"})),_path135||(_path135=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.17539996 0.92652701 2.34010577 1.86663387 3.5 2.8125 C4.47453125 3.59560547 4.47453125 3.59560547 5.46875 4.39453125 C7 6 7 6 7 9 C4.36 9.33 1.72 9.66 -1 10 C-1.33 18.91 -1.66 27.82 -2 37 C7.9 37 17.8 37 28 37 C28.020625 40.774375 28.04125 44.54875 28.0625 48.4375 C28.071604 49.62915771 28.08070801 50.82081543 28.09008789 52.04858398 C28.09258545 52.98001221 28.09508301 53.91144043 28.09765625 54.87109375 C28.10289307 55.82943115 28.10812988 56.78776855 28.11352539 57.77514648 C28 60 28 60 27 61 C25.44051458 61.15686249 23.87457332 61.25076639 22.30859375 61.31640625 C20.89223633 61.37924805 20.89223633 61.37924805 19.44726562 61.44335938 C18.45404297 61.48267578 17.46082031 61.52199219 16.4375 61.5625 C15.44041016 61.60568359 14.44332031 61.64886719 13.41601562 61.69335938 C10.9441585 61.79980298 8.4721969 61.90181928 6 62 C6 62.33 6 62.66 6 63 C-0.6 63 -7.2 63 -14 63 C-14 62.67 -14 62.34 -14 62 C-10.37 62 -6.74 62 -3 62 C-3 53.75 -3 45.5 -3 37 C-4.23921211 38.01636977 -4.23921211 38.01636977 -4.11352539 40.13305664 C-4.10567017 41.50772095 -4.10567017 41.50772095 -4.09765625 42.91015625 C-4.09282227 44.39418945 -4.09282227 44.39418945 -4.08789062 45.90820312 C-4.07951172 46.94912109 -4.07113281 47.99003906 -4.0625 49.0625 C-4.05798828 50.10728516 -4.05347656 51.15207031 -4.04882812 52.22851562 C-4.03699913 54.8190666 -4.02051689 57.40950559 -4 60 C-7.60870608 60.80929482 -11.04461938 61.17814083 -14.73828125 61.31640625 C-15.80498047 61.35830078 -16.87167969 61.40019531 -17.97070312 61.44335938 C-19.07349609 61.48267578 -20.17628906 61.52199219 -21.3125 61.5625 C-22.43462891 61.60568359 -23.55675781 61.64886719 -24.71289062 61.69335938 C-27.47514569 61.79914787 -30.2374863 61.90123672 -33 62 C-33.14759932 44.64004939 -32.76475342 27.3432246 -32 10 C-21.66061606 9.39434571 -11.3625183 8.81384698 -1 9 C-1.020625 7.700625 -1.04125 6.40125 -1.0625 5.0625 C-1.08399454 3.70834367 -1.07148199 2.35243917 -1 1 C-0.67 0.67 -0.34 0.34 0 0 Z \",fill:\"#6E6D6A\",transform:\"translate(305,298)\"})),_path136||(_path136=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.58 29 17.16 29 26 C19.43 26 9.86 26 0 26 C0 34.25 0 42.5 0 51 C9.57 50.67 19.14 50.34 29 50 C29 58.91 29 67.82 29 77 C14.15 76.505 14.15 76.505 -1 76 C-0.67 68.08 -0.34 60.16 0 52 C-2.22621094 52.01160156 -4.45242188 52.02320313 -6.74609375 52.03515625 C-8.89396014 52.04294722 -11.04182497 52.04902375 -13.18969727 52.05493164 C-14.68644918 52.05997121 -16.18319616 52.06680287 -17.67993164 52.07543945 C-19.82699807 52.08752159 -21.97399962 52.09323191 -24.12109375 52.09765625 C-26.06133423 52.10551147 -26.06133423 52.10551147 -28.04077148 52.11352539 C-31 52 -31 52 -32 51 C-32.09949077 49.24314326 -32.1308026 47.48232667 -32.1328125 45.72265625 C-32.13410156 44.65208984 -32.13539063 43.58152344 -32.13671875 42.47851562 C-32.13285156 41.35123047 -32.12898437 40.22394531 -32.125 39.0625 C-32.12886719 37.93908203 -32.13273438 36.81566406 -32.13671875 35.65820312 C-32.13542969 34.58634766 -32.13414062 33.51449219 -32.1328125 32.41015625 C-32.13168457 31.42152588 -32.13055664 30.43289551 -32.12939453 29.41430664 C-32 27 -32 27 -31 25 C-21.1 25 -11.2 25 -1 25 C-0.67 16.75 -0.34 8.5 0 0 Z \",fill:\"#696765\",transform:\"translate(975,413)\"})),_path137||(_path137=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.25 30 16.5 30 25 C39.9 25 49.8 25 60 25 C60 16.75 60 8.5 60 0 C64.25421714 -0.0229132 68.50822157 -0.04283889 72.76245117 -0.05493164 C74.21070073 -0.05997101 75.65894517 -0.06680253 77.10717773 -0.07543945 C79.18474588 -0.08752247 81.26224697 -0.09323211 83.33984375 -0.09765625 C84.59144287 -0.10289307 85.84304199 -0.10812988 87.13256836 -0.11352539 C90 0 90 0 91 1 C91.08737645 2.85369611 91.10698153 4.71067541 91.09765625 6.56640625 C91.09515869 7.57904541 91.09266113 8.59168457 91.09008789 9.63500977 C91.08098389 10.93108154 91.07187988 12.22715332 91.0625 13.5625 C91.041875 17.666875 91.02125 21.77125 91 26 C81.1 26 71.2 26 61 26 C60.67 33.59 60.34 41.18 60 49 C55.74593685 49.16547822 51.4919975 49.32786629 47.23754883 49.48217773 C45.78923699 49.53566237 44.34099225 49.59099659 42.89282227 49.64819336 C40.81541418 49.72992512 38.7378583 49.80507768 36.66015625 49.87890625 C35.40855713 49.9260376 34.15695801 49.97316895 32.86743164 50.02172852 C30 50 30 50 29 49 C28.91286169 47.29227642 28.89299993 45.58101351 28.90234375 43.87109375 C28.90484131 42.93966553 28.90733887 42.0082373 28.90991211 41.04858398 C28.91901611 39.85692627 28.92812012 38.66526855 28.9375 37.4375 C28.958125 33.663125 28.97875 29.88875 29 26 C19.43 26 9.86 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#646260\",transform:\"translate(822,22)\"})),_path138||(_path138=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.15693359 0.05800781 2.31386719 0.11601562 3.50585938 0.17578125 C5.30313477 0.29759766 5.30313477 0.29759766 7.13671875 0.421875 C8.96299805 0.52048828 8.96299805 0.52048828 10.82617188 0.62109375 C13.82661597 0.78582401 16.82562325 0.97636062 19.82421875 1.171875 C19.82421875 9.421875 19.82421875 17.671875 19.82421875 26.171875 C9.92421875 26.171875 0.02421875 26.171875 -10.17578125 26.171875 C-10.17578125 34.091875 -10.17578125 42.011875 -10.17578125 50.171875 C-0.27578125 50.171875 9.62421875 50.171875 19.82421875 50.171875 C20.53941644 62.86663403 20.96239671 75.45950288 20.82421875 88.171875 C20.49421875 88.171875 20.16421875 88.171875 19.82421875 88.171875 C19.49421875 82.891875 19.16421875 77.611875 18.82421875 72.171875 C16.82617188 72.171875 14.828125 72.171875 12.76953125 72.171875 C4.78776042 72.171875 -3.19401042 72.171875 -11.17578125 72.171875 C-12.07683594 72.18347656 -12.97789062 72.19507813 -13.90625 72.20703125 C-22.72967777 72.27682107 -31.37842682 71.83582628 -40.17578125 71.171875 C-40.17578125 64.241875 -40.17578125 57.311875 -40.17578125 50.171875 C-30.60578125 50.171875 -21.03578125 50.171875 -11.17578125 50.171875 C-11.17578125 42.251875 -11.17578125 34.331875 -11.17578125 26.171875 C-16.78578125 26.171875 -22.39578125 26.171875 -28.17578125 26.171875 C-28.50578125 25.181875 -28.83578125 24.191875 -29.17578125 23.171875 C-28.46292969 22.470625 -27.75007812 21.769375 -27.015625 21.046875 C-22.07643863 16.16210779 -17.23500258 11.29077416 -12.80859375 5.92578125 C-8.71024104 1.52348372 -6.13487008 -0.36265242 0 0 Z \",fill:\"#6B6967\",transform:\"translate(893.17578125,137.828125)\"})),_path139||(_path139=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.31000977 0.00483398 1.31000977 0.00483398 2.64648438 0.00976562 C3.96422852 0.02233398 3.96422852 0.02233398 5.30859375 0.03515625 C6.22189453 0.03966797 7.13519531 0.04417969 8.07617188 0.04882812 C10.29955113 0.06046885 12.52278496 0.07681774 14.74609375 0.09765625 C14.15828125 0.65195312 13.57046875 1.20625 12.96484375 1.77734375 C4.61124098 10.51332975 0.04362814 22.58098778 -4.77734375 33.45556641 C-5.74026211 35.60818207 -6.72598219 37.75074793 -7.73461914 39.88232422 C-8.7735819 42.08112536 -9.75765384 44.30647955 -10.69311523 46.55126953 C-12.27904449 49.91265564 -13.64953811 52.44012024 -16.25390625 55.09765625 C-20.98216599 56.53757015 -25.3053639 56.24735347 -30.19140625 55.84765625 C-32.07569336 55.76644531 -32.07569336 55.76644531 -33.99804688 55.68359375 C-37.09041652 55.54249704 -40.16859069 55.34583054 -43.25390625 55.09765625 C-46.91370699 49.46867138 -46.60659297 44.28776956 -46.44140625 37.72265625 C-46.42110352 36.18931641 -46.42110352 36.18931641 -46.40039062 34.625 C-46.36520842 32.11533576 -46.31598164 29.60677535 -46.25390625 27.09765625 C-47.02581299 27.10812988 -47.79771973 27.11860352 -48.59301758 27.12939453 C-52.08411413 27.17092079 -55.57515874 27.19697182 -59.06640625 27.22265625 C-60.28134766 27.23941406 -61.49628906 27.25617188 -62.74804688 27.2734375 C-63.91142578 27.27988281 -65.07480469 27.28632813 -66.2734375 27.29296875 C-67.88375854 27.3086792 -67.88375854 27.3086792 -69.52661133 27.32470703 C-72.25390625 27.09765625 -72.25390625 27.09765625 -75.25390625 25.09765625 C-75.59448242 22.66748047 -75.59448242 22.66748047 -75.546875 19.65234375 C-75.53938232 18.68280762 -75.53188965 17.71327148 -75.52416992 16.71435547 C-75.49685791 15.47959473 -75.4695459 14.24483398 -75.44140625 12.97265625 C-75.37953125 9.05390625 -75.31765625 5.13515625 -75.25390625 1.09765625 C-65.35390625 1.09765625 -55.45390625 1.09765625 -45.25390625 1.09765625 C-45.25390625 9.67765625 -45.25390625 18.25765625 -45.25390625 27.09765625 C-35.02390625 27.09765625 -24.79390625 27.09765625 -14.25390625 27.09765625 C-14.25390625 18.51765625 -14.25390625 9.93765625 -14.25390625 1.09765625 C-4.12890625 -0.02734375 -4.12890625 -0.02734375 0 0 Z \",fill:\"#545352\",transform:\"translate(469.25390625,358.90234375)\"})),_path140||(_path140=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.91275722 5.82668975 5.50203506 10.82946783 5.35546875 17.82421875 C5.34531738 18.52675781 5.33516602 19.22929688 5.32470703 19.953125 C4.97214997 31.78155099 0.18153596 39.16345039 -8.26953125 47.13671875 C-19.32194814 56.60756083 -31.68553723 59.01411439 -45.84130859 58.1875 C-55.10387185 57.17424493 -62.84613807 51.4922953 -70.01953125 45.94921875 C-70.633125 45.52382813 -71.24671875 45.0984375 -71.87890625 44.66015625 C-76.23880089 41.40023503 -79.06110573 37.26317294 -82.01953125 32.76171875 C-82.43017822 32.14288818 -82.8408252 31.52405762 -83.26391602 30.88647461 C-84.26931178 29.29230032 -85.15426496 27.62359223 -86.01953125 25.94921875 C-85.52453125 24.46421875 -85.52453125 24.46421875 -85.01953125 22.94921875 C-80.54037797 22.92035537 -76.06124834 22.90246688 -71.58203125 22.88671875 C-70.30263672 22.87833984 -69.02324219 22.86996094 -67.70507812 22.86132812 C-65.88266602 22.85649414 -65.88266602 22.85649414 -64.0234375 22.8515625 C-62.89752197 22.84632568 -61.77160645 22.84108887 -60.61157227 22.83569336 C-58.01953125 22.94921875 -58.01953125 22.94921875 -57.01953125 23.94921875 C-56.9321548 25.80291486 -56.91254972 27.65989416 -56.921875 29.515625 C-56.92437256 30.52826416 -56.92687012 31.54090332 -56.92944336 32.58422852 C-56.93854736 33.88030029 -56.94765137 35.17637207 -56.95703125 36.51171875 C-56.97765625 40.61609375 -56.99828125 44.72046875 -57.01953125 48.94921875 C-47.11953125 48.94921875 -37.21953125 48.94921875 -27.01953125 48.94921875 C-27.05891004 40.70785172 -27.05891004 40.70785172 -27.10961914 32.46655273 C-27.1231482 26.84239057 -26.93737197 21.51025367 -26.01953125 15.94921875 C-25.77229574 12.9731342 -25.61290814 9.99382259 -25.45703125 7.01171875 C-25.39225586 5.84286133 -25.39225586 5.84286133 -25.32617188 4.65039062 C-25.22125048 2.75014758 -25.12000675 0.84970206 -25.01953125 -1.05078125 C-21.45946544 -1.36481247 -17.89752929 -1.61931434 -14.33203125 -1.86328125 C-13.32462891 -1.95287109 -12.31722656 -2.04246094 -11.27929688 -2.13476562 C-3.83088191 -2.60182795 -3.83088191 -2.60182795 0 0 Z \",fill:\"#575655\",transform:\"translate(694.01953125,540.05078125)\"})),_path141||(_path141=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.14841723 16.03591092 0.72412424 31.9787512 0 48 C9.9 48 19.8 48 30 48 C30 62 30 62 29 72 C19.43 72 9.86 72 0 72 C-0.33 64.08 -0.66 56.16 -1 48 C-10.24 48.33 -19.48 48.66 -29 49 C-29 57.91 -29 66.82 -29 76 C-29.99 76.495 -29.99 76.495 -31 77 C-31 75.35 -31 73.7 -31 72 C-40.57 72.33 -50.14 72.66 -60 73 C-59.67 64.75 -59.34 56.5 -59 48 C-68.24 48 -77.48 48 -87 48 C-87 47.67 -87 47.34 -87 47 C-78.09 47 -69.18 47 -60 47 C-60.495 42.05 -60.495 42.05 -61 37 C-60.92370811 34.45529641 -60.78626419 31.91099416 -60.5625 29.375 C-60.46066406 28.16585938 -60.35882813 26.95671875 -60.25390625 25.7109375 C-60.17011719 24.81632812 -60.08632813 23.92171875 -60 23 C-59.34 23 -58.68 23 -58 23 C-58 31.25 -58 39.5 -58 48 C-48.76 47.67 -39.52 47.34 -30 47 C-30 39.08 -30 31.16 -30 23 C-15.645 22.505 -15.645 22.505 -1 22 C-0.67 14.74 -0.34 7.48 0 0 Z \",fill:\"#5E5D5B\",transform:\"translate(455,0)\"})),_path142||(_path142=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.20970459 0.00523682 2.41940918 0.01047363 3.66577148 0.01586914 C4.97094727 0.0190918 6.27612305 0.02231445 7.62084961 0.02563477 C9.00952213 0.03399138 10.39819401 0.04245634 11.78686523 0.05102539 C13.17944179 0.05603873 14.57202005 0.06060193 15.96459961 0.06469727 C19.38453974 0.07653097 22.80445773 0.09446708 26.22436523 0.11352539 C26.22436523 8.69352539 26.22436523 17.27352539 26.22436523 26.11352539 C36.12436523 26.11352539 46.02436523 26.11352539 56.22436523 26.11352539 C56.22436523 34.36352539 56.22436523 42.61352539 56.22436523 51.11352539 C36.09436523 51.11352539 15.96436523 51.11352539 -4.77563477 51.11352539 C-4.77563477 42.86352539 -4.77563477 34.61352539 -4.77563477 26.11352539 C-4.11563477 25.78352539 -3.45563477 25.45352539 -2.77563477 25.11352539 C-3.10563477 24.45352539 -3.43563477 23.79352539 -3.77563477 23.11352539 C-3.87165547 21.45816475 -3.90638031 19.79901104 -3.90844727 18.14086914 C-3.90973633 17.15924805 -3.91102539 16.17762695 -3.91235352 15.16625977 C-3.90848633 14.13823242 -3.90461914 13.11020508 -3.90063477 12.05102539 C-3.90450195 11.01913086 -3.90836914 9.98723633 -3.91235352 8.92407227 C-3.91106445 7.94374023 -3.90977539 6.9634082 -3.90844727 5.95336914 C-3.90675537 4.59779907 -3.90675537 4.59779907 -3.9050293 3.21484375 C-3.70566849 -0.0227006 -3.28441291 0.13433477 0 0 Z \",fill:\"#797775\",transform:\"translate(856.775634765625,694.886474609375)\"})),_path143||(_path143=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0.33 20.46 0.66 31 1 C31 8.26 31 15.52 31 23 C21.43 23 11.86 23 2 23 C2 31.58 2 40.16 2 49 C-27.7 49 -57.4 49 -88 49 C-88 48.67 -88 48.34 -88 48 C-78.43 48 -68.86 48 -59 48 C-59 39.75 -59 31.5 -59 23 C-49.1 23 -39.2 23 -29 23 C-28.505 23.99 -28.505 23.99 -28 25 C-27.01 24.34 -26.02 23.68 -25 23 C-22.27270508 22.77294922 -22.27270508 22.77294922 -19.01953125 22.8046875 C-17.27446289 22.81435547 -17.27446289 22.81435547 -15.49414062 22.82421875 C-14.27919922 22.84097656 -13.06425781 22.85773437 -11.8125 22.875 C-10.58595703 22.88402344 -9.35941406 22.89304687 -8.09570312 22.90234375 C-5.06371915 22.92593896 -2.03183527 22.96181033 1 23 C0.67 15.41 0.34 7.82 0 0 Z \",fill:\"#6C6A69\",transform:\"translate(156,957)\"})),_path144||(_path144=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0.33 19.8 0.66 30 1 C31.125 10 31.125 10 31.09765625 13.28125 C31.09515869 13.91095703 31.09266113 14.54066406 31.09008789 15.18945312 C31.08098389 15.95193359 31.07187988 16.71441406 31.0625 17.5 C31.041875 19.975 31.02125 22.45 31 25 C40.57 25 50.14 25 60 25 C60.33 17.08 60.66 9.16 61 1 C70.57 1 80.14 1 90 1 C90 8.92 90 16.84 90 25 C80.43 25 70.86 25 61 25 C61 33.58 61 42.16 61 51 C57.06742822 51.16587746 53.13494488 51.32836629 49.2019043 51.48217773 C47.2067109 51.56173399 45.21174989 51.64705005 43.21679688 51.73242188 C41.96318359 51.78076172 40.70957031 51.82910156 39.41796875 51.87890625 C38.26063232 51.9260376 37.1032959 51.97316895 35.91088867 52.02172852 C33 52 33 52 30 51 C30 42.42 30 33.84 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#5D5B5A\",transform:\"translate(97,539)\"})),_path145||(_path145=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.94 0 11.88 0 18 0 C18 8.58 18 17.16 18 26 C12.39 25.67 6.78 25.34 1 25 C1 33.91 1 42.82 1 52 C4.63 52 8.26 52 12 52 C13.65 52.33 15.3 52.66 17 53 C17.33 61.25 17.66 69.5 18 78 C12.39 78 6.78 78 1 78 C1 86.91 1 95.82 1 105 C6.28 105 11.56 105 17 105 C17 96.42 17 87.84 17 79 C21.48461792 78.3593403 25.25469372 77.87260934 29.6796875 77.8671875 C30.6903125 77.86589844 31.7009375 77.86460937 32.7421875 77.86328125 C33.77601563 77.86714844 34.80984375 77.87101563 35.875 77.875 C37.46054687 77.86919922 37.46054687 77.86919922 39.078125 77.86328125 C40.08101562 77.86457031 41.08390625 77.86585938 42.1171875 77.8671875 C43.03097168 77.86831543 43.94475586 77.86944336 44.88623047 77.87060547 C47 78 47 78 48 79 C48.08748207 80.92667507 48.10697334 82.85651861 48.09765625 84.78515625 C48.09515869 85.83840088 48.09266113 86.89164551 48.09008789 87.97680664 C48.08098389 89.32508545 48.07187988 90.67336426 48.0625 92.0625 C48.041875 96.331875 48.02125 100.60125 48 105 C38.1 105 28.2 105 18 105 C18 113.25 18 121.5 18 130 C12.39 130 6.78 130 1 130 C1 133.3 1 136.6 1 140 C0.67 140 0.34 140 0 140 C0 93.8 0 47.6 0 0 Z \",fill:\"#888786\",transform:\"translate(804,616)\"})),_path146||(_path146=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.16781006 0.00523682 2.33562012 0.01047363 3.53881836 0.01586914 C4.67327393 0.0183667 5.80772949 0.02086426 6.9765625 0.0234375 C9.15560181 0.03709351 9.15560181 0.03709351 11.37866211 0.05102539 C15.97803711 0.07165039 20.57741211 0.09227539 25.31616211 0.11352539 C25.64616211 14.30352539 25.97616211 28.49352539 26.31616211 43.11352539 C-13.28383789 43.11352539 -52.88383789 43.11352539 -93.68383789 43.11352539 C-93.68383789 37.83352539 -93.68383789 32.55352539 -93.68383789 27.11352539 C-73.88383789 27.11352539 -54.08383789 27.11352539 -33.68383789 27.11352539 C-33.68383789 32.06352539 -33.68383789 37.01352539 -33.68383789 42.11352539 C-23.78383789 42.11352539 -13.88383789 42.11352539 -3.68383789 42.11352539 C-3.69543945 39.16543945 -3.70704102 36.21735352 -3.71899414 33.17993164 C-3.72678406 30.33707792 -3.73286119 27.49422537 -3.73876953 24.65136719 C-3.74381056 22.66959098 -3.75064327 20.6878185 -3.75927734 18.70605469 C-3.77135304 15.86400431 -3.77706834 13.02200292 -3.78149414 10.17993164 C-3.78665543 9.28826797 -3.79181671 8.39660431 -3.7971344 7.47792053 C-3.79732966 5.35611938 -3.74593819 3.23441759 -3.68383789 1.11352539 C-2.68383789 0.11352539 -2.68383789 0.11352539 0 0 Z \",fill:\"#7C7D7B\",transform:\"translate(428.683837890625,693.886474609375)\"})),_path147||(_path147=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C19.8 0 39.6 0 60 0 C60 8.25 60 16.5 60 25 C50.1 25 40.2 25 30 25 C29.34 33.58 28.68 42.16 28 51 C18.43 51 8.86 51 -1 51 C-1.020625 46.895625 -1.04125 42.79125 -1.0625 38.5625 C-1.071604 37.26642822 -1.08070801 35.97035645 -1.09008789 34.63500977 C-1.09258545 33.62237061 -1.09508301 32.60973145 -1.09765625 31.56640625 C-1.10289307 30.52427979 -1.10812988 29.48215332 -1.11352539 28.40844727 C-1 26 -1 26 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#7A7776\",transform:\"translate(914,335)\"})),_path148||(_path148=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.77090295 -0.02743468 5.54152388 -0.04704436 8.3125 -0.0625 C9.07884766 -0.07087891 9.84519531 -0.07925781 10.63476562 -0.08789062 C16.87849889 -0.11379823 22.705971 0.42781555 29 1 C29 8.59 29 16.18 29 24 C35.50578175 23.96077909 35.50578175 23.96077909 42.01147461 23.90991211 C42.84171143 23.90741455 43.67194824 23.90491699 44.52734375 23.90234375 C45.77632446 23.89448853 45.77632446 23.89448853 47.05053711 23.88647461 C51.04798822 24.04033727 55.02405646 24.5582285 59 25 C59 16.75 59 8.5 59 0 C68.9 0 78.8 0 89 0 C89 7.92 89 15.84 89 24 C74.645 24.99 74.645 24.99 60 26 C59.67 33.92 59.34 41.84 59 50 C49.43 50 39.86 50 30 50 C29.27412466 46.37062331 28.87920141 43.72378217 28.90234375 40.13671875 C28.90484131 39.33709717 28.90733887 38.53747559 28.90991211 37.71362305 C28.91901611 36.71500244 28.92812012 35.71638184 28.9375 34.6875 C28.958125 31.490625 28.97875 28.29375 29 25 C19.76 25 10.52 25 1 25 C0.37374388 18.73743878 -0.11891674 13.08084097 -0.0625 6.875 C-0.05347656 5.57304687 -0.04445312 4.27109375 -0.03515625 2.9296875 C-0.02355469 1.96289062 -0.01195312 0.99609375 0 0 Z \",fill:\"#5C5A59\",transform:\"translate(38,489)\"})),_path149||(_path149=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.45962158 0.04543945 1.45962158 0.04543945 2.94873047 0.09179688 C25.9787899 0.79855129 48.95758417 1.09847186 72 1 C72 15.19 72 29.38 72 44 C44.15336868 46.53151194 44.15336868 46.53151194 35.8359375 39.79296875 C31.52599707 35.64777902 27.73333635 31.13146582 24.0378418 26.43701172 C21.51392892 23.41871792 18.71329957 20.95781568 15.70117188 18.44165039 C13.73810417 16.77805757 12.07437274 14.98305209 10.4375 13 C7.56753961 9.60101466 4.51739014 6.49995112 1.28515625 3.4453125 C0 2 0 2 0 0 Z \",fill:\"#615E5D\",transform:\"translate(702,693)\"})),_path150||(_path150=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C20.46 0 40.92 0 62 0 C62 12 62 12 61 22 C51.1 22 41.2 22 31 22 C31 30.58 31 39.16 31 48 C21.1 48 11.2 48 1 48 C0.7525 42.8025 0.7525 42.8025 0.5 37.5 C0.44779297 36.46552734 0.39558594 35.43105469 0.34179688 34.36523438 C-0.16785683 22.8858915 0 11.53560975 0 0 Z \",fill:\"#646362\",transform:\"translate(606,0)\"})),_path151||(_path151=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.495 6.93 1.495 6.93 2 14 C5.77338276 14.75467655 8.94534972 15.17442486 12.73828125 15.31640625 C13.70032471 15.35451416 14.66236816 15.39262207 15.65356445 15.43188477 C17.46473755 15.49653931 17.46473755 15.49653931 19.3125 15.5625 C23.169375 15.706875 27.02625 15.85125 31 16 C31 24.58 31 33.16 31 42 C21.1 42 11.2 42 1 42 C1 50.25 1 58.5 1 67 C6.3833571 66.96103251 6.3833571 66.96103251 11.76660156 66.90991211 C18.28908437 66.88667108 24.41913567 67.45159464 31 68 C31 76.58 31 85.16 31 94 C21.1 94 11.2 94 1 94 C1 85.42 1 76.84 1 68 C-4.94 68 -10.88 68 -17 68 C-17 59.09 -17 50.18 -17 41 C-11.06 41 -5.12 41 1 41 C1 32.75 1 24.5 1 16 C-4.28 16 -9.56 16 -15 16 C-15.33 15.34 -15.66 14.68 -16 14 C-10.72 14 -5.44 14 0 14 C0 9.38 0 4.76 0 0 Z \",fill:\"#5D5B5A\",transform:\"translate(821,548)\"})),_path152||(_path152=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.94 0.33 11.88 0.66 18 1 C18 9.25 18 17.5 18 26 C27.9 26 37.8 26 48 26 C48 34.25 48 42.5 48 51 C38 51 28 51 18 51 C18 59.58 18 68.16 18 77 C12.06 77 6.12 77 0 77 C0 51.59 0 26.18 0 0 Z \",fill:\"#686766\",transform:\"translate(804,256)\"})),_path153||(_path153=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.25683594 0.00322266 2.51367188 0.00644531 3.80859375 0.00976562 C5.12730469 0.01814453 6.44601562 0.02652344 7.8046875 0.03515625 C9.14452961 0.04017136 10.4843735 0.04473424 11.82421875 0.04882812 C15.10939407 0.0606453 18.39454631 0.07858124 21.6796875 0.09765625 C21.6796875 7.68765625 21.6796875 15.27765625 21.6796875 23.09765625 C31.5796875 23.09765625 41.4796875 23.09765625 51.6796875 23.09765625 C51.6796875 37.09765625 51.6796875 37.09765625 50.6796875 46.09765625 C40.7796875 46.09765625 30.8796875 46.09765625 20.6796875 46.09765625 C20.6796875 33.09765625 20.6796875 33.09765625 21.6796875 24.09765625 C11.7796875 24.09765625 1.8796875 24.09765625 -8.3203125 24.09765625 C-8.3203125 31.35765625 -8.3203125 38.61765625 -8.3203125 46.09765625 C-18.69271747 46.77781395 -28.92383184 47.24594203 -39.3203125 47.09765625 C-39.4770689 39.38175808 -38.99484351 31.78249164 -38.3203125 24.09765625 C-28.60568479 23.16611661 -19.06916559 23.01288361 -9.3203125 23.09765625 C-8.9903125 15.83765625 -8.6603125 8.57765625 -8.3203125 1.09765625 C-5.50207058 -0.31146471 -3.14779968 -0.01417928 0 0 Z \",fill:\"#888785\",transform:\"translate(493.3203125,822.90234375)\"})),_path154||(_path154=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C28.020625 3.75375 28.04125 7.5075 28.0625 11.375 C28.071604 12.55755371 28.08070801 13.74010742 28.09008789 14.95849609 C28.09258545 15.88742676 28.09508301 16.81635742 28.09765625 17.7734375 C28.10551147 19.20308838 28.10551147 19.20308838 28.11352539 20.66162109 C28 23 28 23 27 25 C26.90314203 26.74527094 26.86924012 28.49423215 26.8671875 30.2421875 C26.86589844 31.30953125 26.86460937 32.376875 26.86328125 33.4765625 C26.86908203 35.15878906 26.86908203 35.15878906 26.875 36.875 C26.87113281 37.9578125 26.86726562 39.040625 26.86328125 40.15625 C26.86944789 45.32389508 26.99382235 50.41122812 27.50390625 55.5546875 C28.32301393 64.43176694 28.10546371 73.34435174 28.0625 82.25 C28.05747327 84.07421752 28.05291244 85.89843638 28.04882812 87.72265625 C28.03877853 92.14849875 28.01918721 96.57415045 28 101 C18.1 101.33 8.2 101.66 -2 102 C-3.08019116 89.03770607 -3.08019116 89.03770607 1.23828125 83.4609375 C12.44878278 67.80103513 12.86976338 46.16470411 10.328125 27.70874023 C8.93334958 19.38263665 5.66646286 12.48388489 1.64453125 5.1328125 C0 2 0 2 0 0 Z \",fill:\"#6B6968\",transform:\"translate(732,514)\"})),_path155||(_path155=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29.02290513 6.24801086 29.04283339 12.49587715 29.05493164 18.74389648 C29.05997298 20.87118014 29.06680591 22.99846031 29.07543945 25.12573242 C29.08751379 28.17627826 29.09323014 31.22677845 29.09765625 34.27734375 C29.10281754 35.23462875 29.10797882 36.19191376 29.11329651 37.1782074 C29.11337204 38.05904495 29.11344757 38.93988251 29.11352539 39.84741211 C29.115746 40.62684677 29.11796661 41.40628143 29.12025452 42.20933533 C29 44 29 44 28 45 C25.85441173 45.08775605 23.70595579 45.10695219 21.55859375 45.09765625 C20.25341797 45.09443359 18.94824219 45.09121094 17.60351562 45.08789062 C16.2148431 45.07953401 14.82617123 45.07106905 13.4375 45.0625 C12.04492344 45.05748666 10.65234519 45.05292347 9.25976562 45.04882812 C5.83982549 45.03699442 2.4199075 45.01905831 -1 45 C-1 52.92 -1 60.84 -1 69 C-10.57 69 -20.14 69 -30 69 C-30 61.41 -30 53.82 -30 46 C-23.02464385 43.67488128 -15.39060888 43.9446515 -8.109375 43.97265625 C-7.42214355 43.97463013 -6.73491211 43.976604 -6.02685547 43.9786377 C-4.35122961 43.98373743 -2.67561247 43.99158185 -1 44 C-1.00785522 42.26713745 -1.00785522 42.26713745 -1.01586914 40.49926758 C-1.0340015 36.20353982 -1.04546212 31.90781542 -1.05493164 27.61206055 C-1.05995303 25.75463288 -1.06677141 23.89720915 -1.07543945 22.03979492 C-1.08760117 19.36636379 -1.09325033 16.69298504 -1.09765625 14.01953125 C-1.10281754 13.19226028 -1.10797882 12.36498932 -1.11329651 11.51264954 C-1.11340981 10.34200203 -1.11340981 10.34200203 -1.11352539 9.14770508 C-1.115746 8.46597733 -1.11796661 7.78424957 -1.12025452 7.0818634 C-1 5 -1 5 0 0 Z \",fill:\"#81807E\",transform:\"translate(336,847)\"})),_path156||(_path156=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C19.8 0 39.6 0 60 0 C60 20 60 20 59 22 C58.915085 23.8863912 58.892807 25.77578515 58.90234375 27.6640625 C58.90484131 28.6742041 58.90733887 29.6843457 58.90991211 30.72509766 C58.91901611 32.01206543 58.92812012 33.2990332 58.9375 34.625 C58.958125 38.70875 58.97875 42.7925 59 47 C49.43 47 39.86 47 30 47 C30 38.75 30 30.5 30 22 C20.1 22 10.2 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#6E6D6D\",transform:\"translate(485,0)\"})),_path157||(_path157=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.6 0 13.2 0 20 0 C20 8.25 20 16.5 20 25 C17.703463 26.1482685 16.41686833 26.11561175 13.8671875 26.09765625 C12.77833252 26.09390991 12.77833252 26.09390991 11.66748047 26.09008789 C10.74596191 26.08098389 9.82444336 26.07187988 8.875 26.0625 C4.481875 26.0315625 4.481875 26.0315625 0 26 C0 34.25 0 42.5 0 51 C-9.9 51 -19.8 51 -30 51 C-30 42.42 -30 33.84 -30 25 C-39.9 25 -49.8 25 -60 25 C-60 17.08 -60 9.16 -60 1 C-50.1 1 -40.2 1 -30 1 C-29.67 8.59 -29.34 16.18 -29 24 C-19.43 24.33 -9.86 24.66 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#5E5C5B\",transform:\"translate(1004,539)\"})),_path158||(_path158=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C2.093125 1.979375 3.18625 1.95875 4.3125 1.9375 C8 2 8 2 11 3 C11 9.93 11 16.86 11 24 C20.9 24 30.8 24 41 24 C41 24.66 41 25.32 41 26 C50.9 26 60.8 26 71 26 C71 34.25 71 42.5 71 51 C61.1 51 51.2 51 41 51 C41 49.68 41 48.36 41 47 C39.93894043 47.24339111 39.93894043 47.24339111 38.85644531 47.49169922 C35.93922524 48.01081479 33.25770907 48.12937993 30.296875 48.1328125 C29.2346875 48.13410156 28.1725 48.13539063 27.078125 48.13671875 C25.97984375 48.13285156 24.8815625 48.12898437 23.75 48.125 C22.63625 48.12886719 21.5225 48.13273438 20.375 48.13671875 C19.31796875 48.13542969 18.2609375 48.13414062 17.171875 48.1328125 C16.2034668 48.13168457 15.23505859 48.13055664 14.23730469 48.12939453 C12 48 12 48 11 47 C10.91314397 45.43827255 10.89297781 43.87270656 10.90234375 42.30859375 C10.90484131 41.45837646 10.90733887 40.60815918 10.90991211 39.73217773 C10.91901611 38.64493408 10.92812012 37.55769043 10.9375 36.4375 C10.958125 32.993125 10.97875 29.54875 11 26 C2.09 26 -6.82 26 -16 26 C-16 16 -16 16 -14.53125 13.39599609 C-13.52578125 12.46907959 -13.52578125 12.46907959 -12.5 11.5234375 C-11.778125 10.83378906 -11.05625 10.14414062 -10.3125 9.43359375 C-9.1678125 8.41458984 -9.1678125 8.41458984 -8 7.375 C-6.8553125 6.29798828 -6.8553125 6.29798828 -5.6875 5.19921875 C-3.81232257 3.44123991 -1.9180937 1.71085286 0 0 Z \",fill:\"#7F7E7C\",transform:\"translate(204,821)\"})),_path159||(_path159=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.8053125 -0.0309375 3.8053125 -0.0309375 7.6875 -0.0625 C8.47729248 -0.071604 9.26708496 -0.08070801 10.08081055 -0.09008789 C13.87431245 -0.10495684 17.30529516 0.18924093 21 1 C22.22215347 27.07152391 22.20562813 52.92829164 21 79 C30.9 79 40.8 79 51 79 C51 70.42 51 61.84 51 53 C60.9 52.34 70.8 51.68 81 51 C74.24641369 58.87918403 74.24641369 58.87918403 71.59667969 61.54858398 C71.0029657 62.14867783 70.40925171 62.74877167 69.79754639 63.36705017 C69.17857483 63.98713455 68.55960327 64.60721893 67.921875 65.24609375 C66.94290253 66.23005882 66.94290253 66.23005882 65.94415283 67.23390198 C64.57735601 68.60572364 63.20923619 69.97622833 61.83984375 71.34545898 C59.73669241 73.45082159 57.64169627 75.56408709 55.546875 77.67773438 C54.21403047 79.01350874 52.88071417 80.34881258 51.546875 81.68359375 C50.91980652 82.31784775 50.29273804 82.95210175 49.64666748 83.60557556 C45.22885317 88 45.22885317 88 43 88 C42.731875 88.598125 42.46375 89.19625 42.1875 89.8125 C40.96653676 92.06164281 39.97503773 93.38556428 38 95 C36.00708008 95.34057617 36.00708008 95.34057617 33.76953125 95.29296875 C32.96708984 95.28330078 32.16464844 95.27363281 31.33789062 95.26367188 C30.50451172 95.23853516 29.67113281 95.21339844 28.8125 95.1875 C27.5450293 95.16719727 27.5450293 95.16719727 26.25195312 95.14648438 C24.16769616 95.11115799 22.08376723 95.05735139 20 95 C20 89.72 20 84.44 20 79 C13.4 79 6.8 79 0 79 C0 70.09 0 61.18 0 52 C12 52 12 52 20 53 C20 44.42 20 35.84 20 27 C13.4 27 6.8 27 0 27 C0 18.09 0 9.18 0 0 Z \",fill:\"#5C5B5A\",transform:\"translate(252,641)\"})),_path160||(_path160=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C23.23812369 7.88885569 23.23812369 7.88885569 20.4140625 10.71875 C19.79273438 11.34136719 19.17140625 11.96398438 18.53125 12.60546875 C17.58765625 13.54326172 17.58765625 13.54326172 16.625 14.5 C16.00367188 15.12519531 15.38234375 15.75039062 14.7421875 16.39453125 C11.70995236 19.42050144 8.64151767 22.3406624 5.37890625 25.1171875 C-0.97091267 30.60266549 -6.77891853 36.67448003 -12.6875 42.625 C-13.90926946 43.85179732 -15.13127305 45.07836153 -16.35351562 46.3046875 C-18.59739624 48.55666986 -20.83991744 50.80998637 -23.08081055 53.06494141 C-25.71521872 55.71529734 -28.35631209 58.35889746 -31 61 C-31.680625 61.680625 -32.36125 62.36125 -33.0625 63.0625 C-39 69 -39 69 -41.234375 71.23046875 C-43.47896913 73.47823321 -45.71725135 75.73186117 -47.953125 77.98828125 C-49.3853664 79.42973744 -50.81765915 80.87114262 -52.25 82.3125 C-53.34828125 83.42334961 -53.34828125 83.42334961 -54.46875 84.55664062 C-55.16484375 85.25595703 -55.8609375 85.95527344 -56.578125 86.67578125 C-57.21137695 87.31427002 -57.84462891 87.95275879 -58.49707031 88.6105957 C-60 90 -60 90 -61 90 C-61.02464574 84.03686834 -61.042834 78.07376605 -61.05493164 72.1105957 C-61.05997278 70.08031702 -61.06680557 68.05004198 -61.07543945 66.01977539 C-61.08751467 63.10822653 -61.09323034 60.1967255 -61.09765625 57.28515625 C-61.10281754 56.3716188 -61.10797882 55.45808136 -61.11329651 54.51686096 C-61.11349168 52.34424573 -61.06211805 50.17172704 -61 48 C-60 47 -60 47 -57.31616211 46.88647461 C-56.14835205 46.89171143 -54.98054199 46.89694824 -53.77734375 46.90234375 C-52.51728516 46.90556641 -51.25722656 46.90878906 -49.95898438 46.91210938 C-48.61848891 46.92046597 -47.27799412 46.92893093 -45.9375 46.9375 C-44.59310058 46.9425134 -43.2486994 46.94707658 -41.90429688 46.95117188 C-38.60284567 46.96300503 -35.3014174 46.98094114 -32 47 C-31.67 39.41 -31.34 31.82 -31 24 C-21.1 24 -11.2 24 -1 24 C-1.03923819 18.72052647 -1.03923819 18.72052647 -1.09008789 13.44116211 C-1.09258545 12.76835205 -1.09508301 12.09554199 -1.09765625 11.40234375 C-1.10289307 10.72679443 -1.10812988 10.05124512 -1.11352539 9.35522461 C-0.96232791 6.218446 -0.44412252 3.10885765 0 0 Z \",fill:\"#868583\",transform:\"translate(944,49)\"})),_path161||(_path161=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.66 1.98 1.32 3 2 C3 2.66 3 3.32 3 4 C3.53109375 4.20238281 4.0621875 4.40476562 4.609375 4.61328125 C8.04132937 6.60403909 10.5114173 9.34309385 13.25 12.1875 C16.65664403 15.70496257 20.07936138 19.11419579 23.80078125 22.30078125 C29.7013865 27.39070819 35.05299216 33.0426622 40.49023438 38.6171875 C44.2772338 42.45374735 47.99986563 46.1146815 52.33203125 49.33203125 C58.73222865 54.13869287 64.16028254 59.98546349 69.75 65.6875 C71.41928807 67.38458537 73.09011216 69.08008761 74.76397705 70.7726593 C75.79642659 71.81718549 76.82619518 72.86437137 77.85272217 73.91471863 C80.74566763 76.84777002 83.75518698 79.4658074 87 82 C87.99275753 83.07332162 88.95215979 84.17850143 89.875 85.3125 C97.60443535 94.34999364 106.25713377 102.85648941 115.35546875 110.5078125 C117.74408961 112.67515969 119.75730699 115.10547184 121.7734375 117.6171875 C122.97175539 119.14103109 122.97175539 119.14103109 125 120 C125 120.66 125 121.32 125 122 C125.66 122 126.32 122 127 122 C127 122.66 127 123.32 127 124 C127.54140625 124.21398437 128.0828125 124.42796875 128.640625 124.6484375 C131.8392797 126.48077943 134.20964484 128.99796606 136.75 131.625 C137.25660156 132.140625 137.76320312 132.65625 138.28515625 133.1875 C139.52803902 134.45383339 140.76465276 135.7263144 142 137 C142.33 132.71 142.66 128.42 143 124 C152.24 124 161.48 124 171 124 C171 131.59 171 139.18 171 147 C165.72 147 160.44 147 155 147 C157.59855427 151.41293686 157.59855427 151.41293686 160.8203125 154.9453125 C161.35180908 155.46005127 161.88330566 155.97479004 162.4309082 156.50512695 C162.9899585 157.03968506 163.54900879 157.57424316 164.125 158.125 C169.89705053 163.75443073 175.05351943 169.62197983 180 176 C177 176 177 176 175.12719727 174.20581055 C174.42651123 173.37863525 173.7258252 172.55145996 173.00390625 171.69921875 C168.32509654 166.3256394 163.40959542 161.25662813 158.36108398 156.23071289 C156.93160283 154.80662508 155.50759489 153.37721956 154.08398438 151.94726562 C153.15779297 151.02236328 152.23160156 150.09746094 151.27734375 149.14453125 C150.04359009 147.91246948 150.04359009 147.91246948 148.78491211 146.65551758 C146.64140024 144.61159905 144.47713327 142.66891243 142.23461914 140.73901367 C137.59808544 136.71150565 133.28691451 132.39496431 128.96875 128.03125 C127.71572083 126.77254089 127.71572083 126.77254089 126.43737793 125.48840332 C122.89663871 121.9314548 119.36192676 118.3685388 115.82666016 114.80615234 C113.2302794 112.19159836 110.63083434 109.58011816 108.03125 106.96875 C107.24455933 106.17376099 106.45786865 105.37877197 105.64733887 104.55969238 C101.46948091 100.36354082 97.21761638 96.34492219 92.69494629 92.52111816 C90.15072615 90.23782489 88.14190788 87.6629125 86 85 C82.17393149 81.06387538 78.17718406 77.34609839 74.03662109 73.74267578 C70.97158593 71.01810001 68.38246627 68.28289088 65.9375 64.984375 C60.96616182 58.63064869 56.79958818 54.02199765 48.41748047 52.9977417 C40.29046389 52.30861297 32.13435197 52.52717352 24 53 C23.97097571 49.72918529 23.95319316 46.4584037 23.9375 43.1875 C23.92912109 42.25873047 23.92074219 41.32996094 23.91210938 40.37304688 C23.90727539 39.0340332 23.90727539 39.0340332 23.90234375 37.66796875 C23.89448853 36.43469849 23.89448853 36.43469849 23.88647461 35.17651367 C24 33 24 33 25 30 C15.1 30 5.2 30 -5 30 C-5.020625 26.390625 -5.04125 22.78125 -5.0625 19.0625 C-5.071604 17.92304932 -5.08070801 16.78359863 -5.09008789 15.60961914 C-5.09258545 14.71879639 -5.09508301 13.82797363 -5.09765625 12.91015625 C-5.10289307 11.99371338 -5.10812988 11.07727051 -5.11352539 10.13305664 C-5 8 -5 8 -4 7 C-1.66702567 6.95907063 0.66705225 6.95758277 3 7 C2.505 6.21625 2.01 5.4325 1.5 4.625 C0 2 0 2 0 0 Z \",fill:\"#8A8989\",transform:\"translate(44,41)\"})),_path162||(_path162=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C12.4059375 -0.0309375 12.4059375 -0.0309375 25.0625 -0.0625 C28.92980835 -0.07615601 28.92980835 -0.07615601 32.87524414 -0.09008789 C44.30429781 -0.11306649 55.60963692 0.02849153 67 1 C67 7.6 67 14.2 67 21 C47.53 21 28.06 21 8 21 C8.01740234 27.64769531 8.01740234 27.64769531 8.03515625 34.4296875 C8.04159767 37.98727389 8.04701678 41.5448586 8.05175018 45.10244751 C8.05700719 48.84467764 8.0640199 52.58688473 8.07543945 56.32910156 C8.08638997 59.94065704 8.09230233 63.55219032 8.09487724 67.16376114 C8.09670975 68.53429641 8.10028764 69.90483061 8.10573006 71.27535629 C8.13483568 78.91611318 7.97859063 86.41607865 7 94 C4.69 93.67 2.38 93.34 0 93 C0 62.31 0 31.62 0 0 Z \",fill:\"#615F5E\",transform:\"translate(0,188)\"})),_path163||(_path163=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.79584074 1.68150926 3.54116799 3.41763828 5.25 5.1875 C8.42201855 8.43535628 11.60309473 11.61742586 15.0625 14.5625 C19.98212418 18.76341366 24.46216536 23.39554136 29 28 C31.88112679 30.89567794 34.78242392 33.7692601 37.69921875 36.62890625 C39.02873598 37.94001276 40.35816131 39.25121247 41.6875 40.5625 C42.36361328 41.22185547 43.03972656 41.88121094 43.73632812 42.56054688 C44.38408203 43.20185547 45.03183594 43.84316406 45.69921875 44.50390625 C46.57839966 45.36737671 46.57839966 45.36737671 47.4753418 46.24829102 C50.86139845 50.1385963 51.22733695 52.96232625 50.9765625 58.078125 C50.925 59.23828125 50.8734375 60.3984375 50.8203125 61.59375 C50.75585938 62.8003125 50.69140625 64.006875 50.625 65.25 C50.53992188 67.08304688 50.53992188 67.08304688 50.453125 68.953125 C50.31173944 71.9693502 50.16033265 74.9847323 50 78 C45.34214993 80.32892504 40.02698195 80.78132113 35.05566406 79.29833984 C27.39752995 74.46152782 23.22884447 60.21955111 20 53 C6.14 52.505 6.14 52.505 -8 52 C-8 51.67 -8 51.34 -8 51 C-0.08 50.67 7.84 50.34 16 50 C16.33 42.41 16.66 34.82 17 27 C7.1 27 -2.8 27 -13 27 C-13.020625 24.03 -13.04125 21.06 -13.0625 18 C-13.071604 17.08089844 -13.08070801 16.16179687 -13.09008789 15.21484375 C-13.10725871 10.04808786 -12.75150585 5.11260675 -12 0 C-3.71685569 -2.48494329 -3.71685569 -2.48494329 0 0 Z \",fill:\"#676666\",transform:\"translate(316,308)\"})),_path164||(_path164=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30.33 7.26 30.66 14.52 31 22 C40.57 22.33 50.14 22.66 60 23 C60.30844092 28.78390459 60.61341309 34.56777188 60.90942383 40.35229492 C61.01120243 42.32050162 61.11503264 44.28860334 61.22094727 46.2565918 C61.37273618 49.0835712 61.5171694 51.91084469 61.66015625 54.73828125 C61.70906509 55.61962234 61.75797394 56.50096344 61.80836487 57.40901184 C61.8484819 58.22963608 61.88859894 59.05026031 61.92993164 59.89575195 C61.96768204 60.61745071 62.00543243 61.33914948 62.04432678 62.0827179 C62 64 62 64 61 67 C67.27 67 73.54 67 80 67 C80 75.25 80 83.5 80 92 C76.885625 92.020625 73.77125 92.04125 70.5625 92.0625 C69.57967041 92.071604 68.59684082 92.08070801 67.58422852 92.09008789 C66.81522217 92.09258545 66.04621582 92.09508301 65.25390625 92.09765625 C64.46314697 92.10289307 63.6723877 92.10812988 62.85766602 92.11352539 C61 92 61 92 60 91 C59.90704185 89.55710213 59.88253487 88.10970215 59.88647461 86.66381836 C59.88655014 85.7429393 59.88662567 84.82206024 59.88670349 83.87327576 C59.89186478 82.87224319 59.89702606 81.87121063 59.90234375 80.83984375 C59.9037587 79.82024063 59.90517365 78.80063751 59.90663147 77.75013733 C59.91224903 74.47922893 59.9248045 71.20838787 59.9375 67.9375 C59.94251274 65.72591244 59.94707604 63.51432382 59.95117188 61.30273438 C59.9613752 55.86844248 59.98094715 50.43429702 60 45 C50.1 45 40.2 45 30 45 C30 38.07 30 31.14 30 24 C20.1 24 10.2 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#646260\",transform:\"translate(944,165)\"})),_path165||(_path165=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29.495 5.445 29.495 5.445 30 11 C30.66 11.33 31.32 11.66 32 12 C32.02686553 13.97909398 32.04633375 15.95828971 32.0625 17.9375 C32.07410156 19.03964844 32.08570313 20.14179687 32.09765625 21.27734375 C32 24 32 24 31 25 C30.67 30.94 30.34 36.88 30 43 C9.87 43 -10.26 43 -31 43 C-31 37.06 -31 31.12 -31 25 C-21.1 25 -11.2 25 -1 25 C-1 20.38 -1 15.76 -1 11 C-0.67 7.37 -0.34 3.74 0 0 Z \",fill:\"#666565\",transform:\"translate(944,981)\"})),_path166||(_path166=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 81.51 1 163.02 1 247 C7.6 247 14.2 247 21 247 C22 248 22 248 22.11352539 250.22485352 C22.10828857 251.18319092 22.10305176 252.14152832 22.09765625 253.12890625 C22.09443359 254.16337891 22.09121094 255.19785156 22.08789062 256.26367188 C22.07951172 257.35228516 22.07113281 258.44089844 22.0625 259.5625 C22.05798828 260.65498047 22.05347656 261.74746094 22.04882812 262.87304688 C22.0369984 265.58205432 22.01906231 268.2910338 22 271 C15.07 271 8.14 271 1 271 C1 305.65 1 340.3 1 376 C7.6 376 14.2 376 21 376 C21 384.58 21 393.16 21 402 C14.4 401.67 7.8 401.34 1 401 C1 409.91 1 418.82 1 428 C7.6 428 14.2 428 21 428 C21 433.28 21 438.56 21 444 C26.61 444 32.22 444 38 444 C38 444.33 38 444.66 38 445 C25.46 445 12.92 445 0 445 C0 298.15 0 151.3 0 0 Z \",fill:\"#9A9E9D\",transform:\"translate(251,292)\"})),_path167||(_path167=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 17.49 0 34.98 0 53 C-6.27 53 -12.54 53 -19 53 C-19.495 52.505 -19.495 52.505 -20 52 C-22.13418255 51.92448045 -24.27083095 51.91691214 -26.40625 51.9375 C-28.35724609 51.94910156 -28.35724609 51.94910156 -30.34765625 51.9609375 C-31.7317761 51.97338639 -33.11589084 51.98641445 -34.5 52 C-37.19795851 52.02648148 -39.89567869 52.04645597 -42.59375 52.0625 C-43.79708984 52.07410156 -45.00042969 52.08570313 -46.24023438 52.09765625 C-49 52 -49 52 -50 51 C-50.08737645 49.14630389 -50.10698153 47.28932459 -50.09765625 45.43359375 C-50.09515869 44.42095459 -50.09266113 43.40831543 -50.09008789 42.36499023 C-50.08098389 41.06891846 -50.07187988 39.77284668 -50.0625 38.4375 C-50.041875 34.333125 -50.02125 30.22875 -50 26 C-40.1 26 -30.2 26 -20 26 C-20 17.75 -20 9.5 -20 1 C-15.606875 0.7525 -15.606875 0.7525 -11.125 0.5 C-10.20348145 0.44779297 -9.28196289 0.39558594 -8.33251953 0.34179688 C-7.24366455 0.28088867 -7.24366455 0.28088867 -6.1328125 0.21875 C-5.38918457 0.17685547 -4.64555664 0.13496094 -3.87939453 0.09179688 C-2.58744125 0.0286929 -1.29349349 0 0 0 Z \",fill:\"#615F5E\",transform:\"translate(1024,564)\"})),_path168||(_path168=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2.33 7.59 2.66 15.18 3 23 C12.24 23 21.48 23 31 23 C31 15.41 31 7.82 31 0 C35.45837306 -0.02685767 39.91658596 -0.04676971 44.375 -0.0625 C45.64601563 -0.07087891 46.91703125 -0.07925781 48.2265625 -0.08789062 C50.04414063 -0.09272461 50.04414063 -0.09272461 51.8984375 -0.09765625 C53.57945557 -0.10551147 53.57945557 -0.10551147 55.29443359 -0.11352539 C58 0 58 0 60 1 C60 8.59 60 16.18 60 24 C50.43 24 40.86 24 31 24 C31 32.25 31 40.5 31 49 C21.1 49 11.2 49 1 49 C1 40.75 1 32.5 1 24 C-6.59 24 -14.18 24 -22 24 C-18.19434854 19.5600733 -14.58133929 15.48702716 -10.4375 11.4375 C-7.45536843 8.50862975 -4.54478041 5.58712004 -1.9375 2.3125 C-1.298125 1.549375 -0.65875 0.78625 0 0 Z \",fill:\"#888684\",transform:\"translate(66,956)\"})),_path169||(_path169=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.63 0 7.26 0 11 0 C11.78084281 4.8205918 12.12222644 9.43096757 12.11352539 14.31225586 C12.11367142 15.00578156 12.11381744 15.69930725 12.1139679 16.41384888 C12.1132774 18.68088023 12.10552592 20.94782695 12.09765625 23.21484375 C12.095789 24.79667618 12.09436655 26.37850919 12.09336853 27.96034241 C12.08956755 32.10476301 12.07975814 36.24914805 12.06866455 40.39355469 C12.0583982 44.63020344 12.05385976 48.86685799 12.04882812 53.10351562 C12.03813351 61.40235999 12.02108643 69.70117556 12 78 C8.04 78 4.08 78 0 78 C0 69.75 0 61.5 0 53 C-10.23 53 -20.46 53 -31 53 C-31 44.09 -31 35.18 -31 26 C-21.1 26 -11.2 26 -1 26 C-0.67 17.42 -0.34 8.84 0 0 Z \",fill:\"#7F7F7D\",transform:\"translate(761,281)\"})),_path170||(_path170=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30.495 12.375 30.495 12.375 31 25 C40.57 25.33 50.14 25.66 60 26 C60 33.92 60 41.84 60 50 C61.98 50.495 61.98 50.495 64 51 C47.665 51.495 47.665 51.495 31 52 C30.505 52.99 30.505 52.99 30 54 C30 44.76 30 35.52 30 26 C20.1 26 10.2 26 0 26 C0 34.25 0 42.5 0 51 C-2.64 51 -5.28 51 -8 51 C-8 42.42 -8 33.84 -8 25 C-5.69 25 -3.38 25 -1 25 C-0.67 16.75 -0.34 8.5 0 0 Z \",fill:\"#5C5A59\",transform:\"translate(8,413)\"})),_path171||(_path171=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.33 33 1.66 66 2 100 C11.57 100 21.14 100 31 100 C31 108.25 31 116.5 31 125 C20.77 125 10.54 125 0 125 C0.495 125.99 0.495 125.99 1 127 C1.08471364 128.81341842 1.10721083 130.62994161 1.09765625 132.4453125 C1.09515869 133.41484863 1.09266113 134.38438477 1.09008789 135.38330078 C1.08098389 136.61806152 1.07187988 137.85282227 1.0625 139.125 C1.041875 143.04375 1.02125 146.9625 1 151 C-9.23 151 -19.46 151 -30 151 C-30 141.76 -30 132.52 -30 123 C-20.1 123 -10.2 123 0 123 C0 82.41 0 41.82 0 0 Z \",fill:\"#7A7A79\",transform:\"translate(334,516)\"})),_path172||(_path172=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.05433542 0.00128403 1.05433542 0.00128403 2.12997055 0.00259399 C10.94083877 0.01410996 19.75166608 0.03512539 28.5625 0.0625 C28.5625 6.3325 28.5625 12.6025 28.5625 19.0625 C-1.7975 19.0625 -32.1575 19.0625 -63.4375 19.0625 C-63.4375 13.1225 -63.4375 7.1825 -63.4375 1.0625 C-42.29249176 0.0649259 -21.16300248 -0.02595493 0 0 Z \",fill:\"#6E6D6C\",transform:\"translate(639.4375,1004.9375)\"})),_path173||(_path173=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0 2.64 0 4 0 C4.08636719 0.74765625 4.17273438 1.4953125 4.26171875 2.265625 C4.40222656 3.25046875 4.54273438 4.2353125 4.6875 5.25 C4.81511719 6.22453125 4.94273437 7.1990625 5.07421875 8.203125 C6.29481681 11.8906702 7.75442436 12.90224989 11 15 C14.37400097 15.63716409 14.37400097 15.63716409 18.05078125 15.609375 C18.70958786 15.62591125 19.36839447 15.64244751 20.04716492 15.65948486 C22.13570651 15.70777556 24.22352122 15.72929082 26.3125 15.75 C27.73506224 15.77817596 29.1575909 15.80810568 30.58007812 15.83984375 C34.05322825 15.91352563 37.52624072 15.96321715 41 16 C39.37915347 19.44401787 37.57463755 21.60671518 34.8125 24.25 C31.97714063 26.9711505 29.31329762 29.75940183 26.75 32.734375 C22.7507205 37.34788938 18.50164019 41.68211814 14.1875 46 C13.42501953 46.77472656 12.66253906 47.54945313 11.87695312 48.34765625 C11.14798828 49.07855469 10.41902344 49.80945313 9.66796875 50.5625 C9.01078857 51.22378906 8.3536084 51.88507812 7.67651367 52.56640625 C6 54 6 54 4 54 C4 54.66 4 55.32 4 56 C2.515 56.495 2.515 56.495 1 57 C0.505 56.505 0.505 56.505 0 56 C0 53.36 0 50.72 0 48 C-9.24 48 -18.48 48 -28 48 C-28 39.75 -28 31.5 -28 23 C-18.76 23 -9.52 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#6C6B6A\",transform:\"translate(216,748)\"})),_path174||(_path174=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C10.9 2 20.8 2 31 2 C31 10.58 31 19.16 31 28 C37.93 28 44.86 28 52 28 C52 28.33 52 28.66 52 29 C45.73 29 39.46 29 33 29 C33 36.92 33 44.84 33 53 C30.0780231 54.46098845 27.50106525 54.11134901 24.2421875 54.09765625 C23.24761032 54.09553383 23.24761032 54.09553383 22.23294067 54.09336853 C20.11358137 54.08776754 17.99432741 54.075215 15.875 54.0625 C14.43880361 54.05748512 13.00260556 54.05292219 11.56640625 54.04882812 C8.04419752 54.03864833 4.52221679 54.01907338 1 54 C1 45.75 1 37.5 1 29 C-8.9 29 -18.8 29 -29 29 C-29 28.67 -29 28.34 -29 28 C-19.1 28 -9.2 28 1 28 C0.505 15.625 0.505 15.625 0 3 C-2.31 2.67 -4.62 2.34 -7 2 C-7 1.67 -7 1.34 -7 1 C-3.535 0.505 -3.535 0.505 0 0 Z \",fill:\"#646260\",transform:\"translate(912,384)\"})),_path175||(_path175=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30.33 8.58 30.66 17.16 31 26 C40.24 26 49.48 26 59 26 C59.66 24.68 60.32 23.36 61 22 C61 23.32 61 24.64 61 26 C67.27 26 73.54 26 80 26 C80 26.66 80 27.32 80 28 C73.73 28 67.46 28 61 28 C61 35.26 61 42.52 61 50 C57.07694407 51.96152796 55.43910677 52.27439499 51.2109375 52.37890625 C50.10492187 52.41306641 48.99890625 52.44722656 47.859375 52.48242188 C46.70953125 52.50884766 45.5596875 52.53527344 44.375 52.5625 C42.09103674 52.62226964 39.80716959 52.68587451 37.5234375 52.75390625 C36.0062915 52.78979858 36.0062915 52.78979858 34.45849609 52.82641602 C31.99565081 52.8425462 31.99565081 52.8425462 30 54 C30 45.09 30 36.18 30 27 C27.67582031 27.01160156 25.35164062 27.02320313 22.95703125 27.03515625 C20.69653459 27.04296352 18.43603946 27.04903078 16.17553711 27.05493164 C14.60912398 27.05994856 13.0427155 27.06676362 11.47631836 27.07543945 C9.21987761 27.08762094 6.96349898 27.09325481 4.70703125 27.09765625 C3.66298882 27.10539818 3.66298882 27.10539818 2.59785461 27.11329651 C-1.06470152 27.11371546 -4.43868858 26.87148095 -8 26 C-8 25.67 -8 25.34 -8 25 C-5.69 25 -3.38 25 -1 25 C-1.00523682 24.38479492 -1.01047363 23.76958984 -1.01586914 23.13574219 C-1.03669371 20.34050524 -1.04967759 17.54528464 -1.0625 14.75 C-1.07087891 13.78191406 -1.07925781 12.81382812 -1.08789062 11.81640625 C-1.09111328 10.88183594 -1.09433594 9.94726562 -1.09765625 8.984375 C-1.10289307 8.12553711 -1.10812988 7.26669922 -1.11352539 6.38183594 C-1 4 -1 4 0 0 Z \",fill:\"#6B6967\",transform:\"translate(944,308)\"})),_path176||(_path176=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 1.32 0.66 2.64 1 4 C21.13 4 41.26 4 62 4 C62 12.58 62 21.16 62 30 C60.41825054 31.58174946 58.74838295 31.20118501 56.5546875 31.28125 C55.18570313 31.33732422 55.18570313 31.33732422 53.7890625 31.39453125 C52.82742188 31.42933594 51.86578125 31.46414063 50.875 31.5 C44.84827013 31.72351883 38.95410914 32.01039737 33 33 C32.67 34.65 32.34 36.3 32 38 C31.67 38 31.34 38 31 38 C30.505 34.535 30.505 34.535 30 31 C20.43 31 10.86 31 1 31 C0.625 18.125 0.625 18.125 0.52197266 14.06689453 C0.4863623 13.01614746 0.45075195 11.96540039 0.4140625 10.8828125 C0.3826416 9.80402832 0.3512207 8.72524414 0.31884766 7.61376953 C0.25323678 4.84238346 0.25323678 4.84238346 -2 3 C-1.34 3 -0.68 3 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#5B5B5A\",transform:\"translate(514,690)\"})),_path177||(_path177=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.58 30 17.16 30 26 C40.56 25.67 51.12 25.34 62 25 C61.67 25.66 61.34 26.32 61 27 C60.91350549 29.48099734 60.88434946 31.93344928 60.90234375 34.4140625 C60.9037587 35.14370209 60.90517365 35.87334167 60.90663147 36.62509155 C60.91223469 38.95843585 60.92478765 41.29168464 60.9375 43.625 C60.94251459 45.20572778 60.94707757 46.78645707 60.95117188 48.3671875 C60.96220516 52.24482854 60.97947189 56.12239807 61 60 C60.67 60 60.34 60 60 60 C60 57.36 60 54.72 60 52 C50.1 52 40.2 52 30 52 C28.875 43 28.875 43 28.90234375 39.5 C28.90484131 38.8296875 28.90733887 38.159375 28.90991211 37.46875 C28.91901611 36.6540625 28.92812012 35.839375 28.9375 35 C28.958125 32.36 28.97875 29.72 29 27 C19.43 27 9.86 27 0 27 C0 33.93 0 40.86 0 48 C-0.33 48 -0.66 48 -1 48 C-1 41.07 -1 34.14 -1 27 C-2.32 26.67 -3.64 26.34 -5 26 C-3.35 26 -1.7 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#565453\",transform:\"translate(485,308)\"})),_path178||(_path178=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29.33 8.25 29.66 16.5 30 25 C36.92496763 24.96066872 36.92496763 24.96066872 43.84985352 24.90991211 C44.72569092 24.90741455 45.60152832 24.90491699 46.50390625 24.90234375 C47.38892822 24.89710693 48.2739502 24.89187012 49.18579102 24.88647461 C52.47550791 25.01918202 55.74069769 25.53438538 59 26 C59 42.5 59 59 59 76 C49.43 76 39.86 76 30 76 C30 75.67 30 75.34 30 75 C35.78645644 73.74593862 41.48868116 73.88813087 47.375 73.9375 C48.90833984 73.94426758 48.90833984 73.94426758 50.47265625 73.95117188 C52.98179623 73.96289683 55.49090586 73.98083035 58 74 C58 67.07 58 60.14 58 53 C48.1 53 38.2 53 28 53 C28.33 43.76 28.66 34.52 29 25 C19.43 25 9.86 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#696765\",transform:\"translate(68,771)\"})),_path179||(_path179=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.11177927 -0.02291394 8.22339658 -0.04283951 12.33520508 -0.05493164 C13.73495228 -0.0599708 15.1346942 -0.06680216 16.53442383 -0.07543945 C18.54245777 -0.0875232 20.55052957 -0.09269807 22.55859375 -0.09765625 C24.37315063 -0.10551147 24.37315063 -0.10551147 26.22436523 -0.11352539 C29 0 29 0 30 1 C30.08737645 2.85369611 30.10698153 4.71067541 30.09765625 6.56640625 C30.09443359 7.69111328 30.09121094 8.81582031 30.08789062 9.97460938 C30.07532227 11.75061523 30.07532227 11.75061523 30.0625 13.5625 C30.05798828 14.75037109 30.05347656 15.93824219 30.04882812 17.16210938 C30.03699675 20.10812226 30.02051287 23.05403681 30 26 C30.66 26.33 31.32 26.66 32 27 C31.34 27 30.68 27 30 27 C30 28.65 30 30.3 30 32 C29.67 32 29.34 32 29 32 C29 30.02 29 28.04 29 26 C27.3603125 26.24556641 27.3603125 26.24556641 25.6875 26.49609375 C20.45537531 27.15010934 15.26476133 27.10932919 10 27.0625 C6.7 27.041875 3.4 27.02125 0 27 C-0.33 35.58 -0.66 44.16 -1 53 C-10.9 53 -20.8 53 -31 53 C-31 44.09 -31 35.18 -31 26 C-20.77 26 -10.54 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#646260\",transform:\"translate(975,668)\"})),_path180||(_path180=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.74216797 0.0611499 1.74216797 0.0611499 3.51953125 0.12353516 C5.40285156 0.18927734 5.40285156 0.18927734 7.32421875 0.25634766 C7.98131836 0.28212891 8.63841797 0.30791016 9.31542969 0.33447266 C11.32337543 0.41226232 13.33147961 0.47941683 15.33984375 0.54541016 C25.20444929 0.9100157 25.20444929 0.9100157 26.33203125 2.03759766 C26.4896753 3.81629492 26.58303802 5.60078242 26.6484375 7.38525391 C26.69033203 8.46484375 26.73222656 9.54443359 26.77539062 10.65673828 C26.81470703 11.79304687 26.85402344 12.92935547 26.89453125 14.10009766 C26.93771484 15.24027344 26.98089844 16.38044922 27.02539062 17.55517578 C27.13185964 20.38251961 27.23387332 23.20995504 27.33203125 26.03759766 C16.98421594 27.66368292 7.80688544 28.1287283 -2.66796875 27.03759766 C-2.66796875 35.94759766 -2.66796875 44.85759766 -2.66796875 54.03759766 C-12.89796875 53.70759766 -23.12796875 53.37759766 -33.66796875 53.03759766 C-33.66796875 44.12759766 -33.66796875 35.21759766 -33.66796875 26.03759766 C-24.09796875 25.70759766 -14.52796875 25.37759766 -4.66796875 25.03759766 C-4.37869069 17.18439021 -4.37869069 17.18439021 -4.09985352 9.33081055 C-4.04269165 7.87276001 -4.04269165 7.87276001 -3.984375 6.38525391 C-3.94771729 5.38502197 -3.91105957 4.38479004 -3.87329102 3.35424805 C-3.57823446 0.025126 -3.38128187 0.04764984 0 0 Z \",fill:\"#6F6D6B\",transform:\"translate(916.66796875,769.96240234375)\"})),_path181||(_path181=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 8.91 0 17.82 0 27 C-10.23 27 -20.46 27 -31 27 C-31 35.58 -31 44.16 -31 53 C-40.9 53.33 -50.8 53.66 -61 54 C-62.1269495 44.98440397 -62.1269495 44.98440397 -62.1328125 41.09765625 C-62.13410156 40.27072266 -62.13539063 39.44378906 -62.13671875 38.59179688 C-62.13285156 37.75712891 -62.12898438 36.92246094 -62.125 36.0625 C-62.12886719 35.20076172 -62.13273437 34.33902344 -62.13671875 33.45117188 C-62.12675118 27.12675118 -62.12675118 27.12675118 -61 26 C-58.78144736 25.91216458 -56.56011504 25.89305391 -54.33984375 25.90234375 C-53.34314415 25.90446617 -53.34314415 25.90446617 -52.3263092 25.90663147 C-50.19666101 25.91224482 -48.06711661 25.92479946 -45.9375 25.9375 C-44.49674631 25.94251329 -43.05599097 25.94707649 -41.61523438 25.95117188 C-38.07675042 25.96136924 -34.53849187 25.9809417 -31 26 C-31 17.75 -31 9.5 -31 1 C-26.74585464 0.85743139 -22.49170621 0.71496224 -18.23754883 0.57275391 C-16.78930464 0.52431112 -15.34106244 0.47580867 -13.89282227 0.42724609 C-11.8152721 0.35759166 -9.73771494 0.28814942 -7.66015625 0.21875 C-6.40855713 0.17685547 -5.15695801 0.13496094 -3.86743164 0.09179688 C-1 0 -1 0 0 0 Z \",fill:\"#605F5D\",transform:\"translate(546,770)\"})),_path182||(_path182=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.58 30 17.16 30 26 C39.9 26 49.8 26 60 26 C60 23.69 60 21.38 60 19 C60.33 19 60.66 19 61 19 C60.67 30.22 60.34 41.44 60 53 C55.7925 52.855625 51.585 52.71125 47.25 52.5625 C45.9290332 52.51939697 44.60806641 52.47629395 43.24707031 52.43188477 C42.20131836 52.39377686 41.15556641 52.35566895 40.078125 52.31640625 C39.00981445 52.27974854 37.94150391 52.24309082 36.84082031 52.20532227 C34 52 34 52 30 51 C30 43.08 30 35.16 30 27 C20.1 27 10.2 27 0 27 C-1.34885129 24.30229742 -1.01578483 22.34726625 -0.87890625 19.3359375 C-0.83580322 18.3257959 -0.7927002 17.3156543 -0.74829102 16.27490234 C-0.68697998 14.98793457 -0.62566895 13.7009668 -0.5625 12.375 C-0.376875 8.29125 -0.19125 4.2075 0 0 Z \",fill:\"#5B5A59\",transform:\"translate(577,308)\"})),_path183||(_path183=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 17.16 0 34.32 0 52 C-9.9 52 -19.8 52 -30 52 C-30 60.25 -30 68.5 -30 77 C-31.98 77 -33.96 77 -36 77 C-34.02 76.505 -34.02 76.505 -32 76 C-31.98969254 75.44386017 -31.97938507 74.88772034 -31.96876526 74.31472778 C-31.0095693 22.80240091 -31.0095693 22.80240091 -30 1 C-28.00070652 0.82506182 -26.00048399 0.66075318 -24 0.5 C-22.329375 0.36078125 -22.329375 0.36078125 -20.625 0.21875 C-13.75729069 -0.10607409 -6.87538667 0 0 0 Z \",fill:\"#646261\",transform:\"translate(188,694)\"})),_path184||(_path184=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 11.55 0 23.1 0 35 C-0.33 35 -0.66 35 -1 35 C-1 32.36 -1 29.72 -1 27 C-1.86802246 27 -2.73604492 27 -3.63037109 27 C-13.08691406 27 -22.54345703 27 -32 27 C-32.91789307 27.00523682 -33.83578613 27.01047363 -34.78149414 27.01586914 C-38.54182162 27.03656915 -42.30213811 27.04959047 -46.0625 27.0625 C-47.38056641 27.07087891 -48.69863281 27.07925781 -50.05664062 27.08789062 C-51.30767578 27.09111328 -52.55871094 27.09433594 -53.84765625 27.09765625 C-55.00273682 27.10289307 -56.15781738 27.10812988 -57.34790039 27.11352539 C-60 27 -60 27 -61 26 C-61.08737645 24.14630389 -61.10698153 22.28932459 -61.09765625 20.43359375 C-61.09443359 19.30888672 -61.09121094 18.18417969 -61.08789062 17.02539062 C-61.07951172 15.84138672 -61.07113281 14.65738281 -61.0625 13.4375 C-61.05798828 12.24962891 -61.05347656 11.06175781 -61.04882812 9.83789062 C-61.03699675 6.89187774 -61.02051287 3.94596319 -61 1 C-40.64286285 0.17384959 -20.37759401 -0.0934752 0 0 Z \",fill:\"#646260\",transform:\"translate(883,641)\"})),_path185||(_path185=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.49252836 2.49252836 2.24290464 3.96548981 2.27105713 7.36698914 C2.26700867 8.11406631 2.26296021 8.86114349 2.25878906 9.63085938 C2.2622937 10.41797806 2.26579834 11.20509674 2.26940918 12.0160675 C2.27823243 14.62538396 2.27237532 17.23443065 2.265625 19.84375 C2.26697148 21.65214083 2.26891187 23.46053131 2.27142334 25.2689209 C2.2743754 29.06196534 2.27007433 32.8549157 2.26074219 36.64794922 C2.2493476 41.51740762 2.25590663 46.38664558 2.26788712 51.25609589 C2.2751035 54.99120758 2.27281881 58.72626675 2.26763153 62.46138 C2.26629442 64.25718715 2.26794489 66.05299902 2.27259064 67.84880066 C2.27765226 70.35570974 2.26995093 72.86225848 2.25878906 75.36914062 C2.26283752 76.1162178 2.26688599 76.86329498 2.27105713 77.63301086 C2.22852869 82.77147131 2.22852869 82.77147131 0 85 C-0.495 84.505 -0.495 84.505 -1 84 C-2.73275362 84.09407244 -4.46204414 84.25287394 -6.1875 84.4375 C-13.13578129 85.08968525 -20.02690247 85.0928371 -27 85 C-27.2237569 82.00044803 -27.42935249 79.00141072 -27.625 76 C-27.68945312 75.16082031 -27.75390625 74.32164062 -27.8203125 73.45703125 C-28.35491274 64.8366024 -26.32946723 58.15998912 -22.8125 50.375 C-22.50497803 49.68188721 -22.19745605 48.98877441 -21.88061523 48.2746582 C-19.89520772 43.84730561 -17.77120163 39.5086525 -15.5625 35.1875 C-11.96541685 28.12295831 -8.91699314 20.86851736 -5.89453125 13.54296875 C-4.01393613 8.99052232 -2.02204404 4.49113636 0 0 Z \",fill:\"#5D5D5B\",transform:\"translate(481,455)\"})),_path186||(_path186=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0 20.46 0 31 0 C31 4.95 31 9.9 31 15 C40.9 15 50.8 15 61 15 C61 10.05 61 5.1 61 0 C65.11177927 -0.02291394 69.22339658 -0.04283951 73.33520508 -0.05493164 C74.73495228 -0.0599708 76.1346942 -0.06680216 77.53442383 -0.07543945 C79.54245777 -0.0875232 81.55052957 -0.09269807 83.55859375 -0.09765625 C85.37315063 -0.10551147 85.37315063 -0.10551147 87.22436523 -0.11352539 C90 0 90 0 91 1 C91 5.62 91 10.24 91 15 C111.13 15 131.26 15 152 15 C152 15.33 152 15.66 152 16 C61.91 16 -28.18 16 -121 16 C-121 11.05 -121 6.1 -121 1 C-111.43 1 -101.86 1 -92 1 C-92 5.62 -92 10.24 -92 15 C-61.31 15 -30.62 15 1 15 C0.505 7.575 0.505 7.575 0 0 Z \",fill:\"#848483\",transform:\"translate(576,721)\"})),_path187||(_path187=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.25 30 16.5 30 25 C39.9 25 49.8 25 60 25 C60.33 24.34 60.66 23.68 61 23 C62.06625369 26.19876106 61.98702252 27.96652515 61.6953125 31.2890625 C61.56189453 32.82433594 61.56189453 32.82433594 61.42578125 34.390625 C61.32652344 35.45796875 61.22726562 36.5253125 61.125 37.625 C61.03347656 38.70007813 60.94195313 39.77515625 60.84765625 40.8828125 C60.13179395 48.86820605 60.13179395 48.86820605 59 50 C56.85441173 50.08775605 54.70595579 50.10695219 52.55859375 50.09765625 C51.25341797 50.09443359 49.94824219 50.09121094 48.60351562 50.08789062 C47.2148431 50.07953401 45.82617123 50.07106905 44.4375 50.0625 C43.04492344 50.05748666 41.65234519 50.05292347 40.25976562 50.04882812 C36.8398013 50.03699434 33.41992156 50.0205088 30 50 C29.01956036 47.05868109 28.88378798 45.17498335 28.90234375 42.11328125 C28.90484131 41.26805908 28.90733887 40.42283691 28.90991211 39.55200195 C28.91901611 38.48296631 28.92812012 37.41393066 28.9375 36.3125 C28.958125 32.909375 28.97875 29.50625 29 26 C19.43 26 9.86 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#686664\",transform:\"translate(822,721)\"})),_path188||(_path188=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.58 30 17.16 30 26 C39.57 26 49.14 26 59 26 C59 34.58 59 43.16 59 52 C49.1 52 39.2 52 29 52 C29 43.42 29 34.84 29 26 C19.76 26 10.52 26 1 26 C0.15058981 22.60235924 -0.11761783 20.2302673 -0.09765625 16.796875 C-0.09515869 15.91354492 -0.09266113 15.03021484 -0.09008789 14.12011719 C-0.08098389 13.00797852 -0.07187988 11.89583984 -0.0625 10.75 C-0.041875 7.2025 -0.02125 3.655 0 0 Z \",fill:\"#5F5D5B\",transform:\"translate(38,334)\"})),_path189||(_path189=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.09341499 -0.02469575 8.18680121 -0.04285793 12.28027344 -0.05493164 C13.67318477 -0.0599643 15.0660908 -0.06679098 16.45898438 -0.07543945 C18.45961246 -0.08755152 20.46027888 -0.09270412 22.4609375 -0.09765625 C23.66540527 -0.10289307 24.86987305 -0.10812988 26.11083984 -0.11352539 C29 0 29 0 31 1 C31.02898097 5.10415189 31.0467922 9.20827753 31.0625 13.3125 C31.07087891 14.47974609 31.07925781 15.64699219 31.08789062 16.84960938 C31.09272461 18.52700195 31.09272461 18.52700195 31.09765625 20.23828125 C31.10551147 21.7857605 31.10551147 21.7857605 31.11352539 23.36450195 C31 26 31 26 30 29 C29.85164052 30.77166975 29.75229982 32.54767612 29.68359375 34.32421875 C29.64169922 35.35224609 29.59980469 36.38027344 29.55664062 37.43945312 C29.51732422 38.51130859 29.47800781 39.58316406 29.4375 40.6875 C29.39431641 41.77095703 29.35113281 42.85441406 29.30664062 43.97070312 C29.20053162 46.64700791 29.09847639 49.32340526 29 52 C25.03069011 52.02465881 21.06140966 52.04284023 17.09204102 52.05493164 C15.74079614 52.05997057 14.38955674 52.06680177 13.03833008 52.07543945 C11.09979566 52.08752419 9.161222 52.09269828 7.22265625 52.09765625 C5.47094116 52.10551147 5.47094116 52.10551147 3.68383789 52.11352539 C1 52 1 52 0 51 C-0.09333705 49.40389018 -0.11745372 47.80366572 -0.11352539 46.20483398 C-0.11344986 45.18385117 -0.11337433 44.16286835 -0.11329651 43.11094666 C-0.10813522 42.0005452 -0.10297394 40.89014374 -0.09765625 39.74609375 C-0.0962413 38.61551041 -0.09482635 37.48492706 -0.09336853 36.32008362 C-0.08775019 32.69252935 -0.07519458 29.06503576 -0.0625 25.4375 C-0.05748736 22.98502693 -0.05292405 20.5325529 -0.04882812 18.08007812 C-0.0377748 12.05336455 -0.02101884 6.02668661 0 0 Z \",fill:\"#7C7B79\",transform:\"translate(127,642)\"})),_path190||(_path190=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.25 30 16.5 30 25 C20.43 25 10.86 25 1 25 C1 33.58 1 42.16 1 51 C-9.23 51 -19.46 51 -30 51 C-30 42.75 -30 34.5 -30 26 C-27.18175808 24.59087904 -24.82748718 24.88816447 -21.6796875 24.90234375 C-20.42285156 24.90556641 -19.16601562 24.90878906 -17.87109375 24.91210938 C-16.55238281 24.92048828 -15.23367188 24.92886719 -13.875 24.9375 C-12.53515789 24.94251511 -11.195314 24.94707799 -9.85546875 24.95117188 C-6.57029343 24.96298905 -3.28514119 24.98092499 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8C8B89\",transform:\"translate(974,643)\"})),_path191||(_path191=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.58 29 17.16 29 26 C35.13163962 25.96085283 35.13163962 25.96085283 41.26318359 25.90991211 C42.44388428 25.90616577 42.44388428 25.90616577 43.6484375 25.90234375 C44.43395996 25.89710693 45.21948242 25.89187012 46.02880859 25.88647461 C50.36527751 26.05216549 54.68190359 26.56819036 59 27 C59 35.25 59 43.5 59 52 C49.1 52 39.2 52 29 52 C29 43.75 29 35.5 29 27 C19.1 27 9.2 27 -1 27 C-0.67 18.09 -0.34 9.18 0 0 Z \",fill:\"#5A5856\",transform:\"translate(395,308)\"})),_path192||(_path192=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.56 0 21.12 0 32 0 C31.525625 3.609375 31.05125 7.21875 30.5625 10.9375 C30.41498291 12.07695068 30.26746582 13.21640137 30.11547852 14.39038086 C29.99615967 15.28120361 29.87684082 16.17202637 29.75390625 17.08984375 C29.57323608 18.46450806 29.57323608 18.46450806 29.38891602 19.86694336 C29 22 29 22 28 23 C25.9291528 23.1584265 23.85321971 23.25124422 21.77734375 23.31640625 C20.51728516 23.35830078 19.25722656 23.40019531 17.95898438 23.44335938 C16.61849264 23.48317596 15.2779978 23.52288814 13.9375 23.5625 C12.59308477 23.60568042 11.2486834 23.64929456 9.90429688 23.69335938 C6.60299987 23.79985283 3.30151421 23.9004675 0 24 C0 30.93 0 37.86 0 45 C3.95120235 44.88018935 7.9021587 44.75757844 11.85302734 44.62768555 C13.85894807 44.56301749 15.86502228 44.50316894 17.87109375 44.44335938 C19.12792969 44.40146484 20.38476562 44.35957031 21.6796875 44.31640625 C23.42354736 44.26141968 23.42354736 44.26141968 25.20263672 44.20532227 C27.9535501 44.18178341 27.9535501 44.18178341 30 43 C30.33 43.99 30.66 44.98 31 46 C30.67 46.33 30.34 46.66 30 47 C29.84313751 48.55948542 29.74923361 50.12542668 29.68359375 51.69140625 C29.64548584 52.54162354 29.60737793 53.39184082 29.56811523 54.26782227 C29.52501221 55.35506592 29.48190918 56.44230957 29.4375 57.5625 C29.293125 61.006875 29.14875 64.45125 29 68 C19.76 68 10.52 68 1 68 C0.34265125 62.74120999 -0.11671041 58.20419947 -0.0625 53 C-0.05347656 51.865625 -0.04445313 50.73125 -0.03515625 49.5625 C-0.02355469 48.716875 -0.01195312 47.87125 0 47 C-2.64 47 -5.28 47 -8 47 C-8 39.08 -8 31.16 -8 23 C-5.36 23 -2.72 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#81807F\",transform:\"translate(8,824)\"})),_path193||(_path193=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C20.13 0 40.26 0 61 0 C61 7.59 61 15.18 61 23 C59 25 59 25 56.20263672 25.22705078 C55.04006348 25.21657715 53.87749023 25.20610352 52.6796875 25.1953125 C50.79443359 25.18564453 50.79443359 25.18564453 48.87109375 25.17578125 C47.55238281 25.15902344 46.23367188 25.14226562 44.875 25.125 C43.53516279 25.11496983 42.19531848 25.10584404 40.85546875 25.09765625 C37.57023624 25.07402148 34.28509602 25.0381495 31 25 C31 32.92 31 40.84 31 49 C30.67 49 30.34 49 30 49 C30 41.08 30 33.16 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#5D5B59\",transform:\"translate(305,165)\"})),_path194||(_path194=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 17.16 0 34.32 0 52 C-9.9 52 -19.8 52 -30 52 C-30 35 -30 18 -30 1 C-19.92422379 -0.10635974 -10.22918485 0 0 0 Z \",fill:\"#615F5E\",transform:\"translate(974,616)\"})),_path195||(_path195=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.6 0 13.2 0 20 0 C20.95775186 8.73948576 21.08056639 17.21826355 21 26 C26.94 26 32.88 26 39 26 C39 33.92 39 41.84 39 50 C33.06 50.33 27.12 50.66 21 51 C21 59.58 21 68.16 21 77 C14.07 77 7.14 77 0 77 C0 68.09 0 59.18 0 50 C6.93 50 13.86 50 21 50 C20.505 38.615 20.505 38.615 20 27 C13.4 26.67 6.8 26.34 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#555352\",transform:\"translate(252,513)\"})),_path196||(_path196=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 7.26 1 14.52 1 22 C11.23 22 21.46 22 32 22 C32 29.92 32 37.84 32 46 C11.54 46 -8.92 46 -30 46 C-30 33 -30 33 -29 27 C-29.33 25.02 -29.66 23.04 -30 21 C-15.15 20.505 -15.15 20.505 0 20 C0 13.4 0 6.8 0 0 Z \",fill:\"#6E6C6A\",transform:\"translate(575,168)\"})),_path197||(_path197=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.30195312 0.00322266 2.60390625 0.00644531 3.9453125 0.00976562 C5.32552149 0.01812159 6.70572982 0.02658654 8.0859375 0.03515625 C9.47395676 0.04017124 10.86197772 0.04473415 12.25 0.04882812 C15.65366423 0.0606464 19.0573062 0.07858235 22.4609375 0.09765625 C22.4609375 8.67765625 22.4609375 17.25765625 22.4609375 26.09765625 C32.3609375 26.09765625 42.2609375 26.09765625 52.4609375 26.09765625 C52.4609375 34.01765625 52.4609375 41.93765625 52.4609375 50.09765625 C42.5609375 50.09765625 32.6609375 50.09765625 22.4609375 50.09765625 C21.9659375 38.21765625 21.9659375 38.21765625 21.4609375 26.09765625 C11.5609375 26.09765625 1.6609375 26.09765625 -8.5390625 26.09765625 C-8.5390625 17.84765625 -8.5390625 9.59765625 -8.5390625 1.09765625 C-5.66887809 -0.33743596 -3.20362527 -0.01392881 0 0 Z \",fill:\"#5F5E5C\",transform:\"translate(707.5390625,21.90234375)\"})),_path198||(_path198=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.9595459 0.00249756 1.9190918 0.00499512 2.90771484 0.00756836 C4.10605957 0.01667236 5.3044043 0.02577637 6.5390625 0.03515625 C10.3753125 0.05578125 14.2115625 0.07640625 18.1640625 0.09765625 C18.4940625 9.00765625 18.8240625 17.91765625 19.1640625 27.09765625 C21.24589844 27.08605469 23.32773437 27.07445312 25.47265625 27.0625 C27.48152548 27.0555489 29.49039501 27.04863236 31.49926758 27.04272461 C32.89901478 27.03768545 34.2987567 27.03085409 35.69848633 27.0222168 C37.70652027 27.01013305 39.71459207 27.00495818 41.72265625 27 C43.53721313 26.99214478 43.53721313 26.99214478 45.38842773 26.98413086 C48.1640625 27.09765625 48.1640625 27.09765625 49.1640625 28.09765625 C49.25106592 29.73238507 49.27107313 31.3707968 49.26171875 33.0078125 C49.25922119 33.89863525 49.25672363 34.78945801 49.25415039 35.70727539 C49.24504639 36.84672607 49.23594238 37.98617676 49.2265625 39.16015625 C49.2059375 42.76953125 49.1853125 46.37890625 49.1640625 50.09765625 C38.9340625 50.09765625 28.7040625 50.09765625 18.1640625 50.09765625 C17.8340625 42.83765625 17.5040625 35.57765625 17.1640625 28.09765625 C7.5940625 27.76765625 -1.9759375 27.43765625 -11.8359375 27.09765625 C-11.8359375 18.51765625 -11.8359375 9.93765625 -11.8359375 1.09765625 C-7.5902748 0.3900458 -4.20547571 -0.02261008 0 0 Z \",fill:\"#8D8C8A\",transform:\"translate(741.8359375,795.90234375)\"})),_path199||(_path199=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C13.17350765 -0.08660451 26.33081632 0.18759618 39.5 0.5 C41.59504822 0.54834477 43.69010029 0.59652295 45.78515625 0.64453125 C50.85681718 0.76110467 55.928421 0.87991727 61 1 C62.25248502 3.50497004 62.11374406 5.20853274 62.09765625 8.0078125 C62.09515869 8.8961377 62.09266113 9.78446289 62.09008789 10.69970703 C62.08098389 11.83005371 62.07187988 12.96040039 62.0625 14.125 C62.041875 17.71375 62.02125 21.3025 62 25 C51.77 25 41.54 25 31 25 C31 32.59 31 40.18 31 48 C30.67 48 30.34 48 30 48 C30 40.41 30 32.82 30 25 C27.91816406 25.01160156 25.83632813 25.02320312 23.69140625 25.03515625 C21.68253702 25.04210735 19.67366749 25.04902389 17.66479492 25.05493164 C16.26504772 25.0599708 14.8653058 25.06680216 13.46557617 25.07543945 C11.45754223 25.0875232 9.44947043 25.09269807 7.44140625 25.09765625 C6.23170166 25.10289307 5.02199707 25.10812988 3.77563477 25.11352539 C1 25 1 25 0 24 C-0.08726223 22.21928754 -0.10699041 20.4351686 -0.09765625 18.65234375 C-0.09443359 17.57275391 -0.09121094 16.49316406 -0.08789062 15.38085938 C-0.07951172 14.24455078 -0.07113281 13.10824219 -0.0625 11.9375 C-0.05798828 10.79732422 -0.05347656 9.65714844 -0.04882812 8.48242188 C-0.03699747 5.65489649 -0.0205141 2.8274736 0 0 Z \",fill:\"#646260\",transform:\"translate(668,47)\"})),_path200||(_path200=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30.72587534 3.62937669 31.12079859 6.27621783 31.09765625 9.86328125 C31.09515869 10.66290283 31.09266113 11.46252441 31.09008789 12.28637695 C31.08098389 13.28499756 31.07187988 14.28361816 31.0625 15.3125 C31.041875 18.509375 31.02125 21.70625 31 25 C40.9 25 50.8 25 61 25 C61.020625 28.58875 61.04125 32.1775 61.0625 35.875 C61.071604 37.00534668 61.08070801 38.13569336 61.09008789 39.30029297 C61.09258545 40.18861816 61.09508301 41.07694336 61.09765625 41.9921875 C61.10289307 42.90339355 61.10812988 43.81459961 61.11352539 44.75341797 C61 47 61 47 60 49 C50.53294574 51.13512288 39.60291901 50.06810581 30 50 C30 41.75 30 33.5 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#7F7F7E\",transform:\"translate(515,257)\"})),_path201||(_path201=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.19367187 -0.01224609 2.38734375 -0.02449219 3.6171875 -0.03710938 C5.34582031 -0.04000977 5.34582031 -0.04000977 7.109375 -0.04296875 C8.16608398 -0.04707764 9.22279297 -0.05118652 10.31152344 -0.05541992 C13.33074006 0.19417467 15.51761606 0.91493032 18.25 2.1875 C18.25 5.1575 18.25 8.1275 18.25 11.1875 C17.26 10.8575 16.27 10.5275 15.25 10.1875 C15.58 14.4775 15.91 18.7675 16.25 23.1875 C15.59 23.1875 14.93 23.1875 14.25 23.1875 C14.25 23.8475 14.25 24.5075 14.25 25.1875 C15.24 25.5175 16.23 25.8475 17.25 26.1875 C17.25 34.4375 17.25 42.6875 17.25 51.1875 C7.35 51.1875 -2.55 51.1875 -12.75 51.1875 C-13.32358406 37.99506658 -13.85081407 24.830516 -13.875 11.625 C-13.87951172 10.59117187 -13.88402344 9.55734375 -13.88867188 8.4921875 C-13.88673828 7.54472656 -13.88480469 6.59726562 -13.8828125 5.62109375 C-13.88168457 4.78634521 -13.88055664 3.95159668 -13.87939453 3.09155273 C-13.51815589 -2.2241079 -3.94557324 0.00210318 0 0 Z \",fill:\"#6F6E6D\",transform:\"translate(558.75,333.8125)\"})),_path202||(_path202=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30.33 8.25 30.66 16.5 31 25 C40.24 25 49.48 25 59 25 C59 33.58 59 42.16 59 51 C55.0306345 51.02291487 51.0614368 51.04284015 47.09204102 51.05493164 C45.74079614 51.05997057 44.38955674 51.06680177 43.03833008 51.07543945 C41.09979566 51.08752419 39.161222 51.09269828 37.22265625 51.09765625 C35.47094116 51.10551147 35.47094116 51.10551147 33.68383789 51.11352539 C31 51 31 51 30 50 C29.91262355 48.14630389 29.89301847 46.28932459 29.90234375 44.43359375 C29.90484131 43.42095459 29.90733887 42.40831543 29.90991211 41.36499023 C29.91901611 40.06891846 29.92812012 38.77284668 29.9375 37.4375 C29.958125 33.333125 29.97875 29.22875 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8A8988\",transform:\"translate(8,335)\"})),_path203||(_path203=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.93714844 -0.00257813 1.87429687 -0.00515625 2.83984375 -0.0078125 C6.9280532 0.16067128 10.99584603 0.67314956 15.0625 1.125 C15.3925 9.375 15.7225 17.625 16.0625 26.125 C25.6325 26.455 35.2025 26.785 45.0625 27.125 C45.0625 35.045 45.0625 42.965 45.0625 51.125 C35.00846347 51.89102183 25.14518146 52.22102554 15.0625 52.125 C15.0625 43.875 15.0625 35.625 15.0625 27.125 C5.4925 27.125 -4.0775 27.125 -13.9375 27.125 C-13.9375 18.545 -13.9375 9.965 -13.9375 1.125 C-9.05805424 0.51506928 -4.81463191 -0.01320887 0 0 Z \",fill:\"#5E5C5A\",transform:\"translate(81.9375,411.875)\"})),_path204||(_path204=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.92 30 15.84 30 24 C39.9 24 49.8 24 60 24 C60 32.58 60 41.16 60 50 C50.1 50 40.2 50 30 50 C29.505 37.625 29.505 37.625 29 25 C26.99035156 24.93941406 24.98070312 24.87882813 22.91015625 24.81640625 C20.97077331 24.75384551 19.03139127 24.69125143 17.09204102 24.62768555 C15.74085853 24.58428777 14.38961947 24.5426163 13.03833008 24.50268555 C11.09963299 24.44510048 9.16113724 24.38085702 7.22265625 24.31640625 C6.05484619 24.27974854 4.88703613 24.24309082 3.68383789 24.20532227 C1 24 1 24 0 23 C-0.08713831 21.29227642 -0.10700007 19.58101351 -0.09765625 17.87109375 C-0.09515869 16.93966553 -0.09266113 16.0082373 -0.09008789 15.04858398 C-0.08098389 13.85692627 -0.07187988 12.66526855 -0.0625 11.4375 C-0.041875 7.663125 -0.02125 3.88875 0 0 Z \",fill:\"#747371\",transform:\"translate(607,539)\"})),_path205||(_path205=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29.33 8.58 29.66 17.16 30 26 C40.23 26 50.46 26 61 26 C61 36 61 36 60 49 C49.77 49 39.54 49 29 49 C29 41.74 29 34.48 29 27 C19.43 27 9.86 27 0 27 C0 18.09 0 9.18 0 0 Z \",fill:\"#666563\",transform:\"translate(275,797)\"})),_path206||(_path206=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.92 30 15.84 30 24 C37.20902386 23.96069798 37.20902386 23.96069798 44.41796875 23.90991211 C45.33191406 23.90741455 46.24585938 23.90491699 47.1875 23.90234375 C48.57001953 23.89448853 48.57001953 23.89448853 49.98046875 23.88647461 C53.66974531 24.02518043 57.33662607 24.54207826 61 25 C61 32.92 61 40.84 61 49 C50.77 49 40.54 49 30 49 C29.505 37.12 29.505 37.12 29 25 C19.43 24.67 9.86 24.34 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#5E5D5B\",transform:\"translate(607,165)\"})),_path207||(_path207=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.16781006 0.00523682 2.33562012 0.01047363 3.53881836 0.01586914 C4.79887695 0.0190918 6.05893555 0.02231445 7.35717773 0.02563477 C8.6976732 0.03399136 10.03816799 0.04245632 11.37866211 0.05102539 C12.72306153 0.05603879 14.06746271 0.06060197 15.41186523 0.06469727 C18.71331644 0.07653042 22.01474471 0.09446653 25.31616211 0.11352539 C25.64616211 4.40352539 25.97616211 8.69352539 26.31616211 13.11352539 C26.64616211 9.48352539 26.97616211 5.85352539 27.31616211 2.11352539 C37.21616211 2.11352539 47.11616211 2.11352539 57.31616211 2.11352539 C57.31616211 10.03352539 57.31616211 17.95352539 57.31616211 26.11352539 C37.18616211 26.11352539 17.05616211 26.11352539 -3.68383789 26.11352539 C-3.68383789 0.15582504 -3.68383789 0.15582504 0 0 Z \",fill:\"#838180\",transform:\"translate(610.683837890625,978.886474609375)\"})),_path208||(_path208=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.25 30 16.5 30 25 C39.9 25 49.8 25 60 25 C59.67 32.92 59.34 40.84 59 49 C49.27451722 49.7339987 39.75797358 50.10059767 30 50 C30 42.08 30 34.16 30 26 C28.02 26.020625 26.04 26.04125 24 26.0625 C15.9614639 26.07071936 8.01916636 25.56274852 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#615F5E\",transform:\"translate(8,721)\"})),_path209||(_path209=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C11.625 0 11.625 0 15 3 C15.88948731 4.19580779 16.7597188 5.40602856 17.6171875 6.625 C21.07328241 11.28925476 25.09465851 15.10047181 29.375 19 C43.42969348 31.94245155 43.42969348 31.94245155 49.28125 38.78125 C54.04783395 44.31524316 59.3044986 49.37414784 64.5 54.5 C70.34915076 60.2707389 76.12929692 66.02256255 81.47119141 72.27539062 C83.79328298 74.89488198 86.32079779 77.17404248 88.9375 79.5 C90.37416016 80.78390625 90.37416016 80.78390625 91.83984375 82.09375 C92.55269531 82.7228125 93.26554688 83.351875 94 84 C93.01 84.66 92.02 85.32 91 86 C89 83 89 83 88 81 C87.34217529 81.00523682 86.68435059 81.01047363 86.0065918 81.01586914 C71.96428082 81.1123421 58.01306966 80.93531812 44 80 C44 79.67 44 79.34 44 79 C50.27 79 56.54 79 63 79 C62.85962362 75.54136482 62.7129541 72.08319863 62.5625 68.625 C62.52318359 67.64015625 62.48386719 66.6553125 62.44335938 65.640625 C62.40146484 64.69960938 62.35957031 63.75859375 62.31640625 62.7890625 C62.27974854 61.91975098 62.24309082 61.05043945 62.20532227 60.15478516 C62.12598456 57.9516738 62.12598456 57.9516738 61 56 C57.84596472 54.87439299 54.75407962 54.8491452 51.4296875 54.7890625 C50.36878906 54.76070312 49.30789063 54.73234375 48.21484375 54.703125 C45.98064138 54.65086296 43.74623691 54.60664613 41.51171875 54.5703125 C39.92423828 54.52390625 39.92423828 54.52390625 38.3046875 54.4765625 C36.8503833 54.4468335 36.8503833 54.4468335 35.36669922 54.41650391 C34.58568848 54.27905762 33.80467773 54.14161133 33 54 C30.73401552 50.60102327 30.76257346 49.43680827 30.8046875 45.45703125 C30.80968262 44.48999268 30.81467773 43.5229541 30.81982422 42.52661133 C30.84713623 40.68812622 30.84713623 40.68812622 30.875 38.8125 C30.936875 32.9653125 30.936875 32.9653125 31 27 C16.15 26.505 16.15 26.505 1 26 C0.67 17.42 0.34 8.84 0 0 Z \",fill:\"#6A6868\",transform:\"translate(636,641)\"})),_path210||(_path210=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.04654651 -0.02493184 12.09306233 -0.04296863 18.13964844 -0.05493164 C20.19173708 -0.05992495 22.24382223 -0.06672191 24.29589844 -0.07543945 C27.26498279 -0.08772632 30.23401964 -0.09327846 33.203125 -0.09765625 C34.10363586 -0.10281754 35.00414673 -0.10797882 35.9319458 -0.11329651 C42.72474345 -0.11387953 49.16670764 0.43055897 56 1 C56 9.25 56 17.5 56 26 C64.91 26 73.82 26 83 26 C83.185625 29.939375 83.37125 33.87875 83.5625 37.9375 C83.62381104 39.18136475 83.68512207 40.42522949 83.74829102 41.70678711 C83.81294556 43.16483765 83.81294556 43.16483765 83.87890625 44.65234375 C83.94960327 46.15269165 83.94960327 46.15269165 84.02172852 47.68334961 C84 50 84 50 83 51 C81.00217874 51.15825258 78.99911166 51.25119171 76.99609375 51.31640625 C75.78115234 51.35830078 74.56621094 51.40019531 73.31445312 51.44335938 C72.03505859 51.48267578 70.75566406 51.52199219 69.4375 51.5625 C68.15423828 51.60568359 66.87097656 51.64886719 65.54882812 51.69335938 C62.36602555 51.79984719 59.18302757 51.90046421 56 52 C55.505 39.625 55.505 39.625 55 27 C45.43 26.67 35.86 26.34 26 26 C26 17.75 26 9.5 26 1 C17.42 1 8.84 1 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#5B5958\",transform:\"translate(132,463)\"})),_path211||(_path211=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C38.9 25 48.8 25 59 25 C59 32.92 59 40.84 59 49 C48.77 49 38.54 49 28 49 C28 41.08 28 33.16 28 25 C18.43 25 8.86 25 -1 25 C-0.67 16.75 -0.34 8.5 0 0 Z \",fill:\"#595756\",transform:\"translate(276,165)\"})),_path212||(_path212=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C20.46 0 40.92 0 62 0 C62 21 62 21 61 24 C51.1 24 41.2 24 31 24 C30.67 22.02 30.34 20.04 30 18 C29.34 19.98 28.68 21.96 28 24 C18.76 24 9.52 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#8B8A88\",transform:\"translate(913,465)\"})),_path213||(_path213=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 7.59 1 15.18 1 23 C10.9 23 20.8 23 31 23 C31 15.41 31 7.82 31 0 C31.33 0 31.66 0 32 0 C32 7.92 32 15.84 32 24 C41.24 24 50.48 24 60 24 C60 31.59 60 39.18 60 47 C40.3101353 47.94890914 20.70641806 48.11478781 1 48 C0.1934325 31.98877702 -0.13960478 16.03092418 0 0 Z \",fill:\"#686664\",transform:\"translate(245,24)\"})),_path214||(_path214=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0 20.46 0 31 0 C31.07868357 16.05144859 31.03336827 31.98279182 30 48 C26.33335046 48.02932237 22.6667316 48.04690637 19 48.0625 C17.97003906 48.07087891 16.94007813 48.07925781 15.87890625 48.08789062 C14.86699219 48.09111328 13.85507812 48.09433594 12.8125 48.09765625 C11.89082031 48.10289307 10.96914063 48.10812988 10.01953125 48.11352539 C6.33025469 47.97481957 2.66337393 47.45792174 -1 47 C-1 38.75 -1 30.5 -1 22 C-2.32 21.67 -3.64 21.34 -5 21 C-3.68 20.67 -2.36 20.34 -1 20 C-0.67 13.4 -0.34 6.8 0 0 Z \",fill:\"#656463\",transform:\"translate(545,0)\"})),_path215||(_path215=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.25159912 0.00523682 2.50319824 0.01047363 3.79272461 0.01586914 C5.00839111 0.0183667 6.22405762 0.02086426 7.4765625 0.0234375 C9.03366943 0.0325415 10.59077637 0.04164551 12.19506836 0.05102539 C17.12444336 0.07165039 22.05381836 0.09227539 27.13256836 0.11352539 C27.13256836 15.62352539 27.13256836 31.13352539 27.13256836 47.11352539 C16.90256836 47.11352539 6.67256836 47.11352539 -3.86743164 47.11352539 C-4.51324269 34.9148723 -5.06089355 22.88117724 -4.49243164 10.67602539 C-4.44932861 9.72969238 -4.40622559 8.78335938 -4.36181641 7.80834961 C-3.94601749 0.15622802 -3.94601749 0.15622802 0 0 Z \",fill:\"#6C6A68\",transform:\"translate(947.867431640625,209.886474609375)\"})),_path216||(_path216=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 8.25 0 16.5 0 25 C-20.41856352 25.90532512 -40.58026813 25.97194838 -61 25 C-61.12867289 16.93649887 -60.79681084 9.02502344 -60 1 C-59.18023682 1.00523682 -58.36047363 1.01047363 -57.51586914 1.01586914 C-37.04116548 1.14915323 -37.04116548 1.14915323 -16.59375 0.22265625 C-11.05600166 -0.12044338 -5.54657351 -0.06375372 0 0 Z \",fill:\"#81807E\",transform:\"translate(729,771)\"})),_path217||(_path217=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C29.7 0.495 29.7 0.495 60 1 C60 8.92 60 16.84 60 25 C50.1 25.33 40.2 25.66 30 26 C29.67 25.34 29.34 24.68 29 24 C28.46536133 24.16298584 27.93072266 24.32597168 27.37988281 24.49389648 C24.5062015 25.1050107 21.86034246 25.1120605 18.921875 25.09765625 C17.76171875 25.09443359 16.6015625 25.09121094 15.40625 25.08789062 C14.1996875 25.07951172 12.993125 25.07113281 11.75 25.0625 C10.52796875 25.05798828 9.3059375 25.05347656 8.046875 25.04882812 C5.03122908 25.03704826 2.01560835 25.01911301 -1 25 C-0.67 16.75 -0.34 8.5 0 0 Z \",fill:\"#848280\",transform:\"translate(546,164)\"})),_path218||(_path218=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.26 30 14.52 30 22 C39.57 22 49.14 22 59 22 C59 30.58 59 39.16 59 48 C59.99 48.495 59.99 48.495 61 49 C60.01 49.66 59.02 50.32 58 51 C58 50.01 58 49.02 58 48 C48.76 48 39.52 48 30 48 C29.505 35.13 29.505 35.13 29 22 C19.43 22 9.86 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#605F5D\",transform:\"translate(366,958)\"})),_path219||(_path219=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.12591553 0.00523682 2.25183105 0.01047363 3.41186523 0.01586914 C4.62680664 0.0190918 5.84174805 0.02231445 7.09350586 0.02563477 C8.37290039 0.03401367 9.65229492 0.04239258 10.97045898 0.05102539 C12.2537207 0.05553711 13.53698242 0.06004883 14.85913086 0.06469727 C18.04211921 0.07652994 21.22501661 0.09301471 24.40795898 0.11352539 C25.03969689 8.1681837 25.40795898 16.00895156 25.40795898 24.11352539 C34.64795898 24.11352539 43.88795898 24.11352539 53.40795898 24.11352539 C53.40795898 24.44352539 53.40795898 24.77352539 53.40795898 25.11352539 C44.16795898 25.11352539 34.92795898 25.11352539 25.40795898 25.11352539 C25.43889648 31.70321289 25.43889648 31.70321289 25.47045898 38.42602539 C25.49727133 50.03511592 25.16135341 61.53008609 24.40795898 73.11352539 C14.50795898 73.11352539 4.60795898 73.11352539 -5.59204102 73.11352539 C-5.59204102 65.52352539 -5.59204102 57.93352539 -5.59204102 50.11352539 C-2.7737991 48.70440443 -0.4195282 49.00168986 2.72827148 49.01586914 C3.98510742 49.0190918 5.24194336 49.02231445 6.53686523 49.02563477 C7.85557617 49.03401367 9.17428711 49.04239258 10.53295898 49.05102539 C11.8728011 49.0560405 13.21264499 49.06060339 14.55249023 49.06469727 C17.83766555 49.07651444 21.12281779 49.09445038 24.40795898 49.11352539 C24.40795898 40.53352539 24.40795898 31.95352539 24.40795898 23.11352539 C22.42795898 23.11352539 20.44795898 23.11352539 18.40795898 23.11352539 C17.74795898 22.45352539 17.08795898 21.79352539 16.40795898 21.11352539 C16.73795898 20.45352539 17.06795898 19.79352539 17.40795898 19.11352539 C16.74795898 19.44352539 16.08795898 19.77352539 15.40795898 20.11352539 C14.80421106 22.64926666 14.45014772 25.18807711 14.06811523 27.76586914 C13.40795898 30.11352539 13.40795898 30.11352539 10.40795898 32.11352539 C6.70136168 32.45672884 3.99995416 32.31505566 0.47045898 31.11352539 C-1.59204102 29.11352539 -1.59204102 29.11352539 -1.89672852 27.13305664 C-1.90384026 25.12399009 -1.7561692 23.11588923 -1.59204102 21.11352539 C0.38795898 21.44352539 2.36795898 21.77352539 4.40795898 22.11352539 C4.40795898 24.42352539 4.40795898 26.73352539 4.40795898 29.11352539 C6.38332643 28.76565831 6.38332643 28.76565831 8.40795898 28.11352539 C9.88628158 25.1568802 9.46828681 22.37122802 9.40795898 19.11352539 C5.77795898 18.12352539 2.14795898 17.13352539 -1.59204102 16.11352539 C-3.84169427 5.56827574 -3.84169427 5.56827574 -3.59204102 1.11352539 C-2.59204102 0.11352539 -2.59204102 0.11352539 0 0 Z \",fill:\"#797878\",transform:\"translate(13.592041015625,489.886474609375)\"})),_path220||(_path220=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.33 6.93 1.66 13.86 2 21 C11.57 21.33 21.14 21.66 31 22 C31 28.93 31 35.86 31 43 C40.9 42.67 50.8 42.34 61 42 C61 49.92 61 57.84 61 66 C51.1 66.66 41.2 67.32 31 68 C30 55 30 55 30 44 C20.76 44 11.52 44 2 44 C1.31445965 40.57229824 0.87675245 38.14542877 0.90234375 34.79296875 C0.90556641 34.04208984 0.90878906 33.29121094 0.91210938 32.51757812 C0.92048828 31.74865234 0.92886719 30.97972656 0.9375 30.1875 C0.94201172 29.39923828 0.94652344 28.61097656 0.95117188 27.79882812 C0.96288688 25.86585239 0.98082002 23.93291607 1 22 C-3.95 22 -8.9 22 -14 22 C-14 21.67 -14 21.34 -14 21 C-9.38 21 -4.76 21 0 21 C0 14.07 0 7.14 0 0 Z \",fill:\"#656361\",transform:\"translate(274,825)\"})),_path221||(_path221=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.25421714 -0.0229132 8.50822157 -0.04283889 12.76245117 -0.05493164 C14.21070073 -0.05997101 15.65894517 -0.06680253 17.10717773 -0.07543945 C19.18474588 -0.08752247 21.26224697 -0.09323211 23.33984375 -0.09765625 C24.59144287 -0.10289307 25.84304199 -0.10812988 27.13256836 -0.11352539 C30 0 30 0 31 1 C31.08713831 2.70772358 31.10700007 4.41898649 31.09765625 6.12890625 C31.09515869 7.06033447 31.09266113 7.9917627 31.09008789 8.95141602 C31.08098389 10.14307373 31.07187988 11.33473145 31.0625 12.5625 C31.041875 16.336875 31.02125 20.11125 31 24 C40.57 24 50.14 24 60 24 C60 31.59 60 39.18 60 47 C55.88822073 47.02291394 51.77660342 47.04283951 47.66479492 47.05493164 C46.26504772 47.0599708 44.8653058 47.06680216 43.46557617 47.07543945 C41.45754223 47.0875232 39.44947043 47.09269807 37.44140625 47.09765625 C36.23170166 47.10289307 35.02199707 47.10812988 33.77563477 47.11352539 C31 47 31 47 30 46 C29.91299658 44.36527118 29.89298937 42.72685945 29.90234375 41.08984375 C29.90484131 40.199021 29.90733887 39.30819824 29.90991211 38.39038086 C29.91901611 37.25093018 29.92812012 36.11147949 29.9375 34.9375 C29.958125 31.328125 29.97875 27.71875 30 24 C15.15 23.505 15.15 23.505 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#8D8B8A\",transform:\"translate(944,141)\"})),_path222||(_path222=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.56959053 2.56494389 5.13306457 5.13480777 7.68359375 7.71875 C13.24738291 13.44180247 13.24738291 13.44180247 19.25 18.6875 C21.50897509 20.58709269 23.18532156 22.32450138 25.0625 24.5625 C28.75294589 28.89938763 32.86811897 32.66093822 37.07568359 36.48193359 C41.285498 40.31136511 45.32723159 44.27201027 49.29296875 48.35546875 C50.91504353 50.08189044 50.91504353 50.08189044 53 51 C52.505 55.95 52.505 55.95 52 61 C41.61495173 62.07896605 31.43357948 62.07452557 21 62 C21 70.91 21 79.82 21 89 C20.01 89.495 20.01 89.495 19 90 C19.33 72.18 19.66 54.36 20 36 C13.4 36 6.8 36 0 36 C-0.9080795 28.28132422 -1.15220937 20.70577381 -1.125 12.9375 C-1.12886719 11.79861328 -1.13273438 10.65972656 -1.13671875 9.48632812 C-1.13542969 8.40673828 -1.13414062 7.32714844 -1.1328125 6.21484375 C-1.13168457 5.23636475 -1.13055664 4.25788574 -1.12939453 3.24975586 C-1 1 -1 1 0 0 Z \",fill:\"#5E5C5C\",transform:\"translate(252,246)\"})),_path223||(_path223=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.59 30 15.18 30 23 C37.25406724 22.96065522 37.25406724 22.96065522 44.50805664 22.90991211 C45.88272095 22.90616577 45.88272095 22.90616577 47.28515625 22.90234375 C48.21207275 22.89710693 49.13898926 22.89187012 50.09399414 22.88647461 C53.41425972 23.01618338 56.7105976 23.53008537 60 24 C60 31.26 60 38.52 60 46 C50.1 46 40.2 46 30 46 C30 38.74 30 31.48 30 24 C27.91816406 24.01160156 25.83632812 24.02320312 23.69140625 24.03515625 C21.68253702 24.04210735 19.67366749 24.04902389 17.66479492 24.05493164 C16.26504772 24.0599708 14.8653058 24.06680216 13.46557617 24.07543945 C11.45754223 24.0875232 9.44947043 24.09269807 7.44140625 24.09765625 C6.23170166 24.10289307 5.02199707 24.10812988 3.77563477 24.11352539 C1 24 1 24 0 23 C-0.08713831 21.29227642 -0.10700007 19.58101351 -0.09765625 17.87109375 C-0.09515869 16.93966553 -0.09266113 16.0082373 -0.09008789 15.04858398 C-0.08098389 13.85692627 -0.07187988 12.66526855 -0.0625 11.4375 C-0.041875 7.663125 -0.02125 3.88875 0 0 Z \",fill:\"#646160\",transform:\"translate(127,72)\"})),_path224||(_path224=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.33 0.66 -0.66 1.32 -1 2 C-1.1458306 3.44868759 -1.23616666 4.9031775 -1.29711914 6.35791016 C-1.33708511 7.25869293 -1.37705109 8.15947571 -1.41822815 9.08755493 C-1.47610756 10.54855118 -1.47610756 10.54855118 -1.53515625 12.0390625 C-1.57813339 13.03505463 -1.62111053 14.03104675 -1.66539001 15.05722046 C-1.80201733 18.24631614 -1.93232673 21.43563498 -2.0625 24.625 C-2.15388167 26.78387178 -2.24567326 28.94272625 -2.33789062 31.1015625 C-2.56412883 36.40083587 -2.78182952 41.70036367 -3 47 C-12.57 47 -22.14 47 -32 47 C-33.20029908 44.59940183 -33.11459743 43.10639351 -33.09765625 40.4296875 C-33.09443359 39.53378906 -33.09121094 38.63789062 -33.08789062 37.71484375 C-33.07951172 36.77769531 -33.07113281 35.84054688 -33.0625 34.875 C-33.05798828 33.93011719 -33.05347656 32.98523438 -33.04882812 32.01171875 C-33.03702357 29.67441613 -33.02055759 27.33723939 -33 25 C-35.64 25 -38.28 25 -41 25 C-41 24.67 -41 24.34 -41 24 C-38.36 24 -35.72 24 -33 24 C-33 16.74 -33 9.48 -33 2 C-28.43765053 1.66448907 -23.87514095 1.33150263 -19.3125 1 C-18.01892578 0.90460937 -16.72535156 0.80921875 -15.39257812 0.7109375 C-13.52182617 0.57558594 -13.52182617 0.57558594 -11.61328125 0.4375 C-10.46641846 0.35371094 -9.31955566 0.26992188 -8.13793945 0.18359375 C-5.41459363 0.02425694 -2.72678924 -0.03573188 0 0 Z \",fill:\"#666463\",transform:\"translate(41,47)\"})),_path225||(_path225=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.67125 0.144375 7.3425 0.28875 11.125 0.4375 C12.84420654 0.50215454 12.84420654 0.50215454 14.59814453 0.56811523 C25.07666178 1.00265308 25.07666178 1.00265308 29 2 C30.20029908 4.40059817 30.11459743 5.89360649 30.09765625 8.5703125 C30.09515869 9.37742676 30.09266113 10.18454102 30.09008789 11.01611328 C30.08098389 12.0420459 30.07187988 13.06797852 30.0625 14.125 C30.041875 17.38375 30.02125 20.6425 30 24 C20.1 24 10.2 24 0 24 C0 31.59 0 39.18 0 47 C-9.57 47.33 -19.14 47.66 -29 48 C-29.020625 43.895625 -29.04125 39.79125 -29.0625 35.5625 C-29.071604 34.26642822 -29.08070801 32.97035645 -29.09008789 31.63500977 C-29.09258545 30.62237061 -29.09508301 29.60973145 -29.09765625 28.56640625 C-29.10289307 27.52427979 -29.10812988 26.48215332 -29.11352539 25.40844727 C-29 23 -29 23 -28 22 C-25.92545653 21.98320437 -23.85026768 22.03743314 -21.77734375 22.12109375 C-19.88725586 22.19360352 -19.88725586 22.19360352 -17.95898438 22.26757812 C-16.61848492 22.32410817 -15.27799018 22.38075027 -13.9375 22.4375 C-12.59311754 22.49070604 -11.24871657 22.54344653 -9.90429688 22.59570312 C-6.60268024 22.72587439 -3.30131358 22.86235703 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#646260\",transform:\"translate(97,932)\"})),_path226||(_path226=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C1.71953857 1.99476318 2.43907715 1.98952637 3.18041992 1.98413086 C6.51610399 1.96303752 9.85177395 1.95023872 13.1875 1.9375 C14.31865234 1.92912109 15.44980469 1.92074219 16.61523438 1.91210938 C18.31196289 1.90727539 18.31196289 1.90727539 20.04296875 1.90234375 C21.06414795 1.89710693 22.08532715 1.89187012 23.13745117 1.88647461 C28.76811131 2.05196712 34.38350072 2.56796159 40 3 C40 19.5 40 36 40 53 C36.04 53 32.08 53 28 53 C27.505 40.13 27.505 40.13 27 27 C17.43 27 7.86 27 -2 27 C-2.33 19.74 -2.66 12.48 -3 5 C-3.66 4.67 -4.32 4.34 -5 4 C-3.35 2.68 -1.7 1.36 0 0 Z \",fill:\"#747473\",transform:\"translate(733,411)\"})),_path227||(_path227=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29.08835208 15.72666999 28.83196731 31.29661703 28 47 C18.43 47 8.86 47 -1 47 C-1.09303112 31.27774152 -0.78512225 15.70244497 0 0 Z \",fill:\"#7F7D7C\",transform:\"translate(823,209)\"})),_path228||(_path228=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.59 29 15.18 29 23 C19.1 23 9.2 23 -1 23 C-1 30.59 -1 38.18 -1 46 C-10.57 46 -20.14 46 -30 46 C-30.020625 42.390625 -30.04125 38.78125 -30.0625 35.0625 C-30.071604 33.92304932 -30.08070801 32.78359863 -30.09008789 31.60961914 C-30.09258545 30.71879639 -30.09508301 29.82797363 -30.09765625 28.91015625 C-30.10289307 27.99371338 -30.10812988 27.07727051 -30.11352539 26.13305664 C-30 24 -30 24 -29 23 C-26.55616126 22.75651791 -24.13788903 22.5734776 -21.6875 22.4375 C-20.97142578 22.3950415 -20.25535156 22.35258301 -19.51757812 22.30883789 C-13.33912423 21.9670423 -7.18806836 21.92264915 -1 22 C-0.67 14.74 -0.34 7.48 0 0 Z \",fill:\"#8B8B8A\",transform:\"translate(425,824)\"})),_path229||(_path229=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.61 0 11.22 0 17 0 C17.0268245 4.14587582 17.04675315 8.29158038 17.0625 12.4375 C17.07087891 13.62150391 17.07925781 14.80550781 17.08789062 16.02539062 C17.09111328 17.15009766 17.09433594 18.27480469 17.09765625 19.43359375 C17.10289307 20.47572021 17.10812988 21.51784668 17.11352539 22.59155273 C17 25 17 25 16 26 C13.92545653 26.01679563 11.85026768 25.96256686 9.77734375 25.87890625 C8.51728516 25.83056641 7.25722656 25.78222656 5.95898438 25.73242188 C4.61848492 25.67589183 3.27799018 25.61924973 1.9375 25.5625 C0.59311754 25.50929396 -0.75128343 25.45655347 -2.09570312 25.40429688 C-5.39731976 25.27412561 -8.69868642 25.13764297 -12 25 C-12 33.91 -12 42.82 -12 52 C-22.23 52 -32.46 52 -43 52 C-43.2 28.4 -43.2 28.4 -41 24 C-41.99 23.67 -42.98 23.34 -44 23 C-29.48 23 -14.96 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#81827F\",transform:\"translate(528,616)\"})),_path230||(_path230=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 15.18 29 30.36 29 46 C26.20299508 47.39850246 24.01884641 47.0101384 20.8984375 46.87890625 C19.80708496 46.83580322 18.71573242 46.7927002 17.59130859 46.74829102 C15.50423584 46.65632446 15.50423584 46.65632446 13.375 46.5625 C8.96125 46.376875 4.5475 46.19125 0 46 C0 30.82 0 15.64 0 0 Z \",fill:\"#848280\",transform:\"translate(975,210)\"})),_path231||(_path231=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.14302848 7.67586151 -0.06454099 15.33080554 -0.375 23 C-0.40585693 23.91998779 -0.43671387 24.83997559 -0.46850586 25.7878418 C-0.5072583 26.662229 -0.54601074 27.53661621 -0.5859375 28.4375 C-0.6173584 29.21996094 -0.6487793 30.00242187 -0.68115234 30.80859375 C-1 33 -1 33 -3 37 C-11.91 37 -20.82 37 -30 37 C-29.7525 40.09375 -29.7525 40.09375 -29.5 43.25 C-28.97268914 49.84138569 -28.95060282 56.38901047 -29 63 C-33.21742593 63.12365029 -37.43389111 63.21435665 -41.65258789 63.2746582 C-43.08734514 63.29979524 -44.52197441 63.33391108 -45.95629883 63.37719727 C-48.0193637 63.43789665 -50.08073615 63.46621353 -52.14453125 63.48828125 C-54.00621948 63.52755737 -54.00621948 63.52755737 -55.90551758 63.56762695 C-59 63 -59 63 -60.95800781 60.59375 C-62 58 -62 58 -61.52734375 56.01171875 C-59.4713894 53.30374819 -57.09262271 51.06308848 -54.5625 48.8125 C-53.76549683 48.09175293 -53.76549683 48.09175293 -52.95239258 47.35644531 C-48.57875731 43.4344953 -44.03622163 39.73851226 -39.4609375 36.0546875 C-36.72685822 33.77194829 -34.24326429 31.34474375 -31.77929688 28.77758789 C-30.02088429 27.02086423 -28.19664409 25.41191943 -26.3046875 23.80078125 C-21.93180827 20.00168241 -17.8677631 15.94537579 -13.8125 11.8125 C-2.21814404 0 -2.21814404 0 0 0 Z \",fill:\"#6E6D6D\",transform:\"translate(483,552)\"})),_path232||(_path232=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.20970459 0.00523682 2.41940918 0.01047363 3.66577148 0.01586914 C4.97094727 0.0190918 6.27612305 0.02231445 7.62084961 0.02563477 C9.00952213 0.03399138 10.39819401 0.04245634 11.78686523 0.05102539 C13.17944179 0.05603873 14.57202005 0.06060193 15.96459961 0.06469727 C19.38453974 0.07653097 22.80445773 0.09446708 26.22436523 0.11352539 C26.55436523 8.69352539 26.88436523 17.27352539 27.22436523 26.11352539 C36.79436523 26.11352539 46.36436523 26.11352539 56.22436523 26.11352539 C56.22436523 32.05352539 56.22436523 37.99352539 56.22436523 44.11352539 C46.32436523 44.11352539 36.42436523 44.11352539 26.22436523 44.11352539 C26.22436523 38.17352539 26.22436523 32.23352539 26.22436523 26.11352539 C16.32436523 26.11352539 6.42436523 26.11352539 -3.77563477 26.11352539 C-3.79625977 22.00915039 -3.81688477 17.90477539 -3.83813477 13.67602539 C-3.84723877 12.37995361 -3.85634277 11.08388184 -3.86572266 9.74853516 C-3.86822021 8.735896 -3.87071777 7.72325684 -3.87329102 6.67993164 C-3.87852783 5.63780518 -3.88376465 4.59567871 -3.88916016 3.52197266 C-3.7258134 0.05656255 -3.50002666 0.14315352 0 0 Z \",fill:\"#8B8A88\",transform:\"translate(518.775634765625,979.886474609375)\"})),_path233||(_path233=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.25554688 -0.00128906 2.51109375 -0.00257812 3.8046875 -0.00390625 C4.46178711 -0.00181152 5.11888672 0.0002832 5.79589844 0.00244141 C7.80411335 0.00779016 9.81210459 0.00249559 11.8203125 -0.00390625 C13.07585938 -0.00261719 14.33140625 -0.00132813 15.625 0 C16.78644531 0.00112793 17.94789063 0.00225586 19.14453125 0.00341797 C21.8125 0.1328125 21.8125 0.1328125 22.8125 1.1328125 C22.89919432 2.6215311 22.91953494 4.1142575 22.91015625 5.60546875 C22.90765869 6.41508057 22.90516113 7.22469238 22.90258789 8.05883789 C22.89348389 9.09387451 22.88437988 10.12891113 22.875 11.1953125 C22.854375 14.4746875 22.83375 17.7540625 22.8125 21.1328125 C32.7125 21.1328125 42.6125 21.1328125 52.8125 21.1328125 C52.8125 28.7228125 52.8125 36.3128125 52.8125 44.1328125 C42.9125 44.1328125 33.0125 44.1328125 22.8125 44.1328125 C22.8125 36.8728125 22.8125 29.6128125 22.8125 22.1328125 C7.9625 21.6378125 7.9625 21.6378125 -7.1875 21.1328125 C-7.208125 17.8534375 -7.22875 14.5740625 -7.25 11.1953125 C-7.259104 10.16027588 -7.26820801 9.12523926 -7.27758789 8.05883789 C-7.28133423 6.84442017 -7.28133423 6.84442017 -7.28515625 5.60546875 C-7.29039307 4.77281494 -7.29562988 3.94016113 -7.30102539 3.08227539 C-7.05065124 -1.21716023 -3.53922177 0.00343709 0 0 Z \",fill:\"#898886\",transform:\"translate(614.1875,95.8671875)\"})),_path234||(_path234=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.16781006 0.00523682 2.33562012 0.01047363 3.53881836 0.01586914 C4.79887695 0.0190918 6.05893555 0.02231445 7.35717773 0.02563477 C8.6976732 0.03399136 10.03816799 0.04245632 11.37866211 0.05102539 C12.72306153 0.05603879 14.06746271 0.06060197 15.41186523 0.06469727 C18.71331644 0.07653042 22.01474471 0.09446653 25.31616211 0.11352539 C25.64616211 7.04352539 25.97616211 13.97352539 26.31616211 21.11352539 C27.9906543 21.10192383 29.66514648 21.09032227 31.39038086 21.07836914 C33.59480683 21.0689886 35.799234 21.05988869 38.00366211 21.05102539 C39.10645508 21.04264648 40.20924805 21.03426758 41.34545898 21.02563477 C42.94550781 21.02080078 42.94550781 21.02080078 44.57788086 21.01586914 C45.55716553 21.01063232 46.5364502 21.00539551 47.54541016 21 C50.31616211 21.11352539 50.31616211 21.11352539 55.31616211 22.11352539 C55.31616211 29.70352539 55.31616211 37.29352539 55.31616211 45.11352539 C45.74616211 45.11352539 36.17616211 45.11352539 26.31616211 45.11352539 C26.31616211 37.52352539 26.31616211 29.93352539 26.31616211 22.11352539 C11.46616211 21.61852539 11.46616211 21.61852539 -3.68383789 21.11352539 C-3.70446289 17.83415039 -3.72508789 14.55477539 -3.74633789 11.17602539 C-3.75544189 10.14098877 -3.7645459 9.10595215 -3.77392578 8.03955078 C-3.77767212 6.82513306 -3.77767212 6.82513306 -3.78149414 5.58618164 C-3.78673096 4.75352783 -3.79196777 3.92087402 -3.79736328 3.06298828 C-3.61800527 -0.01695515 -3.10853266 0.13148983 0 0 Z \",fill:\"#8B8988\",transform:\"translate(41.683837890625,94.886474609375)\"})),_path235||(_path235=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.44013065 4.09074799 13.05784697 10.64024358 18.5 17.0625 C20.92165423 19.88406043 23.4532002 22.36288914 26.25 24.8125 C31.74061853 29.65313877 36.93293082 34.77950077 42.125 39.9375 C42.99157227 40.79126221 43.85814453 41.64502441 44.75097656 42.5246582 C45.55760742 43.32991943 46.36423828 44.13518066 47.1953125 44.96484375 C47.92766113 45.6930835 48.66000977 46.42132324 49.41455078 47.17163086 C51 49 51 49 51 51 C51.89319946 51.4031543 51.89319946 51.4031543 52.80444336 51.81445312 C55.00656704 53.00354604 56.39767157 54.179743 58.12890625 55.96875 C58.68900391 56.53980469 59.24910156 57.11085938 59.82617188 57.69921875 C60.39916016 58.29347656 60.97214844 58.88773438 61.5625 59.5 C62.70730947 60.67934563 63.85436457 61.85651652 65.00390625 63.03125 C65.50736572 63.55267578 66.0108252 64.07410156 66.52954102 64.61132812 C68.15641908 66.2256108 68.15641908 66.2256108 71 68 C71 68.66 71 69.32 71 70 C71.61875 70.309375 72.2375 70.61875 72.875 70.9375 C74.25 71.625 75.625 72.3125 77 73 C77 66.73 77 60.46 77 54 C86.9 54 96.8 54 107 54 C107 61.26 107 68.52 107 76 C97.76 76 88.52 76 79 76 C79 76.66 79 77.32 79 78 C79.80630859 78.31517578 79.80630859 78.31517578 80.62890625 78.63671875 C83.90338288 80.51940795 86.3317159 83.12213364 88.9375 85.8125 C89.70610352 86.59463867 89.70610352 86.59463867 90.49023438 87.39257812 C91.5115672 88.43207952 92.53071096 89.47373644 93.54760742 90.51757812 C94.86743032 91.86468934 96.20616048 93.1932109 97.546875 94.51953125 C99.74517462 96.74233421 101.85577365 99.02260687 103.94287109 101.34960938 C108.00842315 105.87751833 112.09663634 110.16456388 116.76171875 114.0859375 C119.80732105 116.69037926 122.74468735 119.40551477 125.6875 122.125 C126.2345459 122.62837891 126.7815918 123.13175781 127.34521484 123.65039062 C133.14979852 129.01499216 138.51325764 134.64983135 143.71875 140.59765625 C146.00049952 143.00052604 148.40513106 144.94572875 151 147 C152.67953472 148.65369848 154.34409051 150.32264515 156 152 C156.95266133 152.95871336 157.90571766 153.91703435 158.85913086 154.875 C159.35992661 155.37902344 159.86072235 155.88304687 160.37669373 156.40234375 C162.6345841 158.67374923 164.89525519 160.9423793 167.15600586 163.2109375 C168.34277757 164.402751 169.52865199 165.59545867 170.71362305 166.7890625 C172.44079714 168.52844869 174.1712545 170.26451128 175.90234375 172 C176.42440903 172.52722656 176.9464743 173.05445313 177.48435974 173.59765625 C180.83665561 176.95045455 184.33875798 179.98821168 188 183 C189.11907392 184.21810701 190.20733773 185.4658791 191.25 186.75 C193.81035567 189.7491151 196.47410501 192.39896319 199.4375 195 C205.09854279 199.96981809 210.3633678 205.3086778 215.64233398 210.6796875 C216.30692627 211.35257813 216.97151855 212.02546875 217.65625 212.71875 C218.55053711 213.63043945 218.55053711 213.63043945 219.46289062 214.56054688 C220.95809649 216.09777728 220.95809649 216.09777728 223 217 C223 217.66 223 218.32 223 219 C223.5878125 219.25136719 224.175625 219.50273438 224.78125 219.76171875 C227.27682175 221.15449383 228.66530515 222.63171498 230.5 224.8125 C231.09941406 225.52019531 231.69882812 226.22789062 232.31640625 226.95703125 C234.23559869 229.2858889 236.14207754 231.62185925 238 234 C234.19283739 232.44893375 231.81196719 229.88519315 229 227 C226.4000945 224.37076554 223.79351549 221.74817646 221.1875 219.125 C220.51396484 218.44308594 219.84042969 217.76117187 219.14648438 217.05859375 C215.20703539 213.10029573 211.16043528 209.35557585 206.9309082 205.71044922 C203.81159586 202.94728039 200.91366229 199.97674285 198 197 C194.3308202 193.28361096 190.68659818 189.61597442 186.6875 186.25 C182.82340748 182.97911571 179.5620051 179.26223955 176.2109375 175.4765625 C171.34848352 170.02992677 166.28229964 165.16742781 160.5625 160.625 C155.92514034 156.91383476 152.12795923 152.89407804 148.25390625 148.41015625 C145.3032675 145.25496716 142.03627965 142.72347705 138.5546875 140.1796875 C136.44770269 138.38198486 134.81708091 136.69731737 133.03515625 134.60546875 C128.11608468 128.86035439 122.72984504 123.58061377 117.37573242 118.24536133 C115.56639067 116.44137915 113.76245681 114.63211335 111.95898438 112.82226562 C106.68810048 107.54897636 101.4109901 102.38148853 95.73364258 97.54223633 C92.62527689 94.77705592 89.86387015 91.69545678 87.0625 88.625 C81.50359813 82.61854437 75.84480793 76.72938657 70.0625 70.9375 C69.03491577 69.90326904 69.03491577 69.90326904 67.98657227 68.84814453 C64.03373482 64.90632845 59.95511689 61.18510369 55.72973633 57.53833008 C53.74996221 55.77763047 52.00474939 53.91251942 50.3125 51.875 C45.43891895 46.16001595 40.0487962 41.22298342 34.40234375 36.28125 C32 34 32 34 30.19140625 31.65625 C27.78949197 28.74483875 25.16058098 26.47772597 22.30078125 24.02978516 C17.85227126 20.10524016 13.69479943 15.87925088 9.5 11.6875 C8.5821875 10.78193359 7.664375 9.87636719 6.71875 8.94335938 C5.8525 8.07904297 4.98625 7.21472656 4.09375 6.32421875 C3.30677734 5.54135498 2.51980469 4.75849121 1.70898438 3.9519043 C0 2 0 2 0 0 Z \",fill:\"#91908F\",transform:\"translate(775,770)\"})),_path236||(_path236=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.11177927 -0.02291394 8.22339658 -0.04283951 12.33520508 -0.05493164 C13.73495228 -0.0599708 15.1346942 -0.06680216 16.53442383 -0.07543945 C18.54245777 -0.0875232 20.55052957 -0.09269807 22.55859375 -0.09765625 C24.37315063 -0.10551147 24.37315063 -0.10551147 26.22436523 -0.11352539 C29 0 29 0 30 1 C30.08685603 2.56172745 30.10702219 4.12729344 30.09765625 5.69140625 C30.09515869 6.54162354 30.09266113 7.39184082 30.09008789 8.26782227 C30.08098389 9.35506592 30.07187988 10.44230957 30.0625 11.5625 C30.041875 15.006875 30.02125 18.45125 30 22 C39.9 22 49.8 22 60 22 C60 28.6 60 35.2 60 42 C49.95423343 42.65338319 40.0671917 43.11571485 30 43 C30 36.4 30 29.8 30 23 C20.1 23 10.2 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#888685\",transform:\"translate(515,893)\"})),_path237||(_path237=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.031875 -0.2475 6.06375 -0.495 9.1875 -0.75 C10.11328857 -0.85924805 11.03907715 -0.96849609 11.99291992 -1.08105469 C17.44169312 -1.29051461 20.5892752 0.04350981 24.69166565 3.67649841 C26.94760047 5.82332192 29.13578931 8.02789616 31.30093384 10.26605225 C33.53615726 12.5471645 35.86011512 14.72475833 38.18925476 16.90921021 C40.49744204 19.08569447 42.76677403 21.30045009 45.03417969 23.51928711 C46.19181624 24.64480369 47.35741607 25.76217958 48.53027344 26.87182617 C50.26379164 28.5139936 51.96952935 30.18108019 53.671875 31.85546875 C54.19465027 32.34009079 54.71742554 32.82471283 55.25604248 33.32402039 C59.89937983 37.99281527 59.16613327 39.49519942 60 47 C50.43 47 40.86 47 31 47 C31 39.41 31 31.82 31 24 C20.77 23.67 10.54 23.34 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#898785\",transform:\"translate(852,868)\"})),_path238||(_path238=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 3.3 1 6.6 1 10 C6.28 10 11.56 10 17 10 C17 10.33 17 10.66 17 11 C9.08 11.495 9.08 11.495 1 12 C1.01160156 13.64871094 1.02320313 15.29742188 1.03515625 16.99609375 C1.04453238 19.14322804 1.05363277 21.29036355 1.0625 23.4375 C1.07087891 24.52611328 1.07925781 25.61472656 1.08789062 26.73632812 C1.09272461 28.28803711 1.09272461 28.28803711 1.09765625 29.87109375 C1.10551147 31.30859985 1.10551147 31.30859985 1.11352539 32.77514648 C1 35 1 35 0 36 C-0.14386104 37.32886073 -0.22676288 38.66448587 -0.28125 40 C-0.31863281 40.804375 -0.35601562 41.60875 -0.39453125 42.4375 C-0.42933594 43.283125 -0.46414063 44.12875 -0.5 45 C-0.56860509 46.66684971 -0.64130223 48.33353774 -0.71875 50 C-0.76418945 51.11375 -0.76418945 51.11375 -0.81054688 52.25 C-1 54 -1 54 -2 55 C-3.99782126 55.15825258 -6.00088834 55.25119171 -8.00390625 55.31640625 C-9.6446814 55.37356812 -9.6446814 55.37356812 -11.31860352 55.43188477 C-12.71908936 55.47498779 -14.1195752 55.51809082 -15.5625 55.5625 C-22.2140625 55.7790625 -22.2140625 55.7790625 -29 56 C-29 41.15 -29 26.3 -29 11 C-19.43 11 -9.86 11 0 11 C0 7.37 0 3.74 0 0 Z \",fill:\"#696867\",transform:\"translate(395,836)\"})),_path239||(_path239=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.07434732 5.11236781 2.24424065 9.46330893 2.125 14.875 C2.11597656 15.65875 2.10695312 16.4425 2.09765625 17.25 C2.07428063 19.16680055 2.03841653 21.08344191 2 23 C1.34 23 0.68 23 0 23 C0 30.59 0 38.18 0 46 C-4.47873787 46.36056373 -8.95784008 46.71375701 -13.4375 47.0625 C-14.71689453 47.16626953 -15.99628906 47.27003906 -17.31445312 47.37695312 C-18.52939453 47.47041016 -19.74433594 47.56386719 -20.99609375 47.66015625 C-22.12200928 47.74918213 -23.2479248 47.83820801 -24.40795898 47.92993164 C-25.69101929 47.96461548 -25.69101929 47.96461548 -27 48 C-28.68516954 46.31483046 -28.13008019 44.21232212 -28.1328125 41.90625 C-28.13474609 40.36130859 -28.13474609 40.36130859 -28.13671875 38.78515625 C-28.13285156 37.70105469 -28.12898437 36.61695313 -28.125 35.5 C-28.12886719 34.41589844 -28.13273438 33.33179688 -28.13671875 32.21484375 C-28.13542969 31.18488281 -28.13414062 30.15492188 -28.1328125 29.09375 C-28.13168457 28.14177734 -28.13055664 27.18980469 -28.12939453 26.20898438 C-28 24 -28 24 -27 23 C-26.84285346 21.36743242 -26.74914586 19.72864662 -26.68359375 18.08984375 C-26.62075195 16.60581055 -26.62075195 16.60581055 -26.55664062 15.09179688 C-26.49766602 13.53041992 -26.49766602 13.53041992 -26.4375 11.9375 C-26.39431641 10.89271484 -26.35113281 9.84792969 -26.30664062 8.77148438 C-26.20018775 6.18113116 -26.0981724 3.59067814 -26 1 C-22.9792807 0.83100871 -19.95845177 0.66473871 -16.9375 0.5 C-16.08994141 0.45230469 -15.24238281 0.40460938 -14.36914062 0.35546875 C-9.57055312 0.09608564 -4.80550212 -0.05216285 0 0 Z \",fill:\"#757472\",transform:\"translate(215,209)\"})),_path240||(_path240=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 7.26 0 14.52 0 22 C-9.9 22 -19.8 22 -30 22 C-30 29.26 -30 36.52 -30 44 C-39.57 44.33 -49.14 44.66 -59 45 C-59.33 48.3 -59.66 51.6 -60 55 C-60.33 55 -60.66 55 -61 55 C-61.03738281 54.30132812 -61.07476563 53.60265625 -61.11328125 52.8828125 C-61.17902344 51.97273438 -61.24476563 51.06265625 -61.3125 50.125 C-61.37050781 49.22007813 -61.42851563 48.31515625 -61.48828125 47.3828125 C-61.7882039 44.63778399 -61.7882039 44.63778399 -65 43 C-59.69369943 37.17996613 -54.32637168 31.42381757 -48.87739277 25.73752499 C-46.34750549 23.09361206 -43.84171777 20.43380252 -41.38305664 17.72338867 C-28.40072656 3.44664273 -20.31791321 -4.20400882 0 0 Z \",fill:\"#666462\",transform:\"translate(974,73)\"})),_path241||(_path241=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.24998566 -0.02902996 8.49994581 -0.04680887 12.75 -0.0625 C13.9565625 -0.07087891 15.163125 -0.07925781 16.40625 -0.08789062 C18.14648438 -0.09272461 18.14648438 -0.09272461 19.921875 -0.09765625 C20.99018555 -0.10289307 22.05849609 -0.10812988 23.15917969 -0.11352539 C26 0 26 0 30 1 C30.33 7.27 30.66 13.54 31 20 C31.99 20.33 32.98 20.66 34 21 C32.68 21 31.36 21 30 21 C30.0714624 21.61206299 30.1429248 22.22412598 30.21655273 22.85473633 C31.08559463 31.13909644 31.11527565 39.36587457 31.0625 47.6875 C31.05747028 49.08268067 31.05291 50.47786311 31.04882812 51.87304688 C31.03714751 55.24874437 31.02076833 58.62434826 31 62 C30.67 62 30.34 62 30 62 C30 55.4 30 48.8 30 42 C20.1 42 10.2 42 0 42 C0.99 41.505 0.99 41.505 2 41 C1.67 40.34 1.34 39.68 1 39 C0.95509079 37.31309769 0.96116137 35.624553 1 33.9375 C1.03777102 32.29210014 1.04642479 30.64517844 1 29 C0.67 28.67 0.34 28.34 0 28 C-0.41075474 24.78714499 -0.51732028 21.54591477 -0.6875 18.3125 C-0.77741211 16.96381836 -0.77741211 16.96381836 -0.86914062 15.58789062 C-1.14101913 10.51158367 -0.8570178 6.81308695 1 2 C0.67 1.34 0.34 0.68 0 0 Z \",fill:\"#787674\",transform:\"translate(730,916)\"})),_path242||(_path242=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.74902588 0.00249756 1.49805176 0.00499512 2.26977539 0.00756836 C3.17977295 0.01667236 4.08977051 0.02577637 5.02734375 0.03515625 C9.45140625 0.06609375 9.45140625 0.06609375 13.96484375 0.09765625 C13.96484375 7.35765625 13.96484375 14.61765625 13.96484375 22.09765625 C16.04667969 22.08605469 18.12851562 22.07445312 20.2734375 22.0625 C22.28230673 22.0555489 24.29117626 22.04863236 26.30004883 22.04272461 C27.69979603 22.03768545 29.09953795 22.03085409 30.49926758 22.0222168 C32.50730152 22.01013305 34.51537332 22.00495818 36.5234375 22 C38.33799438 21.99214478 38.33799438 21.99214478 40.18920898 21.98413086 C42.96484375 22.09765625 42.96484375 22.09765625 43.96484375 23.09765625 C44.05169978 24.6593837 44.07186594 26.22494969 44.0625 27.7890625 C44.06000244 28.63927979 44.05750488 29.48949707 44.05493164 30.36547852 C44.04582764 31.45272217 44.03672363 32.53996582 44.02734375 33.66015625 C44.00671875 37.10453125 43.98609375 40.54890625 43.96484375 44.09765625 C34.39484375 44.09765625 24.82484375 44.09765625 14.96484375 44.09765625 C14.96484375 37.16765625 14.96484375 30.23765625 14.96484375 23.09765625 C5.39484375 23.09765625 -4.17515625 23.09765625 -14.03515625 23.09765625 C-14.03515625 15.83765625 -14.03515625 8.57765625 -14.03515625 1.09765625 C-3.91015625 -0.02734375 -3.91015625 -0.02734375 0 0 Z \",fill:\"#878684\",transform:\"translate(290.03515625,823.90234375)\"})),_path243||(_path243=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.76119141 0.00451172 1.52238281 0.00902344 2.30664062 0.01367188 C4.14196295 0.02521478 5.97724352 0.04313622 7.8125 0.0625 C9.13706929 9.06331339 8.92331876 18.05110182 8.875 27.125 C8.8699758 28.77018093 8.86541452 30.41536335 8.86132812 32.06054688 C8.85125075 36.06126497 8.8316626 40.06177425 8.8125 44.0625 C-0.7575 44.0625 -10.3275 44.0625 -20.1875 44.0625 C-20.1875 29.8725 -20.1875 15.6825 -20.1875 1.0625 C-13.33484809 0.43953164 -6.82594125 -0.07958497 0 0 Z \",fill:\"#838280\",transform:\"translate(445.1875,870.9375)\"})),_path244||(_path244=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 42.24 2 84.48 2 128 C0.02 128 -1.96 128 -4 128 C-4 119.75 -4 111.5 -4 103 C-13.24 103 -22.48 103 -32 103 C-32 94.42 -32 85.84 -32 77 C-22.43 76.67 -12.86 76.34 -3 76 C-3 68.41 -3 60.82 -3 53 C-1.02 52.505 -1.02 52.505 1 52 C0.505 46.06 0.505 46.06 0 40 C-0.33 40 -0.66 40 -1 40 C-0.67 26.8 -0.34 13.6 0 0 Z \",fill:\"#838180\",transform:\"translate(220,335)\"})),_path245||(_path245=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.95 -0.0309375 4.95 -0.0309375 10 -0.0625 C11.02351562 -0.071604 12.04703125 -0.08070801 13.1015625 -0.09008789 C14.35066406 -0.09383423 14.35066406 -0.09383423 15.625 -0.09765625 C16.88183594 -0.10551147 16.88183594 -0.10551147 18.1640625 -0.11352539 C21.79215717 0.03171084 25.39703855 0.54962982 29 1 C29 9.25 29 17.5 29 26 C19.76 26.33 10.52 26.66 1 27 C0.67 34.92 0.34 42.84 0 51 C4.29 51 8.58 51 13 51 C13 51.33 13 51.66 13 52 C8.41667994 52.02901401 3.83338349 52.04680348 -0.75 52.0625 C-2.05195312 52.07087891 -3.35390625 52.07925781 -4.6953125 52.08789062 C-5.94570313 52.09111328 -7.19609375 52.09433594 -8.484375 52.09765625 C-10.21252441 52.10551147 -10.21252441 52.10551147 -11.97558594 52.11352539 C-15 52 -15 52 -19 51 C-19 42.75 -19 34.5 -19 26 C-12.73 26 -6.46 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#5E5C5A\",transform:\"translate(823,412)\"})),_path246||(_path246=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.04510742 -0.00580078 1.04510742 -0.00580078 2.11132812 -0.01171875 C7.18370384 -0.00189808 7.18370384 -0.00189808 9.4375 1.125 C9.46637814 4.60414941 9.48425687 8.08326831 9.5 11.5625 C9.50837891 12.55572266 9.51675781 13.54894531 9.52539062 14.57226562 C9.53022461 15.98862305 9.53022461 15.98862305 9.53515625 17.43359375 C9.54301147 18.74541626 9.54301147 18.74541626 9.55102539 20.08374023 C9.4375 22.125 9.4375 22.125 8.4375 23.125 C8.36570036 24.64428038 8.35357993 26.16667482 8.375 27.6875 C8.38402344 28.51378906 8.39304687 29.34007813 8.40234375 30.19140625 C8.41394531 30.82949219 8.42554688 31.46757813 8.4375 32.125 C8.7675 32.125 9.0975 32.125 9.4375 32.125 C9.49145478 33.74963842 9.53027195 35.37478541 9.5625 37 C9.58570313 37.90492188 9.60890625 38.80984375 9.6328125 39.7421875 C9.4375 42.125 9.4375 42.125 7.4375 44.125 C4.64013672 44.35205078 4.64013672 44.35205078 1.1171875 44.3203125 C-0.58074951 44.31281982 -0.58074951 44.31281982 -2.31298828 44.30517578 C-3.75657715 44.28696777 -5.20016602 44.26875977 -6.6875 44.25 C-11.26625 44.20875 -15.845 44.1675 -20.5625 44.125 C-20.2325 29.935 -19.9025 15.745 -19.5625 1.125 C-12.93863174 0.52283016 -6.60323165 -0.03857779 0 0 Z \",fill:\"#848280\",transform:\"translate(444.5625,95.875)\"})),_path247||(_path247=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 6.27 1.32 12.54 2 19 C3.85625 18.7525 3.85625 18.7525 5.75 18.5 C14.45943361 17.6038119 23.26011863 17.94173412 32 18 C32 25.59 32 33.18 32 41 C22.1 41 12.2 41 2 41 C1.67 34.07 1.34 27.14 1 20 C-13.85 19.505 -13.85 19.505 -29 19 C-29 13.06 -29 7.12 -29 1 C-25.41763629 -0.19412124 -21.98714971 -0.3545017 -18.25 -0.5625 C-17.21359375 -0.62727539 -17.21359375 -0.62727539 -16.15625 -0.69335938 C-4.20329958 -1.40109986 -4.20329958 -1.40109986 0 0 Z \",fill:\"#8C8B8A\",transform:\"translate(544,939)\"})),_path248||(_path248=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.32 0.33 -2.64 0.66 -4 1 C-4 9.25 -4 17.5 -4 26 C4.58 26 13.16 26 22 26 C22.495 30.455 22.495 30.455 23 35 C23.66 35.99 24.32 36.98 25 38 C25.69911071 41.34019564 25.48361507 43.23903796 23.64453125 46.1328125 C19.13697089 51.68517162 19.13697089 51.68517162 15.27734375 52.75390625 C11.36058139 53.04801355 7.59921704 52.90974737 3.6875 52.625 C2.95982422 52.58117187 2.23214844 52.53734375 1.48242188 52.4921875 C-3.86675044 52.13324956 -3.86675044 52.13324956 -5 51 C-5.08726223 49.21928754 -5.10699041 47.4351686 -5.09765625 45.65234375 C-5.09443359 44.57275391 -5.09121094 43.49316406 -5.08789062 42.38085938 C-5.07951172 41.24455078 -5.07113281 40.10824219 -5.0625 38.9375 C-5.05798828 37.79732422 -5.05347656 36.65714844 -5.04882812 35.48242188 C-5.03699747 32.65489649 -5.0205141 29.8274736 -5 27 C-6.05960938 27.01160156 -7.11921875 27.02320313 -8.2109375 27.03515625 C-9.59895658 27.04453476 -10.98697755 27.05363489 -12.375 27.0625 C-13.07367187 27.07087891 -13.77234375 27.07925781 -14.4921875 27.08789062 C-19.7734375 27.11328125 -19.7734375 27.11328125 -22 26 C-22 17.42 -22 8.84 -22 0 C-19.298125 -0.185625 -16.59625 -0.37125 -13.8125 -0.5625 C-12.54950073 -0.65446655 -12.54950073 -0.65446655 -11.26098633 -0.74829102 C-7.31667077 -0.99911817 -3.86171819 -1.04475342 0 0 Z \",fill:\"#545453\",transform:\"translate(550,412)\"})),_path249||(_path249=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.29165262 -0.02891949 8.58328036 -0.04677118 12.875 -0.0625 C14.70998047 -0.07506836 14.70998047 -0.07506836 16.58203125 -0.08789062 C18.33193359 -0.09272461 18.33193359 -0.09272461 20.1171875 -0.09765625 C21.73536377 -0.10551147 21.73536377 -0.10551147 23.38623047 -0.11352539 C26 0 26 0 28 1 C29 6 29 6 29 20 C38.24 20 47.48 20 57 20 C57.020625 23.444375 57.04125 26.88875 57.0625 30.4375 C57.071604 31.52474365 57.08070801 32.6119873 57.09008789 33.73217773 C57.09258545 34.58239502 57.09508301 35.4326123 57.09765625 36.30859375 C57.10289307 37.18314209 57.10812988 38.05769043 57.11352539 38.95874023 C57 41 57 41 56 42 C53.92737924 42.08767112 51.85179706 42.10695873 49.77734375 42.09765625 C48.51728516 42.09443359 47.25722656 42.09121094 45.95898438 42.08789062 C44.61848891 42.07953403 43.27799412 42.07106907 41.9375 42.0625 C40.59310058 42.0574866 39.2486994 42.05292342 37.90429688 42.04882812 C34.60284567 42.03699497 31.3014174 42.01905886 28 42 C28 34.74 28 27.48 28 20 C18.43 20 8.86 20 -1 20 C-1.020625 17.4425 -1.04125 14.885 -1.0625 12.25 C-1.071604 11.45110352 -1.08070801 10.65220703 -1.09008789 9.82910156 C-1.10358903 6.37106862 -0.93376884 3.321503 0 0 Z \",fill:\"#8D8B89\",transform:\"translate(159,938)\"})),_path250||(_path250=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.56 0 21.12 0 32 0 C32 4.29 32 8.58 32 13 C41.9 13 51.8 13 62 13 C62 21.25 62 29.5 62 38 C51.94614806 38.70553347 42.08150835 39.10501571 32 39 C31.505 26.625 31.505 26.625 31 14 C21.1 14 11.2 14 1 14 C0.67 9.38 0.34 4.76 0 0 Z \",fill:\"#595857\",transform:\"translate(514,243)\"})),_path251||(_path251=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C15.51 0 31.02 0 47 0 C44.19385913 4.2092113 42.0696907 7.17977678 38.61450195 10.62841797 C37.75713943 11.48885712 36.89977692 12.34929626 36.01643372 13.23580933 C35.0996434 14.14541412 34.18285309 15.05501892 33.23828125 15.9921875 C32.28195796 16.94731714 31.32600574 17.90281844 30.3704071 18.8586731 C28.37721632 20.85030721 26.38073314 22.83855803 24.3815918 24.82421875 C21.81397637 27.37474131 19.25309764 29.93190195 16.69439411 32.49136162 C14.72593911 34.45954555 12.75489584 36.4251195 10.78294945 38.38980484 C9.37653239 39.79148103 7.97162209 41.19466854 6.56672668 42.59786987 C5.71882065 43.43939606 4.87091461 44.28092224 3.99731445 45.14794922 C3.2477095 45.89374237 2.49810455 46.63953552 1.7257843 47.40792847 C0 49 0 49 -1 49 C-1.03025234 45.14585142 -1.04719674 41.29173459 -1.0625 37.4375 C-1.07087891 36.39013672 -1.07925781 35.34277344 -1.08789062 34.26367188 C-1.12152879 22.79305601 -0.50036189 11.50832337 0 0 Z \",fill:\"#737170\",transform:\"translate(975,0)\"})),_path252||(_path252=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0 20.46 0 31 0 C31 8.25 31 16.5 31 25 C34.96 25 38.92 25 43 25 C43 33.91 43 42.82 43 52 C38.71 52 34.42 52 30 52 C30 43.42 30 34.84 30 26 C20.1 26 10.2 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#5C5B5A\",transform:\"translate(730,334)\"})),_path253||(_path253=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.27 0 12.54 0 19 0 C19 7.92 19 15.84 19 24 C12.4 24 5.8 24 -1 24 C-1 31.59 -1 39.18 -1 47 C-10.57 47 -20.14 47 -30 47 C-30 39.08 -30 31.16 -30 23 C-20.43 23 -10.86 23 -1 23 C-0.67 15.41 -0.34 7.82 0 0 Z \",fill:\"#8A8886\",transform:\"translate(1005,48)\"})),_path254||(_path254=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0.33 5.28 0.66 8 1 C8 8.92 8 16.84 8 25 C17.9 25 27.8 25 38 25 C38 33.25 38 41.5 38 50 C19.19 50.495 19.19 50.495 0 51 C0 34.17 0 17.34 0 0 Z \",fill:\"#626261\",transform:\"translate(0,746)\"})),_path255||(_path255=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.6 0 13.2 0 20 0 C20 7.59 20 15.18 20 23 C13.73 23 7.46 23 1 23 C1 30.59 1 38.18 1 46 C-8.9 46.33 -18.8 46.66 -29 47 C-29 39.08 -29 31.16 -29 23 C-19.43 22.67 -9.86 22.34 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#63615F\",transform:\"translate(1004,118)\"})),_path256||(_path256=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.91014662 4.55379759 1.05131709 8.73125159 0.87890625 13.3671875 C0.84348976 14.38656906 0.84348976 14.38656906 0.80735779 15.42654419 C0.73138273 17.5762779 0.64707883 19.72558937 0.5625 21.875 C0.50921284 23.34112585 0.45647301 24.80727169 0.40429688 26.2734375 C0.27585887 29.84921152 0.13995444 33.42465607 0 37 C-3.35023154 37.37414896 -6.7027597 37.66291657 -10.0625 37.9375 C-11.00544922 38.04384766 -11.94839844 38.15019531 -12.91992188 38.25976562 C-19.87322838 38.76854415 -19.87322838 38.76854415 -23.10717773 36.56274414 C-24.86860465 34.78815998 -26.43933289 32.95143776 -28 31 C-29.29608947 29.8356365 -30.60502625 28.68504353 -31.9375 27.5625 C-43.95042169 17.16535141 -43.95042169 17.16535141 -46 12 C-46 11.01 -46 10.02 -46 9 C-45.13761719 8.97421875 -44.27523437 8.9484375 -43.38671875 8.921875 C-29.92136586 8.29624086 -16.07199663 6.3808772 -3.71484375 0.734375 C-2 0 -2 0 0 0 Z \",fill:\"#6E6C6A\",transform:\"translate(698,631)\"})),_path257||(_path257=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.6 0 13.2 0 20 0 C20 7.92 20 15.84 20 24 C13.4 24 6.8 24 0 24 C0 30.93 0 37.86 0 45 C-9.57 45 -19.14 45 -29 45 C-29 37.74 -29 30.48 -29 23 C-19.43 23 -9.86 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#63615F\",transform:\"translate(1004,72)\"})),_path258||(_path258=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C31.00005304 3.00015912 31.11575585 4.97423756 31.09765625 8.10546875 C31.09443359 9.08837891 31.09121094 10.07128906 31.08789062 11.08398438 C31.07951172 12.10814453 31.07113281 13.13230469 31.0625 14.1875 C31.05798828 15.22326172 31.05347656 16.25902344 31.04882812 17.32617188 C31.03704026 19.8841392 31.01910482 22.44207686 31 25 C34.96 25 38.92 25 43 25 C43 33.25 43 41.5 43 50 C38.71 50 34.42 50 30 50 C30 41.75 30 33.5 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#7E7D7C\",transform:\"translate(730,464)\"})),_path259||(_path259=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.6 0.33 13.2 0.66 20 1 C20 18.16 20 35.32 20 53 C13.07 53 6.14 53 -1 53 C-1 44.42 -1 35.84 -1 27 C-7.27 27 -13.54 27 -20 27 C-20 26.67 -20 26.34 -20 26 C-13.4 26 -6.8 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#726F6D\",transform:\"translate(1004,281)\"})),_path260||(_path260=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.80791016 0.00966797 1.80791016 0.00966797 3.65234375 0.01953125 C5.53373047 0.04466797 5.53373047 0.04466797 7.453125 0.0703125 C8.72285156 0.07933594 9.99257812 0.08835937 11.30078125 0.09765625 C14.43508593 0.12122245 17.56901041 0.15412418 20.703125 0.1953125 C20.7906377 3.42430676 20.84368646 6.65299366 20.890625 9.8828125 C20.91576172 10.79482422 20.94089844 11.70683594 20.96679688 12.64648438 C21.06011495 21.20064106 21.06011495 21.20064106 17.703125 25.1953125 C16.1502249 26.70812051 14.54167157 28.16527441 12.890625 29.5703125 C9.74531447 32.28053685 7.15060066 34.80613656 4.765625 38.1953125 C2.84821406 40.60180217 1.95154809 41.137612 -1.10546875 41.84765625 C-3.85467831 42.10331523 -6.53717323 42.22968601 -9.296875 42.1953125 C-9.791875 44.6703125 -9.791875 44.6703125 -10.296875 47.1953125 C-10.626875 47.1953125 -10.956875 47.1953125 -11.296875 47.1953125 C-11.1580092 42.77839777 -11.00958228 38.36185494 -10.859375 33.9453125 C-10.82005859 32.69105469 -10.78074219 31.43679688 -10.74023438 30.14453125 C-10.69833984 28.93925781 -10.65644531 27.73398437 -10.61328125 26.4921875 C-10.55829468 24.82687988 -10.55829468 24.82687988 -10.50219727 23.12792969 C-10.32911785 20.65583706 -9.91516359 18.57514028 -9.296875 16.1953125 C-9.5134375 15.1125 -9.5134375 15.1125 -9.734375 14.0078125 C-10.52271377 10.06611867 -10.37542955 6.20159449 -10.296875 2.1953125 C-6.80840678 0.05027566 -4.05281622 -0.03823412 0 0 Z \",fill:\"#6C6A6A\",transform:\"translate(107.296875,871.8046875)\"})),_path261||(_path261=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 3.3 1 6.6 1 10 C7.6 10 14.2 10 21 10 C21.04597368 16.441423 21.08578127 22.88227399 21.10986328 29.32373047 C21.11990526 31.51385429 21.13354147 33.70396475 21.15087891 35.89404297 C21.17520627 39.04658306 21.18650131 42.19894548 21.1953125 45.3515625 C21.20563507 46.32678864 21.21595764 47.30201477 21.22659302 48.30679321 C21.22674408 49.22729462 21.22689514 50.14779602 21.22705078 51.09619141 C21.231492 51.9000528 21.23593323 52.70391418 21.24050903 53.53213501 C21 56 21 56 19 62 C13.06 62 7.12 62 1 62 C0.85522529 56.38480936 0.71209428 50.76961923 0.57275391 45.15429688 C0.52514772 43.25388358 0.47667951 41.35349164 0.42724609 39.453125 C0.08584807 26.29885002 -0.06438051 13.15866133 0 0 Z \",fill:\"#716F6E\",transform:\"translate(251,272)\"})),_path262||(_path262=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.70556641 -0.34057617 2.70556641 -0.34057617 6.1015625 -0.29296875 C7.19291504 -0.28547607 8.28426758 -0.2779834 9.40869141 -0.27026367 C10.80007324 -0.24295166 12.19145508 -0.21563965 13.625 -0.1875 C20.245625 -0.0946875 20.245625 -0.0946875 27 0 C27 15.51 27 31.02 27 47 C34.92 47.33 42.84 47.66 51 48 C51 48.33 51 48.66 51 49 C43.08 49 35.16 49 27 49 C27 54.61 27 60.22 27 66 C22.6842186 62.43478928 18.57837078 58.71412126 14.5625 54.8125 C13.69753906 53.97332031 12.83257812 53.13414062 11.94140625 52.26953125 C10 50 10 50 10 47 C15.28 47 20.56 47 26 47 C26 39.41 26 31.82 26 24 C16.76 24 7.52 24 -2 24 C-2 28.62 -2 33.24 -2 38 C-7.27002208 33.60831493 -12.35302051 29.0573621 -17 24 C-17 23.67 -17 23.34 -17 23 C-12.05 23 -7.1 23 -2 23 C-2.02320313 21.59105469 -2.04640625 20.18210938 -2.0703125 18.73046875 C-2.08907038 16.88281779 -2.10727056 15.03516111 -2.125 13.1875 C-2.14175781 12.25873047 -2.15851563 11.32996094 -2.17578125 10.37304688 C-2.18222656 9.48037109 -2.18867188 8.58769531 -2.1953125 7.66796875 C-2.20578613 6.84578857 -2.21625977 6.0236084 -2.22705078 5.17651367 C-2 3 -2 3 0 0 Z \",fill:\"#605E5C\",transform:\"translate(189,141)\"})),_path263||(_path263=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 17.82 0 35.64 0 54 C-8.39073068 47.70695199 -15.55799423 41.78642113 -22.3359375 33.8203125 C-23.88379879 31.90876334 -23.88379879 31.90876334 -26 31 C-26 30.34 -26 29.68 -26 29 C-26.8353125 28.690625 -26.8353125 28.690625 -27.6875 28.375 C-30.92501302 26.44999226 -32.68231141 23.96149098 -35 21 C-30.38 21 -25.76 21 -21 21 C-20.93941406 19.97519531 -20.87882813 18.95039062 -20.81640625 17.89453125 C-20.73194974 16.53384305 -20.64730433 15.17316657 -20.5625 13.8125 C-20.52318359 13.13896484 -20.48386719 12.46542969 -20.44335938 11.77148438 C-20.21072435 8.10300898 -19.82792989 4.58305794 -19 1 C-12.43686385 -0.19329748 -6.96308479 0 0 0 Z \",fill:\"#747170\",transform:\"translate(1024,958)\"})),_path264||(_path264=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.19847194 5.93454271 13.6296626 12.57530375 20.17382812 19.21289062 C24.65057482 23.72853737 29.16379072 28.08810224 33.99243164 32.22387695 C37.99590487 35.7658042 41.7308461 39.58743004 45.5 43.375 C46.32242188 44.19355469 47.14484375 45.01210937 47.9921875 45.85546875 C48.76820313 46.63277344 49.54421875 47.41007812 50.34375 48.2109375 C51.04693359 48.91524902 51.75011719 49.61956055 52.47460938 50.34521484 C54 52 54 52 54 53 C48.67132017 54.10941367 43.53718145 54.11548069 38.125 54.0625 C37.24585938 54.05798828 36.36671875 54.05347656 35.4609375 54.04882812 C33.30726197 54.03712337 31.15362183 54.01919069 29 54 C29.00523682 54.6612085 29.01047363 55.32241699 29.01586914 56.00366211 C29.03657656 58.98159851 29.04964012 61.95951982 29.0625 64.9375 C29.07087891 65.97841797 29.07925781 67.01933594 29.08789062 68.09179688 C29.09111328 69.08115234 29.09433594 70.07050781 29.09765625 71.08984375 C29.10289307 72.00628662 29.10812988 72.92272949 29.11352539 73.86694336 C29 76 29 76 28 77 C25.30345146 77.07319621 22.63308542 77.09242537 19.9375 77.0625 C19.17888672 77.05798828 18.42027344 77.05347656 17.63867188 77.04882812 C15.75908129 77.0370068 13.87953101 77.01907078 12 77 C12 76.67 12 76.34 12 76 C16.95 76 21.9 76 27 76 C26.98839844 74.48792969 26.97679687 72.97585937 26.96484375 71.41796875 C26.89771925 58.5720169 27.15349893 45.81844471 28 33 C27.30438965 33.00523682 26.6087793 33.01047363 25.89208984 33.01586914 C22.71973587 33.03674337 19.54739639 33.04969332 16.375 33.0625 C14.73337891 33.07506836 14.73337891 33.07506836 13.05859375 33.08789062 C11.46337891 33.09272461 11.46337891 33.09272461 9.8359375 33.09765625 C8.37486572 33.10551147 8.37486572 33.10551147 6.88427734 33.11352539 C3.85124679 32.99414506 0.98084732 32.55866724 -2 32 C-2.22587773 28.73012965 -2.42766605 25.45920719 -2.625 22.1875 C-2.68945312 21.25873047 -2.75390625 20.32996094 -2.8203125 19.37304688 C-2.871875 18.48037109 -2.9234375 17.58769531 -2.9765625 16.66796875 C-3.02893066 15.84578857 -3.08129883 15.0236084 -3.13525391 14.17651367 C-3 12 -3 12 -1 9 C-0.835 8.29875 -0.67 7.5975 -0.5 6.875 C-0.335 6.25625 -0.17 5.6375 0 5 C0.66 4.67 1.32 4.34 2 4 C1.34 2.68 0.68 1.36 0 0 Z \",fill:\"#6B6968\",transform:\"translate(160,156)\"})),_path265||(_path265=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C8.91 0 17.82 0 27 0 C27.4375 8.375 27.4375 8.375 27.56811523 11.00927734 C27.70995942 15.13733776 27.70995942 15.13733776 29 19 C29.66902344 18.98839844 30.33804688 18.97679687 31.02734375 18.96484375 C40.05184469 18.88004978 49.00069546 19.40288975 58 20 C59.89178514 28.21274976 59.27252229 36.72860508 58 45 C57.01 44.67 56.02 44.34 55 44 C54.06929687 44 53.13859375 44 52.1796875 44 C43.41416309 44 43.41416309 44 39.42578125 41.1796875 C37.17746659 38.86466891 35.09474091 36.45383935 33 34 C31.64869722 32.78560219 30.27442981 31.59611015 28.875 30.4375 C25.49195683 27.53870953 22.59375099 24.40741434 19.73828125 20.9921875 C17.59997841 18.54154829 15.31656596 16.28328197 13 14 C10.72673015 11.75244975 8.45678329 9.50157428 6.1875 7.25 C5.2912793 6.36634766 5.2912793 6.36634766 4.37695312 5.46484375 C2.89903092 3.99536682 1.44698549 2.49994982 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#696766\",transform:\"translate(855,847)\"})),_path266||(_path266=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C29.875 11.875 29.875 11.875 29.81982422 15.61669922 C29.8148291 16.58623535 29.80983398 17.55577148 29.8046875 18.5546875 C29.79421387 19.54968262 29.78374023 20.54467773 29.77294922 21.56982422 C29.75620599 24.18171417 29.75620599 24.18171417 32 26 C32.31884766 28.33837891 32.31884766 28.33837891 32.4140625 31.2265625 C32.47207031 32.7734375 32.47207031 32.7734375 32.53125 34.3515625 C32.5621875 35.43179688 32.593125 36.51203125 32.625 37.625 C32.68300781 39.25695312 32.68300781 39.25695312 32.7421875 40.921875 C32.83666247 43.61441165 32.92222431 46.30693757 33 49 C30.33858071 46.41462126 27.91413651 43.8939496 25.57421875 41.00390625 C22.91086684 37.89598877 20.06188428 35.39081915 16.8125 32.9375 C16.24805176 32.50630859 15.68360352 32.07511719 15.10205078 31.63085938 C10.96606671 28.54608028 6.73539606 26.06649124 2.0234375 23.9375 C0 23 0 23 -3 21 C-2.01 21 -1.02 21 0 21 C0 14.07 0 7.14 0 0 Z \",fill:\"#696868\",transform:\"translate(698,464)\"})),_path267||(_path267=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 4.95 1 9.9 1 15 C11.395 14.505 11.395 14.505 22 14 C25.21167316 19.13867705 27.83263623 23.46881828 30.2265625 28.87890625 C30.50092133 29.49467026 30.77528015 30.11043427 31.05795288 30.74485779 C31.91926988 32.68163128 32.7722343 34.6219487 33.625 36.5625 C34.20258375 37.86417259 34.78070539 39.16560665 35.359375 40.46679688 C36.91606048 43.97360817 38.464096 47.48402239 40 51 C40.41810944 51.91856277 40.41810944 51.91856277 40.84466553 52.85568237 C42.60967359 56.79838306 43.31724052 59.66437952 43 64 C41 65 41 65 30 65 C30 57.74 30 50.48 30 43 C20.43 42.67 10.86 42.34 1 42 C-0.18451025 13.57175399 -0.18451025 13.57175399 0 0 Z \",fill:\"#555655\",transform:\"translate(365,548)\"})),_path268||(_path268=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.58 30 17.16 30 26 C20.1 26 10.2 26 0 26 C0 34.58 0 43.16 0 52 C-2.64 52 -5.28 52 -8 52 C-8 43.09 -8 34.18 -8 25 C-5.36 25 -2.72 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#898989\",transform:\"translate(8,590)\"})),_path269||(_path269=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 8.25 1 16.5 1 25 C4.3 25 7.6 25 11 25 C14.125 26 14.125 26 16 27 C12.20279711 31.55664347 8.24857073 35.78904808 4.01953125 39.9453125 C1.41677386 42.59337902 -0.97920904 45.39017005 -3.359375 48.23828125 C-5.81558001 50.87577758 -7.6867818 52.86283627 -11.38183594 53.2487793 C-12.24067383 53.19117432 -13.09951172 53.13356934 -13.984375 53.07421875 C-14.91894531 53.01943359 -15.85351562 52.96464844 -16.81640625 52.90820312 C-18.26853516 52.79895508 -18.26853516 52.79895508 -19.75 52.6875 C-20.73355469 52.62626953 -21.71710938 52.56503906 -22.73046875 52.50195312 C-25.15495584 52.34895151 -27.57748027 52.18114966 -30 52 C-30.33 53.32 -30.66 54.64 -31 56 C-31 45.77 -31 35.54 -31 25 C-20.77 25 -10.54 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#585755\",transform:\"translate(365,616)\"})),_path270||(_path270=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C13.86 0.495 13.86 0.495 28 1 C28.375 11.6875 28.375 11.6875 28.47802734 15.0300293 C28.5136377 15.91086182 28.54924805 16.79169434 28.5859375 17.69921875 C28.63306885 19.04246216 28.63306885 19.04246216 28.68115234 20.4128418 C28.94843022 23.48740637 28.94843022 23.48740637 31 28 C39.58 28 48.16 28 57 28 C58 30 58 30 57.44262695 31.76831055 C57.12769287 32.46738525 56.81275879 33.16645996 56.48828125 33.88671875 C56.14216797 34.66080078 55.79605469 35.43488281 55.43945312 36.23242188 C55.06755859 37.04259766 54.69566406 37.85277344 54.3125 38.6875 C53.95994141 39.47833984 53.60738281 40.26917969 53.24414062 41.08398438 C51.07325337 45.89009857 48.68987493 50.46425152 46 55 C44.17708333 54.73958333 42.35416667 54.47916667 40.53125 54.21875 C37.01230242 53.91464342 33.53189545 53.97032021 30 54 C30.03665771 53.33991943 30.07331543 52.67983887 30.11108398 51.99975586 C30.25750358 48.97948757 30.34790481 45.95996618 30.4375 42.9375 C30.49615234 41.89916016 30.55480469 40.86082031 30.61523438 39.79101562 C30.80047806 33.98708192 30.80047806 33.98708192 28.53588867 28.79956055 C26.77539804 27.02599292 24.99086212 25.50683801 23 24 C21.80784674 22.98460473 20.61976362 21.96439321 19.4375 20.9375 C18.78523438 20.37417969 18.13296875 19.81085938 17.4609375 19.23046875 C14.07211836 16.15901521 10.81257987 12.96722174 7.5625 9.75 C6.934646 9.13503662 6.30679199 8.52007324 5.65991211 7.88647461 C4.77831421 7.0068103 4.77831421 7.0068103 3.87890625 6.109375 C3.3485376 5.58311523 2.81816895 5.05685547 2.27172852 4.51464844 C1 3 1 3 0 0 Z \",fill:\"#777776\",transform:\"translate(395,385)\"})),_path271||(_path271=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.47689552 -0.01441132 1.47689552 -0.01441132 2.98362732 -0.02911377 C4.56966515 -0.03548859 4.56966515 -0.03548859 6.18774414 -0.04199219 C7.82617027 -0.0505423 7.82617027 -0.0505423 9.49769592 -0.05926514 C11.80672235 -0.06870576 14.11576219 -0.07524539 16.42480469 -0.07910156 C19.95604887 -0.08882081 23.4867143 -0.11985922 27.01782227 -0.15136719 C29.26195944 -0.15789617 31.50610077 -0.16314705 33.75024414 -0.16699219 C34.80557846 -0.17933899 35.86091278 -0.19168579 36.94822693 -0.20440674 C46.17227371 -0.17638113 46.17227371 -0.17638113 50.03540039 3.16113281 C50.53040039 4.15113281 50.53040039 4.15113281 51.03540039 5.16113281 C52.15495117 5.33128906 52.15495117 5.33128906 53.29711914 5.50488281 C56.88567112 6.36490668 58.32065832 8.01234842 60.84790039 10.66113281 C61.6380957 11.47582031 62.42829102 12.29050781 63.24243164 13.12988281 C65.03540039 15.16113281 65.03540039 15.16113281 65.03540039 16.16113281 C28.40540039 15.66613281 28.40540039 15.66613281 -8.96459961 15.16113281 C-8.96459961 10.54113281 -8.96459961 5.92113281 -8.96459961 1.16113281 C-5.66375089 0.33592063 -3.33001684 0.02630783 0 0 Z \",fill:\"#747271\",transform:\"translate(676.964599609375,720.8388671875)\"})),_path272||(_path272=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.6 0 13.2 0 20 0 C20.33 7.92 20.66 15.84 21 24 C26.94 24 32.88 24 39 24 C39 32.58 39 41.16 39 50 C33.06 50 27.12 50 21 50 C20.3608091 41.29102398 19.88031859 32.73674295 20 24 C13.4 24 6.8 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#727270\",transform:\"translate(252,489)\"})),_path273||(_path273=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.03447266 -0.00128906 2.06894531 -0.00257813 3.13476562 -0.00390625 C4.18986328 -0.00003906 5.24496094 0.00382813 6.33203125 0.0078125 C7.93208008 0.00201172 7.93208008 0.00201172 9.56445312 -0.00390625 C11.11036133 -0.00197266 11.11036133 -0.00197266 12.6875 0 C14.08005005 0.00169189 14.08005005 0.00169189 15.50073242 0.00341797 C18.14453125 0.1328125 18.14453125 0.1328125 23.14453125 1.1328125 C23.14453125 9.3828125 23.14453125 17.6328125 23.14453125 26.1328125 C21.13488281 26.12121094 19.12523437 26.10960937 17.0546875 26.09765625 C15.11531701 26.0907051 13.17594622 26.08378854 11.23657227 26.07788086 C9.88532739 26.07284193 8.53408799 26.06601073 7.18286133 26.05737305 C5.24432691 26.04528831 3.30575325 26.04011422 1.3671875 26.03515625 C0.19937744 26.02991943 -0.96843262 26.02468262 -2.17163086 26.01928711 C-4.77438426 25.82619755 -4.77438426 25.82619755 -5.85546875 27.1328125 C-8.49546875 27.1328125 -11.13546875 27.1328125 -13.85546875 27.1328125 C-13.85546875 18.5528125 -13.85546875 9.9728125 -13.85546875 1.1328125 C-9.00409822 0.52639118 -4.78462621 0.00579202 0 0 Z \",fill:\"#7A7A79\",transform:\"translate(13.85546875,795.8671875)\"})),_path274||(_path274=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8 8.25 8 16.5 8 25 C11.526875 24.9690625 11.526875 24.9690625 15.125 24.9375 C22.80146809 24.90488495 30.3456966 25.36214138 38 26 C38 33.92 38 41.84 38 50 C28.1 50 18.2 50 8 50 C8 42.08 8 34.16 8 26 C5.36 25.67 2.72 25.34 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8D8C8A\",transform:\"translate(0,721)\"})),_path275||(_path275=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.92 30 15.84 30 24 C36.17648952 24.28726595 36.17648952 24.28726595 42.35327148 24.56811523 C47.93772732 24.8376232 53.44937229 25.32805219 59 26 C59 26.33 59 26.66 59 27 C58.2471875 27.12375 57.494375 27.2475 56.71875 27.375 C46.85806973 29.2896952 38.78123861 33.25429852 30 38 C30 33.71 30 29.42 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#80817E\",transform:\"translate(577,335)\"})),_path276||(_path276=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.88494141 -0.00128906 1.76988281 -0.00257813 2.68164062 -0.00390625 C4.05545898 0.00189453 4.05545898 0.00189453 5.45703125 0.0078125 C6.38451172 0.00394531 7.31199219 0.00007813 8.26757812 -0.00390625 C9.14865234 -0.00261719 10.02972656 -0.00132812 10.9375 0 C11.74469482 0.00112793 12.55188965 0.00225586 13.38354492 0.00341797 C15.26953125 0.1328125 15.26953125 0.1328125 16.26953125 1.1328125 C16.34197178 3.15245449 16.35330313 5.17448374 16.33203125 7.1953125 C16.32300781 8.30003906 16.31398438 9.40476562 16.3046875 10.54296875 C16.29308594 11.39761719 16.28148437 12.25226563 16.26953125 13.1328125 C12.82254298 14.16324197 9.56027843 14.33075953 5.97265625 14.44921875 C4.76738281 14.49111328 3.56210937 14.53300781 2.3203125 14.57617188 C0.43892578 14.63514648 0.43892578 14.63514648 -1.48046875 14.6953125 C-2.75019531 14.73849609 -4.01992188 14.78167969 -5.328125 14.82617188 C-8.46211255 14.93220905 -11.59627643 15.03301098 -14.73046875 15.1328125 C-14.73046875 23.3828125 -14.73046875 31.6328125 -14.73046875 40.1328125 C-20.67046875 39.8028125 -26.61046875 39.4728125 -32.73046875 39.1328125 C-33.09299754 26.4443049 -32.04594697 19.7934416 -23.73046875 10.1328125 C-17.28034742 3.8260272 -9.06013187 0.01260728 0 0 Z \",fill:\"#4E4E4E\",transform:\"translate(651.73046875,398.8671875)\"})),_path277||(_path277=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.93496219 7.06006885 2.12086777 13.94612235 2.0625 21.0625 C2.05798828 22.11888672 2.05347656 23.17527344 2.04882812 24.26367188 C2.03715918 26.84250908 2.02078885 29.42122294 2 32 C-2.33417493 33.44472498 -6.67761296 32.97004431 -11.1953125 32.78515625 C-15.38508369 32.64078742 -15.38508369 32.64078742 -19 34.5078125 C-19.495 35.24644531 -19.495 35.24644531 -20 36 C-20.40089844 35.57589844 -20.80179688 35.15179688 -21.21484375 34.71484375 C-24.37009011 31.45943084 -27.54247416 28.51301184 -31.1875 25.8125 C-35.29590987 22.70631469 -38.92968937 19.26210283 -42.5625 15.625 C-43.09963623 15.0885083 -43.63677246 14.5520166 -44.19018555 13.99926758 C-48 10.13492984 -48 10.13492984 -48 9 C-45.95840905 8.9727384 -43.91671037 8.95348655 -41.875 8.9375 C-40.73804687 8.92589844 -39.60109375 8.91429688 -38.4296875 8.90234375 C-35.1870844 8.994673 -32.18067388 9.38610094 -29 10 C-28.67 12.64 -28.34 15.28 -28 18 C-27.86722656 17.36191406 -27.73445313 16.72382812 -27.59765625 16.06640625 C-27.42105469 15.24011719 -27.24445313 14.41382812 -27.0625 13.5625 C-26.80146484 12.32693359 -26.80146484 12.32693359 -26.53515625 11.06640625 C-26 9 -26 9 -25 8 C-23.21928754 7.91273777 -21.4351686 7.89300959 -19.65234375 7.90234375 C-18.57275391 7.90556641 -17.49316406 7.90878906 -16.38085938 7.91210938 C-14.67639648 7.92467773 -14.67639648 7.92467773 -12.9375 7.9375 C-11.22723633 7.94426758 -11.22723633 7.94426758 -9.48242188 7.95117188 C-6.65489649 7.96300253 -3.8274736 7.9794859 -1 8 C-0.67 5.36 -0.34 2.72 0 0 Z \",fill:\"#797977\",transform:\"translate(125,63)\"})),_path278||(_path278=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.33 7.59 1.66 15.18 2 23 C16.85 23.495 16.85 23.495 32 24 C32.020625 28.269375 32.04125 32.53875 32.0625 36.9375 C32.071604 38.28577881 32.08070801 39.63405762 32.09008789 41.02319336 C32.09258545 42.07643799 32.09508301 43.12968262 32.09765625 44.21484375 C32.10289307 45.29886475 32.10812988 46.38288574 32.11352539 47.49975586 C32 50 32 50 31 51 C28.78144736 51.08783542 26.56011504 51.10694609 24.33984375 51.09765625 C23.34314415 51.09553383 23.34314415 51.09553383 22.3263092 51.09336853 C20.19666101 51.08775518 18.06711661 51.07520054 15.9375 51.0625 C14.49674631 51.05748671 13.05599097 51.05292351 11.61523438 51.04882812 C8.07675042 51.03863076 4.53849187 51.0190583 1 51 C1 42.09 1 33.18 1 24 C-5.6 24 -12.2 24 -19 24 C-19 23.67 -19 23.34 -19 23 C-12.73 23 -6.46 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#656361\",transform:\"translate(575,772)\"})),_path279||(_path279=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3.95261487 4.76307437 4.08333357 9.1666528 4 14 C7.63 14 11.26 14 15 14 C15 16.64 15 19.28 15 22 C14.67 22 14.34 22 14 22 C14 19.69 14 17.38 14 15 C10.37 15 6.74 15 3 15 C3.01160156 16.70929688 3.02320313 18.41859375 3.03515625 20.1796875 C3.04453343 22.41145725 3.05363371 24.64322817 3.0625 26.875 C3.07087891 28.00292969 3.07925781 29.13085938 3.08789062 30.29296875 C3.09272461 31.90751953 3.09272461 31.90751953 3.09765625 33.5546875 C3.10551147 35.04718018 3.10551147 35.04718018 3.11352539 36.56982422 C3 39 3 39 2 41 C-7.9 41 -17.8 41 -28 41 C-28 28.48344371 -28 28.48344371 -25 25 C-23.01171875 23.0703125 -23.01171875 23.0703125 -20.6875 21.125 C-14.04874401 15.33081947 -8.1815998 8.84319953 -2.23999023 2.34765625 C-1.50762794 1.55170432 -0.76481828 0.76481828 0 0 Z \",fill:\"#5F5E5C\",transform:\"translate(758,266)\"})),_path280||(_path280=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C30.36 0 60.72 0 92 0 C92 4.62 92 9.24 92 14 C71.87 14 51.74 14 31 14 C31 9.71 31 5.42 31 1 C20.77 1 10.54 1 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#868686\",transform:\"translate(668,242)\"})),_path281||(_path281=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2.33 0.99 2.66 1.98 3 3 C4.98 3.33 6.96 3.66 9 4 C9 12.58 9 21.16 9 30 C-0.9 30.33 -10.8 30.66 -21 31 C-21 38.59 -21 46.18 -21 54 C-23.64 54.33 -26.28 54.66 -29 55 C-29 46.75 -29 38.5 -29 30 C-26.69 30 -24.38 30 -22 30 C-21.67 21.75 -21.34 13.5 -21 5 C-20.34 5 -19.68 5 -19 5 C-19 4.01 -19 3.02 -19 2 C-18.34 2 -17.68 2 -17 2 C-16.87625 3.918125 -16.87625 3.918125 -16.75 5.875 C-16.40608063 9.10115674 -16.40608063 9.10115674 -14.375 11.5 C-10.48460778 12.31902994 -6.74360984 12.92992525 -3.125 11 C-1.3409178 7.82829831 -1.34891085 4.60541208 -1 1 C-0.67 0.67 -0.34 0.34 0 0 Z \",fill:\"#595859\",transform:\"translate(29,509)\"})),_path282||(_path282=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C28 7.26 28 14.52 28 22 C20.5625 22.9375 20.5625 22.9375 18.21704102 23.22631836 C14.81754008 23.41001195 14.81754008 23.41001195 12 25 C7.96839809 25.26293056 6.44107266 25.29404844 3 23 C2.67 23.66 2.34 24.32 2 25 C-1.875 24.125 -1.875 24.125 -3 23 C-5.32817964 22.63239269 -7.6618385 22.29758419 -10 22 C-9.89066104 24.43321489 -9.89066104 24.43321489 -9 27 C-6.73964641 28.46812974 -6.73964641 28.46812974 -4 29.4375 C-1.2578125 30.6640625 -1.2578125 30.6640625 1 32 C2.125 35.3125 2.125 35.3125 2 38 C-1.04981981 40.32367223 -3.22776533 41.88968076 -7.0625 42.4375 C-10.34648977 41.94839514 -12.30578494 40.90179887 -15 39 C-14.67 37.68 -14.34 36.36 -14 35 C-10.7 35.66 -7.4 36.32 -4 37 C-4 35.68 -4 34.36 -4 33 C-5.093125 32.731875 -6.18625 32.46375 -7.3125 32.1875 C-12.46501129 30.5282167 -12.46501129 30.5282167 -14 28 C-14.6359447 22.9124424 -14.6359447 22.9124424 -12.83203125 20.32421875 C-9.19084489 17.69231645 -4.2908315 18.84855889 0 19 C0 12.73 0 6.46 0 0 Z \",fill:\"#8A8B89\",transform:\"translate(39,0)\"})),_path283||(_path283=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.17539996 0.92652701 2.34010577 1.86663387 3.5 2.8125 C4.47453125 3.59560547 4.47453125 3.59560547 5.46875 4.39453125 C7 6 7 6 7 9 C4.36 9.33 1.72 9.66 -1 10 C-1.02505615 10.57443848 -1.0501123 11.14887695 -1.07592773 11.74072266 C-1.19269875 14.36899721 -1.31505419 16.99698395 -1.4375 19.625 C-1.47681641 20.52863281 -1.51613281 21.43226563 -1.55664062 22.36328125 C-1.59853516 23.24628906 -1.64042969 24.12929688 -1.68359375 25.0390625 C-1.72025146 25.84553223 -1.75690918 26.65200195 -1.79467773 27.48291016 C-2.0277943 30.34073628 -2.5286158 33.17169478 -3 36 C-12.57 36 -22.14 36 -32 36 C-32 27.42 -32 18.84 -32 10 C-11.27107062 8.81548975 -11.27107062 8.81548975 -1 9 C-1.020625 7.700625 -1.04125 6.40125 -1.0625 5.0625 C-1.08399454 3.70834367 -1.07148199 2.35243917 -1 1 C-0.67 0.67 -0.34 0.34 0 0 Z \",fill:\"#787776\",transform:\"translate(305,298)\"})),_path284||(_path284=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.51314157 3.76971235 2.15974372 5.58627894 1.9765625 10.07421875 C1.93096191 11.32549561 1.88536133 12.57677246 1.83837891 13.8659668 C1.76796387 15.45707275 1.69754883 17.04817871 1.625 18.6875 C1.41875 23.740625 1.2125 28.79375 1 34 C-9.56 34 -20.12 34 -31 34 C-30.67 25.09 -30.34 16.18 -30 7 C-20.1 7 -10.2 7 0 7 C0 4.69 0 2.38 0 0 Z \",fill:\"#5D5B5A\",transform:\"translate(454,608)\"})),_path285||(_path285=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.58338301 3.58338301 5.76924634 6.73068817 8.0625 11.125 C8.44172607 11.84421631 8.82095215 12.56343262 9.21166992 13.30444336 C14.35543792 23.31699478 18.49551049 33.78853814 22.77978516 44.18798828 C23.88116958 46.7261527 25.08791507 49.1486718 26.38671875 51.58984375 C28 55 28 55 27 58 C14.625 56.515 14.625 56.515 2 55 C1.505 57.475 1.505 57.475 1 60 C0.67 60 0.34 60 0 60 C0 40.2 0 20.4 0 0 Z \",fill:\"#616261\",transform:\"translate(334,456)\"})),_path286||(_path286=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C8.58 0 17.16 0 26 0 C26.33 7.92 26.66 15.84 27 24 C29.31 24 31.62 24 34 24 C34 32.91 34 41.82 34 51 C30.535 50.505 30.535 50.505 27 50 C27 41.75 27 33.5 27 25 C18.09 25 9.18 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#868483\",transform:\"translate(188,539)\"})),_path287||(_path287=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C12.54 0 25.08 0 38 0 C38 6.93 38 13.86 38 21 C34.82709287 22.58645357 31.41174616 22.12078213 27.9296875 22.09765625 C26.73534592 22.09553383 26.73534592 22.09553383 25.51687622 22.09336853 C22.9695462 22.08776345 20.42230353 22.07521014 17.875 22.0625 C16.14974085 22.05748565 14.42448033 22.05292263 12.69921875 22.04882812 C8.46608496 22.03864253 4.23314046 22.0190682 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#5F5D5B\",transform:\"translate(0,95)\"})),_path288||(_path288=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C2.31613281 1.98839844 3.63226562 1.97679687 4.98828125 1.96484375 C14.05958052 1.90963615 22.97603295 1.93835682 32 3 C32 9.27 32 15.54 32 22 C42.23 22 52.46 22 63 22 C63 22.99 63 23.98 63 25 C65.97 25 68.94 25 72 25 C71.01 25.99 70.02 26.98 69 28 C69 27.34 69 26.68 69 26 C66.13275314 26.57344937 65.1385485 26.8614515 63 29 C63 28.01 63 27.02 63 26 C47.655 26.495 47.655 26.495 32 27 C31.67 26.34 31.34 25.68 31 25 C16.15 24.505 16.15 24.505 1 24 C0.67 16.08 0.34 8.16 0 0 Z \",fill:\"#666463\",transform:\"translate(667,933)\"})),_path289||(_path289=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 5.61 1 11.22 1 17 C10.9 17 20.8 17 31 17 C31 25.58 31 34.16 31 43 C38.59 43 46.18 43 54 43 C54 43.33 54 43.66 54 44 C36.30701062 44.16109319 18.67673803 43.7113071 1 43 C0.34479743 28.65873091 -0.16502485 14.35716167 0 0 Z \",fill:\"#5F5E5D\",transform:\"translate(606,264)\"})),_path290||(_path290=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29.33 7.92 29.66 15.84 30 24 C34.29 24 38.58 24 43 24 C39.26704728 28.53287116 35.61513452 32.37382288 31 36 C30 33 30 33 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8B8A88\",transform:\"translate(158,797)\"})),_path291||(_path291=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.475 0.495 2.475 0.495 5 1 C4.34 10.24 3.68 19.48 3 29 C5.31 29 7.62 29 10 29 C10 29.33 10 29.66 10 30 C-8.315 29.505 -8.315 29.505 -27 29 C-27 20.42 -27 11.84 -27 3 C-18.09 2.67 -9.18 2.34 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#5F5E5B\",transform:\"translate(482,639)\"})),_path292||(_path292=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.91 30 17.82 30 27 C20.1 27 10.2 27 0 27 C0 18.09 0 9.18 0 0 Z \",fill:\"#878684\",transform:\"translate(883,796)\"})),_path293||(_path293=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.91 30 17.82 30 27 C20.1 27 10.2 27 0 27 C0 18.09 0 9.18 0 0 Z \",fill:\"#898987\",transform:\"translate(638,796)\"})),_path294||(_path294=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0 20.46 0 31 0 C31 8.58 31 17.16 31 26 C20.77 26 10.54 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#82817F\",transform:\"translate(576,668)\"})),_path295||(_path295=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 4.62 1 9.24 1 14 C16.345 13.505 16.345 13.505 32 13 C31.67 13.66 31.34 14.32 31 15 C30.84655791 16.88472859 30.75040429 18.77427874 30.68359375 20.6640625 C30.64548584 21.6742041 30.60737793 22.6843457 30.56811523 23.72509766 C30.52501221 25.01206543 30.48190918 26.2990332 30.4375 27.625 C30.293125 31.70875 30.14875 35.7925 30 40 C20.1 40 10.2 40 0 40 C0 31.42 0 22.84 0 14 C-2.64 14 -5.28 14 -8 14 C-8 13.67 -8 13.34 -8 13 C-4.535 12.505 -4.535 12.505 -1 12 C-0.67 8.04 -0.34 4.08 0 0 Z \",fill:\"#5B5957\",transform:\"translate(424,268)\"})),_path296||(_path296=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.25159912 0.00523682 2.50319824 0.01047363 3.79272461 0.01586914 C4.78942421 0.01799156 4.78942421 0.01799156 5.80625916 0.02015686 C7.93590735 0.02577021 10.06545175 0.03832485 12.19506836 0.05102539 C13.63582205 0.05603868 15.07657739 0.06060188 16.51733398 0.06469727 C20.05581794 0.07489463 23.59407649 0.09446709 27.13256836 0.11352539 C27.13256836 8.69352539 27.13256836 17.27352539 27.13256836 26.11352539 C16.90256836 26.11352539 6.67256836 26.11352539 -3.86743164 26.11352539 C-3.88805664 22.00915039 -3.90868164 17.90477539 -3.92993164 13.67602539 C-3.93903564 12.37995361 -3.94813965 11.08388184 -3.95751953 9.74853516 C-3.96001709 8.735896 -3.96251465 7.72325684 -3.96508789 6.67993164 C-3.97032471 5.63780518 -3.97556152 4.59567871 -3.98095703 3.52197266 C-3.81522307 0.00591783 -3.56218448 0.14103157 0 0 Z \",fill:\"#7E7C7B\",transform:\"translate(548.867431640625,641.886474609375)\"})),_path297||(_path297=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.16781006 0.00523682 2.33562012 0.01047363 3.53881836 0.01586914 C4.67327393 0.0183667 5.80772949 0.02086426 6.9765625 0.0234375 C9.15560181 0.03709351 9.15560181 0.03709351 11.37866211 0.05102539 C15.97803711 0.07165039 20.57741211 0.09227539 25.31616211 0.11352539 C25.64616211 14.30352539 25.97616211 28.49352539 26.31616211 43.11352539 C24.83116211 42.61852539 24.83116211 42.61852539 23.31616211 42.11352539 C23.31616211 37.49352539 23.31616211 32.87352539 23.31616211 28.11352539 C14.40616211 27.78352539 5.49616211 27.45352539 -3.68383789 27.11352539 C-3.70446289 22.84415039 -3.72508789 18.57477539 -3.74633789 14.17602539 C-3.75544189 12.82774658 -3.7645459 11.47946777 -3.77392578 10.09033203 C-3.77642334 9.0370874 -3.7789209 7.98384277 -3.78149414 6.89868164 C-3.78673096 5.81466064 -3.79196777 4.73063965 -3.79736328 3.61376953 C-3.63937027 0.1341859 -3.4971947 0.1479301 0 0 Z \",fill:\"#6D6D6C\",transform:\"translate(428.683837890625,693.886474609375)\"})),_path298||(_path298=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.20527344 0.00322266 2.41054688 0.00644531 3.65234375 0.00976562 C4.90660156 0.01814453 6.16085937 0.02652344 7.453125 0.03515625 C9.35771484 0.04192383 9.35771484 0.04192383 11.30078125 0.04882812 C14.43494336 0.06061069 17.56901041 0.07706209 20.703125 0.09765625 C21.84013417 7.0363276 22.24369118 13.10804492 18.4765625 19.24609375 C14.97582199 23.9597537 11.19002608 28.39615765 5.22265625 29.59667969 C-0.40468057 29.91842204 -5.78001238 29.15791918 -11.296875 28.09765625 C-11.32593424 24.34767255 -11.34369374 20.59771788 -11.359375 16.84765625 C-11.36775391 15.78417969 -11.37613281 14.72070312 -11.38476562 13.625 C-11.38798828 12.60019531 -11.39121094 11.57539063 -11.39453125 10.51953125 C-11.39976807 9.5769043 -11.40500488 8.63427734 -11.41040039 7.66308594 C-11.30655582 5.31642188 -10.96394029 3.34121147 -10.296875 1.09765625 C-6.82022405 0.02877101 -3.62550022 -0.01710142 0 0 Z \",fill:\"#605E5D\",transform:\"translate(678.296875,306.90234375)\"})),_path299||(_path299=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 7.26 1 14.52 1 22 C10.9 22 20.8 22 31 22 C31 30.58 31 39.16 31 48 C21.1 48 11.2 48 1 48 C0.2370298 31.97762574 -0.13967339 16.03880266 0 0 Z \",fill:\"#615F5E\",transform:\"translate(606,0)\"})),_path300||(_path300=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.56488159 0.00374634 1.56488159 0.00374634 3.16137695 0.00756836 C5.12917114 0.02122437 5.12917114 0.02122437 7.13671875 0.03515625 C11.32359375 0.05578125 15.51046875 0.07640625 19.82421875 0.09765625 C19.82421875 8.67765625 19.82421875 17.25765625 19.82421875 26.09765625 C9.59421875 26.09765625 -0.63578125 26.09765625 -11.17578125 26.09765625 C-11.17578125 17.84765625 -11.17578125 9.59765625 -11.17578125 1.09765625 C-7.15359639 0.29321928 -4.03548384 -0.01987923 0 0 Z \",fill:\"#8B8A89\",transform:\"translate(138.17578125,589.90234375)\"})),_path301||(_path301=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.20591797 -0.00128906 2.41183594 -0.00257813 3.65429688 -0.00390625 C4.92466797 -0.00003906 6.19503906 0.00382812 7.50390625 0.0078125 C8.77041016 0.00394531 10.03691406 0.00007813 11.34179688 -0.00390625 C12.54900391 -0.00261719 13.75621094 -0.00132812 15 0 C16.11431396 0.00112793 17.22862793 0.00225586 18.37670898 0.00341797 C21.06640625 0.1328125 21.06640625 0.1328125 23.06640625 1.1328125 C23.06640625 9.3828125 23.06640625 17.6328125 23.06640625 26.1328125 C13.49640625 26.1328125 3.92640625 26.1328125 -5.93359375 26.1328125 C-5.93359375 34.0528125 -5.93359375 41.9728125 -5.93359375 50.1328125 C-6.26359375 50.1328125 -6.59359375 50.1328125 -6.93359375 50.1328125 C-6.95886213 43.17277803 -6.97642597 36.2127553 -6.98852539 29.25268555 C-6.99356716 26.88288938 -7.0004004 24.51309635 -7.0090332 22.14331055 C-7.02110565 18.74527211 -7.02682346 15.34727465 -7.03125 11.94921875 C-7.03641129 10.88256485 -7.04157257 9.81591095 -7.04689026 8.7169342 C-7.04696579 7.73599289 -7.04704132 6.75505157 -7.04711914 5.74438477 C-7.04933975 4.87612564 -7.05156036 4.00786652 -7.05384827 3.11329651 C-6.79552118 -1.1411188 -3.54814874 0.00359514 0 0 Z \",fill:\"#848280\",transform:\"translate(828.93359375,333.8671875)\"})),_path302||(_path302=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.91845703 0.00322266 1.83691406 0.00644531 2.78320312 0.00976562 C4.17249023 0.02233398 4.17249023 0.02233398 5.58984375 0.03515625 C6.55083984 0.03966797 7.51183594 0.04417969 8.50195312 0.04882812 C10.84381797 0.06047919 13.18554556 0.076836 15.52734375 0.09765625 C15.55620912 4.41014234 15.5740963 8.72260387 15.58984375 13.03515625 C15.59822266 14.26685547 15.60660156 15.49855469 15.61523438 16.76757812 C15.62006836 18.52231445 15.62006836 18.52231445 15.625 20.3125 C15.63285522 21.93853149 15.63285522 21.93853149 15.64086914 23.59741211 C15.52734375 26.09765625 15.52734375 26.09765625 14.52734375 27.09765625 C12.38175548 27.1854123 10.23329954 27.20460844 8.0859375 27.1953125 C6.78076172 27.19208984 5.47558594 27.18886719 4.13085938 27.18554688 C2.74218685 27.17719026 1.35351498 27.1687253 -0.03515625 27.16015625 C-1.42773281 27.15514291 -2.82031106 27.15057972 -4.21289062 27.14648438 C-7.63283076 27.13465067 -11.05274875 27.11671456 -14.47265625 27.09765625 C-14.47265625 18.51765625 -14.47265625 9.93765625 -14.47265625 1.09765625 C-4.34765625 -0.02734375 -4.34765625 -0.02734375 0 0 Z \",fill:\"#888785\",transform:\"translate(529.47265625,795.90234375)\"})),_path303||(_path303=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C3 5.95 3 10.9 3 16 C12.9 16 22.8 16 33 16 C33 29 33 29 31.05859375 32.02734375 C30.19363281 32.65769531 29.32867188 33.28804688 28.4375 33.9375 C27.51453125 34.63488281 26.5915625 35.33226562 25.640625 36.05078125 C24.76921875 36.69402344 23.8978125 37.33726562 23 38 C21.89139319 39.20426094 20.78662393 40.41207788 19.6875 41.625 C17.20461766 43.80801733 16.06453316 43.99726683 12.6796875 44.140625 C9.43952559 43.90268654 6.21556726 43.46410249 3 43 C3 47.95 3 52.9 3 58 C2.67 58 2.34 58 2 58 C2 44.14 2 30.28 2 16 C-6.25 16 -14.5 16 -23 16 C-23 15.67 -23 15.34 -23 15 C-15.74 15 -8.48 15 -1 15 C-1 14.34 -1 13.68 -1 13 C-0.34 13 0.32 13 1 13 C0.505 6.565 0.505 6.565 0 0 Z \",fill:\"#5B5A59\",transform:\"translate(574,344)\"})),_path304||(_path304=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.33 6.6 1.66 13.2 2 20 C11.9 20.33 21.8 20.66 32 21 C32 35.625 32 35.625 31.5 40.8125 C31.36078125 42.30716797 31.36078125 42.30716797 31.21875 43.83203125 C31.1465625 44.54746094 31.074375 45.26289062 31 46 C28.25021483 46.17109774 25.50026381 46.33692346 22.75 46.5 C21.99203125 46.54769531 21.2340625 46.59539063 20.453125 46.64453125 C13.96549674 47.02297623 7.49740129 47.05004417 1 47 C0.26035566 31.32190062 -0.14027702 15.69543984 0 0 Z \",fill:\"#646361\",transform:\"translate(667,959)\"})),_path305||(_path305=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C38.7460205 10.72001744 38.7460205 10.72001744 52 22 C51.34 22.99 50.68 23.98 50 25 C47.86129761 25.36076355 47.86129761 25.36076355 45.18310547 25.34057617 C44.18221893 25.34034958 43.1813324 25.34012299 42.15011597 25.33988953 C41.06674957 25.32440567 39.98338318 25.30892181 38.8671875 25.29296875 C37.20672897 25.28660149 37.20672897 25.28660149 35.51272583 25.28010559 C31.9665729 25.26327214 28.42098203 25.2256108 24.875 25.1875 C22.47526861 25.17245922 20.07552833 25.15876977 17.67578125 25.14648438 C11.78346184 25.1159014 5.89236226 25.05718684 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#777777\",transform:\"translate(637,513)\"})),_path306||(_path306=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 3.96 1 7.92 1 12 C10.9 12 20.8 12 31 12 C31 20.25 31 28.5 31 37 C31.66 37 32.32 37 33 37 C32.67 37.99 32.34 38.98 32 40 C32 39.34 32 38.68 32 38 C21.77 38 11.54 38 1 38 C-0.18451025 10.31207289 -0.18451025 10.31207289 0 0 Z \",fill:\"#5A5958\",transform:\"translate(514,270)\"})),_path307||(_path307=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.754375 -0.0309375 5.754375 -0.0309375 11.625 -0.0625 C12.82334473 -0.071604 14.02168945 -0.08070801 15.25634766 -0.09008789 C16.6956665 -0.09383423 16.6956665 -0.09383423 18.1640625 -0.09765625 C19.62513428 -0.10551147 19.62513428 -0.10551147 21.11572266 -0.11352539 C24.14875321 0.00585494 27.01915268 0.44133276 30 1 C31.00005304 4.00015912 31.11575585 5.97423756 31.09765625 9.10546875 C31.09515869 9.99129639 31.09266113 10.87712402 31.09008789 11.78979492 C31.08098389 12.9110376 31.07187988 14.03228027 31.0625 15.1875 C31.041875 18.755625 31.02125 22.32375 31 26 C20.77 26 10.54 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#807F7E\",transform:\"translate(424,360)\"})),_path308||(_path308=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.91 30 17.82 30 27 C23.73 27 17.46 27 11 27 C11.99 28.32 12.98 29.64 14 31 C13.67 31.66 13.34 32.32 13 33 C-0.1414791 22.84145437 -0.1414791 22.84145437 -1.56494141 16.47216797 C-1.87471621 10.73335018 -0.92155768 5.78067997 0 0 Z \",fill:\"#8A8888\",transform:\"translate(944,916)\"})),_path309||(_path309=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.20140625 -0.00128906 2.4028125 -0.00257812 3.640625 -0.00390625 C4.90648437 -0.00003906 6.17234375 0.00382812 7.4765625 0.0078125 C8.7346875 0.00394531 9.9928125 0.00007813 11.2890625 -0.00390625 C13.09503906 -0.00197266 13.09503906 -0.00197266 14.9375 0 C16.60111572 0.00169189 16.60111572 0.00169189 18.29833984 0.00341797 C21.1015625 0.1328125 21.1015625 0.1328125 24.1015625 1.1328125 C24.1015625 9.3828125 24.1015625 17.6328125 24.1015625 26.1328125 C13.8715625 26.1328125 3.6415625 26.1328125 -6.8984375 26.1328125 C-6.9190625 22.0284375 -6.9396875 17.9240625 -6.9609375 13.6953125 C-6.9700415 12.39924072 -6.97914551 11.10316895 -6.98852539 9.76782227 C-6.99102295 8.75518311 -6.99352051 7.74254395 -6.99609375 6.69921875 C-7.00133057 5.65709229 -7.00656738 4.61496582 -7.01196289 3.54125977 C-6.79277617 -1.1087983 -4.03348426 0.00411041 0 0 Z \",fill:\"#8A8887\",transform:\"translate(919.8984375,21.8671875)\"})),_path310||(_path310=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.33 7.59 1.66 15.18 2 23 C17.84 23.495 17.84 23.495 34 24 C32.02 24.99 32.02 24.99 30 26 C30 33.59 30 41.18 30 49 C30.99 49.33 31.98 49.66 33 50 C22.44 50 11.88 50 1 50 C1 41.42 1 32.84 1 24 C0.34 23.67 -0.32 23.34 -1 23 C-0.67 15.41 -0.34 7.82 0 0 Z \",fill:\"#5E5D5A\",transform:\"translate(187,362)\"})),_path311||(_path311=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C0.67 9.9 0.34 19.8 0 30 C-9.9 30 -19.8 30 -30 30 C-30 21.42 -30 12.84 -30 4 C-20.1 4 -10.2 4 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#585654\",transform:\"translate(395,252)\"})),_path312||(_path312=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30.165 4.063125 30.33 8.12625 30.5 12.3125 C30.57831055 14.22929565 30.57831055 14.22929565 30.65820312 16.18481445 C30.69880859 17.1924585 30.73941406 18.20010254 30.78125 19.23828125 C30.82314453 20.26993408 30.86503906 21.30158691 30.90820312 22.36450195 C30.97360204 24.24211189 31 26.12125145 31 28 C30.67 27.67 30.34 27.34 30 27 C27.78312006 26.84126045 25.56144702 26.74866163 23.33984375 26.68359375 C22.34314415 26.6524221 22.34314415 26.6524221 21.3263092 26.62062073 C19.19681457 26.55506342 17.06719332 26.49621215 14.9375 26.4375 C13.49673153 26.39432061 12.05597601 26.35070651 10.61523438 26.30664062 C7.07695097 26.19855473 3.53857603 26.09952907 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#5E5C5A\",transform:\"translate(8,360)\"})),_path313||(_path313=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.58 30 17.16 30 26 C20.1 26 10.2 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#8C8C8A\",transform:\"translate(883,979)\"})),_path314||(_path314=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.58 30 17.16 30 26 C20.1 26 10.2 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#817F7D\",transform:\"translate(425,642)\"})),_path315||(_path315=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.58 30 17.16 30 26 C20.1 26 10.2 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#878785\",transform:\"translate(8,642)\"})),_path316||(_path316=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.58 30 17.16 30 26 C20.1 26 10.2 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#8A8987\",transform:\"translate(944,564)\"})),_path317||(_path317=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.58 30 17.16 30 26 C20.1 26 10.2 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#848280\",transform:\"translate(158,386)\"})),_path318||(_path318=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.58 30 17.16 30 26 C20.1 26 10.2 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#898887\",transform:\"translate(8,386)\"})),_path319||(_path319=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.58 30 17.16 30 26 C20.1 26 10.2 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#8B8A88\",transform:\"translate(97,360)\"})),_path320||(_path320=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.58 30 17.16 30 26 C20.1 26 10.2 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#838280\",transform:\"translate(365,308)\"})),_path321||(_path321=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.58 30 17.16 30 26 C20.1 26 10.2 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#7F7F7D\",transform:\"translate(607,308)\"})),_path322||(_path322=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.58 30 17.16 30 26 C20.1 26 10.2 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#858482\",transform:\"translate(515,308)\"})),_path323||(_path323=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.58 30 17.16 30 26 C20.1 26 10.2 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#80807E\",transform:\"translate(424,308)\"})),_path324||(_path324=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.58 30 17.16 30 26 C20.1 26 10.2 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#8B8A89\",transform:\"translate(97,308)\"})),_path325||(_path325=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.58 30 17.16 30 26 C20.1 26 10.2 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#8E8D8B\",transform:\"translate(791,22)\"})),_path326||(_path326=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.58 30 17.16 30 26 C20.1 26 10.2 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#8E8D8B\",transform:\"translate(730,22)\"})),_path327||(_path327=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.11177927 -0.02291394 8.22339658 -0.04283951 12.33520508 -0.05493164 C13.73495228 -0.0599708 15.1346942 -0.06680216 16.53442383 -0.07543945 C18.54245777 -0.0875232 20.55052957 -0.09269807 22.55859375 -0.09765625 C24.37315063 -0.10551147 24.37315063 -0.10551147 26.22436523 -0.11352539 C29 0 29 0 30 1 C30.08737645 2.85369611 30.10698153 4.71067541 30.09765625 6.56640625 C30.09515869 7.57904541 30.09266113 8.59168457 30.09008789 9.63500977 C30.08098389 10.93108154 30.07187988 12.22715332 30.0625 13.5625 C30.041875 17.666875 30.02125 21.77125 30 26 C20.1 26 10.2 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#807F7D\",transform:\"translate(455,668)\"})),_path328||(_path328=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.58 30 17.16 30 26 C25.88822073 26.02291394 21.77660342 26.04283951 17.66479492 26.05493164 C16.26504772 26.0599708 14.8653058 26.06680216 13.46557617 26.07543945 C11.45754223 26.0875232 9.44947043 26.09269807 7.44140625 26.09765625 C6.23170166 26.10289307 5.02199707 26.10812988 3.77563477 26.11352539 C1 26 1 26 0 25 C-0.08737645 23.14630389 -0.10698153 21.28932459 -0.09765625 19.43359375 C-0.09515869 18.42095459 -0.09266113 17.40831543 -0.09008789 16.36499023 C-0.08098389 15.06891846 -0.07187988 13.77284668 -0.0625 12.4375 C-0.041875 8.333125 -0.02125 4.22875 0 0 Z \",fill:\"#8D8B8A\",transform:\"translate(974,590)\"})),_path329||(_path329=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.58 30 17.16 30 26 C25.88822073 26.02291394 21.77660342 26.04283951 17.66479492 26.05493164 C16.26504772 26.0599708 14.8653058 26.06680216 13.46557617 26.07543945 C11.45754223 26.0875232 9.44947043 26.09269807 7.44140625 26.09765625 C6.23170166 26.10289307 5.02199707 26.10812988 3.77563477 26.11352539 C1 26 1 26 0 25 C-0.08737645 23.14630389 -0.10698153 21.28932459 -0.09765625 19.43359375 C-0.09515869 18.42095459 -0.09266113 17.40831543 -0.09008789 16.36499023 C-0.08098389 15.06891846 -0.07187988 13.77284668 -0.0625 12.4375 C-0.041875 8.333125 -0.02125 4.22875 0 0 Z \",fill:\"#888785\",transform:\"translate(97,564)\"})),_path330||(_path330=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.11177927 -0.02291394 8.22339658 -0.04283951 12.33520508 -0.05493164 C13.73495228 -0.0599708 15.1346942 -0.06680216 16.53442383 -0.07543945 C18.54245777 -0.0875232 20.55052957 -0.09269807 22.55859375 -0.09765625 C24.37315063 -0.10551147 24.37315063 -0.10551147 26.22436523 -0.11352539 C29 0 29 0 30 1 C30.08737645 2.85369611 30.10698153 4.71067541 30.09765625 6.56640625 C30.09515869 7.57904541 30.09266113 8.59168457 30.09008789 9.63500977 C30.08098389 10.93108154 30.07187988 12.22715332 30.0625 13.5625 C30.041875 17.666875 30.02125 21.77125 30 26 C20.1 26 10.2 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#8A8987\",transform:\"translate(883,386)\"})),_path331||(_path331=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.20970459 0.00523682 2.41940918 0.01047363 3.66577148 0.01586914 C4.97094727 0.0190918 6.27612305 0.02231445 7.62084961 0.02563477 C9.00952213 0.03399138 10.39819401 0.04245634 11.78686523 0.05102539 C13.17944179 0.05603873 14.57202005 0.06060193 15.96459961 0.06469727 C19.38453974 0.07653097 22.80445773 0.09446708 26.22436523 0.11352539 C26.22436523 8.69352539 26.22436523 17.27352539 26.22436523 26.11352539 C16.32436523 26.11352539 6.42436523 26.11352539 -3.77563477 26.11352539 C-3.79625977 22.00915039 -3.81688477 17.90477539 -3.83813477 13.67602539 C-3.84723877 12.37995361 -3.85634277 11.08388184 -3.86572266 9.74853516 C-3.86822021 8.735896 -3.87071777 7.72325684 -3.87329102 6.67993164 C-3.87852783 5.63780518 -3.88376465 4.59567871 -3.88916016 3.52197266 C-3.7258134 0.05656255 -3.50002666 0.14315352 0 0 Z \",fill:\"#898886\",transform:\"translate(130.775634765625,333.886474609375)\"})),_path332||(_path332=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30.020625 4.104375 30.04125 8.20875 30.0625 12.4375 C30.071604 13.73357178 30.08070801 15.02964355 30.09008789 16.36499023 C30.09258545 17.37762939 30.09508301 18.39026855 30.09765625 19.43359375 C30.10551147 20.99678345 30.10551147 20.99678345 30.11352539 22.59155273 C30 25 30 25 29 26 C26.85441173 26.08775605 24.70595579 26.10695219 22.55859375 26.09765625 C21.25341797 26.09443359 19.94824219 26.09121094 18.60351562 26.08789062 C17.2148431 26.07953401 15.82617123 26.07106905 14.4375 26.0625 C13.04492344 26.05748666 11.65234519 26.05292347 10.25976562 26.04882812 C6.83982549 26.03699442 3.4199075 26.01905831 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#817F7D\",transform:\"translate(852,308)\"})),_path333||(_path333=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.67536977 -0.02255523 15.35072729 -0.04091753 23.02612209 -0.05181217 C26.58977422 -0.05703995 30.15340257 -0.06413569 33.71704102 -0.07543945 C37.81006097 -0.08834176 41.9030558 -0.09322906 45.99609375 -0.09765625 C47.92418129 -0.10539818 47.92418129 -0.10539818 49.89122009 -0.11329651 C51.66294334 -0.11340981 51.66294334 -0.11340981 53.47045898 -0.11352539 C55.03932106 -0.11685631 55.03932106 -0.11685631 56.63987732 -0.12025452 C59 0 59 0 60 1 C60 4.96 60 8.92 60 13 C40.2 13 20.4 13 0 13 C0 8.71 0 4.42 0 0 Z \",fill:\"#7B7B79\",transform:\"translate(455,243)\"})),_path334||(_path334=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.87498404 -0.02917234 7.74993958 -0.04685673 11.625 -0.0625 C12.71941406 -0.07087891 13.81382812 -0.07925781 14.94140625 -0.08789062 C16.53662109 -0.09272461 16.53662109 -0.09272461 18.1640625 -0.09765625 C19.62513428 -0.10551147 19.62513428 -0.10551147 21.11572266 -0.11352539 C24 0 24 0 30 1 C30 9.25 30 17.5 30 26 C20.1 26 10.2 26 0 26 C-0.185625 22.08125 -0.37125 18.1625 -0.5625 14.125 C-0.62381104 12.89023926 -0.68512207 11.65547852 -0.74829102 10.38330078 C-0.79139404 9.41376465 -0.83449707 8.44422852 -0.87890625 7.4453125 C-0.9260376 6.45031738 -0.97316895 5.45532227 -1.02172852 4.43017578 C-1 2 -1 2 0 0 Z \",fill:\"#848280\",transform:\"translate(944,282)\"})),_path335||(_path335=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C30.33257403 33.16628702 30.33257403 33.16628702 29 46 C28.67 46 28.34 46 28 46 C28 39.4 28 32.8 28 26 C18.76 26 9.52 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#666462\",transform:\"translate(187,22)\"})),_path336||(_path336=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.43754015 -0.02689418 8.8749184 -0.04678777 13.3125 -0.0625 C14.57513672 -0.07087891 15.83777344 -0.07925781 17.13867188 -0.08789062 C18.95141602 -0.09272461 18.95141602 -0.09272461 20.80078125 -0.09765625 C21.91622314 -0.10289307 23.03166504 -0.10812988 24.1809082 -0.11352539 C27 0 27 0 30 1 C30 9.25 30 17.5 30 26 C20.1 26 10.2 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#838180\",transform:\"translate(485,282)\"})),_path337||(_path337=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.58 30 17.16 30 26 C25.7925 26.020625 21.585 26.04125 17.25 26.0625 C15.9290332 26.071604 14.60806641 26.08070801 13.24707031 26.09008789 C11.67844238 26.09383423 11.67844238 26.09383423 10.078125 26.09765625 C9.00981445 26.10289307 7.94150391 26.10812988 6.84082031 26.11352539 C4 26 4 26 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8E8C8B\",transform:\"translate(974,797)\"})),_path338||(_path338=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.91644287 0.00249756 1.83288574 0.00499512 2.77709961 0.00756836 C3.9141333 0.01667236 5.05116699 0.02577637 6.22265625 0.03515625 C11.69859375 0.06609375 11.69859375 0.06609375 17.28515625 0.09765625 C17.61515625 8.67765625 17.94515625 17.25765625 18.28515625 26.09765625 C8.05515625 26.09765625 -2.17484375 26.09765625 -12.71484375 26.09765625 C-12.71484375 17.84765625 -12.71484375 9.59765625 -12.71484375 1.09765625 C-8.19216217 0.45155888 -4.45396049 -0.02516362 0 0 Z \",fill:\"#7C7B7A\",transform:\"translate(649.71484375,667.90234375)\"})),_path339||(_path339=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0 20.46 0 31 0 C31 8.25 31 16.5 31 25 C20.77 25 10.54 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#868483\",transform:\"translate(852,616)\"})),_path340||(_path340=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.25159912 0.00523682 2.50319824 0.01047363 3.79272461 0.01586914 C4.78942421 0.01799156 4.78942421 0.01799156 5.80625916 0.02015686 C7.93590735 0.02577021 10.06545175 0.03832485 12.19506836 0.05102539 C13.63582205 0.05603868 15.07657739 0.06060188 16.51733398 0.06469727 C20.05581794 0.07489463 23.59407649 0.09446709 27.13256836 0.11352539 C27.13256836 8.36352539 27.13256836 16.61352539 27.13256836 25.11352539 C11.78756836 25.60852539 11.78756836 25.60852539 -3.86743164 26.11352539 C-3.88805664 22.00915039 -3.90868164 17.90477539 -3.92993164 13.67602539 C-3.93903564 12.37995361 -3.94813965 11.08388184 -3.95751953 9.74853516 C-3.96001709 8.735896 -3.96251465 7.72325684 -3.96508789 6.67993164 C-3.97032471 5.63780518 -3.97556152 4.59567871 -3.98095703 3.52197266 C-3.81522307 0.00591783 -3.56218448 0.14103157 0 0 Z \",fill:\"#72706F\",transform:\"translate(548.867431640625,513.886474609375)\"})),_path341||(_path341=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 8.58 0 17.16 0 26 C-4.09360308 26.04588098 -8.1865522 26.08571438 -12.28027344 26.10986328 C-13.67320781 26.11992877 -15.06612102 26.13358234 -16.45898438 26.15087891 C-18.4595436 26.1751022 -20.46025615 26.18540814 -22.4609375 26.1953125 C-23.66540527 26.20578613 -24.86987305 26.21625977 -26.11083984 26.22705078 C-29 26 -29 26 -31 24 C-31.22705078 21.75341797 -31.22705078 21.75341797 -31.1953125 18.9921875 C-31.18886719 18.00605469 -31.18242188 17.01992188 -31.17578125 16.00390625 C-31.15902344 14.97136719 -31.14226563 13.93882812 -31.125 12.875 C-31.11597656 11.83472656 -31.10695313 10.79445313 -31.09765625 9.72265625 C-31.07403747 7.14820908 -31.04110149 4.57421788 -31 2 C-20.50934616 -0.0758891 -10.67550006 -0.16298473 0 0 Z \",fill:\"#848381\",transform:\"translate(730,668)\"})),_path342||(_path342=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.97 0 5.94 0 9 0 C10.68158146 3.66864051 11.24028871 6.49416047 11.1953125 10.51953125 C11.19031738 11.44096924 11.18532227 12.36240723 11.18017578 13.31176758 C11.15286377 15.04463013 11.15286377 15.04463013 11.125 16.8125 C11.08375 20.504375 11.0425 24.19625 11 28 C1.1 28 -8.8 28 -19 28 C-19 19.75 -19 11.5 -19 3 C-12.07 3 -5.14 3 2 3 C2 2.34 2 1.68 2 1 C1.34 0.67 0.68 0.34 0 0 Z \",fill:\"#807F7D\",transform:\"translate(292,639)\"})),_path343||(_path343=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.65742187 -0.00386719 1.31484375 -0.00773438 1.9921875 -0.01171875 C7.92311005 -0.00035683 13.52553135 0.58186649 19.5 1.125 C19.5 9.375 19.5 17.625 19.5 26.125 C9.27 26.125 -0.96 26.125 -11.5 26.125 C-11.17 17.875 -10.84 9.625 -10.5 1.125 C-6.93789528 -0.06236824 -3.70541304 -0.02081693 0 0 Z \",fill:\"#646261\",transform:\"translate(771.5,978.875)\"})),_path344||(_path344=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29.33 8.91 29.66 17.82 30 27 C15.15 26.505 15.15 26.505 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#8B8A89\",transform:\"translate(455,797)\"})),_path345||(_path345=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.7225 0.020625 5.445 0.04125 8.25 0.0625 C8.25 8.6425 8.25 17.2225 8.25 26.0625 C-1.65 26.0625 -11.55 26.0625 -21.75 26.0625 C-21.75 17.8125 -21.75 9.5625 -21.75 1.0625 C-14.38645071 0.44887089 -7.33681706 -0.08042882 0 0 Z \",fill:\"#888886\",transform:\"translate(29.75,694.9375)\"})),_path346||(_path346=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.7225 0.020625 5.445 0.04125 8.25 0.0625 C8.25 8.6425 8.25 17.2225 8.25 26.0625 C-1.65 26.0625 -11.55 26.0625 -21.75 26.0625 C-21.75 17.8125 -21.75 9.5625 -21.75 1.0625 C-14.38645071 0.44887089 -7.33681706 -0.08042882 0 0 Z \",fill:\"#8D8B8A\",transform:\"translate(965.75,615.9375)\"})),_path347||(_path347=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.908125 0.020625 5.81625 0.04125 8.8125 0.0625 C8.8125 8.6425 8.8125 17.2225 8.8125 26.0625 C4.70072073 26.08541394 0.58910342 26.10533951 -3.52270508 26.11743164 C-4.92245228 26.1224708 -6.3221942 26.12930216 -7.72192383 26.13793945 C-9.72995777 26.1500232 -11.73802957 26.15519807 -13.74609375 26.16015625 C-14.95579834 26.16539307 -16.16550293 26.17062988 -17.41186523 26.17602539 C-20.1875 26.0625 -20.1875 26.0625 -21.1875 25.0625 C-21.27476223 23.28178754 -21.29449041 21.4976686 -21.28515625 19.71484375 C-21.28193359 18.63525391 -21.27871094 17.55566406 -21.27539062 16.44335938 C-21.26701172 15.30705078 -21.25863281 14.17074219 -21.25 13 C-21.24548828 11.85982422 -21.24097656 10.71964844 -21.23632812 9.54492188 C-21.22449747 6.71739649 -21.2080141 3.8899736 -21.1875 1.0625 C-14.10022956 0.31313668 -7.12468936 -0.07273375 0 0 Z \",fill:\"#8A8A88\",transform:\"translate(118.1875,615.9375)\"})),_path348||(_path348=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 8.58 0 17.16 0 26 C-9.9 26 -19.8 26 -30 26 C-30 17.75 -30 9.5 -30 1 C-19.9297118 0.16080932 -10.10015096 -0.08859782 0 0 Z \",fill:\"#818180\",transform:\"translate(576,694)\"})),_path349||(_path349=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0 20.46 0 31 0 C31 14 31 14 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8C8A88\",transform:\"translate(944,514)\"})),_path350||(_path350=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 8.58 0 17.16 0 26 C-9.9 26 -19.8 26 -30 26 C-30.020625 22.060625 -30.04125 18.12125 -30.0625 14.0625 C-30.07615601 12.19670288 -30.07615601 12.19670288 -30.09008789 10.29321289 C-30.09383423 8.83516235 -30.09383423 8.83516235 -30.09765625 7.34765625 C-30.10289307 6.34742432 -30.10812988 5.34719238 -30.11352539 4.31665039 C-30 2 -30 2 -29 1 C-19.35885773 -0.1586536 -9.69081846 -0.09142282 0 0 Z \",fill:\"#8A8886\",transform:\"translate(127,513)\"})),_path351||(_path351=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.85687251 5.88340807 1.1248752 11.56055573 1.0625 17.5 C1.041875 20.305 1.02125 23.11 1 26 C-9.23 26 -19.46 26 -30 26 C-30 18.08 -30 10.16 -30 2 C-22.12218304 0.87459758 -22.12218304 0.87459758 -18.046875 0.68359375 C-16.7475 0.62075195 -16.7475 0.62075195 -15.421875 0.55664062 C-14.54015625 0.51732422 -13.6584375 0.47800781 -12.75 0.4375 C-11.8528125 0.39431641 -10.955625 0.35113281 -10.03125 0.30664062 C-6.68286318 0.14874514 -3.35260775 0 0 0 Z \",fill:\"#747371\",transform:\"translate(667,412)\"})),_path352||(_path352=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 1.65 2.64 3.3 4 5 C3.01 5.33 2.02 5.66 1 6 C1.226875 6.598125 1.45375 7.19625 1.6875 7.8125 C1.8421875 8.8953125 1.8421875 8.8953125 2 10 C1.51748779 10.44384033 1.03497559 10.88768066 0.5378418 11.3449707 C-1.49617806 13.5339881 -1.34929895 14.72002159 -1.29296875 17.66796875 C-1.28547607 18.47258545 -1.2779834 19.27720215 -1.27026367 20.10620117 C-1.24295166 21.12302979 -1.21563965 22.1398584 -1.1875 23.1875 C-1.125625 26.425625 -1.06375 29.66375 -1 33 C-10.9 33 -20.8 33 -31 33 C-32.25248502 30.49502996 -32.11374406 28.79146726 -32.09765625 25.9921875 C-32.09443359 25.00605469 -32.09121094 24.01992187 -32.08789062 23.00390625 C-32.07951172 21.97136719 -32.07113281 20.93882812 -32.0625 19.875 C-32.05798828 18.83472656 -32.05347656 17.79445312 -32.04882812 16.72265625 C-32.03701952 14.14838038 -32.02055075 11.57421854 -32 9 C-31.13197754 8.98541748 -30.26395508 8.97083496 -29.36962891 8.95581055 C-26.15261121 8.89479889 -22.93624337 8.82065609 -19.71972656 8.73754883 C-18.32693911 8.70427127 -16.93401589 8.67624803 -15.54101562 8.65356445 C-13.54008622 8.62007311 -11.53953079 8.56618695 -9.5390625 8.51171875 C-7.73236084 8.47244263 -7.73236084 8.47244263 -5.88916016 8.43237305 C-4.45902588 8.21834839 -4.45902588 8.21834839 -3 8 C-1.0549 5.08235 -0.54723683 3.37462715 0 0 Z \",fill:\"#888785\",transform:\"translate(159,155)\"})),_path353||(_path353=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 8.91 0 17.82 0 27 C-9.57 27 -19.14 27 -29 27 C-29 18.42 -29 9.84 -29 1 C-24.05 0.7525 -24.05 0.7525 -19 0.5 C-17.46472656 0.42168945 -17.46472656 0.42168945 -15.8984375 0.34179688 C-14.64933594 0.28088867 -14.64933594 0.28088867 -13.375 0.21875 C-12.11816406 0.1559082 -12.11816406 0.1559082 -10.8359375 0.09179688 C-7.22571955 -0.0250628 -3.61210877 0 0 0 Z \",fill:\"#8E8D8B\",transform:\"translate(1004,694)\"})),_path354||(_path354=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.58 30 17.16 30 26 C22.68945939 26 15.52294458 25.9572049 8.25 25.5 C5.5275 25.335 2.805 25.17 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8B8A88\",transform:\"translate(822,590)\"})),_path355||(_path355=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C31 13 31 13 31 25 C20.77 25 10.54 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#605E5C\",transform:\"translate(760,23)\"})),_path356||(_path356=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29.33 8.58 29.66 17.16 30 26 C20.1 26 10.2 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#858583\",transform:\"translate(305,797)\"})),_path357||(_path357=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 1.65 1 3.3 1 5 C10.9 5 20.8 5 31 5 C31 13.25 31 21.5 31 30 C21.43 30 11.86 30 2 30 C1.31871121 26.59355605 0.8454375 23.75418758 0.68359375 20.35546875 C0.62075195 19.09379883 0.62075195 19.09379883 0.55664062 17.80664062 C0.51732422 16.94232422 0.47800781 16.07800781 0.4375 15.1875 C0.39431641 14.30384766 0.35113281 13.42019531 0.30664062 12.50976562 C0.20108464 10.34000377 0.10008929 8.1700209 0 6 C-2.97 5.67 -5.94 5.34 -9 5 C-9 4.67 -9 4.34 -9 4 C-6.36 3.67 -3.72 3.34 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#545252\",transform:\"translate(729,484)\"})),_path358||(_path358=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 8.58 0 17.16 0 26 C-3.465 26.020625 -6.93 26.04125 -10.5 26.0625 C-11.57572266 26.071604 -12.65144531 26.08070801 -13.75976562 26.09008789 C-14.63310547 26.09258545 -15.50644531 26.09508301 -16.40625 26.09765625 C-17.28603516 26.10289307 -18.16582031 26.10812988 -19.07226562 26.11352539 C-22.73095659 25.97165654 -26.36683362 25.4541458 -30 25 C-30 17.08 -30 9.16 -30 1 C-19.94144569 -0.0316466 -10.10350885 -0.07654173 0 0 Z \",fill:\"#757473\",transform:\"translate(366,564)\"})),_path359||(_path359=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 36.3 1 72.6 1 110 C-3.62 110 -8.24 110 -13 110 C-13.0268245 105.85412418 -13.04675315 101.70841962 -13.0625 97.5625 C-13.07087891 96.37849609 -13.07925781 95.19449219 -13.08789062 93.97460938 C-13.09111328 92.84990234 -13.09433594 91.72519531 -13.09765625 90.56640625 C-13.10289307 89.52427979 -13.10812988 88.48215332 -13.11352539 87.40844727 C-13 85 -13 85 -12 84 C-8.04 84 -4.08 84 0 84 C0 75.42 0 66.84 0 58 C-3.96 58 -7.92 58 -12 58 C-12 49.42 -12 40.84 -12 32 C-8.04 32 -4.08 32 0 32 C0 21.44 0 10.88 0 0 Z \",fill:\"#868887\",transform:\"translate(773,584)\"})),_path360||(_path360=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C0.67 9.9 0.34 19.8 0 30 C-9.9 30 -19.8 30 -30 30 C-30 22.08 -30 14.16 -30 6 C-30.66 5.67 -31.32 5.34 -32 5 C-29.05383462 3.52691731 -26.52237406 3.99705308 -23.2421875 4.12109375 C-22.57913605 4.14470474 -21.91608459 4.16831573 -21.23294067 4.19264221 C-19.11340871 4.26926816 -16.99424315 4.35329643 -14.875 4.4375 C-13.43882006 4.49072181 -12.0026222 4.5434622 -10.56640625 4.59570312 C-7.04404564 4.72488144 -3.52197648 4.8607003 0 5 C0 3.35 0 1.7 0 0 Z \",fill:\"#615F5E\",transform:\"translate(396,184)\"})),_path361||(_path361=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0.33 19.8 0.66 30 1 C30.0309375 6.9090625 30.0309375 6.9090625 30.0625 12.9375 C30.071604 14.18136475 30.08070801 15.42522949 30.09008789 16.70678711 C30.09258545 17.6788208 30.09508301 18.65085449 30.09765625 19.65234375 C30.10551147 21.15269165 30.10551147 21.15269165 30.11352539 22.68334961 C30 25 30 25 29 26 C26.9394469 26.09993532 24.8754741 26.13080906 22.8125 26.1328125 C21.55695312 26.13410156 20.30140625 26.13539063 19.0078125 26.13671875 C18.35071289 26.13462402 17.69361328 26.1325293 17.01660156 26.13037109 C15.00838665 26.12502234 13.00039541 26.13031691 10.9921875 26.13671875 C9.73664062 26.13542969 8.48109375 26.13414062 7.1875 26.1328125 C6.02605469 26.13168457 4.86460937 26.13055664 3.66796875 26.12939453 C1 26 1 26 0 25 C-0.08737645 23.14630389 -0.10698153 21.28932459 -0.09765625 19.43359375 C-0.09515869 18.42095459 -0.09266113 17.40831543 -0.09008789 16.36499023 C-0.08098389 15.06891846 -0.07187988 13.77284668 -0.0625 12.4375 C-0.041875 8.333125 -0.02125 4.22875 0 0 Z \",fill:\"#898786\",transform:\"translate(822,642)\"})),_path362||(_path362=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.02474322 5.05370732 1.04288053 10.10737926 1.05493164 15.16113281 C1.0599563 16.87988906 1.0667771 18.59864105 1.07543945 20.31738281 C1.0875868 22.78972426 1.09324703 25.26200912 1.09765625 27.734375 C1.10281754 28.50118591 1.10797882 29.26799683 1.11329651 30.05804443 C1.11366245 33.54849615 0.93752738 36.64274473 0 40 C-5.93604038 41.30428569 -11.83429531 41.11048254 -17.875 41.0625 C-21.54625 41.041875 -25.2175 41.02125 -29 41 C-29 32.75 -29 24.5 -29 16 C-25.82212459 14.9407082 -23.57411057 14.88541061 -20.23828125 14.90234375 C-19.12001953 14.90556641 -18.00175781 14.90878906 -16.84960938 14.91210938 C-15.68236328 14.92048828 -14.51511719 14.92886719 -13.3125 14.9375 C-12.13365234 14.94201172 -10.95480469 14.94652344 -9.74023438 14.95117188 C-6.82680133 14.96296715 -3.91339433 14.98090273 -1 15 C-0.67 10.05 -0.34 5.1 0 0 Z \",fill:\"#605E5C\",transform:\"translate(514,124)\"})),_path363||(_path363=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.58 30 17.16 30 26 C19.77 25.67 9.54 25.34 -1 25 C-0.67 16.75 -0.34 8.5 0 0 Z \",fill:\"#7A7978\",transform:\"translate(730,360)\"})),_path364||(_path364=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.58 29 17.16 29 26 C19.43 26 9.86 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#656462\",transform:\"translate(187,980)\"})),_path365||(_path365=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.58 29 17.16 29 26 C19.43 26 9.86 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#8A8987\",transform:\"translate(425,980)\"})),_path366||(_path366=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.58 29 17.16 29 26 C19.43 26 9.86 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#888785\",transform:\"translate(306,980)\"})),_path367||(_path367=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.58 29 17.16 29 26 C19.43 26 9.86 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#888785\",transform:\"translate(216,980)\"})),_path368||(_path368=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.58 29 17.16 29 26 C19.43 26 9.86 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#8C8A89\",transform:\"translate(68,796)\"})),_path369||(_path369=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.58 29 17.16 29 26 C19.43 26 9.86 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#8D8B8A\",transform:\"translate(914,695)\"})),_path370||(_path370=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.58 29 17.16 29 26 C19.43 26 9.86 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#838381\",transform:\"translate(98,695)\"})),_path371||(_path371=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.58 29 17.16 29 26 C19.43 26 9.86 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#858483\",transform:\"translate(516,668)\"})),_path372||(_path372=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.58 30 17.16 30 26 C15.15 25.505 15.15 25.505 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#858382\",transform:\"translate(730,642)\"})),_path373||(_path373=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.55808656 0.96355353 10.55808656 0.96355353 15 2 C15.495 3.485 15.495 3.485 16 5 C11.38 4.34 6.76 3.68 2 3 C2.33 3.66 2.66 4.32 3 5 C3.08471364 6.81341842 3.10721083 8.62994161 3.09765625 10.4453125 C3.09515869 11.41484863 3.09266113 12.38438477 3.09008789 13.38330078 C3.08098389 14.61806152 3.07187988 15.85282227 3.0625 17.125 C3.041875 21.04375 3.02125 24.9625 3 29 C-6.9 29 -16.8 29 -27 29 C-27 21.08 -27 13.16 -27 5 C-17.76 5 -8.52 5 1 5 C0.67 3.35 0.34 1.7 0 0 Z \",fill:\"#82807F\",transform:\"translate(634,638)\"})),_path374||(_path374=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.58 29 17.16 29 26 C19.43 26 9.86 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#8D8C8A\",transform:\"translate(68,590)\"})),_path375||(_path375=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.58 29 17.16 29 26 C19.43 26 9.86 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#8B8988\",transform:\"translate(158,564)\"})),_path376||(_path376=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.58 29 17.16 29 26 C19.43 26 9.86 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#878684\",transform:\"translate(127,386)\"})),_path377||(_path377=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.58 29 17.16 29 26 C19.43 26 9.86 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#8D8B8A\",transform:\"translate(68,386)\"})),_path378||(_path378=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.58 29 17.16 29 26 C19.43 26 9.86 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#5F5D5B\",transform:\"translate(823,360)\"})),_path379||(_path379=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.58 29 17.16 29 26 C19.43 26 9.86 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#8C8A89\",transform:\"translate(68,334)\"})),_path380||(_path380=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 8.91 0 17.82 0 27 C-3.9693655 27.02291487 -7.9385632 27.04284015 -11.90795898 27.05493164 C-13.25920386 27.05997057 -14.61044326 27.06680177 -15.96166992 27.07543945 C-17.90020434 27.08752419 -19.838778 27.09269828 -21.77734375 27.09765625 C-23.52905884 27.10551147 -23.52905884 27.10551147 -25.31616211 27.11352539 C-28 27 -28 27 -29 26 C-29.25208722 22.19411856 -29.18522344 18.37574544 -29.1875 14.5625 C-29.19974609 13.48677734 -29.21199219 12.41105469 -29.22460938 11.30273438 C-29.22654297 10.27599609 -29.22847656 9.24925781 -29.23046875 8.19140625 C-29.23457764 7.24467041 -29.23868652 6.29793457 -29.24291992 5.32250977 C-29 3 -29 3 -27 1 C-24.61743164 0.68115234 -24.61743164 0.68115234 -21.66015625 0.5859375 C-20.59732422 0.54726563 -19.53449219 0.50859375 -18.43945312 0.46875 C-16.76786133 0.42234375 -16.76786133 0.42234375 -15.0625 0.375 C-13.39670898 0.31699219 -13.39670898 0.31699219 -11.69726562 0.2578125 C-7.79684594 0.1255148 -3.9028147 0 0 0 Z \",fill:\"#807E7D\",transform:\"translate(1003,308)\"})),_path381||(_path381=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0.33 19.14 0.66 29 1 C29.33 9.25 29.66 17.5 30 26 C14.655 26.495 14.655 26.495 -1 27 C-0.67 18.09 -0.34 9.18 0 0 Z \",fill:\"#5D5B59\",transform:\"translate(730,668)\"})),_path382||(_path382=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.21514282 -0.00688843 1.21514282 -0.00688843 2.45483398 -0.01391602 C8.31413911 0.00163911 8.31413911 0.00163911 9.4375 1.125 C9.45424294 2.98083223 9.40025607 4.83739363 9.31640625 6.69140625 C9.25175171 8.21036499 9.25175171 8.21036499 9.18579102 9.76000977 C9.12447998 11.05608154 9.06316895 12.35215332 9 13.6875 C8.814375 17.791875 8.62875 21.89625 8.4375 26.125 C-1.1325 26.125 -10.7025 26.125 -20.5625 26.125 C-20.583125 22.185625 -20.60375 18.24625 -20.625 14.1875 C-20.63865601 12.32170288 -20.63865601 12.32170288 -20.65258789 10.41821289 C-20.65633423 8.96016235 -20.65633423 8.96016235 -20.66015625 7.47265625 C-20.66539307 6.47242432 -20.67062988 5.47219238 -20.67602539 4.44165039 C-20.5625 2.125 -20.5625 2.125 -19.5625 1.125 C-13.03549072 0.1925701 -6.58174043 0.02144736 0 0 Z \",fill:\"#838280\",transform:\"translate(87.5625,693.875)\"})),_path383||(_path383=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30.33 8.25 30.66 16.5 31 25 C20.77 25 10.54 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#898785\",transform:\"translate(852,564)\"})),_path384||(_path384=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.12067871 0.01047363 2.24135742 0.02094727 3.39599609 0.03173828 C5.21357422 0.04140625 5.21357422 0.04140625 7.06787109 0.05126953 C8.33888672 0.06802734 9.60990234 0.08478516 10.91943359 0.10205078 C12.19818359 0.11107422 13.47693359 0.12009766 14.79443359 0.12939453 C17.96117939 0.15302696 21.12782944 0.18889892 24.29443359 0.22705078 C24.29443359 8.80705078 24.29443359 17.38705078 24.29443359 26.22705078 C14.72443359 26.22705078 5.15443359 26.22705078 -4.70556641 26.22705078 C-4.74681641 22.30830078 -4.78806641 18.38955078 -4.83056641 14.35205078 C-4.84877441 13.11729004 -4.86698242 11.8825293 -4.88574219 10.61035156 C-4.8907373 9.64081543 -4.89573242 8.6712793 -4.90087891 7.67236328 C-4.91135254 6.67736816 -4.92182617 5.68237305 -4.93261719 4.65722656 C-4.59565898 1.05068679 -3.56001829 0.29875627 0 0 Z \",fill:\"#5F5D5B\",transform:\"translate(72.70556640625,307.77294921875)\"})),_path385||(_path385=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.11177927 -0.02291394 8.22339658 -0.04283951 12.33520508 -0.05493164 C13.73495228 -0.0599708 15.1346942 -0.06680216 16.53442383 -0.07543945 C18.54245777 -0.0875232 20.55052957 -0.09269807 22.55859375 -0.09765625 C24.37315063 -0.10551147 24.37315063 -0.10551147 26.22436523 -0.11352539 C29 0 29 0 30 1 C30.08726223 2.78071246 30.10699041 4.5648314 30.09765625 6.34765625 C30.09515869 7.31968994 30.09266113 8.29172363 30.09008789 9.29321289 C30.08098389 10.53707764 30.07187988 11.78094238 30.0625 13.0625 C30.041875 17.001875 30.02125 20.94125 30 25 C20.1 25.33 10.2 25.66 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#888886\",transform:\"translate(637,22)\"})),_path386||(_path386=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.25 30 16.5 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8F8D8C\",transform:\"translate(944,771)\"})),_path387||(_path387=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.25 30 16.5 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8A8987\",transform:\"translate(852,771)\"})),_path388||(_path388=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.25 30 16.5 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8D8B8A\",transform:\"translate(883,721)\"})),_path389||(_path389=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.25 30 16.5 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#7E7C7B\",transform:\"translate(730,695)\"})),_path390||(_path390=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.25 30 16.5 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8C8A88\",transform:\"translate(914,643)\"})),_path391||(_path391=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.25 30 16.5 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#908F8D\",transform:\"translate(914,591)\"})),_path392||(_path392=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.25 30 16.5 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#898886\",transform:\"translate(852,514)\"})),_path393||(_path393=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.25 30 16.5 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8B8A88\",transform:\"translate(883,439)\"})),_path394||(_path394=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.25 30 16.5 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#888887\",transform:\"translate(8,439)\"})),_path395||(_path395=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.25 30 16.5 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8C8A89\",transform:\"translate(853,413)\"})),_path396||(_path396=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.25 30 16.5 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#898785\",transform:\"translate(974,387)\"})),_path397||(_path397=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.25 30 16.5 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#848280\",transform:\"translate(944,335)\"})),_path398||(_path398=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.25 30 16.5 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#807F7D\",transform:\"translate(699,334)\"})),_path399||(_path399=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.58 29 17.16 29 26 C19.76 26 10.52 26 1 26 C0.15058981 22.60235924 -0.11761783 20.2302673 -0.09765625 16.796875 C-0.09515869 15.91354492 -0.09266113 15.03021484 -0.09008789 14.12011719 C-0.08098389 13.00797852 -0.07187988 11.89583984 -0.0625 10.75 C-0.041875 7.2025 -0.02125 3.655 0 0 Z \",fill:\"#8B8988\",transform:\"translate(38,308)\"})),_path400||(_path400=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.25 30 16.5 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#848382\",transform:\"translate(577,282)\"})),_path401||(_path401=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.25 30 16.5 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8B8A88\",transform:\"translate(127,282)\"})),_path402||(_path402=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.25 30 16.5 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8C8A89\",transform:\"translate(852,22)\"})),_path403||(_path403=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.20970459 0.00523682 2.41940918 0.01047363 3.66577148 0.01586914 C4.97094727 0.0190918 6.27612305 0.02231445 7.62084961 0.02563477 C9.00952213 0.03399138 10.39819401 0.04245634 11.78686523 0.05102539 C13.17944179 0.05603873 14.57202005 0.06060193 15.96459961 0.06469727 C19.38453974 0.07653097 22.80445773 0.09446708 26.22436523 0.11352539 C26.22436523 8.36352539 26.22436523 16.61352539 26.22436523 25.11352539 C16.32436523 25.11352539 6.42436523 25.11352539 -3.77563477 25.11352539 C-3.79625977 21.17415039 -3.81688477 17.23477539 -3.83813477 13.17602539 C-3.85179077 11.31022827 -3.85179077 11.31022827 -3.86572266 9.40673828 C-3.86946899 7.94868774 -3.86946899 7.94868774 -3.87329102 6.46118164 C-3.87852783 5.46094971 -3.88376465 4.46071777 -3.88916016 3.43017578 C-3.72263412 0.03197025 -3.43741124 0.14059251 0 0 Z \",fill:\"#898886\",transform:\"translate(130.775634765625,720.886474609375)\"})),_path404||(_path404=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.11177927 -0.02291394 8.22339658 -0.04283951 12.33520508 -0.05493164 C13.73495228 -0.0599708 15.1346942 -0.06680216 16.53442383 -0.07543945 C18.54245777 -0.0875232 20.55052957 -0.09269807 22.55859375 -0.09765625 C24.37315063 -0.10551147 24.37315063 -0.10551147 26.22436523 -0.11352539 C29 0 29 0 30 1 C30.08726223 2.78071246 30.10699041 4.5648314 30.09765625 6.34765625 C30.09515869 7.31968994 30.09266113 8.29172363 30.09008789 9.29321289 C30.08098389 10.53707764 30.07187988 11.78094238 30.0625 13.0625 C30.041875 17.001875 30.02125 20.94125 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#868483\",transform:\"translate(127,642)\"})),_path405||(_path405=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.33 5.28 1.66 10.56 2 16 C11.57 15.67 21.14 15.34 31 15 C31 23.91 31 32.82 31 42 C16.15 41.505 16.15 41.505 1 41 C1.0625 29.0625 1.0625 29.0625 1.09008789 25.29321289 C1.09258545 24.3211792 1.09508301 23.34914551 1.09765625 22.34765625 C1.10289307 21.34742432 1.10812988 20.34719238 1.11352539 19.31665039 C1.26181095 17.03792772 1.26181095 17.03792772 0 16 C-0.07319621 13.30345146 -0.09242537 10.63308542 -0.0625 7.9375 C-0.05798828 7.17888672 -0.05347656 6.42027344 -0.04882812 5.63867188 C-0.0370068 3.75908129 -0.01907078 1.87953101 0 0 Z \",fill:\"#605E5D\",transform:\"translate(973,448)\"})),_path406||(_path406=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.25 30 16.5 30 25 C25.88822073 25.02291394 21.77660342 25.04283951 17.66479492 25.05493164 C16.26504772 25.0599708 14.8653058 25.06680216 13.46557617 25.07543945 C11.45754223 25.0875232 9.44947043 25.09269807 7.44140625 25.09765625 C6.23170166 25.10289307 5.02199707 25.10812988 3.77563477 25.11352539 C1 25 1 25 0 24 C-0.08726223 22.21928754 -0.10699041 20.4351686 -0.09765625 18.65234375 C-0.09515869 17.68031006 -0.09266113 16.70827637 -0.09008789 15.70678711 C-0.08098389 14.46292236 -0.07187988 13.21905762 -0.0625 11.9375 C-0.041875 7.998125 -0.02125 4.05875 0 0 Z \",fill:\"#757371\",transform:\"translate(335,282)\"})),_path407||(_path407=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.25 30 16.5 30 25 C25.88822073 25.02291394 21.77660342 25.04283951 17.66479492 25.05493164 C16.26504772 25.0599708 14.8653058 25.06680216 13.46557617 25.07543945 C11.45754223 25.0875232 9.44947043 25.09269807 7.44140625 25.09765625 C6.23170166 25.10289307 5.02199707 25.10812988 3.77563477 25.11352539 C1 25 1 25 0 24 C-0.08726223 22.21928754 -0.10699041 20.4351686 -0.09765625 18.65234375 C-0.09515869 17.68031006 -0.09266113 16.70827637 -0.09008789 15.70678711 C-0.08098389 14.46292236 -0.07187988 13.21905762 -0.0625 11.9375 C-0.041875 7.998125 -0.02125 4.05875 0 0 Z \",fill:\"#898887\",transform:\"translate(8,282)\"})),_path408||(_path408=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.11177927 -0.02291394 8.22339658 -0.04283951 12.33520508 -0.05493164 C13.73495228 -0.0599708 15.1346942 -0.06680216 16.53442383 -0.07543945 C18.54245777 -0.0875232 20.55052957 -0.09269807 22.55859375 -0.09765625 C24.37315063 -0.10551147 24.37315063 -0.10551147 26.22436523 -0.11352539 C29 0 29 0 30 1 C30.08726223 2.78071246 30.10699041 4.5648314 30.09765625 6.34765625 C30.09515869 7.31968994 30.09266113 8.29172363 30.09008789 9.29321289 C30.08098389 10.53707764 30.07187988 11.78094238 30.0625 13.0625 C30.041875 17.001875 30.02125 20.94125 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#898786\",transform:\"translate(67,22)\"})),_path409||(_path409=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.30286938 3.90860813 1.01353276 7.54342914 0.87890625 11.60546875 C0.85529526 12.44467361 0.83168427 13.28387848 0.80735779 14.14851379 C0.73079724 16.8283512 0.64674019 19.50789407 0.5625 22.1875 C0.50927169 24.00454289 0.45653134 25.82160014 0.40429688 27.63867188 C0.27610909 32.09268861 0.13778922 36.54622848 0 41 C-9.24 41.33 -18.48 41.66 -28 42 C-29 29 -29 29 -26.09765625 24.6953125 C-24.78735112 23.46705621 -23.44024277 22.27710151 -22.0625 21.125 C-21.36970947 20.49207031 -20.67691895 19.85914063 -19.96313477 19.20703125 C-18.00597834 17.43201601 -16.01368677 15.71029842 -14 14 C-12.72769531 12.88238281 -12.72769531 12.88238281 -11.4296875 11.7421875 C-10.17997945 10.64930556 -8.92200946 9.5657246 -7.65234375 8.49609375 C-4.79923823 5.91278544 -2.43091822 2.97787482 0 0 Z \",fill:\"#7E7C7A\",transform:\"translate(244,781)\"})),_path410||(_path410=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.25 30 16.5 30 25 C20.43 25 10.86 25 1 25 C-0.27861615 22.44276771 -0.11336609 20.63262898 -0.09765625 17.7734375 C-0.09515869 16.84450684 -0.09266113 15.91557617 -0.09008789 14.95849609 C-0.08098389 13.77594238 -0.07187988 12.59338867 -0.0625 11.375 C-0.041875 7.62125 -0.02125 3.8675 0 0 Z \",fill:\"#8A8987\",transform:\"translate(97,771)\"})),_path411||(_path411=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.20591797 -0.00128906 2.41183594 -0.00257813 3.65429688 -0.00390625 C4.92466797 -0.00003906 6.19503906 0.00382813 7.50390625 0.0078125 C8.77041016 0.00394531 10.03691406 0.00007812 11.34179688 -0.00390625 C12.54900391 -0.00261719 13.75621094 -0.00132812 15 0 C16.11431396 0.00112793 17.22862793 0.00225586 18.37670898 0.00341797 C21.06640625 0.1328125 21.06640625 0.1328125 23.06640625 1.1328125 C23.06640625 9.0528125 23.06640625 16.9728125 23.06640625 25.1328125 C13.16640625 25.1328125 3.26640625 25.1328125 -6.93359375 25.1328125 C-6.95421875 21.1934375 -6.97484375 17.2540625 -6.99609375 13.1953125 C-7.00974976 11.32951538 -7.00974976 11.32951538 -7.02368164 9.42602539 C-7.02742798 7.96797485 -7.02742798 7.96797485 -7.03125 6.48046875 C-7.03648682 5.48023682 -7.04172363 4.48000488 -7.04711914 3.44946289 C-6.82290352 -1.12598227 -3.93639055 0.00398853 0 0 Z \",fill:\"#878684\",transform:\"translate(583.93359375,770.8671875)\"})),_path412||(_path412=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.67125 0.020625 7.3425 0.04125 11.125 0.0625 C11.125 8.6425 11.125 17.2225 11.125 26.0625 C7.1556345 26.08541487 3.1864368 26.10534015 -0.78295898 26.11743164 C-2.13420386 26.12247057 -3.48544326 26.12930177 -4.83666992 26.13793945 C-6.77520434 26.15002419 -8.713778 26.15519828 -10.65234375 26.16015625 C-12.40405884 26.16801147 -12.40405884 26.16801147 -14.19116211 26.17602539 C-16.875 26.0625 -16.875 26.0625 -17.875 25.0625 C-17.96226223 23.28178754 -17.98199041 21.4976686 -17.97265625 19.71484375 C-17.96943359 18.63525391 -17.96621094 17.55566406 -17.96289062 16.44335938 C-17.95451172 15.30705078 -17.94613281 14.17074219 -17.9375 13 C-17.93298828 11.85982422 -17.92847656 10.71964844 -17.92382812 9.54492188 C-17.91199747 6.71739649 -17.8955141 3.8899736 -17.875 1.0625 C-11.93895962 -0.24178569 -6.04070469 -0.04798254 0 0 Z \",fill:\"#8B8A88\",transform:\"translate(55.875,615.9375)\"})),_path413||(_path413=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.25683594 0.00322266 2.51367188 0.00644531 3.80859375 0.00976562 C5.12730469 0.01814453 6.44601562 0.02652344 7.8046875 0.03515625 C9.14452961 0.04017136 10.4843735 0.04473424 11.82421875 0.04882812 C15.10939407 0.0606453 18.39454631 0.07858124 21.6796875 0.09765625 C21.6796875 8.34765625 21.6796875 16.59765625 21.6796875 25.09765625 C17.56790823 25.12057019 13.45629092 25.14049576 9.34448242 25.15258789 C7.94473522 25.15762705 6.5449933 25.16445841 5.14526367 25.1730957 C3.13722973 25.18517945 1.12915793 25.19035432 -0.87890625 25.1953125 C-2.08861084 25.20054932 -3.29831543 25.20578613 -4.54467773 25.21118164 C-7.3203125 25.09765625 -7.3203125 25.09765625 -8.3203125 24.09765625 C-8.40745081 22.38993267 -8.42731257 20.67866976 -8.41796875 18.96875 C-8.41474609 17.93427734 -8.41152344 16.89980469 -8.40820312 15.83398438 C-8.39982422 14.74537109 -8.39144531 13.65675781 -8.3828125 12.53515625 C-8.37830078 11.44267578 -8.37378906 10.35019531 -8.36914062 9.22460938 C-8.35731076 6.5155713 -8.34082793 3.80664026 -8.3203125 1.09765625 C-5.50207058 -0.31146471 -3.14779968 -0.01417928 0 0 Z \",fill:\"#898785\",transform:\"translate(982.3203125,538.90234375)\"})),_path414||(_path414=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0 20.46 0 31 0 C31 7.92 31 15.84 31 24 C20.77 24 10.54 24 0 24 C-0.33 24.66 -0.66 25.32 -1 26 C-0.67 17.42 -0.34 8.84 0 0 Z \",fill:\"#605E5D\",transform:\"translate(699,72)\"})),_path415||(_path415=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C19.1 25.33 9.2 25.66 -1 26 C-1.020625 23.195 -1.04125 20.39 -1.0625 17.5 C-1.071604 16.63310547 -1.08070801 15.76621094 -1.09008789 14.87304688 C-1.09258545 14.16212891 -1.09508301 13.45121094 -1.09765625 12.71875 C-1.10289307 12.00654297 -1.10812988 11.29433594 -1.11352539 10.56054688 C-0.95674205 7.02432384 -0.43904537 3.51236295 0 0 Z \",fill:\"#8C8B89\",transform:\"translate(731,980)\"})),_path416||(_path416=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30.020625 3.774375 30.04125 7.54875 30.0625 11.4375 C30.071604 12.62915771 30.08070801 13.82081543 30.09008789 15.04858398 C30.09258545 15.98001221 30.09508301 16.91144043 30.09765625 17.87109375 C30.10289307 18.82943115 30.10812988 19.78776855 30.11352539 20.77514648 C30 23 30 23 29 24 C27.44051458 24.15686249 25.87457332 24.25076639 24.30859375 24.31640625 C22.89223633 24.37924805 22.89223633 24.37924805 21.44726562 24.44335938 C20.45404297 24.48267578 19.46082031 24.52199219 18.4375 24.5625 C17.44041016 24.60568359 16.44332031 24.64886719 15.41601562 24.69335938 C12.9441585 24.79980298 10.4721969 24.90181928 8 25 C8 25.33 8 25.66 8 26 C1.4 26 -5.2 26 -12 26 C-12 25.67 -12 25.34 -12 25 C-8.04 25 -4.08 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#777674\",transform:\"translate(303,335)\"})),_path417||(_path417=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0 20.46 0 31 0 C31 7.92 31 15.84 31 24 C20.77 24 10.54 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#646260\",transform:\"translate(576,190)\"})),_path418||(_path418=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0 20.46 0 31 0 C31 7.92 31 15.84 31 24 C20.77 24 10.54 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#878685\",transform:\"translate(305,165)\"})),_path419||(_path419=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0 20.46 0 31 0 C31 7.92 31 15.84 31 24 C20.77 24 10.54 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#868482\",transform:\"translate(637,165)\"})),_path420||(_path420=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30.020625 2.825625 30.04125 5.65125 30.0625 8.5625 C30.071604 9.43849854 30.08070801 10.31449707 30.09008789 11.21704102 C30.09258545 11.93045654 30.09508301 12.64387207 30.09765625 13.37890625 C30.10551147 14.45507202 30.10551147 14.45507202 30.11352539 15.55297852 C29.96657926 18.7203787 29.44841983 21.86106121 29 25 C19.43 25 9.86 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#615F5D\",transform:\"translate(822,721)\"})),_path421||(_path421=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C29 12 29 12 29 26 C19.43 26 9.86 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#81807E\",transform:\"translate(396,668)\"})),_path422||(_path422=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.11177927 -0.02291394 8.22339658 -0.04283951 12.33520508 -0.05493164 C13.73495228 -0.0599708 15.1346942 -0.06680216 16.53442383 -0.07543945 C18.54245777 -0.0875232 20.55052957 -0.09269807 22.55859375 -0.09765625 C24.37315063 -0.10551147 24.37315063 -0.10551147 26.22436523 -0.11352539 C29 0 29 0 30 1 C30.10113109 3.71864171 30.13863787 6.40651709 30.125 9.125 C30.13080078 10.24648438 30.13080078 10.24648438 30.13671875 11.390625 C30.13542969 12.13054688 30.13414062 12.87046875 30.1328125 13.6328125 C30.13168457 14.30199707 30.13055664 14.97118164 30.12939453 15.66064453 C29.95621182 18.79165719 29.44346888 21.89571782 29 25 C19.43 25 9.86 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#7F7E7D\",transform:\"translate(366,590)\"})),_path423||(_path423=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C31.25248502 2.50497004 31.11374406 4.20853274 31.09765625 7.0078125 C31.09515869 7.8961377 31.09266113 8.78446289 31.09008789 9.69970703 C31.08098389 10.83005371 31.07187988 11.96040039 31.0625 13.125 C31.041875 16.71375 31.02125 20.3025 31 24 C20.77 24 10.54 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#8C8B89\",transform:\"translate(699,48)\"})),_path424||(_path424=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 8.58 0 17.16 0 26 C-9.57 26 -19.14 26 -29 26 C-29 17.75 -29 9.5 -29 1 C-19.26595414 0.11508674 -9.76383546 -0.08490292 0 0 Z \",fill:\"#797878\",transform:\"translate(636,694)\"})),_path425||(_path425=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 8.58 0 17.16 0 26 C-9.57 26 -19.14 26 -29 26 C-29 17.75 -29 9.5 -29 1 C-19.26195704 0.19686244 -9.76441098 -0.09211708 0 0 Z \",fill:\"#8B8A88\",transform:\"translate(67,668)\"})),_path426||(_path426=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.3 0.020625 6.6 0.04125 10 0.0625 C10 8.3125 10 16.5625 10 25.0625 C0.1 25.0625 -9.8 25.0625 -20 25.0625 C-20.020625 21.288125 -20.04125 17.51375 -20.0625 13.625 C-20.071604 12.43334229 -20.08070801 11.24168457 -20.09008789 10.01391602 C-20.09258545 9.08248779 -20.09508301 8.15105957 -20.09765625 7.19140625 C-20.10289307 6.23306885 -20.10812988 5.27473145 -20.11352539 4.28735352 C-20 2.0625 -20 2.0625 -19 1.0625 C-12.64757133 0.01111424 -6.42599846 -0.0571582 0 0 Z \",fill:\"#716F6E\",transform:\"translate(148,412.9375)\"})),_path427||(_path427=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C19.1 25 9.2 25 -1 25 C-1 11 -1 11 0 0 Z \",fill:\"#8C8B89\",transform:\"translate(944,981)\"})),_path428||(_path428=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C19.27451722 25.7339987 9.75797358 26.10059767 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#858482\",transform:\"translate(158,980)\"})),_path429||(_path429=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0 20.46 0 31 0 C31.020625 2.84625 31.04125 5.6925 31.0625 8.625 C31.071604 9.51010254 31.08070801 10.39520508 31.09008789 11.30712891 C31.09258545 12.02304199 31.09508301 12.73895508 31.09765625 13.4765625 C31.10551147 14.5605835 31.10551147 14.5605835 31.11352539 15.66650391 C30.97734286 18.46571381 30.46073155 21.2356107 30 24 C20.1 24 10.2 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#615F5E\",transform:\"translate(699,190)\"})),_path430||(_path430=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.16015625 0.05478516 2.3203125 0.10957031 3.515625 0.16601562 C4.7221875 0.23884766 5.92875 0.31167969 7.171875 0.38671875 C9.00492188 0.47856445 9.00492188 0.47856445 10.875 0.57226562 C13.89137641 0.72544099 16.90675803 0.89798304 19.921875 1.07421875 C19.921875 9.32421875 19.921875 17.57421875 19.921875 26.07421875 C15.28125 26.10515625 15.28125 26.10515625 10.546875 26.13671875 C9.59377441 26.14582275 8.64067383 26.15492676 7.65869141 26.16430664 C1.68771113 26.18325243 -4.1501089 25.78191058 -10.078125 25.07421875 C-10.19413504 21.47032211 -10.26530908 17.86690408 -10.328125 14.26171875 C-10.36164062 13.23755859 -10.39515625 12.21339844 -10.4296875 11.15820312 C-10.44257812 10.17529297 -10.45546875 9.19238281 -10.46875 8.1796875 C-10.48969727 7.27371826 -10.51064453 6.36774902 -10.53222656 5.43432617 C-10.078125 3.07421875 -10.078125 3.07421875 -8.43359375 1.25976562 C-5.40312039 -0.26552238 -3.37971342 -0.18223945 0 0 Z \",fill:\"#63615F\",transform:\"translate(893.078125,137.92578125)\"})),_path431||(_path431=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.1117256 -0.02465746 8.22342278 -0.04283959 12.33520508 -0.05493164 C13.73495228 -0.0599708 15.1346942 -0.06680216 16.53442383 -0.07543945 C18.54245777 -0.0875232 20.55052957 -0.09269807 22.55859375 -0.09765625 C24.37315063 -0.10551147 24.37315063 -0.10551147 26.22436523 -0.11352539 C29 0 29 0 30 1 C30.08713831 2.70772358 30.10700007 4.41898649 30.09765625 6.12890625 C30.09515869 7.06033447 30.09266113 7.9917627 30.09008789 8.95141602 C30.08098389 10.14307373 30.07187988 11.33473145 30.0625 12.5625 C30.041875 16.336875 30.02125 20.11125 30 24 C19.77 24 9.54 24 -1 24 C-1.020625 21.15375 -1.04125 18.3075 -1.0625 15.375 C-1.071604 14.48989746 -1.08070801 13.60479492 -1.09008789 12.69287109 C-1.09258545 11.97695801 -1.09508301 11.26104492 -1.09765625 10.5234375 C-1.10289307 9.80075684 -1.10812988 9.07807617 -1.11352539 8.33349609 C-0.97586439 5.50389637 -0.50619291 2.78493676 0 0 Z \",fill:\"#868684\",transform:\"translate(455,190)\"})),_path432||(_path432=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29.33 8.25 29.66 16.5 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8D8B8A\",transform:\"translate(884,669)\"})),_path433||(_path433=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.58 29 17.16 29 26 C19.43 25.67 9.86 25.34 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8A8886\",transform:\"translate(853,360)\"})),_path434||(_path434=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.20591797 -0.00128906 2.41183594 -0.00257813 3.65429688 -0.00390625 C4.92466797 -0.00003906 6.19503906 0.00382813 7.50390625 0.0078125 C8.77041016 0.00394531 10.03691406 0.00007812 11.34179688 -0.00390625 C12.54900391 -0.00261719 13.75621094 -0.00132812 15 0 C16.11431396 0.00112793 17.22862793 0.00225586 18.37670898 0.00341797 C21.06640625 0.1328125 21.06640625 0.1328125 23.06640625 1.1328125 C23.06640625 9.0528125 23.06640625 16.9728125 23.06640625 25.1328125 C12.973612 25.20927306 3.11203105 25.17909451 -6.93359375 24.1328125 C-6.96246611 20.32032824 -6.98034867 16.5078718 -6.99609375 12.6953125 C-7.00447266 11.60669922 -7.01285156 10.51808594 -7.02148438 9.39648438 C-7.02470703 8.36201172 -7.02792969 7.32753906 -7.03125 6.26171875 C-7.03648682 5.30338135 -7.04172363 4.34504395 -7.04711914 3.35766602 C-6.81805759 -1.13144786 -3.83118168 0.00388192 0 0 Z \",fill:\"#8A8786\",transform:\"translate(766.93359375,164.8671875)\"})),_path435||(_path435=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 8.58 0 17.16 0 26 C-9.57 26 -19.14 26 -29 26 C-29.020625 22.803125 -29.04125 19.60625 -29.0625 16.3125 C-29.071604 15.31387939 -29.08070801 14.31525879 -29.09008789 13.28637695 C-29.09258545 12.48675537 -29.09508301 11.68713379 -29.09765625 10.86328125 C-29.10289307 10.05157471 -29.10812988 9.23986816 -29.11352539 8.40356445 C-28.9929791 5.85135327 -28.559949 3.48973863 -28 1 C-18.61681753 0.11389845 -9.41437869 -0.08798485 0 0 Z \",fill:\"#737170\",transform:\"translate(395,694)\"})),_path436||(_path436=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.25 30 16.5 30 25 C20.1 25 10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#716F6E\",transform:\"translate(577,513)\"})),_path437||(_path437=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.20970459 0.00523682 2.41940918 0.01047363 3.66577148 0.01586914 C4.97094727 0.0190918 6.27612305 0.02231445 7.62084961 0.02563477 C9.00952213 0.03399138 10.39819401 0.04245634 11.78686523 0.05102539 C13.17944179 0.05603873 14.57202005 0.06060193 15.96459961 0.06469727 C19.38453974 0.07653097 22.80445773 0.09446708 26.22436523 0.11352539 C26.22436523 8.36352539 26.22436523 16.61352539 26.22436523 25.11352539 C16.65436523 25.11352539 7.08436523 25.11352539 -2.77563477 25.11352539 C-2.96125977 21.17415039 -3.14688477 17.23477539 -3.33813477 13.17602539 C-3.3994458 11.93216064 -3.46075684 10.6882959 -3.52392578 9.40673828 C-3.56702881 8.43470459 -3.61013184 7.4626709 -3.65454102 6.46118164 C-3.70167236 5.46094971 -3.74880371 4.46071777 -3.79736328 3.43017578 C-3.76539024 0.0212745 -3.43049366 0.14030957 0 0 Z \",fill:\"#8A8987\",transform:\"translate(130.775634765625,538.886474609375)\"})),_path438||(_path438=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.25 30 16.5 30 25 C22.68945939 25 15.52294458 24.9572049 8.25 24.5 C5.5275 24.335 2.805 24.17 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#868583\",transform:\"translate(158,439)\"})),_path439||(_path439=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C29.67 8.25 29.34 16.5 29 25 C19.43 25 9.86 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#838180\",transform:\"translate(913,361)\"})),_path440||(_path440=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.86882813 -0.00128906 1.73765625 -0.00257813 2.6328125 -0.00390625 C3.50679687 -0.00003906 4.38078125 0.00382812 5.28125 0.0078125 C6.63863281 0.00201172 6.63863281 0.00201172 8.0234375 -0.00390625 C8.88195312 -0.00261719 9.74046875 -0.00132812 10.625 0 C11.40037109 0.00112793 12.17574219 0.00225586 12.97460938 0.00341797 C14.78125 0.1328125 14.78125 0.1328125 15.78125 1.1328125 C15.86838831 2.84053608 15.88825007 4.55179899 15.87890625 6.26171875 C15.87568359 7.29619141 15.87246094 8.33066406 15.86914062 9.39648438 C15.86076172 10.48509766 15.85238281 11.57371094 15.84375 12.6953125 C15.83923828 13.78779297 15.83472656 14.88027344 15.83007812 16.00585938 C15.81824826 18.71489745 15.80176543 21.42382849 15.78125 24.1328125 C9.04993197 25.00960982 2.50138913 25.25618441 -4.28125 25.1953125 C-7.560625 25.1746875 -10.84 25.1540625 -14.21875 25.1328125 C-14.21875 17.2128125 -14.21875 9.2928125 -14.21875 1.1328125 C-4.07619017 0.00586141 -4.07619017 0.00586141 0 0 Z \",fill:\"#858482\",transform:\"translate(897.21875,488.8671875)\"})),_path441||(_path441=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1 1 1 1 1.11352539 3.40844727 C1.10828857 4.45057373 1.10305176 5.4927002 1.09765625 6.56640625 C1.09515869 7.57904541 1.09266113 8.59168457 1.09008789 9.63500977 C1.08098389 10.93108154 1.07187988 12.22715332 1.0625 13.5625 C1.041875 17.666875 1.02125 21.77125 1 26 C-8.57 26 -18.14 26 -28 26 C-28 17.75 -28 9.5 -28 1 C-22.740625 0.7525 -22.740625 0.7525 -17.375 0.5 C-16.28106934 0.44779297 -15.18713867 0.39558594 -14.06005859 0.34179688 C-3.5796806 -0.14271152 -3.5796806 -0.14271152 0 0 Z \",fill:\"#848382\",transform:\"translate(186,307)\"})),_path442||(_path442=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.45837306 -0.02685767 8.91658596 -0.04676971 13.375 -0.0625 C14.64601563 -0.07087891 15.91703125 -0.07925781 17.2265625 -0.08789062 C19.04414062 -0.09272461 19.04414062 -0.09272461 20.8984375 -0.09765625 C22.57945557 -0.10551147 22.57945557 -0.10551147 24.29443359 -0.11352539 C27 0 27 0 29 1 C29 9.25 29 17.5 29 26 C19.43 25.67 9.86 25.34 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8B8987\",transform:\"translate(38,564)\"})),_path443||(_path443=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30.33 8.58 30.66 17.16 31 26 C34.96 26.33 38.92 26.66 43 27 C43 27.33 43 27.66 43 28 C34.04787377 28.06673083 25.13132528 27.87711856 16.1875 27.5 C14.41536133 27.42845703 14.41536133 27.42845703 12.60742188 27.35546875 C9.7381777 27.23930502 6.86905254 27.12078869 4 27 C4.8125 25.0625 4.8125 25.0625 6 23 C6.99 22.67 7.98 22.34 9 22 C6.42220456 17.24099304 3.67743559 13.23566613 0.07421875 9.1875 C-1 7 -1 7 0 0 Z \",fill:\"#5A5857\",transform:\"translate(730,386)\"})),_path444||(_path444=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.20970459 0.00523682 2.41940918 0.01047363 3.66577148 0.01586914 C4.97094727 0.0190918 6.27612305 0.02231445 7.62084961 0.02563477 C9.00952213 0.03399138 10.39819401 0.04245634 11.78686523 0.05102539 C13.17944179 0.05603873 14.57202005 0.06060193 15.96459961 0.06469727 C19.38456394 0.07653105 22.80444367 0.09301659 26.22436523 0.11352539 C26.25336978 3.71767519 26.27116541 7.32179501 26.28686523 10.92602539 C26.29524414 11.95018555 26.30362305 12.9743457 26.31225586 14.02954102 C26.31708984 15.50390625 26.31708984 15.50390625 26.32202148 17.00805664 C26.32987671 18.3670105 26.32987671 18.3670105 26.33789062 19.75341797 C26.22436523 22.11352539 26.22436523 22.11352539 25.22436523 25.11352539 C15.65436523 25.11352539 6.08436523 25.11352539 -3.77563477 25.11352539 C-3.79625977 21.17415039 -3.81688477 17.23477539 -3.83813477 13.17602539 C-3.85179077 11.31022827 -3.85179077 11.31022827 -3.86572266 9.40673828 C-3.86946899 7.94868774 -3.86946899 7.94868774 -3.87329102 6.46118164 C-3.87852783 5.46094971 -3.88376465 4.46071777 -3.88916016 3.43017578 C-3.72263412 0.03197025 -3.43741124 0.14059251 0 0 Z \",fill:\"#787674\",transform:\"translate(457.775634765625,281.886474609375)\"})),_path445||(_path445=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.58 29 17.16 29 26 C19.43 25.67 9.86 25.34 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8A8987\",transform:\"translate(158,22)\"})),_path446||(_path446=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.92 30 15.84 30 24 C20.1 24.33 10.2 24.66 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#646362\",transform:\"translate(607,771)\"})),_path447||(_path447=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0 20.46 0 31 0 C31.061875 2.660625 31.12375 5.32125 31.1875 8.0625 C31.21481201 8.8862915 31.24212402 9.71008301 31.27026367 10.55883789 C31.27775635 11.23164795 31.28524902 11.90445801 31.29296875 12.59765625 C31.3086792 13.27320557 31.32438965 13.94875488 31.34057617 14.64477539 C31 17 31 17 28 24 C18.76 24 9.52 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#7A7876\",transform:\"translate(913,465)\"})),_path448||(_path448=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.67998047 -0.00386719 1.35996094 -0.00773437 2.06054688 -0.01171875 C5.47686108 -0.00503974 8.21587602 0.288344 11.5625 1.125 C11.5625 8.715 11.5625 16.305 11.5625 24.125 C1.3325 24.125 -8.8975 24.125 -19.4375 24.125 C-19.4375 16.535 -19.4375 8.945 -19.4375 1.125 C-12.85482347 0.52657486 -6.56116 -0.03886176 0 0 Z \",fill:\"#8D8C8B\",transform:\"translate(564.4375,46.875)\"})),_path449||(_path449=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C28 8.58 28 17.16 28 26 C18.76 26 9.52 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#878684\",transform:\"translate(396,797)\"})),_path450||(_path450=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 8.25 30 16.5 30 25 C15.15 24.505 15.15 24.505 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#8A8986\",transform:\"translate(158,617)\"})),_path451||(_path451=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0 20.46 0 31 0 C31 7.26 31 14.52 31 22 C31.99 22.33 32.98 22.66 34 23 C33.505 23.495 33.505 23.495 33 24 C32.76807135 25.51469448 32.58784762 27.03754562 32.4375 28.5625 C32.35371094 29.38878906 32.26992188 30.21507812 32.18359375 31.06640625 C32.09271484 32.02353516 32.09271484 32.02353516 32 33 C31.67 33 31.34 33 31 33 C31 29.7 31 26.4 31 23 C20.77 23 10.54 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#676563\",transform:\"translate(668,847)\"})),_path452||(_path452=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C19.1 25 9.2 25 -1 25 C-0.67 16.75 -0.34 8.5 0 0 Z \",fill:\"#82807E\",transform:\"translate(945,413)\"})),_path453||(_path453=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C19.43 25 9.86 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#898886\",transform:\"translate(822,980)\"})),_path454||(_path454=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C19.43 25 9.86 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#838280\",transform:\"translate(607,796)\"})),_path455||(_path455=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C19.43 25 9.86 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#615F5E\",transform:\"translate(68,771)\"})),_path456||(_path456=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C19.43 25 9.86 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8B8A87\",transform:\"translate(38,771)\"})),_path457||(_path457=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C19.43 25 9.86 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8A8988\",transform:\"translate(158,746)\"})),_path458||(_path458=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C19.43 25 9.86 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#62605E\",transform:\"translate(975,721)\"})),_path459||(_path459=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C19.43 25 9.86 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8C8B89\",transform:\"translate(38,721)\"})),_path460||(_path460=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C19.43 25 9.86 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#7D7D7C\",transform:\"translate(486,695)\"})),_path461||(_path461=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C19.43 25 9.86 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#7D7C7A\",transform:\"translate(158,695)\"})),_path462||(_path462=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C19.43 25 9.86 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#807F7E\",transform:\"translate(158,669)\"})),_path463||(_path463=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C19.43 25 9.86 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#888684\",transform:\"translate(68,643)\"})),_path464||(_path464=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C19.43 25 9.86 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#898886\",transform:\"translate(853,464)\"})),_path465||(_path465=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C19.43 25 9.86 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#878584\",transform:\"translate(913,413)\"})),_path466||(_path466=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C19.43 25 9.86 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#838381\",transform:\"translate(395,335)\"})),_path467||(_path467=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C19.43 25 9.86 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#868583\",transform:\"translate(823,282)\"})),_path468||(_path468=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C19.43 25 9.86 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8D8C8A\",transform:\"translate(68,282)\"})),_path469||(_path469=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C19.43 25 9.86 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#848280\",transform:\"translate(425,257)\"})),_path470||(_path470=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 8.25 0 16.5 0 25 C-4.11177927 25.02291394 -8.22339658 25.04283951 -12.33520508 25.05493164 C-13.73495228 25.0599708 -15.1346942 25.06680216 -16.53442383 25.07543945 C-18.54245777 25.0875232 -20.55052957 25.09269807 -22.55859375 25.09765625 C-23.76829834 25.10289307 -24.97800293 25.10812988 -26.22436523 25.11352539 C-29 25 -29 25 -30 24 C-30.08713831 22.29227642 -30.10700007 20.58101351 -30.09765625 18.87109375 C-30.09443359 17.83662109 -30.09121094 16.80214844 -30.08789062 15.73632812 C-30.07951172 14.64771484 -30.07113281 13.55910156 -30.0625 12.4375 C-30.05798828 11.34501953 -30.05347656 10.25253906 -30.04882812 9.12695312 C-30.03699826 6.41791505 -30.02051543 3.70898401 -30 1 C-26.68767894 0.82964947 -23.37512086 0.66440908 -20.0625 0.5 C-19.13630859 0.45230469 -18.21011719 0.40460938 -17.25585938 0.35546875 C-15.87817383 0.28779297 -15.87817383 0.28779297 -14.47265625 0.21875 C-13.64000244 0.17685547 -12.80734863 0.13496094 -11.94946289 0.09179688 C-7.96811887 -0.0321155 -3.98327183 0 0 0 Z \",fill:\"#757372\",transform:\"translate(365,256)\"})),_path471||(_path471=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C19.43 25 9.86 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8D8B8A\",transform:\"translate(98,257)\"})),_path472||(_path472=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C19.43 25 9.86 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#888685\",transform:\"translate(425,165)\"})),_path473||(_path473=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C19.43 25 9.86 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8A8987\",transform:\"translate(455,23)\"})),_path474||(_path474=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C19.43 25 9.86 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8A8987\",transform:\"translate(515,22)\"})),_path475||(_path475=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.16781006 0.00523682 2.33562012 0.01047363 3.53881836 0.01586914 C4.79887695 0.0190918 6.05893555 0.02231445 7.35717773 0.02563477 C8.6976732 0.03399136 10.03816799 0.04245632 11.37866211 0.05102539 C12.72306153 0.05603879 14.06746271 0.06060197 15.41186523 0.06469727 C18.71331644 0.07653042 22.01474471 0.09446653 25.31616211 0.11352539 C25.31616211 8.36352539 25.31616211 16.61352539 25.31616211 25.11352539 C15.74616211 25.11352539 6.17616211 25.11352539 -3.68383789 25.11352539 C-3.70446289 21.17415039 -3.72508789 17.23477539 -3.74633789 13.17602539 C-3.7599939 11.31022827 -3.7599939 11.31022827 -3.77392578 9.40673828 C-3.77767212 7.94868774 -3.77767212 7.94868774 -3.78149414 6.46118164 C-3.78673096 5.46094971 -3.79196777 4.46071777 -3.79736328 3.43017578 C-3.63333982 0.08303903 -3.37612531 0.1428089 0 0 Z \",fill:\"#7C7A79\",transform:\"translate(277.683837890625,694.886474609375)\"})),_path476||(_path476=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30.33 7.92 30.66 15.84 31 24 C20.77 24 10.54 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#8E8C8B\",transform:\"translate(668,140)\"})),_path477||(_path477=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.21042969 -0.00128906 2.42085937 -0.00257813 3.66796875 -0.00390625 C4.94285156 -0.00003906 6.21773437 0.00382812 7.53125 0.0078125 C9.44357422 0.00201172 9.44357422 0.00201172 11.39453125 -0.00390625 C13.21017578 -0.00197266 13.21017578 -0.00197266 15.0625 0 C16.18205078 0.00112793 17.30160156 0.00225586 18.45507812 0.00341797 C21.03125 0.1328125 21.03125 0.1328125 22.03125 1.1328125 C22.11851223 2.91352496 22.13824041 4.6976439 22.12890625 6.48046875 C22.12640869 7.45250244 22.12391113 8.42453613 22.12133789 9.42602539 C22.11223389 10.66989014 22.10312988 11.91375488 22.09375 13.1953125 C22.073125 17.1346875 22.0525 21.0740625 22.03125 25.1328125 C12.46125 25.1328125 2.89125 25.1328125 -6.96875 25.1328125 C-6.989375 21.1934375 -7.01 17.2540625 -7.03125 13.1953125 C-7.04490601 11.32951538 -7.04490601 11.32951538 -7.05883789 9.42602539 C-7.06258423 7.96797485 -7.06258423 7.96797485 -7.06640625 6.48046875 C-7.07164307 5.48023682 -7.07687988 4.48000488 -7.08227539 3.44946289 C-6.85752139 -1.1369688 -3.94243522 0.00397194 0 0 Z \",fill:\"#8C8A89\",transform:\"translate(981.96875,488.8671875)\"})),_path478||(_path478=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 8.25 0 16.5 0 25 C-9.9 25 -19.8 25 -30 25 C-30 16.81325674 -29.90615395 9.07447896 -29 1 C-19.30983126 0.3034025 -9.72331868 -0.11049226 0 0 Z \",fill:\"#878785\",transform:\"translate(729,771)\"})),_path479||(_path479=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.11177927 -0.02291394 8.22339658 -0.04283951 12.33520508 -0.05493164 C13.73495228 -0.0599708 15.1346942 -0.06680216 16.53442383 -0.07543945 C18.54245777 -0.0875232 20.55052957 -0.09269807 22.55859375 -0.09765625 C24.37315063 -0.10551147 24.37315063 -0.10551147 26.22436523 -0.11352539 C29 0 29 0 30 1 C30.08726223 2.78071246 30.10699041 4.5648314 30.09765625 6.34765625 C30.09515869 7.31968994 30.09266113 8.29172363 30.09008789 9.29321289 C30.08098389 10.53707764 30.07187988 11.78094238 30.0625 13.0625 C30.041875 17.001875 30.02125 20.94125 30 25 C15.15 24.505 15.15 24.505 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#868483\",transform:\"translate(577,23)\"})),_path480||(_path480=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 7.59 1 15.18 1 23 C2.98 23 4.96 23 7 23 C7 23.33 7 23.66 7 24 C4.69 24 2.38 24 0 24 C0 31.59 0 39.18 0 47 C-9.9 47 -19.8 47 -30 47 C-30 39.41 -30 31.82 -30 24 C-20.43 23.67 -10.86 23.34 -1 23 C-0.67 15.41 -0.34 7.82 0 0 Z \",fill:\"#61605E\",transform:\"translate(545,799)\"})),_path481||(_path481=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0.33 19.8 0.66 30 1 C30 8.92 30 16.84 30 25 C25.88822073 25.02291394 21.77660342 25.04283951 17.66479492 25.05493164 C16.26504772 25.0599708 14.8653058 25.06680216 13.46557617 25.07543945 C11.45754223 25.0875232 9.44947043 25.09269807 7.44140625 25.09765625 C6.23170166 25.10289307 5.02199707 25.10812988 3.77563477 25.11352539 C1 25 1 25 0 24 C-0.08726223 22.21928754 -0.10699041 20.4351686 -0.09765625 18.65234375 C-0.09515869 17.68031006 -0.09266113 16.70827637 -0.09008789 15.70678711 C-0.08098389 14.46292236 -0.07187988 13.21905762 -0.0625 11.9375 C-0.041875 7.998125 -0.02125 4.05875 0 0 Z \",fill:\"#8A8886\",transform:\"translate(914,539)\"})),_path482||(_path482=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.06375 -0.0309375 6.06375 -0.0309375 12.25 -0.0625 C13.51875977 -0.071604 14.78751953 -0.08070801 16.09472656 -0.09008789 C17.09987305 -0.09258545 18.10501953 -0.09508301 19.140625 -0.09765625 C20.68024902 -0.10551147 20.68024902 -0.10551147 22.25097656 -0.11352539 C25 0 25 0 29 1 C29 8.92 29 16.84 29 25 C19.43 25 9.86 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8E8D8B\",transform:\"translate(455,140)\"})),_path483||(_path483=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.92 30 15.84 30 24 C20.1 24 10.2 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#888886\",transform:\"translate(638,981)\"})),_path484||(_path484=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.92 30 15.84 30 24 C20.1 24 10.2 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#646260\",transform:\"translate(157,868)\"})),_path485||(_path485=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.92 30 15.84 30 24 C20.1 24 10.2 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#919191\",transform:\"translate(730,846)\"})),_path486||(_path486=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.92 30 15.84 30 24 C20.1 24 10.2 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#878684\",transform:\"translate(485,772)\"})),_path487||(_path487=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.92 30 15.84 30 24 C20.1 24 10.2 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#8C8A88\",transform:\"translate(944,722)\"})),_path488||(_path488=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.92 30 15.84 30 24 C20.1 24 10.2 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#888785\",transform:\"translate(97,464)\"})),_path489||(_path489=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.92 30 15.84 30 24 C20.1 24 10.2 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#81807E\",transform:\"translate(607,257)\"})),_path490||(_path490=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.92 30 15.84 30 24 C20.1 24 10.2 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#888685\",transform:\"translate(699,165)\"})),_path491||(_path491=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.92 30 15.84 30 24 C20.1 24 10.2 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#898887\",transform:\"translate(8,164)\"})),_path492||(_path492=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.92 30 15.84 30 24 C20.1 24 10.2 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#5E5C5A\",transform:\"translate(97,164)\"})),_path493||(_path493=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.92 30 15.84 30 24 C20.1 24 10.2 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#8B8A89\",transform:\"translate(336,141)\"})),_path494||(_path494=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.92 30 15.84 30 24 C20.1 24 10.2 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#8C8C8A\",transform:\"translate(607,141)\"})),_path495||(_path495=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.92 30 15.84 30 24 C20.1 24 10.2 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#8D8C8B\",transform:\"translate(515,140)\"})),_path496||(_path496=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.92 30 15.84 30 24 C20.1 24 10.2 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#8E8D8B\",transform:\"translate(97,140)\"})),_path497||(_path497=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.92 30 15.84 30 24 C20.1 24 10.2 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#908F8D\",transform:\"translate(730,72)\"})),_path498||(_path498=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.92 30 15.84 30 24 C20.1 24 10.2 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#8D8C8A\",transform:\"translate(760,48)\"})),_path499||(_path499=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.92 30 15.84 30 24 C25.88822073 24.02291394 21.77660342 24.04283951 17.66479492 24.05493164 C16.26504772 24.0599708 14.8653058 24.06680216 13.46557617 24.07543945 C11.45754223 24.0875232 9.44947043 24.09269807 7.44140625 24.09765625 C6.23170166 24.10289307 5.02199707 24.10812988 3.77563477 24.11352539 C1 24 1 24 0 23 C-0.08713831 21.29227642 -0.10700007 19.58101351 -0.09765625 17.87109375 C-0.09515869 16.93966553 -0.09266113 16.0082373 -0.09008789 15.04858398 C-0.08098389 13.85692627 -0.07187988 12.66526855 -0.0625 11.4375 C-0.041875 7.663125 -0.02125 3.88875 0 0 Z \",fill:\"#7C7B7A\",transform:\"translate(607,539)\"})),_path500||(_path500=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.92 30 15.84 30 24 C19.77 23.67 9.54 23.34 -1 23 C-1.0309375 18.42125 -1.0309375 18.42125 -1.0625 13.75 C-1.071604 12.79448242 -1.08070801 11.83896484 -1.09008789 10.85449219 C-1.09258545 10.09297852 -1.09508301 9.33146484 -1.09765625 8.546875 C-1.10551147 7.38430176 -1.10551147 7.38430176 -1.11352539 6.19824219 C-1 4 -1 4 0 0 Z \",fill:\"#8C8A89\",transform:\"translate(883,48)\"})),_path501||(_path501=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.27087508 -0.02689844 8.54158182 -0.04678984 12.8125 -0.0625 C14.63491211 -0.07506836 14.63491211 -0.07506836 16.49414062 -0.08789062 C18.23920898 -0.09272461 18.23920898 -0.09272461 20.01953125 -0.09765625 C21.09307861 -0.10289307 22.16662598 -0.10812988 23.27270508 -0.11352539 C26 0 26 0 29 1 C29 8.92 29 16.84 29 25 C25.143125 25.020625 21.28625 25.04125 17.3125 25.0625 C16.10505127 25.071604 14.89760254 25.08070801 13.65356445 25.09008789 C12.21049927 25.09383423 12.21049927 25.09383423 10.73828125 25.09765625 C9.75899658 25.10289307 8.77971191 25.10812988 7.77075195 25.11352539 C5 25 5 25 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#898785\",transform:\"translate(823,539)\"})),_path502||(_path502=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.92143799 0.00249756 1.84287598 0.00499512 2.79223633 0.00756836 C4.52509888 0.02122437 4.52509888 0.02122437 6.29296875 0.03515625 C11.83078125 0.06609375 11.83078125 0.06609375 17.48046875 0.09765625 C17.48046875 8.34765625 17.48046875 16.59765625 17.48046875 25.09765625 C7.91046875 25.09765625 -1.65953125 25.09765625 -11.51953125 25.09765625 C-11.54015625 21.50890625 -11.56078125 17.92015625 -11.58203125 14.22265625 C-11.59113525 13.09230957 -11.60023926 11.96196289 -11.60961914 10.79736328 C-11.6121167 9.90903809 -11.61461426 9.02071289 -11.6171875 8.10546875 C-11.62242432 7.1942627 -11.62766113 6.28305664 -11.63305664 5.34423828 C-11.51953125 3.09765625 -11.51953125 3.09765625 -10.51953125 1.09765625 C-6.99414728 0.11374693 -3.6441568 -0.02035842 0 0 Z \",fill:\"#898886\",transform:\"translate(49.51953125,463.90234375)\"})),_path503||(_path503=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29.185625 3.939375 29.37125 7.87875 29.5625 11.9375 C29.62381104 13.18136475 29.68512207 14.42522949 29.74829102 15.70678711 C29.79139404 16.6788208 29.83449707 17.65085449 29.87890625 18.65234375 C29.9260376 19.65257568 29.97316895 20.65280762 30.02172852 21.68334961 C30 24 30 24 29 25 C19.43176721 25.67916475 9.54500984 24.57413593 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#8A8988\",transform:\"translate(38,257)\"})),_path504||(_path504=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.06254449 -0.02698369 8.12490948 -0.04683161 12.1875 -0.0625 C13.91323242 -0.07506836 13.91323242 -0.07506836 15.67382812 -0.08789062 C16.78564453 -0.09111328 17.89746094 -0.09433594 19.04296875 -0.09765625 C20.06414795 -0.10289307 21.08532715 -0.10812988 22.13745117 -0.11352539 C25 0 25 0 30 1 C30 8.59 30 16.18 30 24 C20.1 24 10.2 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#888786\",transform:\"translate(607,190)\"})),_path505||(_path505=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 7.59 0 15.18 0 23 C-1.91425781 23.18175781 -3.82851563 23.36351562 -5.80078125 23.55078125 C-8.30475789 23.80399237 -10.80866047 24.05793665 -13.3125 24.3125 C-14.57513672 24.43044922 -15.83777344 24.54839844 -17.13867188 24.66992188 C-18.34716797 24.79560547 -19.55566406 24.92128906 -20.80078125 25.05078125 C-21.91622314 25.16075439 -23.03166504 25.27072754 -24.1809082 25.3840332 C-27.14687919 26.03209286 -28.17443933 26.63602513 -30 29 C-30.02904864 25.08334892 -30.04681517 21.1667256 -30.0625 17.25 C-30.07087891 16.13882813 -30.07925781 15.02765625 -30.08789062 13.8828125 C-30.09111328 12.81289063 -30.09433594 11.74296875 -30.09765625 10.640625 C-30.10289307 9.65610352 -30.10812988 8.67158203 -30.11352539 7.65722656 C-30.01159103 5.27130486 -29.68303357 3.27835419 -29 1 C-19.27885691 0.16119567 -9.75122897 -0.09199273 0 0 Z \",fill:\"#898887\",transform:\"translate(944,847)\"})),_path506||(_path506=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.92875 0.020625 5.8575 0.04125 8.875 0.0625 C8.875 8.3125 8.875 16.5625 8.875 25.0625 C4.9056345 25.08541487 0.9364368 25.10534015 -3.03295898 25.11743164 C-4.38420386 25.12247057 -5.73544326 25.12930177 -7.08666992 25.13793945 C-9.02520434 25.15002419 -10.963778 25.15519828 -12.90234375 25.16015625 C-14.65405884 25.16801147 -14.65405884 25.16801147 -16.44116211 25.17602539 C-19.125 25.0625 -19.125 25.0625 -20.125 24.0625 C-20.21213831 22.35477642 -20.23200007 20.64351351 -20.22265625 18.93359375 C-20.21943359 17.89912109 -20.21621094 16.86464844 -20.21289062 15.79882812 C-20.20451172 14.71021484 -20.19613281 13.62160156 -20.1875 12.5 C-20.18298828 11.40751953 -20.17847656 10.31503906 -20.17382812 9.18945312 C-20.16199826 6.48041505 -20.14551543 3.77148401 -20.125 1.0625 C-13.38881508 0.26604625 -6.77978515 -0.0685133 0 0 Z \",fill:\"#898886\",transform:\"translate(178.125,256.9375)\"})),_path507||(_path507=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.11177927 -0.02291394 8.22339658 -0.04283951 12.33520508 -0.05493164 C13.73495228 -0.0599708 15.1346942 -0.06680216 16.53442383 -0.07543945 C18.54245777 -0.0875232 20.55052957 -0.09269807 22.55859375 -0.09765625 C24.37315063 -0.10551147 24.37315063 -0.10551147 26.22436523 -0.11352539 C29 0 29 0 30 1 C30.08713831 2.70772358 30.10700007 4.41898649 30.09765625 6.12890625 C30.09443359 7.16337891 30.09121094 8.19785156 30.08789062 9.26367188 C30.07951172 10.35228516 30.07113281 11.44089844 30.0625 12.5625 C30.05798828 13.65498047 30.05347656 14.74746094 30.04882812 15.87304688 C30.03699826 18.58208495 30.02051543 21.29101599 30 24 C25.93751511 24.02909769 21.87505714 24.04683174 17.8125 24.0625 C16.08676758 24.07506836 16.08676758 24.07506836 14.32617188 24.08789062 C13.21435547 24.09111328 12.10253906 24.09433594 10.95703125 24.09765625 C9.93585205 24.10289307 8.91467285 24.10812988 7.86254883 24.11352539 C5 24 5 24 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#8D8C8A\",transform:\"translate(791,141)\"})),_path508||(_path508=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0 20.46 0 31 0 C31 7.59 31 15.18 31 23 C20.77 23 10.54 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#8A8987\",transform:\"translate(127,233)\"})),_path509||(_path509=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C25.473125 25.268125 21.94625 25.53625 18.3125 25.8125 C17.20946533 25.91022705 16.10643066 26.0079541 14.9699707 26.10864258 C7.72696487 26.54522365 7.72696487 26.54522365 4 23.75 C3.34 22.8425 2.68 21.935 2 21 C1.40574219 20.33355469 0.81148437 19.66710937 0.19921875 18.98046875 C-0.29964844 18.38878906 -0.79851563 17.79710937 -1.3125 17.1875 C-1.82425781 16.58292969 -2.33601562 15.97835937 -2.86328125 15.35546875 C-3.42595703 14.68451172 -3.42595703 14.68451172 -4 14 C-2.68 14.33 -1.36 14.66 0 15 C0 10.05 0 5.1 0 0 Z \",fill:\"#898886\",transform:\"translate(822,797)\"})),_path510||(_path510=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.02464574 5.96313166 1.042834 11.92623395 1.05493164 17.8894043 C1.05997278 19.91968298 1.06680557 21.94995802 1.07543945 23.98022461 C1.08751467 26.89177347 1.09323034 29.8032745 1.09765625 32.71484375 C1.10281754 33.6283812 1.10797882 34.54191864 1.11329651 35.48313904 C1.11349168 37.65575427 1.06211805 39.82827296 1 42 C0 43 0 43 -2.86743164 43.11352539 C-4.11903076 43.10828857 -5.37062988 43.10305176 -6.66015625 43.09765625 C-7.65685585 43.09553383 -7.65685585 43.09553383 -8.6736908 43.09336853 C-10.80333899 43.08775518 -12.93288339 43.07520054 -15.0625 43.0625 C-16.50325369 43.05748671 -17.94400903 43.05292351 -19.38476562 43.04882812 C-22.92321102 43.03778145 -26.46159539 43.02050792 -30 43 C-29.86183041 39.35383329 -29.71318466 35.70816926 -29.5625 32.0625 C-29.52318359 31.02158203 -29.48386719 29.98066406 -29.44335938 28.90820312 C-29.40146484 27.91884766 -29.35957031 26.92949219 -29.31640625 25.91015625 C-29.27974854 24.99371338 -29.24309082 24.07727051 -29.20532227 23.13305664 C-29 21 -29 21 -28 20 C-25.92737924 19.91232888 -23.85179706 19.89304127 -21.77734375 19.90234375 C-20.51728516 19.90556641 -19.25722656 19.90878906 -17.95898438 19.91210938 C-16.61848891 19.92046597 -15.27799412 19.92893093 -13.9375 19.9375 C-12.59310058 19.9425134 -11.2486994 19.94707658 -9.90429688 19.95117188 C-6.60284567 19.96300503 -3.3014174 19.98094114 0 20 C0 13.4 0 6.8 0 0 Z \",fill:\"#6F6D6C\",transform:\"translate(606,872)\"})),_path511||(_path511=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0.33 19.14 0.66 29 1 C29 8.92 29 16.84 29 25 C19.1 25.33 9.2 25.66 -1 26 C-1 17.32692545 -0.61793098 8.65103367 0 0 Z \",fill:\"#5C5A59\",transform:\"translate(975,514)\"})),_path512||(_path512=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 8.58 0 17.16 0 26 C-4.47920597 26.02682159 -8.95825351 26.04675177 -13.4375 26.0625 C-14.71689453 26.07087891 -15.99628906 26.07925781 -17.31445312 26.08789062 C-19.13686523 26.09272461 -19.13686523 26.09272461 -20.99609375 26.09765625 C-22.12200928 26.10289307 -23.2479248 26.10812988 -24.40795898 26.11352539 C-27 26 -27 26 -28 25 C-28.08726223 23.21928754 -28.10699041 21.4351686 -28.09765625 19.65234375 C-28.09443359 18.57275391 -28.09121094 17.49316406 -28.08789062 16.38085938 C-28.07951172 15.24455078 -28.07113281 14.10824219 -28.0625 12.9375 C-28.05798828 11.79732422 -28.05347656 10.65714844 -28.04882812 9.48242188 C-28.03699747 6.65489649 -28.0205141 3.8274736 -28 1 C-25.39605427 0.82904928 -22.7919349 0.66319067 -20.1875 0.5 C-19.10952148 0.42845703 -19.10952148 0.42845703 -18.00976562 0.35546875 C-11.96993468 -0.01703184 -6.08604988 0 0 0 Z \",fill:\"#82817F\",transform:\"translate(216,360)\"})),_path513||(_path513=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30.020625 3.774375 30.04125 7.54875 30.0625 11.4375 C30.071604 12.62915771 30.08070801 13.82081543 30.09008789 15.04858398 C30.09258545 15.98001221 30.09508301 16.91144043 30.09765625 17.87109375 C30.10551147 19.30859985 30.10551147 19.30859985 30.11352539 20.77514648 C30 23 30 23 29 24 C26.01152561 24.10170984 23.0509097 24.13855288 20.0625 24.125 C19.24458984 24.12886719 18.42667969 24.13273438 17.58398438 24.13671875 C16.76349609 24.13542969 15.94300781 24.13414062 15.09765625 24.1328125 C14.36039307 24.13168457 13.62312988 24.13055664 12.86352539 24.12939453 C8.5635766 23.93509213 4.28297494 23.42829749 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#8B8A88\",transform:\"translate(914,747)\"})),_path514||(_path514=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C8.91 0 17.82 0 27 0 C27.66 7.59 28.32 15.18 29 23 C28.34 23 27.68 23 27 23 C27 23.66 27 24.32 27 25 C21.36487783 26.20481568 15.85353536 26.11256377 10.125 26.0625 C6.78375 26.041875 3.4425 26.02125 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#747472\",transform:\"translate(455,616)\"})),_path515||(_path515=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.92 29 15.84 29 24 C19.43 23.67 9.86 23.34 0 23 C-0.33 31.25 -0.66 39.5 -1 48 C-1.33 48 -1.66 48 -2 48 C-2.29098748 31.86636065 -1.38338981 16.0819065 0 0 Z \",fill:\"#807F7E\",transform:\"translate(915,490)\"})),_path516||(_path516=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 13.63076923 30 13.63076923 29.5625 18.1875 C29.48128906 19.08855469 29.40007813 19.98960937 29.31640625 20.91796875 C29 23 29 23 28 24 C25.92737924 24.08767112 23.85179706 24.10695873 21.77734375 24.09765625 C20.51728516 24.09443359 19.25722656 24.09121094 17.95898438 24.08789062 C16.61848891 24.07953403 15.27799412 24.07106907 13.9375 24.0625 C12.59310058 24.0574866 11.2486994 24.05292342 9.90429688 24.04882812 C6.60284567 24.03699497 3.3014174 24.01905886 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#848281\",transform:\"translate(852,257)\"})),_path517||(_path517=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.59 30 15.18 30 23 C19.93103696 23.92588166 10.10948884 24.08219097 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#8C8B89\",transform:\"translate(127,48)\"})),_path518||(_path518=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 8.25 0 16.5 0 25 C-9.57 25 -19.14 25 -29 25 C-29 17.08 -29 9.16 -29 1 C-24.606875 0.7525 -24.606875 0.7525 -20.125 0.5 C-19.22410645 0.44779297 -18.32321289 0.39558594 -17.39501953 0.34179688 C-16.64849121 0.30119141 -15.90196289 0.26058594 -15.1328125 0.21875 C-14.38918457 0.17685547 -13.64555664 0.13496094 -12.87939453 0.09179688 C-8.58833408 -0.04500478 -4.29324055 0 0 0 Z \",fill:\"#807E7C\",transform:\"translate(158,771)\"})),_path519||(_path519=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C19.43 24.67 9.86 24.34 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#8A8886\",transform:\"translate(68,746)\"})),_path520||(_path520=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C29.34 3.63 28.68 7.26 28 11 C27.73515676 14.35309494 27.73515676 14.35309494 27.8046875 17.32421875 C27.81113281 18.37158203 27.81757812 19.41894531 27.82421875 20.49804688 C27.84097656 21.55056641 27.85773437 22.60308594 27.875 23.6875 C27.88402344 24.78255859 27.89304687 25.87761719 27.90234375 27.00585938 C27.92561846 29.67081354 27.95830865 32.33528134 28 35 C27.34 34.67 26.68 34.34 26 34 C26 31.03 26 28.06 26 25 C17.42 25 8.84 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#797978\",transform:\"translate(546,413)\"})),_path521||(_path521=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.16781006 0.00523682 2.33562012 0.01047363 3.53881836 0.01586914 C4.79887695 0.0190918 6.05893555 0.02231445 7.35717773 0.02563477 C8.6976732 0.03399136 10.03816799 0.04245632 11.37866211 0.05102539 C12.72306153 0.05603879 14.06746271 0.06060197 15.41186523 0.06469727 C18.71334151 0.07653051 22.01473014 0.09301568 25.31616211 0.11352539 C25.48397694 2.15889875 25.64874094 4.20452254 25.81225586 6.25024414 C25.90434326 7.38937256 25.99643066 8.52850098 26.09130859 9.70214844 C26.38639646 14.1790895 26.40725633 18.62966555 26.31616211 23.11352539 C23.49792019 24.52264635 21.14364929 24.22536092 17.99584961 24.21118164 C16.73901367 24.20795898 15.48217773 24.20473633 14.18725586 24.20141602 C12.86854492 24.19303711 11.54983398 24.1846582 10.19116211 24.17602539 C8.85131999 24.17101028 7.51147611 24.1664474 6.17163086 24.16235352 C2.88643005 24.15053625 -0.39868186 24.13406157 -3.68383789 24.11352539 C-3.71271025 20.30104113 -3.73059281 16.48858469 -3.74633789 12.67602539 C-3.7547168 11.58741211 -3.7630957 10.49879883 -3.77172852 9.37719727 C-3.77495117 8.34272461 -3.77817383 7.30825195 -3.78149414 6.24243164 C-3.78673096 5.28409424 -3.79196777 4.32575684 -3.79736328 3.33837891 C-3.62996666 0.0577651 -3.31261928 0.14012262 0 0 Z \",fill:\"#898987\",transform:\"translate(369.683837890625,890.886474609375)\"})),_path522||(_path522=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.084021 0.00523682 2.16804199 0.01047363 3.28491211 0.01586914 C4.33815674 0.0183667 5.39140137 0.02086426 6.4765625 0.0234375 C7.82484131 0.0325415 9.17312012 0.04164551 10.56225586 0.05102539 C14.83163086 0.07165039 19.10100586 0.09227539 23.49975586 0.11352539 C23.49975586 8.69352539 23.49975586 17.27352539 23.49975586 26.11352539 C10.62475586 26.55102539 10.62475586 26.55102539 6.56665039 26.68164062 C4.99052979 26.73880249 4.99052979 26.73880249 3.38256836 26.79711914 C1.76439209 26.85210571 1.76439209 26.85210571 0.11352539 26.90820312 C-2.4809395 26.94729182 -2.4809395 26.94729182 -4.50024414 28.11352539 C-4.36213509 23.63408504 -4.21346998 19.15505756 -4.06274414 14.67602539 C-4.02342773 13.39663086 -3.98411133 12.11723633 -3.94360352 10.79907227 C-3.90170898 9.58413086 -3.85981445 8.36918945 -3.81665039 7.11743164 C-3.77999268 5.99151611 -3.74333496 4.86560059 -3.70556641 3.70556641 C-3.42435531 0.15548533 -3.42435531 0.15548533 0 0 Z \",fill:\"#595857\",transform:\"translate(191.500244140625,615.886474609375)\"})),_path523||(_path523=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.9693655 -0.02291487 7.9385632 -0.04284015 11.90795898 -0.05493164 C13.25920386 -0.05997057 14.61044326 -0.06680177 15.96166992 -0.07543945 C17.90020434 -0.08752419 19.838778 -0.09269828 21.77734375 -0.09765625 C23.52905884 -0.10551147 23.52905884 -0.10551147 25.31616211 -0.11352539 C28 0 28 0 29 1 C29.08726223 2.78071246 29.10699041 4.5648314 29.09765625 6.34765625 C29.09515869 7.31968994 29.09266113 8.29172363 29.09008789 9.29321289 C29.08098389 10.53707764 29.07187988 11.78094238 29.0625 13.0625 C29.041875 17.001875 29.02125 20.94125 29 25 C19.43 24.67 9.86 24.34 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#8A8886\",transform:\"translate(68,489)\"})),_path524||(_path524=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.9693655 -0.02291487 7.9385632 -0.04284015 11.90795898 -0.05493164 C13.25920386 -0.05997057 14.61044326 -0.06680177 15.96166992 -0.07543945 C17.90020434 -0.08752419 19.838778 -0.09269828 21.77734375 -0.09765625 C23.52905884 -0.10551147 23.52905884 -0.10551147 25.31616211 -0.11352539 C28 0 28 0 29 1 C29.08790975 3.29151417 29.10694038 5.58572524 29.09765625 7.87890625 C29.0962413 8.5655687 29.09482635 9.25223114 29.09336853 9.95970154 C29.08775479 12.16067801 29.07520007 14.36155409 29.0625 16.5625 C29.05748676 18.05143083 29.05292355 19.54036324 29.04882812 21.02929688 C29.03778093 24.68623075 29.02050713 28.34310558 29 32 C28.67 32 28.34 32 28 32 C28 29.36 28 26.72 28 24 C18.76 24 9.52 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#63615F\",transform:\"translate(39,209)\"})),_path525||(_path525=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C25.32875 25.020625 21.6575 25.04125 17.875 25.0625 C16.7288623 25.071604 15.58272461 25.08070801 14.40185547 25.09008789 C13.48291504 25.09258545 12.56397461 25.09508301 11.6171875 25.09765625 C10.21895752 25.10551147 10.21895752 25.10551147 8.79248047 25.11352539 C6 25 6 25 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#6D6C6A\",transform:\"translate(546,23)\"})),_path526||(_path526=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 8.25 29 16.5 29 25 C19.43 24.67 9.86 24.34 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#898986\",transform:\"translate(68,439)\"})),_path527||(_path527=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C28 8.25 28 16.5 28 25 C18.76 25 9.52 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8B8987\",transform:\"translate(98,413)\"})),_path528||(_path528=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C28 8.25 28 16.5 28 25 C18.76 25 9.52 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8C8A89\",transform:\"translate(39,413)\"})),_path529||(_path529=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.92393555 0.00249756 1.84787109 0.00499512 2.79980469 0.00756836 C4.54632324 0.02122437 4.54632324 0.02122437 6.328125 0.03515625 C10.040625 0.05578125 13.753125 0.07640625 17.578125 0.09765625 C17.578125 8.67765625 17.578125 17.25765625 17.578125 26.09765625 C8.668125 26.09765625 -0.241875 26.09765625 -9.421875 26.09765625 C-9.421875 17.84765625 -9.421875 9.59765625 -9.421875 1.09765625 C-5.96168527 0.23260882 -3.50616175 -0.01947868 0 0 Z \",fill:\"#5B595A\",transform:\"translate(197.421875,563.90234375)\"})),_path530||(_path530=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.16234 6.1983564 5.42794396 11.1007468 5.16796875 18.38671875 C5.14766602 19.4840332 5.14766602 19.4840332 5.12695312 20.60351562 C5.09200749 22.38574297 5.0382168 24.16758448 4.98046875 25.94921875 C4.65046875 24.95921875 4.32046875 23.96921875 3.98046875 22.94921875 C-5.91953125 22.94921875 -15.81953125 22.94921875 -26.01953125 22.94921875 C-25.68953125 15.02921875 -25.35953125 7.10921875 -25.01953125 -1.05078125 C-21.49265625 -1.31890625 -17.96578125 -1.58703125 -14.33203125 -1.86328125 C-13.22899658 -1.9610083 -12.12596191 -2.05873535 -10.98950195 -2.15942383 C-3.81612834 -2.59180773 -3.81612834 -2.59180773 0 0 Z \",fill:\"#797978\",transform:\"translate(694.01953125,540.05078125)\"})),_path531||(_path531=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.25159912 0.00523682 2.50319824 0.01047363 3.79272461 0.01586914 C5.00839111 0.0183667 6.22405762 0.02086426 7.4765625 0.0234375 C9.03366943 0.0325415 10.59077637 0.04164551 12.19506836 0.05102539 C17.12444336 0.07165039 22.05381836 0.09227539 27.13256836 0.11352539 C27.13256836 10.01352539 27.13256836 19.91352539 27.13256836 30.11352539 C26.80256836 30.11352539 26.47256836 30.11352539 26.13256836 30.11352539 C25.80256836 27.47352539 25.47256836 24.83352539 25.13256836 22.11352539 C16.55256836 22.44352539 7.97256836 22.77352539 -0.86743164 23.11352539 C-0.86743164 23.77352539 -0.86743164 24.43352539 -0.86743164 25.11352539 C-1.52743164 25.11352539 -2.18743164 25.11352539 -2.86743164 25.11352539 C-4.11240997 22.62356874 -3.99677536 20.92357628 -4.00024414 18.14086914 C-4.0015332 17.15924805 -4.00282227 16.17762695 -4.00415039 15.16625977 C-4.0002832 14.13823242 -3.99641602 13.11020508 -3.99243164 12.05102539 C-3.99629883 11.01913086 -4.00016602 9.98723633 -4.00415039 8.92407227 C-4.00286133 7.94374023 -4.00157227 6.9634082 -4.00024414 5.95336914 C-3.99855225 4.59779907 -3.99855225 4.59779907 -3.99682617 3.21484375 C-3.79451633 -0.07059177 -3.3427637 0.13234441 0 0 Z \",fill:\"#73716F\",transform:\"translate(947.867431640625,209.886474609375)\"})),_path532||(_path532=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C8.91 0 17.82 0 27 0 C28.00005304 3.00015912 28.11575585 4.97423756 28.09765625 8.10546875 C28.09515869 8.99129639 28.09266113 9.87712402 28.09008789 10.78979492 C28.08098389 11.9110376 28.07187988 13.03228027 28.0625 14.1875 C28.041875 17.755625 28.02125 21.32375 28 25 C18.76 25 9.52 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8D8B8A\",transform:\"translate(367,981)\"})),_path533||(_path533=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C20.14285714 -0.14285714 20.14285714 -0.14285714 30 1 C30 8.26 30 15.52 30 23 C20.1 23.66 10.2 24.32 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#666463\",transform:\"translate(607,955)\"})),_path534||(_path534=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29.33 7.92 29.66 15.84 30 24 C26.0489446 24.02294161 22.09805867 24.04285915 18.14697266 24.05493164 C16.14093449 24.06244036 14.13491798 24.0751447 12.12890625 24.08789062 C10.24365234 24.09272461 10.24365234 24.09272461 8.3203125 24.09765625 C6.57645264 24.10551147 6.57645264 24.10551147 4.79736328 24.11352539 C2 24 2 24 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#898786\",transform:\"translate(822,747)\"})),_path535||(_path535=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.92 29 15.84 29 24 C19.43 24 9.86 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#8E8C8A\",transform:\"translate(975,747)\"})),_path536||(_path536=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.21880117 3.7935871 5.6163187 7.65829477 8 12 C7.34 12 6.68 12 6 12 C6 16.95 6 21.9 6 27 C-3.57 27 -13.14 27 -23 27 C-23 19.08 -23 11.16 -23 3 C-15.41 2.67 -7.82 2.34 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#7D7D7B\",transform:\"translate(569,588)\"})),_path537||(_path537=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.92 29 15.84 29 24 C19.43 24 9.86 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#8A8887\",transform:\"translate(823,439)\"})),_path538||(_path538=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.92 29 15.84 29 24 C19.43 24 9.86 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#8A8886\",transform:\"translate(485,165)\"})),_path539||(_path539=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.9693655 -0.02291487 7.9385632 -0.04284015 11.90795898 -0.05493164 C13.25920386 -0.05997057 14.61044326 -0.06680177 15.96166992 -0.07543945 C17.90020434 -0.08752419 19.838778 -0.09269828 21.77734375 -0.09765625 C23.52905884 -0.10551147 23.52905884 -0.10551147 25.31616211 -0.11352539 C28 0 28 0 29 1 C29.08726223 2.78071246 29.10699041 4.5648314 29.09765625 6.34765625 C29.09515869 7.31968994 29.09266113 8.29172363 29.09008789 9.29321289 C29.08098389 10.53707764 29.07187988 11.78094238 29.0625 13.0625 C29.041875 17.001875 29.02125 20.94125 29 25 C19.43 24.67 9.86 24.34 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#888886\",transform:\"translate(306,23)\"})),_path540||(_path540=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.16781006 0.00523682 2.33562012 0.01047363 3.53881836 0.01586914 C4.79887695 0.0190918 6.05893555 0.02231445 7.35717773 0.02563477 C8.6976732 0.03399136 10.03816799 0.04245632 11.37866211 0.05102539 C12.72306153 0.05603879 14.06746271 0.06060197 15.41186523 0.06469727 C18.71331644 0.07653042 22.01474471 0.09446653 25.31616211 0.11352539 C25.31616211 8.03352539 25.31616211 15.95352539 25.31616211 24.11352539 C15.74616211 24.11352539 6.17616211 24.11352539 -3.68383789 24.11352539 C-3.70446289 20.33915039 -3.72508789 16.56477539 -3.74633789 12.67602539 C-3.75544189 11.48436768 -3.7645459 10.29270996 -3.77392578 9.06494141 C-3.77642334 8.13351318 -3.7789209 7.20208496 -3.78149414 6.24243164 C-3.78673096 5.28409424 -3.79196777 4.32575684 -3.79736328 3.33837891 C-3.62996666 0.0577651 -3.31261928 0.14012262 0 0 Z \",fill:\"#8B8A88\",transform:\"translate(488.683837890625,47.886474609375)\"})),_path541||(_path541=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.16781006 0.00523682 2.33562012 0.01047363 3.53881836 0.01586914 C4.79887695 0.0190918 6.05893555 0.02231445 7.35717773 0.02563477 C8.6976732 0.03399136 10.03816799 0.04245632 11.37866211 0.05102539 C12.72306153 0.05603879 14.06746271 0.06060197 15.41186523 0.06469727 C18.71331644 0.07653042 22.01474471 0.09446653 25.31616211 0.11352539 C25.31616211 8.03352539 25.31616211 15.95352539 25.31616211 24.11352539 C15.74616211 24.11352539 6.17616211 24.11352539 -3.68383789 24.11352539 C-3.70446289 20.33915039 -3.72508789 16.56477539 -3.74633789 12.67602539 C-3.75544189 11.48436768 -3.7645459 10.29270996 -3.77392578 9.06494141 C-3.77642334 8.13351318 -3.7789209 7.20208496 -3.78149414 6.24243164 C-3.78673096 5.28409424 -3.79196777 4.32575684 -3.79736328 3.33837891 C-3.62996666 0.0577651 -3.31261928 0.14012262 0 0 Z \",fill:\"#8B8A89\",transform:\"translate(428.683837890625,47.886474609375)\"})),_path542||(_path542=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.45837306 -0.02685767 8.91658596 -0.04676971 13.375 -0.0625 C14.64601563 -0.07087891 15.91703125 -0.07925781 17.2265625 -0.08789062 C19.04414062 -0.09272461 19.04414062 -0.09272461 20.8984375 -0.09765625 C22.57945557 -0.10551147 22.57945557 -0.10551147 24.29443359 -0.11352539 C27 0 27 0 29 1 C29 8.59 29 16.18 29 24 C19.43 24 9.86 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#8E8C8B\",transform:\"translate(975,892)\"})),_path543||(_path543=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.21042969 -0.00128906 2.42085937 -0.00257813 3.66796875 -0.00390625 C4.94285156 -0.00003906 6.21773437 0.00382812 7.53125 0.0078125 C9.44357422 0.00201172 9.44357422 0.00201172 11.39453125 -0.00390625 C13.21017578 -0.00197266 13.21017578 -0.00197266 15.0625 0 C16.18205078 0.00112793 17.30160156 0.00225586 18.45507812 0.00341797 C21.03125 0.1328125 21.03125 0.1328125 22.03125 1.1328125 C22.11838831 2.84053608 22.13825007 4.55179899 22.12890625 6.26171875 C22.12640869 7.19314697 22.12391113 8.1245752 22.12133789 9.08422852 C22.11223389 10.27588623 22.10312988 11.46754395 22.09375 12.6953125 C22.073125 16.4696875 22.0525 20.2440625 22.03125 24.1328125 C12.46125 24.1328125 2.89125 24.1328125 -6.96875 24.1328125 C-6.989375 20.3584375 -7.01 16.5840625 -7.03125 12.6953125 C-7.040354 11.50365479 -7.04945801 10.31199707 -7.05883789 9.08422852 C-7.06133545 8.15280029 -7.06383301 7.22137207 -7.06640625 6.26171875 C-7.07164307 5.30338135 -7.07687988 4.34504395 -7.08227539 3.35766602 C-6.85266233 -1.14225609 -3.83686407 0.00386558 0 0 Z \",fill:\"#898785\",transform:\"translate(829.96875,488.8671875)\"})),_path544||(_path544=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.27087508 -0.02689844 8.54158182 -0.04678984 12.8125 -0.0625 C14.63491211 -0.07506836 14.63491211 -0.07506836 16.49414062 -0.08789062 C18.23920898 -0.09272461 18.23920898 -0.09272461 20.01953125 -0.09765625 C21.09307861 -0.10289307 22.16662598 -0.10812988 23.27270508 -0.11352539 C26 0 26 0 29 1 C29 8.59 29 16.18 29 24 C19.43 24 9.86 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#8C8A88\",transform:\"translate(822,892)\"})),_path545||(_path545=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.16337891 0.00322266 2.32675781 0.00644531 3.52539062 0.00976562 C4.74033203 0.01814453 5.95527344 0.02652344 7.20703125 0.03515625 C8.43357422 0.03966797 9.66011719 0.04417969 10.92382812 0.04882812 C13.9557499 0.06062549 16.98764665 0.07856111 20.01953125 0.09765625 C20.01953125 8.01765625 20.01953125 15.93765625 20.01953125 24.09765625 C10.44953125 24.09765625 0.87953125 24.09765625 -8.98046875 24.09765625 C-8.98046875 16.50765625 -8.98046875 8.91765625 -8.98046875 1.09765625 C-5.74295197 0.01848399 -3.40295104 -0.01659976 0 0 Z \",fill:\"#8C8B8A\",transform:\"translate(314.98046875,891.90234375)\"})),_path546||(_path546=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 8.25 0 16.5 0 25 C-9.57 24.67 -19.14 24.34 -29 24 C-29.33 16.41 -29.66 8.82 -30 1 C-19.95423343 0.34661681 -10.0671917 -0.11571485 0 0 Z \",fill:\"#878583\",transform:\"translate(305,916)\"})),_path547||(_path547=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66902344 -0.00128906 1.33804688 -0.00257813 2.02734375 -0.00390625 C2.69636719 -0.00003906 3.36539063 0.00382813 4.0546875 0.0078125 C4.73144531 0.00394531 5.40820312 0.00007812 6.10546875 -0.00390625 C10.15026703 0.00391734 13.9618863 0.35408516 17.9296875 1.1328125 C19.44801853 15.82688279 19.44801853 15.82688279 15.84375 21.30078125 C13.27963486 23.66563231 11.05931574 25.58696582 7.9296875 27.1328125 C5.6015625 26.84375 5.6015625 26.84375 3.9296875 26.1328125 C3.9296875 25.8028125 3.9296875 25.4728125 3.9296875 25.1328125 C2.228125 25.16375 2.228125 25.16375 0.4921875 25.1953125 C-3.0703125 25.1328125 -3.0703125 25.1328125 -4.0703125 24.1328125 C-6.7103125 23.8028125 -9.3503125 23.4728125 -12.0703125 23.1328125 C-12.0703125 15.8728125 -12.0703125 8.6128125 -12.0703125 1.1328125 C-3.05450989 0.00583717 -3.05450989 0.00583717 0 0 Z \",fill:\"#696868\",transform:\"translate(140.0703125,846.8671875)\"})),_path548||(_path548=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C28.6293728 8.02450317 29.16691405 15.95103344 29 24 C30.32 24.33 31.64 24.66 33 25 C22.11 24.67 11.22 24.34 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#858583\",transform:\"translate(396,190)\"})),_path549||(_path549=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C8.91 0 17.82 0 27 0 C27.3125 11.3125 27.3125 11.3125 27.38793945 14.8684082 C27.42105225 15.79484131 27.45416504 16.72127441 27.48828125 17.67578125 C27.51446533 18.62364502 27.54064941 19.57150879 27.56762695 20.5480957 C28.06200245 23.35160394 28.80655626 24.25596964 31 26 C30.34 26 29.68 26 29 26 C29 28.97 29 31.94 29 35 C28.67 35 28.34 35 28 35 C28 31.7 28 28.4 28 25 C18.76 25 9.52 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#565553\",transform:\"translate(188,439)\"})),_path550||(_path550=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.20970459 0.00523682 2.41940918 0.01047363 3.66577148 0.01586914 C4.97094727 0.0190918 6.27612305 0.02231445 7.62084961 0.02563477 C9.00952213 0.03399138 10.39819401 0.04245634 11.78686523 0.05102539 C13.17944179 0.05603873 14.57202005 0.06060193 15.96459961 0.06469727 C19.38453974 0.07653097 22.80445773 0.09446708 26.22436523 0.11352539 C26.22436523 7.70352539 26.22436523 15.29352539 26.22436523 23.11352539 C16.32436523 23.44352539 6.42436523 23.77352539 -3.77563477 24.11352539 C-3.79625977 20.33915039 -3.81688477 16.56477539 -3.83813477 12.67602539 C-3.84723877 11.48436768 -3.85634277 10.29270996 -3.86572266 9.06494141 C-3.86822021 8.13351318 -3.87071777 7.20208496 -3.87329102 6.24243164 C-3.87852783 5.28409424 -3.88376465 4.32575684 -3.88916016 3.33837891 C-3.71920217 0.00756797 -3.37270508 0.13794598 0 0 Z \",fill:\"#888785\",transform:\"translate(640.775634765625,892.886474609375)\"})),_path551||(_path551=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.59 30 15.18 30 23 C20.1 23 10.2 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#878786\",transform:\"translate(8,540)\"})),_path552||(_path552=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.59 30 15.18 30 23 C20.1 23 10.2 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#5E5C5B\",transform:\"translate(8,141)\"})),_path553||(_path553=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.59 30 15.18 30 23 C20.1 23 10.2 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#8A8885\",transform:\"translate(822,118)\"})),_path554||(_path554=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.59 30 15.18 30 23 C20.1 23 10.2 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#888785\",transform:\"translate(8,117)\"})),_path555||(_path555=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.59 30 15.18 30 23 C20.1 23 10.2 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#8F8D8B\",transform:\"translate(791,72)\"})),_path556||(_path556=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.59 30 15.18 30 23 C20.1 23 10.2 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#8C8B89\",transform:\"translate(576,72)\"})),_path557||(_path557=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.59 30 15.18 30 23 C20.1 23 10.2 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#8B8B8A\",transform:\"translate(246,72)\"})),_path558||(_path558=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.11177927 -0.02291394 8.22339658 -0.04283951 12.33520508 -0.05493164 C13.73495228 -0.0599708 15.1346942 -0.06680216 16.53442383 -0.07543945 C18.54245777 -0.0875232 20.55052957 -0.09269807 22.55859375 -0.09765625 C24.37315063 -0.10551147 24.37315063 -0.10551147 26.22436523 -0.11352539 C29 0 29 0 30 1 C30.08700342 2.63472882 30.10701063 4.27314055 30.09765625 5.91015625 C30.09515869 6.800979 30.09266113 7.69180176 30.09008789 8.60961914 C30.08098389 9.74906982 30.07187988 10.88852051 30.0625 12.0625 C30.041875 15.671875 30.02125 19.28125 30 23 C20.1 23 10.2 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#8A8988\",transform:\"translate(669,957)\"})),_path559||(_path559=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.92 29 15.84 29 24 C29.99 24 30.98 24 32 24 C31.67 29.61 31.34 35.22 31 41 C30.67 41 30.34 41 30 41 C29.67 35.72 29.34 30.44 29 25 C27.66066406 25.03222656 26.32132813 25.06445312 24.94140625 25.09765625 C8.78753656 25.14318576 8.78753656 25.14318576 3.25 20.375 C-1.74210583 14.2023962 -0.60571154 7.47044236 0 0 Z \",fill:\"#62605F\",transform:\"translate(67,48)\"})),_path560||(_path560=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.20970459 0.00523682 2.41940918 0.01047363 3.66577148 0.01586914 C4.97094727 0.0190918 6.27612305 0.02231445 7.62084961 0.02563477 C9.00952213 0.03399138 10.39819401 0.04245634 11.78686523 0.05102539 C13.17944179 0.05603873 14.57202005 0.06060193 15.96459961 0.06469727 C19.38453974 0.07653097 22.80445773 0.09446708 26.22436523 0.11352539 C26.22436523 7.70352539 26.22436523 15.29352539 26.22436523 23.11352539 C16.65436523 23.11352539 7.08436523 23.11352539 -2.77563477 23.11352539 C-3.96782831 20.7291383 -3.90479499 19.23696537 -3.90844727 16.57836914 C-3.90973633 15.68698242 -3.91102539 14.7955957 -3.91235352 13.87719727 C-3.90848633 12.94456055 -3.90461914 12.01192383 -3.90063477 11.05102539 C-3.90450195 10.11452148 -3.90836914 9.17801758 -3.91235352 8.21313477 C-3.91106445 7.32303711 -3.90977539 6.43293945 -3.90844727 5.51586914 C-3.90731934 4.69594482 -3.90619141 3.87602051 -3.9050293 3.03125 C-3.69575799 -0.07030874 -3.14255735 0.12853278 0 0 Z \",fill:\"#8C8B8A\",transform:\"translate(11.775634765625,70.886474609375)\"})),_path561||(_path561=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 7.92 0 15.84 0 24 C-4.11177927 24.02291394 -8.22339658 24.04283951 -12.33520508 24.05493164 C-13.73495228 24.0599708 -15.1346942 24.06680216 -16.53442383 24.07543945 C-18.54245777 24.0875232 -20.55052957 24.09269807 -22.55859375 24.09765625 C-23.76829834 24.10289307 -24.97800293 24.10812988 -26.22436523 24.11352539 C-29 24 -29 24 -30 23 C-30.10069436 20.23978992 -30.13868592 17.50999366 -30.125 14.75 C-30.12886719 13.98558594 -30.13273438 13.22117187 -30.13671875 12.43359375 C-30.13542969 11.68722656 -30.13414062 10.94085937 -30.1328125 10.171875 C-30.13168457 9.4922168 -30.13055664 8.81255859 -30.12939453 8.11230469 C-29.98019798 5.67674141 -29.52278737 3.38083704 -29 1 C-24.54168888 0.83273548 -20.08334759 0.66628917 -15.625 0.5 C-14.35398437 0.45230469 -13.08296875 0.40460937 -11.7734375 0.35546875 C-9.95585938 0.28779297 -9.95585938 0.28779297 -8.1015625 0.21875 C-6.42054443 0.1559082 -6.42054443 0.1559082 -4.70556641 0.09179688 C-3.13764805 0.03859914 -1.56882057 0 0 0 Z \",fill:\"#8E8E8D\",transform:\"translate(667,846)\"})),_path562||(_path562=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.96679688 0.00322266 1.93359375 0.00644531 2.9296875 0.00976562 C4.40308594 0.02233398 4.40308594 0.02233398 5.90625 0.03515625 C6.91945313 0.03966797 7.93265625 0.04417969 8.9765625 0.04882812 C11.45318827 0.06051032 13.92968657 0.07689043 16.40625 0.09765625 C16.60213601 3.74309045 16.78655536 7.38901415 16.96875 11.03515625 C17.02482422 12.07607422 17.08089844 13.11699219 17.13867188 14.18945312 C17.18701172 15.17880859 17.23535156 16.16816406 17.28515625 17.1875 C17.3322876 18.10394287 17.37941895 19.02038574 17.42797852 19.96459961 C17.40625 22.09765625 17.40625 22.09765625 16.40625 23.09765625 C14.18769736 23.18549167 11.96636504 23.20460234 9.74609375 23.1953125 C8.74939415 23.19319008 8.74939415 23.19319008 7.7325592 23.19102478 C5.60291101 23.18541143 3.47336661 23.17285679 1.34375 23.16015625 C-0.09700369 23.15514296 -1.53775903 23.15057976 -2.97851562 23.14648438 C-6.51699958 23.13628701 -10.05525813 23.11671455 -13.59375 23.09765625 C-13.59375 15.83765625 -13.59375 8.57765625 -13.59375 1.09765625 C-4.59375 -0.02734375 -4.59375 -0.02734375 0 0 Z \",fill:\"#8A8A88\",transform:\"translate(681.59375,822.90234375)\"})),_path563||(_path563=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.56 0 21.12 0 32 0 C32 7.92 32 15.84 32 24 C27.05 24.495 27.05 24.495 22 25 C21.34 26.32 20.68 27.64 20 29 C13.12019048 25.56009524 7.6985971 19.65747477 4 13 C3.278125 12.4225 2.55625 11.845 1.8125 11.25 C0 9 0 9 0 0 Z \",fill:\"#757473\",transform:\"translate(302,282)\"})),_path564||(_path564=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.11181641 0.00322266 2.22363281 0.00644531 3.36914062 0.00976562 C4.51962891 0.01814453 5.67011719 0.02652344 6.85546875 0.03515625 C8.02529297 0.03966797 9.19511719 0.04417969 10.40039062 0.04882812 C13.28127198 0.06058682 16.16212694 0.07852151 19.04296875 0.09765625 C19.04296875 7.68765625 19.04296875 15.27765625 19.04296875 23.09765625 C9.14296875 23.09765625 -0.75703125 23.09765625 -10.95703125 23.09765625 C-10.95703125 15.83765625 -10.95703125 8.57765625 -10.95703125 1.09765625 C-7.00007828 0.30626566 -3.96212115 -0.02031857 0 0 Z \",fill:\"#8F8F8D\",transform:\"translate(525.95703125,71.90234375)\"})),_path565||(_path565=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.92 29 15.84 29 24 C19.22789473 24.0788073 9.73092837 23.98541047 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#605E5C\",transform:\"translate(68,140)\"})),_path566||(_path566=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.11181641 0.00644531 2.22363281 0.01289062 3.36914062 0.01953125 C5.09487305 0.04466797 5.09487305 0.04466797 6.85546875 0.0703125 C8.02529297 0.07933594 9.19511719 0.08835937 10.40039062 0.09765625 C13.28145928 0.12117518 16.16210864 0.15404398 19.04296875 0.1953125 C19.07184387 3.84112937 19.0897246 7.48691713 19.10546875 11.1328125 C19.11384766 12.17373047 19.12222656 13.21464844 19.13085938 14.28710938 C19.13569336 15.77114258 19.13569336 15.77114258 19.140625 17.28515625 C19.14848022 18.65982056 19.14848022 18.65982056 19.15649414 20.06225586 C19.04296875 22.1953125 19.04296875 22.1953125 18.04296875 23.1953125 C15.89738048 23.28306855 13.74892454 23.30226469 11.6015625 23.29296875 C10.29638672 23.28974609 8.99121094 23.28652344 7.64648438 23.28320312 C6.25781185 23.27484651 4.86913998 23.26638155 3.48046875 23.2578125 C2.08789219 23.25279916 0.69531394 23.24823597 -0.69726562 23.24414062 C-4.11720576 23.23230692 -7.53712375 23.21437081 -10.95703125 23.1953125 C-10.95703125 16.2653125 -10.95703125 9.3353125 -10.95703125 2.1953125 C-6.47718672 0.40337469 -4.58401397 -0.04701553 0 0 Z \",fill:\"#888684\",transform:\"translate(617.95703125,931.8046875)\"})),_path567||(_path567=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.95854491 4.23433609 11.29559562 8.87269791 16.5 14 C17.22703125 14.68578125 17.9540625 15.3715625 18.703125 16.078125 C23.82239024 21.12040881 23.82239024 21.12040881 24.65625 25.25 C23.91273104 28.36569848 23.27583478 29.74996296 21 32 C17.99731445 32.45410156 17.99731445 32.45410156 14.36328125 32.390625 C12.41518555 32.37128906 12.41518555 32.37128906 10.42773438 32.3515625 C9.05597897 32.31814101 7.68423419 32.28428123 6.3125 32.25 C4.92906188 32.22993376 3.54559616 32.21168319 2.16210938 32.1953125 C-1.22555699 32.14809764 -4.61286511 32.0763537 -8 32 C-8 24.08 -8 16.16 -8 8 C-3.545 7.505 -3.545 7.505 1 7 C1.21081851 3.10540926 1.21081851 3.10540926 0 0 Z \",fill:\"#615F5D\",transform:\"translate(135,132)\"})),_path568||(_path568=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C28.33 7.92 28.66 15.84 29 24 C19.43 24 9.86 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#898886\",transform:\"translate(367,165)\"})),_path569||(_path569=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30.020625 3.238125 30.04125 6.47625 30.0625 9.8125 C30.071604 10.82932861 30.08070801 11.84615723 30.09008789 12.89379883 C30.09258545 13.69841553 30.09508301 14.50303223 30.09765625 15.33203125 C30.10551147 16.56530151 30.10551147 16.56530151 30.11352539 17.82348633 C30 20 30 20 29 23 C19.76 23 10.52 23 1 23 C-0.125 15.125 -0.125 15.125 -0.09765625 11.81640625 C-0.09515869 11.18420166 -0.09266113 10.55199707 -0.09008789 9.90063477 C-0.08098389 9.12905029 -0.07187988 8.35746582 -0.0625 7.5625 C-0.041875 5.066875 -0.02125 2.57125 0 0 Z \",fill:\"#605E5C\",transform:\"translate(157,48)\"})),_path570||(_path570=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C-4.68367814 9.9094542 -11.44679469 16.60620221 -18.38818359 23.40185547 C-22.60586199 27.54339267 -26.62631359 31.7615857 -30.47875977 36.24511719 C-32.38104462 38.43956808 -34.38035058 40.51312809 -36.4375 42.5625 C-37.11683594 43.24441406 -37.79617188 43.92632812 -38.49609375 44.62890625 C-40.5314384 46.5562919 -42.5986223 48.38845852 -44.72265625 50.21484375 C-49.37413628 54.25784056 -53.68110577 58.6074045 -58 63 C-59.51827606 64.54418521 -61.03908735 66.08588206 -62.5625 67.625 C-63.22378906 68.29789062 -63.88507813 68.97078125 -64.56640625 69.6640625 C-66.47850194 71.49942882 -68.4102168 73.21052631 -70.42578125 74.92578125 C-76.1268545 79.88277696 -81.39189906 85.28110179 -86.71307373 90.63790894 C-88.66256755 92.6003164 -90.61529925 94.55945154 -92.56884766 96.51782227 C-96.71539909 100.67572975 -100.85799633 104.83756277 -105 109 C-109.80466079 113.82836341 -114.61098393 118.65504776 -119.42156982 123.47750854 C-121.33342479 125.39578514 -123.24221206 127.31707743 -125.15087891 129.23852539 C-130.45052325 134.56011944 -135.72313971 139.84181897 -141.47608948 144.68081665 C-143.84064507 146.72771003 -145.87226784 149.0314254 -147.9375 151.375 C-152.73514934 156.72470762 -157.73580183 161.8526092 -162.8125 166.9375 C-163.52978271 167.65921387 -164.24706543 168.38092773 -164.98608398 169.12451172 C-168.00360214 172.13394567 -171.01133635 175.07885042 -174.3125 177.77734375 C-176.5588216 179.63513007 -178.3485091 181.38665719 -180.1875 183.625 C-185.65615808 190.02940624 -191.63808583 196.44051181 -198.25 201.6875 C-201.18684866 204.15712274 -203.51790253 206.82601617 -205.99609375 209.7421875 C-209.11945189 213.26129277 -212.49638468 216.51638138 -215.86328125 219.80078125 C-218.1352713 222.00578065 -218.1352713 222.00578065 -220 225 C-220.33 224.01 -220.66 223.02 -221 222 C-213.76575774 213.8734283 -206.21496668 206.12642746 -198.45947266 198.49658203 C-194.95572273 195.03281345 -191.55280532 191.54938608 -188.33984375 187.8125 C-185.36816024 184.35816265 -182.21059566 181.27880685 -178.8125 178.25 C-170.96376859 171.12144057 -163.1853434 163.83941568 -156.3125 155.75 C-153.23435688 152.12998327 -149.8148516 149.0470298 -146.2109375 145.95703125 C-143.69744151 143.73218763 -141.35923557 141.38897384 -139 139 C-137.58411037 137.58255672 -136.16735932 136.16597368 -134.75 134.75 C-133.9765625 133.9765625 -133.203125 133.203125 -132.40625 132.40625 C-108 108 -108 108 -105.8215332 105.82373047 C-103.13067652 103.13077828 -100.44465308 100.43310612 -97.7598114 97.73416138 C-94.97186079 94.93273593 -92.18117767 92.13403894 -89.39038086 89.33544922 C-87.92626003 87.86629816 -86.46303779 86.39625103 -85.00073242 84.92529297 C-82.87139011 82.78371444 -80.73873984 80.64547668 -78.60546875 78.5078125 C-77.96248337 77.85966583 -77.31949799 77.21151917 -76.6570282 76.54373169 C-73.6539432 73.54028314 -70.62062767 70.63970222 -67.38720703 67.88500977 C-61.00878989 62.37158598 -55.15193546 56.29546295 -49.19921875 50.33203125 C-47.8727705 49.00625773 -46.54617394 47.68063258 -45.21943665 46.35514832 C-42.45350237 43.59068103 -39.68936657 40.82443153 -36.92651367 38.05688477 C-33.38811839 34.51277037 -29.84522196 30.97319486 -26.30098248 27.43492603 C-23.56684012 24.70439722 -20.83508391 21.97149121 -18.10404396 19.23785973 C-16.79824998 17.93139984 -15.49171598 16.62567914 -14.18442345 15.32071877 C-12.36099538 13.49983268 -10.54080742 11.67576779 -8.72143555 9.85083008 C-8.18374542 9.31516418 -7.6460553 8.77949829 -7.09207153 8.2276001 C-4.50026964 5.6211053 -2.10782678 3.01544034 0 0 Z \",fill:\"#EBEAE7\",transform:\"translate(1022,0)\"})),_path571||(_path571=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.59 29 15.18 29 23 C24.88822073 23.02291394 20.77660342 23.04283951 16.66479492 23.05493164 C15.26504772 23.0599708 13.8653058 23.06680216 12.46557617 23.07543945 C10.45754223 23.0875232 8.44947043 23.09269807 6.44140625 23.09765625 C5.23170166 23.10289307 4.02199707 23.10812988 2.77563477 23.11352539 C0 23 0 23 -1 22 C-1.10139178 20.18985855 -1.12961904 18.37547298 -1.125 16.5625 C-1.12757813 15.57378906 -1.13015625 14.58507812 -1.1328125 13.56640625 C-0.96393975 9.03167631 -0.45153526 4.51535265 0 0 Z \",fill:\"#8A8A89\",transform:\"translate(306,72)\"})),_path572||(_path572=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 7.59 0 15.18 0 23 C-14.85 22.505 -14.85 22.505 -30 22 C-30 14.74 -30 7.48 -30 0 C-26.865 -0.165 -23.73 -0.33 -20.5 -0.5 C-19.52869141 -0.55220703 -18.55738281 -0.60441406 -17.55664062 -0.65820312 C-2.82656827 -1.41328413 -2.82656827 -1.41328413 0 0 Z \",fill:\"#888886\",transform:\"translate(366,915)\"})),_path573||(_path573=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0 20.46 0 31 0 C31.020625 2.51625 31.04125 5.0325 31.0625 7.625 C31.071604 8.40568848 31.08070801 9.18637695 31.09008789 9.99072266 C31.09258545 10.6254248 31.09508301 11.26012695 31.09765625 11.9140625 C31.10551147 12.8723999 31.10551147 12.8723999 31.11352539 13.85009766 C30.96894244 16.58815676 30.45076127 19.29543235 30 22 C20.1 22 10.2 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#61605E\",transform:\"translate(791,0)\"})),_path574||(_path574=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.485625 -0.020625 6.97125 -0.04125 10.5625 -0.0625 C11.64732666 -0.071604 12.73215332 -0.08070801 13.84985352 -0.09008789 C15.16360962 -0.09383423 15.16360962 -0.09383423 16.50390625 -0.09765625 C17.38892822 -0.10289307 18.2739502 -0.10812988 19.18579102 -0.11352539 C22.47550791 0.01918202 25.74069769 0.53438538 29 1 C29 8.26 29 15.52 29 23 C19.26595414 23.88491326 9.76383546 24.08490292 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#656361\",transform:\"translate(276,893)\"})),_path575||(_path575=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C8.91 0 17.82 0 27 0 C27.71258451 3.56292256 28.12153291 6.13466164 28.09765625 9.64453125 C28.09515869 10.40354736 28.09266113 11.16256348 28.09008789 11.94458008 C28.08098389 12.89099365 28.07187988 13.83740723 28.0625 14.8125 C28.041875 17.844375 28.02125 20.87625 28 24 C18.76 24.33 9.52 24.66 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#858482\",transform:\"translate(188,643)\"})),_path576||(_path576=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.59 0 15.18 0 23 0 C23 7.92 23 15.84 23 24 C13.1 24.33 3.2 24.66 -7 25 C-8.11111111 11.66666667 -8.11111111 11.66666667 -3.54296875 5.9375 C-1.72028273 3.7861672 -1.72028273 3.7861672 0 0 Z \",fill:\"#828180\",transform:\"translate(737,591)\"})),_path577||(_path577=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C8.91 0 17.82 0 27 0 C27 8.25 27 16.5 27 25 C18.09 25 9.18 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#878584\",transform:\"translate(188,464)\"})),_path578||(_path578=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C8.91 0 17.82 0 27 0 C27 8.25 27 16.5 27 25 C18.09 25 9.18 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#838281\",transform:\"translate(187,282)\"})),_path579||(_path579=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.8758374 0.00249756 1.7516748 0.00499512 2.65405273 0.00756836 C3.73887939 0.01667236 4.82370605 0.02577637 5.94140625 0.03515625 C9.42703125 0.05578125 12.91265625 0.07640625 16.50390625 0.09765625 C16.83390625 7.68765625 17.16390625 15.27765625 17.50390625 23.09765625 C7.60390625 23.42765625 -2.29609375 23.75765625 -12.49609375 24.09765625 C-12.49609375 16.50765625 -12.49609375 8.91765625 -12.49609375 1.09765625 C-8.04392818 0.4616326 -4.3769856 -0.02589932 0 0 Z \",fill:\"#838280\",transform:\"translate(649.49609375,70.90234375)\"})),_path580||(_path580=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30.020625 3.0525 30.04125 6.105 30.0625 9.25 C30.071604 10.20551758 30.08070801 11.16103516 30.09008789 12.14550781 C30.09258545 12.90702148 30.09508301 13.66853516 30.09765625 14.453125 C30.10551147 15.61569824 30.10551147 15.61569824 30.11352539 16.80175781 C30.00036998 18.99283598 29.60552448 20.89637861 29 23 C19.24961262 23.12290404 9.72400238 22.80197958 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#8E8D8C\",transform:\"translate(914,957)\"})),_path581||(_path581=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C28 7.92 28 15.84 28 24 C18.76 24 9.52 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#888786\",transform:\"translate(188,772)\"})),_path582||(_path582=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.59 29 15.18 29 23 C19.43 23.33 9.86 23.66 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#868482\",transform:\"translate(883,539)\"})),_path583||(_path583=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.26 30 14.52 30 22 C30.66 22.33 31.32 22.66 32 23 C31.67 25.97 31.34 28.94 31 32 C30.67 32 30.34 32 30 32 C29.67 29.03 29.34 26.06 29 23 C19.43 22.67 9.86 22.34 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#646361\",transform:\"translate(67,0)\"})),_path584||(_path584=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.12591553 0.00523682 2.25183105 0.01047363 3.41186523 0.01586914 C4.62680664 0.0190918 5.84174805 0.02231445 7.09350586 0.02563477 C8.37290039 0.03401367 9.65229492 0.04239258 10.97045898 0.05102539 C12.2537207 0.05553711 13.53698242 0.06004883 14.85913086 0.06469727 C18.04209319 0.07652984 21.22503173 0.09446595 24.40795898 0.11352539 C24.40795898 8.03352539 24.40795898 15.95352539 24.40795898 24.11352539 C15.16795898 24.11352539 5.92795898 24.11352539 -3.59204102 24.11352539 C-3.61266602 20.33915039 -3.63329102 16.56477539 -3.65454102 12.67602539 C-3.66364502 11.48436768 -3.67274902 10.29270996 -3.68212891 9.06494141 C-3.68462646 8.13351318 -3.68712402 7.20208496 -3.68969727 6.24243164 C-3.69493408 5.28409424 -3.7001709 4.32575684 -3.70556641 3.33837891 C-3.54079798 0.10927207 -3.25224379 0.14244074 0 0 Z \",fill:\"#595654\",transform:\"translate(249.592041015625,189.886474609375)\"})),_path585||(_path585=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.82773926 0.04560059 1.65547852 0.09120117 2.50830078 0.13818359 C3.5136084 0.20859863 4.51891602 0.27901367 5.5546875 0.3515625 C10.4428125 0.6609375 10.4428125 0.6609375 15.4296875 0.9765625 C15.4296875 8.2365625 15.4296875 15.4965625 15.4296875 22.9765625 C5.5296875 22.9765625 -4.3703125 22.9765625 -14.5703125 22.9765625 C-14.9003125 16.0465625 -15.2303125 9.1165625 -15.5703125 1.9765625 C-4.3203125 -0.2734375 -4.3203125 -0.2734375 0 0 Z \",fill:\"#73716F\",transform:\"translate(529.5703125,117.0234375)\"})),_path586||(_path586=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 7.59 0 15.18 0 23 C-4.11177927 23.02291394 -8.22339658 23.04283951 -12.33520508 23.05493164 C-13.73495228 23.0599708 -15.1346942 23.06680216 -16.53442383 23.07543945 C-18.54245777 23.0875232 -20.55052957 23.09269807 -22.55859375 23.09765625 C-23.76829834 23.10289307 -24.97800293 23.10812988 -26.22436523 23.11352539 C-29 23 -29 23 -30 22 C-30.09880797 20.52347336 -30.13079245 19.04232764 -30.1328125 17.5625 C-30.13410156 16.66789063 -30.13539063 15.77328125 -30.13671875 14.8515625 C-30.13091797 13.44003906 -30.13091797 13.44003906 -30.125 12 C-30.12886719 11.05898438 -30.13273438 10.11796875 -30.13671875 9.1484375 C-30.13542969 8.25382813 -30.13414062 7.35921875 -30.1328125 6.4375 C-30.13112061 5.19806641 -30.13112061 5.19806641 -30.12939453 3.93359375 C-30 2 -30 2 -29 1 C-26.38991226 0.75671219 -23.80370342 0.57351912 -21.1875 0.4375 C-20.42445557 0.3950415 -19.66141113 0.35258301 -18.87524414 0.30883789 C-12.5773783 -0.01936168 -6.30669654 -0.0798316 0 0 Z \",fill:\"#8D8D8A\",transform:\"translate(1004,846)\"})),_path587||(_path587=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.07878418 0.01047363 2.15756836 0.02094727 3.26904297 0.03173828 C5.01894531 0.04140625 5.01894531 0.04140625 6.80419922 0.05126953 C8.02751953 0.06802734 9.25083984 0.08478516 10.51123047 0.10205078 C11.74228516 0.11107422 12.97333984 0.12009766 14.24169922 0.12939453 C17.28995852 0.15302445 20.33811836 0.18889639 23.38623047 0.22705078 C23.38623047 8.14705078 23.38623047 16.06705078 23.38623047 24.22705078 C14.14623047 24.22705078 4.90623047 24.22705078 -4.61376953 24.22705078 C-4.65501953 20.63830078 -4.69626953 17.04955078 -4.73876953 13.35205078 C-4.75697754 12.2217041 -4.77518555 11.09135742 -4.79394531 9.92675781 C-4.79894043 9.03843262 -4.80393555 8.15010742 -4.80908203 7.23486328 C-4.81955566 6.32365723 -4.8300293 5.41245117 -4.84082031 4.47363281 C-4.49295445 1.03163105 -3.37495376 0.29317271 0 0 Z \",fill:\"#7E7C7A\",transform:\"translate(371.61376953125,771.77294921875)\"})),_path588||(_path588=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29.33 7.59 29.66 15.18 30 23 C20.1 23 10.2 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#82817F\",transform:\"translate(608,824)\"})),_path589||(_path589=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0 20.46 0 31 0 C31 7.26 31 14.52 31 22 C21.1 22 11.2 22 1 22 C0.67 14.74 0.34 7.48 0 0 Z \",fill:\"#868483\",transform:\"translate(851,95)\"})),_path590||(_path590=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C8.91 0 17.82 0 27 0 C27.33 7.92 27.66 15.84 28 24 C17.875 25.125 17.875 25.125 13.96484375 25.09765625 C13.21581787 25.09515869 12.46679199 25.09266113 11.69506836 25.09008789 C10.7850708 25.08098389 9.87507324 25.07187988 8.9375 25.0625 C4.5134375 25.0315625 4.5134375 25.0315625 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#898886\",transform:\"translate(397,23)\"})),_path591||(_path591=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.59 29 15.18 29 23 C19.43 23 9.86 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#8D8B8A\",transform:\"translate(158,892)\"})),_path592||(_path592=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.59 29 15.18 29 23 C19.43 23 9.86 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#8D8D8C\",transform:\"translate(128,824)\"})),_path593||(_path593=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 54.45 1 108.9 1 165 C0.67 165 0.34 165 0 165 C-0.33 137.28 -0.66 109.56 -1 81 C-11.33516864 90.49388122 -11.33516864 90.49388122 -21.3125 100.3125 C-25.44418696 104.4890966 -29.59483 108.56014425 -34.078125 112.36328125 C-36.42730654 114.36390537 -38.71167027 116.43010174 -41 118.5 C-47.23771725 124.12152937 -53.54007141 129.63460082 -60 135 C-61.04051097 135.86701185 -62.08087836 136.73419604 -63.12109375 137.6015625 C-64.79649362 138.99735018 -66.47474532 140.38975474 -68.16015625 141.7734375 C-72.63934398 145.5444169 -76.49675394 149.70952473 -80.40429688 154.06542969 C-84.10393925 158.13700682 -88.01559571 161.90118318 -92.0625 165.625 C-99.746675 172.71344313 -107.16783435 180.04994548 -114.5625 187.4375 C-115.12711945 187.99971252 -115.69173889 188.56192505 -116.27346802 189.14117432 C-121.81914914 194.66658222 -127.29433994 200.20016749 -132.38305664 206.15600586 C-135.41147193 209.60967046 -138.68139155 212.82523113 -141.9375 216.0625 C-142.60201172 216.73087891 -143.26652344 217.39925781 -143.95117188 218.08789062 C-147.24949892 221.37981936 -150.59462672 224.55554655 -154.12890625 227.59375 C-157.68676127 230.66476353 -160.8700093 233.93730107 -164 237.4375 C-168.53466306 242.43269226 -173.16439354 247.29239488 -178 252 C-178.66 251.34 -179.32 250.68 -180 250 C-179.13675613 249.14008705 -179.13675613 249.14008705 -178.256073 248.26280212 C-172.81042798 242.83726499 -167.36724626 237.40927368 -161.92675591 231.97856808 C-159.13023896 229.1872508 -156.33280749 226.39686352 -153.53320312 223.60864258 C-150.82718031 220.9135529 -148.12366838 218.21596714 -145.42181778 215.51669502 C-144.39496459 214.4916774 -143.36723751 213.46753441 -142.33858871 212.44431877 C-137.00180097 207.13457913 -131.82736129 201.78243037 -127 196 C-125.76267681 194.85840781 -124.49679523 193.74577567 -123.1875 192.6875 C-117.11564677 187.5212004 -112.01514149 181.43594299 -106.9375 175.3125 C-103.65299146 171.45207763 -99.85538135 168.27395939 -96 165 C-89.70090704 159.63740935 -84.0334386 153.95693823 -78.4375 147.875 C-73.92542536 142.98001481 -69.52072868 138.46117858 -64.09765625 134.55859375 C-61.62624157 132.72229122 -59.39577332 130.70387698 -57.125 128.625 C-53.79453571 125.58058785 -50.40436462 122.68581134 -46.875 119.875 C-35.40561562 110.56721549 -24.91538473 100.07584077 -14.5793457 89.54272461 C-13.96534912 88.92018799 -13.35135254 88.29765137 -12.71875 87.65625 C-12.1527861 87.068367 -11.5868222 86.48048401 -11.00370789 85.87478638 C-9 84 -9 84 -6.92199707 82.72789001 C-4.31859884 81.03418858 -2.76300756 79.57773264 -1 77 C0.19814635 71.16558904 0.07288757 65.4075512 0 59.47265625 C0.00752435 57.75628321 0.01856344 56.0399223 0.03295898 54.32359314 C0.06131753 49.82359223 0.04215334 45.32501906 0.01287842 40.82507324 C-0.00855949 36.22638765 0.01523767 31.6279564 0.03515625 27.02929688 C0.06755183 18.01920962 0.04971315 9.00998235 0 0 Z \",fill:\"#F0EEEB\",transform:\"translate(483,472)\"})),_path594||(_path594=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.59 29 15.18 29 23 C19.43 23 9.86 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#888684\",transform:\"translate(158,209)\"})),_path595||(_path595=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.59 29 15.18 29 23 C19.43 23 9.86 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#8B8987\",transform:\"translate(68,164)\"})),_path596||(_path596=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.59 29 15.18 29 23 C19.43 23 9.86 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#8B8A88\",transform:\"translate(276,141)\"})),_path597||(_path597=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.59 29 15.18 29 23 C19.43 23 9.86 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#8F8E8C\",transform:\"translate(669,72)\"})),_path598||(_path598=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.59 29 15.18 29 23 C19.43 23 9.86 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#8D8B8A\",transform:\"translate(822,48)\"})),_path599||(_path599=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.59 29 15.18 29 23 C19.43 23 9.86 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#8B8B89\",transform:\"translate(607,48)\"})),_path600||(_path600=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.59 30 15.18 30 23 C15.15 22.505 15.15 22.505 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#90908F\",transform:\"translate(944,824)\"})),_path601||(_path601=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.59 29 15.18 29 23 C19.76 23 10.52 23 1 23 C-0.2263757 20.54724859 -0.11415314 18.9494219 -0.09765625 16.2109375 C-0.09515869 15.36321777 -0.09266113 14.51549805 -0.09008789 13.64208984 C-0.08098389 12.5639502 -0.07187988 11.48581055 -0.0625 10.375 C-0.041875 6.95125 -0.02125 3.5275 0 0 Z \",fill:\"#8D8C8A\",transform:\"translate(38,141)\"})),_path602||(_path602=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C28.80246854 3.20987416 29.11934909 5.33633522 29.09765625 8.546875 C29.09515869 9.30838867 29.09266113 10.06990234 29.09008789 10.85449219 C29.08098389 11.81000977 29.07187988 12.76552734 29.0625 13.75 C29.041875 16.8025 29.02125 19.855 29 23 C19.43 23 9.86 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#888886\",transform:\"translate(246,956)\"})),_path603||(_path603=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.11503906 0.00322266 2.23007812 0.00644531 3.37890625 0.00976562 C4.53777344 0.01814453 5.69664062 0.02652344 6.890625 0.03515625 C8.06496094 0.03966797 9.23929687 0.04417969 10.44921875 0.04882812 C13.34637595 0.06060519 16.24350693 0.07854037 19.140625 0.09765625 C19.140625 7.68765625 19.140625 15.27765625 19.140625 23.09765625 C9.570625 23.09765625 0.000625 23.09765625 -9.859375 23.09765625 C-9.859375 15.83765625 -9.859375 8.57765625 -9.859375 1.09765625 C-6.27380492 0.20126373 -3.64995308 -0.01862221 0 0 Z \",fill:\"#8A8887\",transform:\"translate(285.859375,47.90234375)\"})),_path604||(_path604=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.26 30 14.52 30 22 C25.88838174 22.16548309 21.7768299 22.32787363 17.66479492 22.48217773 C16.26498319 22.53566026 14.86524096 22.59099434 13.46557617 22.64819336 C11.4577104 22.72992949 9.44955813 22.80453025 7.44140625 22.87890625 C5.62684937 22.94960327 5.62684937 22.94960327 3.77563477 23.02172852 C1 23 1 23 0 22 C-0.08700342 20.36527118 -0.10701063 18.72685945 -0.09765625 17.08984375 C-0.09515869 16.199021 -0.09266113 15.30819824 -0.09008789 14.39038086 C-0.08098389 13.25093018 -0.07187988 12.11147949 -0.0625 10.9375 C-0.041875 7.328125 -0.02125 3.71875 0 0 Z \",fill:\"#888785\",transform:\"translate(67,892)\"})),_path605||(_path605=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.85253028 1.73779653 3.62280812 3.47990739 5.375 5.3125 C8.30977332 8.36178673 11.1375498 11.22410798 14.6875 13.5625 C17.42957587 16.45279619 17.37207405 17.38441663 17.4375 21.25 C17.21617418 25.78382582 17.21617418 25.78382582 16 27 C13.85441173 27.08775605 11.70595579 27.10695219 9.55859375 27.09765625 C8.25341797 27.09443359 6.94824219 27.09121094 5.60351562 27.08789062 C4.2148431 27.07953401 2.82617123 27.07106905 1.4375 27.0625 C0.04492344 27.05748666 -1.34765481 27.05292347 -2.74023438 27.04882812 C-6.1601987 27.03699434 -9.58007844 27.0205088 -13 27 C-13.02721831 23.9999376 -13.04694378 21.00012744 -13.0625 18 C-13.07087891 17.16082031 -13.07925781 16.32164062 -13.08789062 15.45703125 C-13.10824033 10.20680661 -12.76368207 5.19544338 -12 0 C-3.71206226 -2.48638132 -3.71206226 -2.48638132 0 0 Z \",fill:\"#5A5858\",transform:\"translate(316,308)\"})),_path606||(_path606=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.26 30 14.52 30 22 C20.1 22 10.2 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#8C8B89\",transform:\"translate(336,958)\"})),_path607||(_path607=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.26 30 14.52 30 22 C20.1 22 10.2 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#898987\",transform:\"translate(576,824)\"})),_path608||(_path608=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.26 29 14.52 29 22 C24.54783443 22.63602365 20.88089185 23.12355557 16.50390625 23.09765625 C15.62806885 23.09515869 14.75223145 23.09266113 13.84985352 23.09008789 C12.76502686 23.08098389 11.6802002 23.07187988 10.5625 23.0625 C7.076875 23.041875 3.59125 23.02125 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#898887\",transform:\"translate(914,234)\"})),_path609||(_path609=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.26 30 14.52 30 22 C20.1 22 10.2 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#8A8886\",transform:\"translate(577,118)\"})),_path610||(_path610=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.26 30 14.52 30 22 C20.1 22 10.2 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#8A8A88\",transform:\"translate(761,0)\"})),_path611||(_path611=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.26 30 14.52 30 22 C20.1 22 10.2 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#8D8D8B\",transform:\"translate(700,0)\"})),_path612||(_path612=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.26 30 14.52 30 22 C20.1 22 10.2 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#838381\",transform:\"translate(607,0)\"})),_path613||(_path613=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.20970459 0.00523682 2.41940918 0.01047363 3.66577148 0.01586914 C4.97094727 0.0190918 6.27612305 0.02231445 7.62084961 0.02563477 C9.00952213 0.03399138 10.39819401 0.04245634 11.78686523 0.05102539 C13.17944179 0.05603873 14.57202005 0.06060193 15.96459961 0.06469727 C19.38453974 0.07653097 22.80445773 0.09446708 26.22436523 0.11352539 C26.22436523 7.37352539 26.22436523 14.63352539 26.22436523 22.11352539 C16.32436523 22.11352539 6.42436523 22.11352539 -3.77563477 22.11352539 C-3.79625977 18.66915039 -3.81688477 15.22477539 -3.83813477 11.67602539 C-3.84723877 10.58878174 -3.85634277 9.50153809 -3.86572266 8.38134766 C-3.86822021 7.53113037 -3.87071777 6.68091309 -3.87329102 5.80493164 C-3.87852783 4.9303833 -3.88376465 4.05583496 -3.88916016 3.15478516 C-3.7114424 -0.0406948 -3.23643792 0.13237256 0 0 Z \",fill:\"#8F8F8C\",transform:\"translate(855.775634765625,956.886474609375)\"})),_path614||(_path614=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.20970459 0.00523682 2.41940918 0.01047363 3.66577148 0.01586914 C4.97094727 0.0190918 6.27612305 0.02231445 7.62084961 0.02563477 C9.00952213 0.03399138 10.39819401 0.04245634 11.78686523 0.05102539 C13.17944179 0.05603873 14.57202005 0.06060193 15.96459961 0.06469727 C19.38453974 0.07653097 22.80445773 0.09446708 26.22436523 0.11352539 C26.22436523 7.37352539 26.22436523 14.63352539 26.22436523 22.11352539 C16.32436523 22.11352539 6.42436523 22.11352539 -3.77563477 22.11352539 C-3.79625977 18.66915039 -3.81688477 15.22477539 -3.83813477 11.67602539 C-3.84723877 10.58878174 -3.85634277 9.50153809 -3.86572266 8.38134766 C-3.86822021 7.53113037 -3.87071777 6.68091309 -3.87329102 5.80493164 C-3.87852783 4.9303833 -3.88376465 4.05583496 -3.88916016 3.15478516 C-3.7114424 -0.0406948 -3.23643792 0.13237256 0 0 Z \",fill:\"#8B8B89\",transform:\"translate(794.775634765625,845.886474609375)\"})),_path615||(_path615=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.20970459 0.00523682 2.41940918 0.01047363 3.66577148 0.01586914 C4.97094727 0.0190918 6.27612305 0.02231445 7.62084961 0.02563477 C9.00952213 0.03399138 10.39819401 0.04245634 11.78686523 0.05102539 C13.17944179 0.05603873 14.57202005 0.06060193 15.96459961 0.06469727 C19.38453974 0.07653097 22.80445773 0.09446708 26.22436523 0.11352539 C26.22436523 7.37352539 26.22436523 14.63352539 26.22436523 22.11352539 C16.32436523 22.11352539 6.42436523 22.11352539 -3.77563477 22.11352539 C-3.79625977 18.66915039 -3.81688477 15.22477539 -3.83813477 11.67602539 C-3.84723877 10.58878174 -3.85634277 9.50153809 -3.86572266 8.38134766 C-3.86822021 7.53113037 -3.87071777 6.68091309 -3.87329102 5.80493164 C-3.87852783 4.9303833 -3.88376465 4.05583496 -3.88916016 3.15478516 C-3.7114424 -0.0406948 -3.23643792 0.13237256 0 0 Z \",fill:\"#898785\",transform:\"translate(549.775634765625,95.886474609375)\"})),_path616||(_path616=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C2.55197021 1.44279297 2.10394043 1.88558594 1.64233398 2.34179688 C-0.42870096 4.39176683 -2.49560697 6.44585433 -4.5625 8.5 C-5.26697266 9.19609375 -5.97144531 9.8921875 -6.69726562 10.609375 C-10.00598572 13.90284754 -13.21408733 17.20367431 -16.21484375 20.78125 C-19.16640775 24.20826994 -22.38296696 27.26092033 -25.73046875 30.29296875 C-31.41607949 35.45099409 -36.88360976 40.79943646 -42.30078125 46.23828125 C-43.11425018 47.05497284 -43.92771912 47.87166443 -44.76583862 48.71310425 C-47.28329157 51.24435804 -49.79832389 53.77799166 -52.3125 56.3125 C-55.6597834 59.68656932 -59.01050998 63.0571661 -62.36328125 66.42578125 C-63.11241287 67.18321121 -63.86154449 67.94064117 -64.63337708 68.72102356 C-68.69143102 72.79774111 -72.84713028 76.67643682 -77.20524597 80.43009949 C-79.60665949 82.53065491 -81.85480197 84.75929536 -84.09375 87.03125 C-84.97933594 87.92457031 -85.86492187 88.81789063 -86.77734375 89.73828125 C-87.67582031 90.64964844 -88.57429687 91.56101562 -89.5 92.5 C-94.94185696 98.01993238 -100.36000569 103.48153532 -106.27124023 108.50219727 C-110.67465086 112.31732567 -114.63422723 116.53189896 -118.4375 120.9375 C-123.13756559 126.37195084 -128.12930359 131.4044686 -133.5859375 136.078125 C-138.8813266 140.68481275 -143.76196082 145.69234189 -148.6875 150.6875 C-150.52233708 152.54794541 -152.35949719 154.40610327 -154.19921875 156.26171875 C-155.00190186 157.07600342 -155.80458496 157.89028809 -156.6315918 158.72924805 C-158.98244169 160.98316567 -161.44580466 162.9828489 -164 165 C-165.17996312 166.28190378 -166.32813995 167.5940304 -167.4375 168.9375 C-170.36493146 172.37075115 -173.53069646 175.10891372 -177 178 C-178.14437094 179.27453636 -179.2681163 180.56777536 -180.375 181.875 C-182.75624409 184.67584657 -185.19301586 187.12652693 -188 189.5 C-190.58566414 191.69805984 -192.87633074 193.90567127 -195.0625 196.5 C-198.77389559 200.87042846 -202.77741037 204.93112999 -206.8125 209 C-207.4835376 209.68384766 -208.1545752 210.36769531 -208.84594727 211.07226562 C-209.48072998 211.70841797 -210.1155127 212.34457031 -210.76953125 213 C-211.34292236 213.5775 -211.91631348 214.155 -212.50708008 214.75 C-214 216 -214 216 -216 216 C-216.25523437 216.57105469 -216.51046875 217.14210938 -216.7734375 217.73046875 C-220.28144105 224.22139252 -226.23314334 229.39363764 -231.796875 234.125 C-238.49260685 239.82349519 -244.97939276 245.59485917 -250.5625 252.40625 C-252 254 -252 254 -255 256 C-254.41865127 252.73140998 -253.47844849 251.1087842 -251.12109375 248.79296875 C-250.23997925 247.91874268 -250.23997925 247.91874268 -249.34106445 247.02685547 C-248.71288818 246.41986816 -248.08471191 245.81288086 -247.4375 245.1875 C-246.79707764 244.55730957 -246.15665527 243.92711914 -245.49682617 243.27783203 C-242.35259941 240.20413221 -239.17544638 237.21028743 -235.8125 234.375 C-232.71625343 231.75486407 -230.05001702 228.90203462 -227.34765625 225.87890625 C-219.74177266 217.47879085 -211.65817428 209.55035193 -203.625 201.5625 C-202.07919087 200.02172132 -200.53361649 198.48070709 -198.98828125 196.93945312 C-196.16501652 194.12427945 -193.3404469 191.31043066 -190.51416016 188.49829102 C-186.17137908 184.17635678 -181.8409338 179.84238484 -177.5221405 175.49649048 C-175.19219181 173.15299848 -172.85944115 170.81230327 -170.52661133 168.47167969 C-169.30500164 167.2450428 -168.08429119 166.01750968 -166.86450195 164.7890625 C-160.93960235 158.8233567 -155.0527351 152.90579097 -148.64379883 147.45458984 C-146.03911664 145.14971884 -143.80236851 142.60750169 -141.5 140 C-138.64113073 136.76224444 -135.82226495 133.79386163 -132.53125 131 C-125.99549071 125.38381402 -120.05578568 119.1220899 -114 113 C-99.69351425 98.53687389 -99.69351425 98.53687389 -93.55224609 93.32080078 C-89.15415945 89.57848421 -85.14786697 85.40613703 -81.5 80.9375 C-79.53273094 78.62595885 -77.76082417 76.87349204 -75.46875 74.94140625 C-70.38990822 70.54585551 -65.71130516 65.78268857 -61 61 C-55.73217102 55.65235543 -50.48514441 50.38853691 -44.72802734 45.56420898 C-42.28516799 43.35293463 -40.26020876 40.86981839 -38.2265625 38.28515625 C-37.82179687 37.86105469 -37.41703125 37.43695312 -37 37 C-36.34 37 -35.68 37 -35 37 C-35 36.34 -35 35.68 -35 35 C-33.53344727 33.55249023 -33.53344727 33.55249023 -31.50390625 31.87109375 C-27.10434314 28.12812404 -23.00851552 24.15720718 -18.9375 20.0625 C-18.26912109 19.39798828 -17.60074219 18.73347656 -16.91210938 18.04882812 C-12.93928889 14.06828593 -9.15254626 9.97891822 -5.49023438 5.71069336 C-3.74919297 3.71208963 -1.9118202 1.83534739 0 0 Z \",fill:\"#EAE7E4\",transform:\"translate(255,767)\"})),_path617||(_path617=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.56959053 2.56494389 5.13306457 5.13480777 7.68359375 7.71875 C13.24738291 13.44180247 13.24738291 13.44180247 19.25 18.6875 C22.29199629 21.24554234 24.74791853 24.04422441 27.3203125 27.0625 C29.43646445 29.50345667 31.68170406 31.75195545 34 34 C30.35783305 36.29822325 27.29174993 36.23128602 23.046875 36.1953125 C22.38665344 36.1924826 21.72643188 36.18965271 21.04620361 36.18673706 C18.94728103 36.17558415 16.84879258 36.15048946 14.75 36.125 C13.32292285 36.11496384 11.89583898 36.1058391 10.46875 36.09765625 C6.97902672 36.07566111 3.48955577 36.04116536 0 36 C-0.95533673 28.29746159 -1.15216652 20.69354273 -1.125 12.9375 C-1.12886719 11.79861328 -1.13273438 10.65972656 -1.13671875 9.48632812 C-1.13542969 8.40673828 -1.13414062 7.32714844 -1.1328125 6.21484375 C-1.13168457 5.23636475 -1.13055664 4.25788574 -1.12939453 3.24975586 C-1 1 -1 1 0 0 Z \",fill:\"#636463\",transform:\"translate(252,246)\"})),_path618||(_path618=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.26 30 14.52 30 22 C20.1 22 10.2 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#8B8B8B\",transform:\"translate(700,824)\"})),_path619||(_path619=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C13.14285714 11.14285714 13.14285714 11.14285714 18 16 C18 20.29 18 24.58 18 29 C8.1 29 -1.8 29 -12 29 C-12 21.41 -12 13.82 -12 6 C-7.71 5.34 -3.42 4.68 1 4 C0.67 2.68 0.34 1.36 0 0 Z \",fill:\"#686665\",transform:\"translate(956,951)\"})),_path620||(_path620=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C31 11 31 11 28.90234375 14.33984375 C27.92394531 15.19707031 26.94554687 16.05429687 25.9375 16.9375 C24.97714844 17.81277344 24.01679688 18.68804688 23.02734375 19.58984375 C22.02832031 20.38519531 21.02929688 21.18054688 20 22 C19.03964844 22.77988281 18.07929688 23.55976562 17.08984375 24.36328125 C11.4560507 27.34755342 6.06392734 25.14413723 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#636160\",transform:\"translate(158,823)\"})),_path621||(_path621=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.59521484 0.00966797 1.59521484 0.00966797 3.22265625 0.01953125 C4.31707031 0.03628906 5.41148437 0.05304687 6.5390625 0.0703125 C8.21548828 0.08384766 8.21548828 0.08384766 9.92578125 0.09765625 C12.67196762 0.12112793 15.41804313 0.15699595 18.1640625 0.1953125 C18.1640625 7.1253125 18.1640625 14.0553125 18.1640625 21.1953125 C15.37286159 22.59091295 12.96200558 22.41339538 9.84375 22.51171875 C8.58691406 22.55361328 7.33007812 22.59550781 6.03515625 22.63867188 C4.71644531 22.67798828 3.39773438 22.71730469 2.0390625 22.7578125 C0.69920499 22.80100762 -0.64063906 22.84462223 -1.98046875 22.88867188 C-5.2654937 22.9950216 -8.55070148 23.09569567 -11.8359375 23.1953125 C-11.8359375 16.2653125 -11.8359375 9.3353125 -11.8359375 2.1953125 C-7.02370045 0.59123348 -4.75521497 -0.05113134 0 0 Z \",fill:\"#8C8B8A\",transform:\"translate(863.8359375,913.8046875)\"})),_path622||(_path622=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.26 29 14.52 29 22 C29.99 22.33 30.98 22.66 32 23 C31.01 23.66 30.02 24.32 29 25 C29 24.34 29 23.68 29 23 C19.43 22.67 9.86 22.34 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#898786\",transform:\"translate(216,892)\"})),_path623||(_path623=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 7.92 0 15.84 0 24 C-9.57 24 -19.14 24 -29 24 C-28.67 16.41 -28.34 8.82 -28 1 C-24.679375 0.835 -21.35875 0.67 -17.9375 0.5 C-16.38857056 0.42168945 -16.38857056 0.42168945 -14.80834961 0.34179688 C-13.97311768 0.30119141 -13.13788574 0.26058594 -12.27734375 0.21875 C-11.43421631 0.17685547 -10.59108887 0.13496094 -9.72241211 0.09179688 C-6.48330448 -0.01742243 -3.24094849 0 0 0 Z \",fill:\"#7F7E7C\",transform:\"translate(304,772)\"})),_path624||(_path624=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.26 29 14.52 29 22 C19.1 22.33 9.2 22.66 -1 23 C-0.67 15.41 -0.34 7.82 0 0 Z \",fill:\"#868583\",transform:\"translate(336,48)\"})),_path625||(_path625=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.37841064 0.00749268 1.37841064 0.00749268 2.78466797 0.01513672 C3.93080566 0.03334473 5.07694336 0.05155273 6.2578125 0.0703125 C11.7646875 0.1321875 11.7646875 0.1321875 17.3828125 0.1953125 C17.3828125 7.7853125 17.3828125 15.3753125 17.3828125 23.1953125 C13.8971875 23.2159375 10.4115625 23.2365625 6.8203125 23.2578125 C5.73548584 23.2669165 4.65065918 23.27602051 3.53295898 23.28540039 C2.65712158 23.28789795 1.78128418 23.29039551 0.87890625 23.29296875 C-0.00611572 23.29820557 -0.8911377 23.30344238 -1.80297852 23.30883789 C-5.09269541 23.17613048 -8.35788519 22.66092712 -11.6171875 22.1953125 C-11.6171875 15.5953125 -11.6171875 8.9953125 -11.6171875 2.1953125 C-6.86956512 0.61277171 -4.66871025 -0.05245742 0 0 Z \",fill:\"#888785\",transform:\"translate(496.6171875,869.8046875)\"})),_path626||(_path626=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.16781006 0.00523682 2.33562012 0.01047363 3.53881836 0.01586914 C4.79887695 0.0190918 6.05893555 0.02231445 7.35717773 0.02563477 C8.6976732 0.03399136 10.03816799 0.04245632 11.37866211 0.05102539 C12.72306153 0.05603879 14.06746271 0.06060197 15.41186523 0.06469727 C18.71331644 0.07653042 22.01474471 0.09446653 25.31616211 0.11352539 C25.31616211 7.70352539 25.31616211 15.29352539 25.31616211 23.11352539 C15.56493314 23.20551812 6.0373052 22.95232972 -3.68383789 22.11352539 C-3.71271603 18.63437598 -3.73059476 15.15525709 -3.74633789 11.67602539 C-3.7547168 10.68280273 -3.7630957 9.68958008 -3.77172852 8.66625977 C-3.77495117 7.72202148 -3.77817383 6.7777832 -3.78149414 5.80493164 C-3.78673096 4.9303833 -3.79196777 4.05583496 -3.79736328 3.15478516 C-3.62234132 0.00777738 -3.1789694 0.13446928 0 0 Z \",fill:\"#8A8987\",transform:\"translate(369.683837890625,823.886474609375)\"})),_path627||(_path627=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.01771484 0.00451172 2.03542969 0.00902344 3.08398438 0.01367188 C5.57688509 0.02537563 8.06966074 0.04177152 10.5625 0.0625 C10.67797323 8.13279553 10.46291311 16.03917603 9.5625 24.0625 C-8.81404321 25.62731481 -8.81404321 25.62731481 -13.9921875 22.05859375 C-16.38178985 19.84561418 -18.47838658 17.66090307 -20.4375 15.0625 C-20.1075 14.4025 -19.7775 13.7425 -19.4375 13.0625 C-19.20891886 11.0250237 -19.02725722 8.98209697 -18.875 6.9375 C-18.79121094 5.84179688 -18.70742188 4.74609375 -18.62109375 3.6171875 C-18.56050781 2.77414062 -18.49992188 1.93109375 -18.4375 1.0625 C-12.2698971 -0.03607724 -6.25334877 -0.05289104 0 0 Z \",fill:\"#8B8989\",transform:\"translate(811.4375,770.9375)\"})),_path628||(_path628=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0 20.46 0 31 0 C31 6.93 31 13.86 31 21 C20.77 21 10.54 21 0 21 C0 14.07 0 7.14 0 0 Z \",fill:\"#898886\",transform:\"translate(699,96)\"})),_path629||(_path629=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C28.33 7.59 28.66 15.18 29 23 C19.43 23 9.86 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#90908E\",transform:\"translate(158,72)\"})),_path630||(_path630=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 14 29 14 27 23 C18.09 23 9.18 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#666564\",transform:\"translate(456,0)\"})),_path631||(_path631=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.44013065 4.09074799 13.05784697 10.64024358 18.5 17.0625 C20.92165423 19.88406043 23.4532002 22.36288914 26.25 24.8125 C31.74061853 29.65313877 36.93293082 34.77950077 42.125 39.9375 C42.99157227 40.79126221 43.85814453 41.64502441 44.75097656 42.5246582 C45.55760742 43.32991943 46.36423828 44.13518066 47.1953125 44.96484375 C47.92766113 45.6930835 48.66000977 46.42132324 49.41455078 47.17163086 C51 49 51 49 51 51 C51.89319946 51.4031543 51.89319946 51.4031543 52.80444336 51.81445312 C55.00656704 53.00354604 56.39767157 54.179743 58.12890625 55.96875 C58.68900391 56.53980469 59.24910156 57.11085938 59.82617188 57.69921875 C60.39916016 58.29347656 60.97214844 58.88773438 61.5625 59.5 C62.70730947 60.67934563 63.85436457 61.85651652 65.00390625 63.03125 C65.50736572 63.55267578 66.0108252 64.07410156 66.52954102 64.61132812 C68.15641908 66.2256108 68.15641908 66.2256108 71 68 C71 68.66 71 69.32 71 70 C71.86625 70.37125 71.86625 70.37125 72.75 70.75 C75.32939979 72.18299988 77.06121592 73.78424676 79 76 C79 76.66 79 77.32 79 78 C79.80630859 78.31517578 79.80630859 78.31517578 80.62890625 78.63671875 C83.90338288 80.51940795 86.3317159 83.12213364 88.9375 85.8125 C89.70610352 86.59463867 89.70610352 86.59463867 90.49023438 87.39257812 C91.5115672 88.43207952 92.53071096 89.47373644 93.54760742 90.51757812 C94.86743032 91.86468934 96.20616048 93.1932109 97.546875 94.51953125 C99.74517462 96.74233421 101.85577365 99.02260687 103.94287109 101.34960938 C108.00842315 105.87751833 112.09663634 110.16456388 116.76171875 114.0859375 C119.80732105 116.69037926 122.74468735 119.40551477 125.6875 122.125 C126.2345459 122.62837891 126.7815918 123.13175781 127.34521484 123.65039062 C133.14979852 129.01499216 138.51325764 134.64983135 143.71875 140.59765625 C146.00049952 143.00052604 148.40513106 144.94572875 151 147 C152.67953472 148.65369848 154.34409051 150.32264515 156 152 C156.95266133 152.95871336 157.90571766 153.91703435 158.85913086 154.875 C159.35992661 155.37902344 159.86072235 155.88304687 160.37669373 156.40234375 C162.6345841 158.67374923 164.89525519 160.9423793 167.15600586 163.2109375 C168.34277757 164.402751 169.52865199 165.59545867 170.71362305 166.7890625 C172.44079714 168.52844869 174.1712545 170.26451128 175.90234375 172 C176.42440903 172.52722656 176.9464743 173.05445313 177.48435974 173.59765625 C180.83665561 176.95045455 184.33875798 179.98821168 188 183 C189.11907392 184.21810701 190.20733773 185.4658791 191.25 186.75 C193.81035567 189.7491151 196.47410501 192.39896319 199.4375 195 C205.09854279 199.96981809 210.3633678 205.3086778 215.64233398 210.6796875 C216.30692627 211.35257813 216.97151855 212.02546875 217.65625 212.71875 C218.55053711 213.63043945 218.55053711 213.63043945 219.46289062 214.56054688 C220.95809649 216.09777728 220.95809649 216.09777728 223 217 C223 217.66 223 218.32 223 219 C223.5878125 219.25136719 224.175625 219.50273438 224.78125 219.76171875 C227.27682175 221.15449383 228.66530515 222.63171498 230.5 224.8125 C231.09941406 225.52019531 231.69882812 226.22789062 232.31640625 226.95703125 C234.23559869 229.2858889 236.14207754 231.62185925 238 234 C234.19283739 232.44893375 231.81196719 229.88519315 229 227 C226.4000945 224.37076554 223.79351549 221.74817646 221.1875 219.125 C220.51396484 218.44308594 219.84042969 217.76117187 219.14648438 217.05859375 C215.20703539 213.10029573 211.16043528 209.35557585 206.9309082 205.71044922 C203.81159586 202.94728039 200.91366229 199.97674285 198 197 C194.3308202 193.28361096 190.68659818 189.61597442 186.6875 186.25 C182.82340748 182.97911571 179.5620051 179.26223955 176.2109375 175.4765625 C171.34848352 170.02992677 166.28229964 165.16742781 160.5625 160.625 C155.92514034 156.91383476 152.12795923 152.89407804 148.25390625 148.41015625 C145.3032675 145.25496716 142.03627965 142.72347705 138.5546875 140.1796875 C136.44770269 138.38198486 134.81708091 136.69731737 133.03515625 134.60546875 C128.11608468 128.86035439 122.72984504 123.58061377 117.37573242 118.24536133 C115.56639067 116.44137915 113.76245681 114.63211335 111.95898438 112.82226562 C106.68810048 107.54897636 101.4109901 102.38148853 95.73364258 97.54223633 C92.62527689 94.77705592 89.86387015 91.69545678 87.0625 88.625 C81.50359813 82.61854437 75.84480793 76.72938657 70.0625 70.9375 C69.03491577 69.90326904 69.03491577 69.90326904 67.98657227 68.84814453 C64.03373482 64.90632845 59.95511689 61.18510369 55.72973633 57.53833008 C53.74996221 55.77763047 52.00474939 53.91251942 50.3125 51.875 C45.43891895 46.16001595 40.0487962 41.22298342 34.40234375 36.28125 C32 34 32 34 30.19140625 31.65625 C27.78949197 28.74483875 25.16058098 26.47772597 22.30078125 24.02978516 C17.85227126 20.10524016 13.69479943 15.87925088 9.5 11.6875 C8.5821875 10.78193359 7.664375 9.87636719 6.71875 8.94335938 C5.8525 8.07904297 4.98625 7.21472656 4.09375 6.32421875 C3.30677734 5.54135498 2.51980469 4.75849121 1.70898438 3.9519043 C0 2 0 2 0 0 Z \",fill:\"#E0DFDF\",transform:\"translate(775,770)\"})),_path632||(_path632=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C30 10 30 10 30 22 C20.1 22 10.2 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#8C8A89\",transform:\"translate(246,118)\"})),_path633||(_path633=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.02254631 -0.2954439 7.89542386 0.01485372 12 3 C12.33 2.01 12.66 1.02 13 0 C13.99 0.66 14.98 1.32 16 2 C19.08365871 2.2502157 19.08365871 2.2502157 22 2 C22.33 1.67 22.66 1.34 23 1 C25.52793394 0.76328017 28.02934966 0.5785675 30.5625 0.4375 C33.016875 0.293125 35.47125 0.14875 38 0 C38 8.25 38 16.5 38 25 C35.298125 25.103125 32.59625 25.20625 29.8125 25.3125 C28.97050049 25.35802002 28.12850098 25.40354004 27.26098633 25.45043945 C23.03704436 25.5282608 21.45469728 25.35523225 18 22.65625 C15.96947238 19.9594555 15.28524718 18.32788379 15 15 C14.01 15.33 13.02 15.66 12 16 C11.938125 15.05125 11.87625 14.1025 11.8125 13.125 C11.4103125 11.578125 11.4103125 11.578125 11 10 C8.78223378 8.69485264 8.78223378 8.69485264 6 8 C3.99248185 7.01517978 1.99065541 6.01847486 0 5 C0 3.35 0 1.7 0 0 Z \",fill:\"#616160\",transform:\"translate(29,22)\"})),_path634||(_path634=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.81001465 -0.00451172 1.6200293 -0.00902344 2.45458984 -0.01367188 C8.31375911 0.00125911 8.31375911 0.00125911 9.4375 1.125 C9.52450342 2.75972882 9.54451063 4.39814055 9.53515625 6.03515625 C9.53193359 7.02451172 9.52871094 8.01386719 9.52539062 9.03320312 C9.51701172 10.07412109 9.50863281 11.11503906 9.5 12.1875 C9.49548828 13.23228516 9.49097656 14.27707031 9.48632812 15.35351562 C9.47449913 17.9440666 9.45801689 20.53450559 9.4375 23.125 C2.35433952 23.18579241 -4.67916842 23.03928467 -11.75 22.625 C-13.03487305 22.55345703 -13.03487305 22.55345703 -14.34570312 22.48046875 C-16.41812204 22.36469116 -18.49033578 22.24524994 -20.5625 22.125 C-20.68359311 15.04778069 -20.41623239 8.15304699 -19.5625 1.125 C-13.02199052 0.28106329 -6.58631418 0.0156228 0 0 Z \",fill:\"#888784\",transform:\"translate(597.5625,956.875)\"})),_path635||(_path635=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C20.14285714 -0.14285714 20.14285714 -0.14285714 30 1 C30 7.93 30 14.86 30 22 C20.1 22 10.2 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#676563\",transform:\"translate(761,893)\"})),_path636||(_path636=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.26 29 14.52 29 22 C18.95670105 22.70479291 9.07069518 23.14161915 -1 23 C-1.1576017 15.24249406 -0.59901922 7.78724985 0 0 Z \",fill:\"#959594\",transform:\"translate(455,847)\"})),_path637||(_path637=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C8.91 0 17.82 0 27 0 C27 7.92 27 15.84 27 24 C18.09 24 9.18 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#8A8987\",transform:\"translate(188,591)\"})),_path638||(_path638=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C30 12 30 12 30 22 C20.1 22 10.2 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#8A8987\",transform:\"translate(822,0)\"})),_path639||(_path639=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.16015625 0.00322266 2.3203125 0.00644531 3.515625 0.00976562 C5.32546875 0.02233398 5.32546875 0.02233398 7.171875 0.03515625 C9.00492188 0.04192383 9.00492188 0.04192383 10.875 0.04882812 C13.89067446 0.0606081 16.90624998 0.07705772 19.921875 0.09765625 C20.11297448 15.40684764 20.11297448 15.40684764 18.921875 21.09765625 C17.921875 22.09765625 17.921875 22.09765625 15.23803711 22.21118164 C14.07022705 22.20594482 12.90241699 22.20070801 11.69921875 22.1953125 C10.43916016 22.19208984 9.17910156 22.18886719 7.88085938 22.18554688 C6.54036391 22.17719028 5.19986912 22.16872532 3.859375 22.16015625 C2.51497558 22.15514285 1.1705744 22.15057967 -0.17382812 22.14648438 C-3.47527933 22.13465122 -6.7767076 22.11671511 -10.078125 22.09765625 C-10.078125 15.16765625 -10.078125 8.23765625 -10.078125 1.09765625 C-6.42966495 0.18554124 -3.72110969 -0.01824073 0 0 Z \",fill:\"#676766\",transform:\"translate(18.078125,846.90234375)\"})),_path640||(_path640=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0.33 19.8 0.66 30 1 C30 7.93 30 14.86 30 22 C14.16 22.99 14.16 22.99 -2 24 C-1.67 23.34 -1.34 22.68 -1 22 C-0.84777027 20.33434251 -0.75082785 18.66343504 -0.68359375 16.9921875 C-0.64548584 16.1038623 -0.60737793 15.21553711 -0.56811523 14.30029297 C-0.52501221 13.16994629 -0.48190918 12.03959961 -0.4375 10.875 C-0.293125 7.28625 -0.14875 3.6975 0 0 Z \",fill:\"#5F5E5C\",transform:\"translate(424,914)\"})),_path641||(_path641=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C28 7.59 28 15.18 28 23 C18.43 22.67 8.86 22.34 -1 22 C-1.020625 18.74125 -1.04125 15.4825 -1.0625 12.125 C-1.071604 11.09906738 -1.08070801 10.07313477 -1.09008789 9.01611328 C-1.09258545 8.20899902 -1.09508301 7.40188477 -1.09765625 6.5703125 C-1.10289307 5.74289551 -1.10812988 4.91547852 -1.11352539 4.06298828 C-1 2 -1 2 0 0 Z \",fill:\"#8A8886\",transform:\"translate(946,870)\"})),_path642||(_path642=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C29.125 6.75 29.125 6.75 29.09765625 10.0859375 C29.09443359 10.78847656 29.09121094 11.49101562 29.08789062 12.21484375 C29.07951172 12.92769531 29.07113281 13.64054688 29.0625 14.375 C29.05798828 15.11105469 29.05347656 15.84710938 29.04882812 16.60546875 C29.03715142 18.40368158 29.01922011 20.20185197 29 22 C19.28868945 22.76167142 9.74566563 23.10047078 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#898886\",transform:\"translate(366,118)\"})),_path643||(_path643=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C29.67 7.26 29.34 14.52 29 22 C19.43 22 9.86 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#636261\",transform:\"translate(216,0)\"})),_path644||(_path644=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.8885594 1.60157774 6.63242303 4.24349897 9.60546875 7.12890625 C10.13014236 7.63743637 10.65481598 8.14596649 11.19538879 8.66990662 C12.30012343 9.74705041 13.40184737 10.82728958 14.50073242 11.91040039 C15.62175731 13.00838496 16.75166028 14.09738056 17.89038086 15.17700195 C19.54481331 16.74565789 21.17070064 18.33958341 22.79296875 19.94140625 C23.30022995 20.41365128 23.80749115 20.8858963 24.3301239 21.37245178 C28.91687564 26.01660894 28.17247008 27.55223072 29 35 C19.43 35 9.86 35 0 35 C0 27.41 0 19.82 0 12 C-0.66 11.67 -1.32 11.34 -2 11 C-1.85892253 9.54119891 -1.71197585 8.08296449 -1.5625 6.625 C-1.48128906 5.81289063 -1.40007813 5.00078125 -1.31640625 4.1640625 C-1 2 -1 2 0 0 Z \",fill:\"#817F7E\",transform:\"translate(883,880)\"})),_path645||(_path645=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.02700675 2.91672884 0.04684237 5.83320677 0.0625 8.75 C0.07087891 9.575 0.07925781 10.4 0.08789062 11.25 C0.09272461 12.44882812 0.09272461 12.44882812 0.09765625 13.671875 C0.10551147 14.77160645 0.10551147 14.77160645 0.11352539 15.89355469 C0 18 0 18 -1 22 C-10.57 22 -20.14 22 -30 22 C-30 15.07 -30 8.14 -30 1 C-19.96800905 -0.02892215 -10.06968967 -0.1006969 0 0 Z \",fill:\"#8C8A89\",transform:\"translate(699,870)\"})),_path646||(_path646=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C28 7.59 28 15.18 28 23 C18.76 23 9.52 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#888684\",transform:\"translate(187,869)\"})),_path647||(_path647=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C28 7.59 28 15.18 28 23 C18.76 23 9.52 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#8B8A88\",transform:\"translate(396,141)\"})),_path648||(_path648=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C28 7.59 28 15.18 28 23 C18.76 23 9.52 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#8B8A88\",transform:\"translate(188,118)\"})),_path649||(_path649=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C28 7.59 28 15.18 28 23 C18.76 23 9.52 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#878684\",transform:\"translate(187,48)\"})),_path650||(_path650=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C28 7.59 28 15.18 28 23 C23.52079403 23.02682159 19.04174649 23.04675177 14.5625 23.0625 C13.28310547 23.07087891 12.00371094 23.07925781 10.68554688 23.08789062 C8.86313477 23.09272461 8.86313477 23.09272461 7.00390625 23.09765625 C5.87799072 23.10289307 4.7520752 23.10812988 3.59204102 23.11352539 C1 23 1 23 0 22 C-0.08700342 20.36527118 -0.10701063 18.72685945 -0.09765625 17.08984375 C-0.09515869 16.199021 -0.09266113 15.30819824 -0.09008789 14.39038086 C-0.08098389 13.25093018 -0.07187988 12.11147949 -0.0625 10.9375 C-0.041875 7.328125 -0.02125 3.71875 0 0 Z \",fill:\"#61605E\",transform:\"translate(187,892)\"})),_path651||(_path651=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 6.93 30 13.86 30 21 C20.1 21 10.2 21 0 21 C-1.10977901 17.67066298 -1.13301537 15.12771692 -1.125 11.625 C-1.12757813 10.50351562 -1.13015625 9.38203125 -1.1328125 8.2265625 C-1 5 -1 5 0 0 Z \",fill:\"#666462\",transform:\"translate(730,871)\"})),_path652||(_path652=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0.33 20.46 0.66 31 1 C31 8.26 31 15.52 31 23 C21.43 23 11.86 23 2 23 C1.5625 12.625 1.5625 12.625 1.43188477 9.35791016 C1.39377686 8.51019043 1.35566895 7.6624707 1.31640625 6.7890625 C1.27974854 5.91975098 1.24309082 5.05043945 1.20532227 4.15478516 C1.12598456 1.9516738 1.12598456 1.9516738 0 0 Z \",fill:\"#656361\",transform:\"translate(156,957)\"})),_path653||(_path653=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.87333984 0.00322266 1.74667969 0.00644531 2.64648438 0.00976562 C3.96422852 0.02233398 3.96422852 0.02233398 5.30859375 0.03515625 C6.22189453 0.03966797 7.13519531 0.04417969 8.07617188 0.04882812 C10.29955113 0.06046885 12.52278496 0.07681774 14.74609375 0.09765625 C14.15828125 0.65195312 13.57046875 1.20625 12.96484375 1.77734375 C4.54426436 10.5833722 -0.04795853 22.77925944 -4.953125 33.71923828 C-7.78489394 40.02199529 -10.76404083 46.13145206 -14.25390625 52.09765625 C-15.2643542 49.06631241 -15.30423574 47.35369682 -15.1328125 44.2109375 C-15.08447266 43.27314453 -15.03613281 42.33535156 -14.98632812 41.36914062 C-14.93025391 40.39267578 -14.87417969 39.41621094 -14.81640625 38.41015625 C-14.76419922 37.42208984 -14.71199219 36.43402344 -14.65820312 35.41601562 C-14.52855319 32.97623949 -14.39358883 30.5368752 -14.25390625 28.09765625 C-12.60390625 27.76765625 -10.95390625 27.43765625 -9.25390625 27.09765625 C-10.90390625 26.76765625 -12.55390625 26.43765625 -14.25390625 26.09765625 C-14.25390625 17.84765625 -14.25390625 9.59765625 -14.25390625 1.09765625 C-4.12890625 -0.02734375 -4.12890625 -0.02734375 0 0 Z \",fill:\"#525151\",transform:\"translate(469.25390625,358.90234375)\"})),_path654||(_path654=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.11177927 -0.02291394 8.22339658 -0.04283951 12.33520508 -0.05493164 C13.73495228 -0.0599708 15.1346942 -0.06680216 16.53442383 -0.07543945 C18.54245777 -0.0875232 20.55052957 -0.09269807 22.55859375 -0.09765625 C24.37315063 -0.10551147 24.37315063 -0.10551147 26.22436523 -0.11352539 C29 0 29 0 30 1 C30.08685603 2.56172745 30.10702219 4.12729344 30.09765625 5.69140625 C30.09515869 6.54162354 30.09266113 7.39184082 30.09008789 8.26782227 C30.08098389 9.35506592 30.07187988 10.44230957 30.0625 11.5625 C30.041875 15.006875 30.02125 18.45125 30 22 C15.15 21.505 15.15 21.505 0 21 C0 14.07 0 7.14 0 0 Z \",fill:\"#8C8A89\",transform:\"translate(944,95)\"})),_path655||(_path655=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.26 29 14.52 29 22 C19.43 22 9.86 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#8E8E8D\",transform:\"translate(455,958)\"})),_path656||(_path656=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.26 29 14.52 29 22 C19.43 22 9.86 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#8C8C8A\",transform:\"translate(485,824)\"})),_path657||(_path657=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C11.22 0 22.44 0 34 0 C34 14.19 34 28.38 34 43 C24.1 43 14.2 43 4 43 C4 42.67 4 42.34 4 42 C9.28 42 14.56 42 20 42 C20 28.47 20 14.94 20 1 C13.4 1 6.8 1 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#616262\",transform:\"translate(740,694)\"})),_path658||(_path658=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.26 29 14.52 29 22 C19.43 22 9.86 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#8C8B8A\",transform:\"translate(216,142)\"})),_path659||(_path659=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.26 29 14.52 29 22 C19.43 22 9.86 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#8B8987\",transform:\"translate(975,118)\"})),_path660||(_path660=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.26 29 14.52 29 22 C19.43 22 9.86 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#91918E\",transform:\"translate(455,73)\"})),_path661||(_path661=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.26 29 14.52 29 22 C19.43 22 9.86 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#878785\",transform:\"translate(944,0)\"})),_path662||(_path662=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.26 29 14.52 29 22 C19.43 22 9.86 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#807E7D\",transform:\"translate(883,0)\"})),_path663||(_path663=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 6.93 30 13.86 30 21 C20.1 21.33 10.2 21.66 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#7D7B7A\",transform:\"translate(668,0)\"})),_path664||(_path664=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.26 29 14.52 29 22 C19.43 22 9.86 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#828281\",transform:\"translate(485,0)\"})),_path665||(_path665=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.26 29 14.52 29 22 C19.43 22 9.86 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#838281\",transform:\"translate(426,0)\"})),_path666||(_path666=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.9693655 -0.02291487 7.9385632 -0.04284015 11.90795898 -0.05493164 C13.25920386 -0.05997057 14.61044326 -0.06680177 15.96166992 -0.07543945 C17.90020434 -0.08752419 19.838778 -0.09269828 21.77734375 -0.09765625 C23.52905884 -0.10551147 23.52905884 -0.10551147 25.31616211 -0.11352539 C28 0 28 0 29 1 C29.08685603 2.56172745 29.10702219 4.12729344 29.09765625 5.69140625 C29.09515869 6.54162354 29.09266113 7.39184082 29.09008789 8.26782227 C29.08098389 9.35506592 29.07187988 10.44230957 29.0625 11.5625 C29.041875 15.006875 29.02125 18.45125 29 22 C19.43 22 9.86 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#898887\",transform:\"translate(306,118)\"})),_path667||(_path667=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C28 7.26 28 14.52 28 22 C23.52126213 22.36056373 19.04215992 22.71375701 14.5625 23.0625 C13.28310547 23.16626953 12.00371094 23.27003906 10.68554688 23.37695312 C9.47060547 23.47041016 8.25566406 23.56386719 7.00390625 23.66015625 C5.31503296 23.79369507 5.31503296 23.79369507 3.59204102 23.92993164 C2.73666748 23.9530542 1.88129395 23.97617676 1 24 C0 23 0 23 -0.11352539 20.77514648 C-0.10828857 19.81680908 -0.10305176 18.85847168 -0.09765625 17.87109375 C-0.09515869 16.93966553 -0.09266113 16.0082373 -0.09008789 15.04858398 C-0.08098389 13.85692627 -0.07187988 12.66526855 -0.0625 11.4375 C-0.041875 7.663125 -0.02125 3.88875 0 0 Z \",fill:\"#878684\",transform:\"translate(187,233)\"})),_path668||(_path668=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 7.26 30 14.52 30 22 C15.15 21.505 15.15 21.505 0 21 C0 14.07 0 7.14 0 0 Z \",fill:\"#858381\",transform:\"translate(127,96)\"})),_path669||(_path669=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1 1 1 1 1.11352539 3.13305664 C1.10828857 4.04949951 1.10305176 4.96594238 1.09765625 5.91015625 C1.09515869 6.800979 1.09266113 7.69180176 1.09008789 8.60961914 C1.08098389 9.74906982 1.07187988 10.88852051 1.0625 12.0625 C1.041875 15.671875 1.02125 19.28125 1 23 C-8.24 23 -17.48 23 -27 23 C-27 15.74 -27 8.48 -27 1 C-17.99900349 0.11101269 -9.04415315 -0.40621031 0 0 Z \",fill:\"#8E8D8C\",transform:\"translate(423,957)\"})),_path670||(_path670=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C28 7.59 28 15.18 28 23 C18.57155258 23.08811633 9.4020523 22.8451283 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#848281\",transform:\"translate(367,49)\"})),_path671||(_path671=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 6.93 30 13.86 30 21 C20.1 21 10.2 21 0 21 C0 14.07 0 7.14 0 0 Z \",fill:\"#8E8C8B\",transform:\"translate(761,958)\"})),_path672||(_path672=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.96 0 7.92 0 12 0 C12 17.16 12 34.32 12 52 C8.04 52 4.08 52 0 52 C-0.74593458 34.59316832 -1.26088001 17.40014411 0 0 Z \",fill:\"#5D5D5D\",transform:\"translate(761,307)\"})),_path673||(_path673=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 7.26 0 14.52 0 22 C-9.9 22 -19.8 22 -30 22 C-30 8 -30 8 -26.8125 2.5625 C-19.51984196 -3.83332631 -8.79255273 -0.94008425 0 0 Z \",fill:\"#626060\",transform:\"translate(974,73)\"})),_path674||(_path674=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C28.020625 3.279375 28.04125 6.55875 28.0625 9.9375 C28.071604 10.97253662 28.08070801 12.00757324 28.09008789 13.07397461 C28.09258545 13.88358643 28.09508301 14.69319824 28.09765625 15.52734375 C28.10551147 16.77632446 28.10551147 16.77632446 28.11352539 18.05053711 C28 20 28 20 27 21 C24.85441173 21.08775605 22.70595579 21.10695219 20.55859375 21.09765625 C19.25341797 21.09443359 17.94824219 21.09121094 16.60351562 21.08789062 C15.2148431 21.07953401 13.82617123 21.07106905 12.4375 21.0625 C11.04492344 21.05748666 9.65234519 21.05292347 8.25976562 21.04882812 C4.83982549 21.03699442 1.4199075 21.01905831 -2 21 C-2 14.73 -2 8.46 -2 2 C-1.34 2 -0.68 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#61605E\",transform:\"translate(854,936)\"})),_path675||(_path675=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29.91382467 4.56912336 30.11566605 8.70022728 30.0625 13.3125 C30.041875 15.849375 30.02125 18.38625 30 21 C20.1 21 10.2 21 0 21 C0 14.07 0 7.14 0 0 Z \",fill:\"#888785\",transform:\"translate(336,96)\"})),_path676||(_path676=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.06001965 9.3046169 1.06001965 9.3046169 -1.27734375 13.04296875 C-3.09532957 14.8444649 -4.98003131 16.42891324 -7 18 C-8.21464266 19.03430271 -9.42279425 20.07626732 -10.625 21.125 C-11.27726562 21.68574219 -11.92953125 22.24648438 -12.6015625 22.82421875 C-17.93873481 27.66592067 -22.94066581 32.87125421 -28 38 C-28.85448531 34.87387432 -28.99929528 32.59973555 -28.5625 29.375 C-28.13976496 26.19673543 -28.13976496 26.19673543 -28 23 C-28 16 -28 9 -28 2 C-23.89598959 1.66472397 -19.79176762 1.33211132 -15.6875 1 C-14.52025391 0.90460937 -13.35300781 0.80921875 -12.15039062 0.7109375 C-11.03212891 0.62070312 -9.91386719 0.53046875 -8.76171875 0.4375 C-7.73006592 0.35371094 -6.69841309 0.26992188 -5.63549805 0.18359375 C-3.76054596 0.05298106 -1.87949594 0 0 0 Z \",fill:\"#706E6A\",transform:\"translate(483,538)\"})),_path677||(_path677=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29.020625 3.279375 29.04125 6.55875 29.0625 9.9375 C29.071604 10.97253662 29.08070801 12.00757324 29.09008789 13.07397461 C29.09258545 13.88358643 29.09508301 14.69319824 29.09765625 15.52734375 C29.10551147 16.77632446 29.10551147 16.77632446 29.11352539 18.05053711 C29 20 29 20 28 21 C25.93076634 21.22907826 23.85452523 21.39543552 21.77734375 21.53515625 C20.51728516 21.62216797 19.25722656 21.70917969 17.95898438 21.79882812 C16.61849607 21.88681764 15.27800119 21.97470695 13.9375 22.0625 C12.59307024 22.15387529 11.24866869 22.24566675 9.90429688 22.33789062 C6.60314169 22.56270048 3.30160328 22.7818697 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#61605F\",transform:\"translate(366,915)\"})),_path678||(_path678=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0.33 19.14 0.66 29 1 C29 7.93 29 14.86 29 22 C19.43 22.33 9.86 22.66 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#7D7B7A\",transform:\"translate(97,823)\"})),_path679||(_path679=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29.7708707 3.08348282 30.12081536 5.05237286 30.09765625 8.109375 C30.09443359 8.86347656 30.09121094 9.61757813 30.08789062 10.39453125 C30.07951172 11.17183594 30.07113281 11.94914063 30.0625 12.75 C30.05798828 13.54277344 30.05347656 14.33554687 30.04882812 15.15234375 C30.03708565 17.10159508 30.01915146 19.05080738 30 21 C25.93751511 21.02909769 21.87505714 21.04683174 17.8125 21.0625 C16.08676758 21.07506836 16.08676758 21.07506836 14.32617188 21.08789062 C13.21435547 21.09111328 12.10253906 21.09433594 10.95703125 21.09765625 C9.93585205 21.10289307 8.91467285 21.10812988 7.86254883 21.11352539 C5 21 5 21 0 20 C0 13.4 0 6.8 0 0 Z \",fill:\"#8D8B8A\",transform:\"translate(883,936)\"})),_path680||(_path680=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.24998566 -0.02902996 8.49994581 -0.04680887 12.75 -0.0625 C13.9565625 -0.07087891 15.163125 -0.07925781 16.40625 -0.08789062 C18.14648438 -0.09272461 18.14648438 -0.09272461 19.921875 -0.09765625 C20.99018555 -0.10289307 22.05849609 -0.10812988 23.15917969 -0.11352539 C26 0 26 0 30 1 C30 8.59 30 16.18 30 24 C24.72 24.33 19.44 24.66 14 25 C14 24.34 14 23.68 14 23 C13.34 23 12.68 23 12 23 C12 22.34 12 21.68 12 21 C11.43925781 20.76410156 10.87851563 20.52820313 10.30078125 20.28515625 C7.44094159 18.68772459 5.46652898 16.79016481 3.1875 14.4375 C2.37667969 13.63183594 1.56585938 12.82617188 0.73046875 11.99609375 C-1.69508781 7.79654097 -0.95036526 4.61615039 0 0 Z \",fill:\"#868482\",transform:\"translate(157,140)\"})),_path681||(_path681=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.13525391 2.61376953 0.13525391 2.61376953 -0.0234375 5.8828125 C-0.075 7.04941406 -0.1265625 8.21601563 -0.1796875 9.41796875 C-0.24414062 10.64128906 -0.30859375 11.86460937 -0.375 13.125 C-0.43171875 14.35605469 -0.4884375 15.58710938 -0.546875 16.85546875 C-0.68867683 19.90420806 -0.84011973 22.95216388 -1 26 C-5.57288286 28.28644143 -11.18839063 28.22029347 -16.08642578 26.98779297 C-22.09008437 23.88868572 -24.96228151 15.22762371 -27.30029297 9.25244141 C-28.44355829 5.5721323 -28.73880741 2.47761481 -27 -1 C-22.87573464 -1.22512171 -18.75066151 -1.42725588 -14.625 -1.625 C-13.449375 -1.68945312 -12.27375 -1.75390625 -11.0625 -1.8203125 C-9.94101562 -1.871875 -8.81953125 -1.9234375 -7.6640625 -1.9765625 C-6.10872803 -2.05511475 -6.10872803 -2.05511475 -4.52197266 -2.13525391 C-2 -2 -2 -2 0 0 Z \",fill:\"#575553\",transform:\"translate(367,360)\"})),_path682||(_path682=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8.02319818 9.28400571 8.04095318 18.5680014 8.05181217 27.8520298 C8.05702465 32.16324515 8.06409257 36.47444062 8.07543945 40.78564453 C8.08632649 44.94830902 8.09228916 49.11095442 8.09487724 53.27363205 C8.09672101 54.85959549 8.10032141 56.44555792 8.10573006 58.03151321 C8.11301771 60.25752243 8.11398769 62.48345338 8.11352539 64.70947266 C8.115746 65.97522125 8.11796661 67.24096985 8.12025452 68.54507446 C8.00731708 71.78977936 7.61672977 74.81648077 7 78 C4.69 78 2.38 78 0 78 C0 52.26 0 26.52 0 0 Z \",fill:\"#5B5B5B\",transform:\"translate(0,360)\"})),_path683||(_path683=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.70838254 -0.02704655 7.41656645 -0.04686203 11.125 -0.0625 C12.17171875 -0.07087891 13.2184375 -0.07925781 14.296875 -0.08789062 C15.31523438 -0.09111328 16.33359375 -0.09433594 17.3828125 -0.09765625 C18.31496582 -0.10289307 19.24711914 -0.10812988 20.20751953 -0.11352539 C23 0 23 0 29 1 C29 7.93 29 14.86 29 22 C19.24202642 22.10059767 9.72548278 21.7339987 0 21 C0 14.07 0 7.14 0 0 Z \",fill:\"#8D8B8A\",transform:\"translate(853,188)\"})),_path684||(_path684=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C29.67 6.93 29.34 13.86 29 21 C19.43 21 9.86 21 0 21 C0 14.07 0 7.14 0 0 Z \",fill:\"#848482\",transform:\"translate(336,0)\"})),_path685||(_path685=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C28 7.26 28 14.52 28 22 C18.76 22 9.52 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#858583\",transform:\"translate(188,0)\"})),_path686||(_path686=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 7.26 29 14.52 29 22 C19.43 21.67 9.86 21.34 0 21 C0 14.07 0 7.14 0 0 Z \",fill:\"#8D8B89\",transform:\"translate(761,871)\"})),_path687||(_path687=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 6.93 30 13.86 30 21 C19.91849165 21.10501571 10.05385194 20.70553347 0 20 C0 13.4 0 6.8 0 0 Z \",fill:\"#8B8987\",transform:\"translate(944,189)\"})),_path688||(_path688=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C28 7.59 28 15.18 28 23 C22.72 23 17.44 23 12 23 C11.67 23.99 11.34 24.98 11 26 C0.79173881 18.02893891 0.79173881 18.02893891 -0.52099609 13.00683594 C-0.97328404 8.52191073 -0.46038547 4.56200148 0 0 Z \",fill:\"#8A8886\",transform:\"translate(187,165)\"})),_path689||(_path689=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.07878418 0.01047363 2.15756836 0.02094727 3.26904297 0.03173828 C5.01894531 0.04140625 5.01894531 0.04140625 6.80419922 0.05126953 C8.02751953 0.06802734 9.25083984 0.08478516 10.51123047 0.10205078 C11.74228516 0.11107422 12.97333984 0.12009766 14.24169922 0.12939453 C17.28995852 0.15302445 20.33811836 0.18889639 23.38623047 0.22705078 C23.38623047 7.48705078 23.38623047 14.74705078 23.38623047 22.22705078 C14.14623047 22.22705078 4.90623047 22.22705078 -4.61376953 22.22705078 C-4.65501953 18.96830078 -4.69626953 15.70955078 -4.73876953 12.35205078 C-4.76608154 10.81315186 -4.76608154 10.81315186 -4.79394531 9.24316406 C-4.79894043 8.4360498 -4.80393555 7.62893555 -4.80908203 6.79736328 C-4.81955566 5.96994629 -4.8300293 5.1425293 -4.84082031 4.29003906 C-4.47304276 0.94840434 -3.23638274 0.28113543 0 0 Z \",fill:\"#888684\",transform:\"translate(280.61376953125,869.77294921875)\"})),_path690||(_path690=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.15693359 0.00322266 2.31386719 0.00644531 3.50585938 0.00976562 C4.70404297 0.01814453 5.90222656 0.02652344 7.13671875 0.03515625 C8.96299805 0.04192383 8.96299805 0.04192383 10.82617188 0.04882812 C13.82554193 0.06059036 16.82488664 0.07852515 19.82421875 0.09765625 C19.49421875 8.34765625 19.16421875 16.59765625 18.82421875 25.09765625 C12.47215541 25.09765625 7.00917362 24.88304734 0.82421875 24.09765625 C0.49421875 24.75765625 0.16421875 25.41765625 -0.17578125 26.09765625 C-2.01539799 22.3090065 -3.84640197 18.5162585 -5.67578125 14.72265625 C-6.20042969 13.64242188 -6.72507812 12.5621875 -7.265625 11.44921875 C-8.01005859 9.90234375 -8.01005859 9.90234375 -8.76953125 8.32421875 C-9.46079102 6.89456787 -9.46079102 6.89456787 -10.16601562 5.43603516 C-11.17578125 3.09765625 -11.17578125 3.09765625 -11.17578125 1.09765625 C-7.38503588 0.21202536 -3.88882227 -0.01915676 0 0 Z \",fill:\"#787878\",transform:\"translate(374.17578125,412.90234375)\"})),_path691||(_path691=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.29 0 8.58 0 13 0 C13 16.5 13 33 13 50 C9.04 50 5.08 50 1 50 C0.24674265 33.32073015 -0.1353739 16.6961142 0 0 Z \",fill:\"#5B5A59\",transform:\"translate(760,414)\"})),_path692||(_path692=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29.33 7.26 29.66 14.52 30 22 C20.43 21.67 10.86 21.34 1 21 C0.67 14.07 0.34 7.14 0 0 Z \",fill:\"#838381\",transform:\"translate(127,0)\"})),_path693||(_path693=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.20970459 0.00523682 2.41940918 0.01047363 3.66577148 0.01586914 C4.97094727 0.0190918 6.27612305 0.02231445 7.62084961 0.02563477 C9.00952213 0.03399138 10.39819401 0.04245634 11.78686523 0.05102539 C13.17944179 0.05603873 14.57202005 0.06060193 15.96459961 0.06469727 C19.38453974 0.07653097 22.80445773 0.09446708 26.22436523 0.11352539 C26.22436523 7.04352539 26.22436523 13.97352539 26.22436523 21.11352539 C11.37436523 20.61852539 11.37436523 20.61852539 -3.77563477 20.11352539 C-3.80657227 15.44196289 -3.80657227 15.44196289 -3.83813477 10.67602539 C-3.84723877 9.6931958 -3.85634277 8.71036621 -3.86572266 7.69775391 C-3.86822021 6.92874756 -3.87071777 6.15974121 -3.87329102 5.36743164 C-3.88114624 4.18129272 -3.88114624 4.18129272 -3.88916016 2.97119141 C-3.70218952 -0.08829159 -3.09001371 0.12638371 0 0 Z \",fill:\"#8A8988\",transform:\"translate(671.775634765625,914.886474609375)\"})),_path694||(_path694=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 6.93 29 13.86 29 21 C19.43 21 9.86 21 0 21 C0 14.07 0 7.14 0 0 Z \",fill:\"#656362\",transform:\"translate(975,871)\"})),_path695||(_path695=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 6.93 29 13.86 29 21 C19.43 21 9.86 21 0 21 C0 14.07 0 7.14 0 0 Z \",fill:\"#898785\",transform:\"translate(761,96)\"})),_path696||(_path696=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 6.93 29 13.86 29 21 C19.43 21 9.86 21 0 21 C0 14.07 0 7.14 0 0 Z \",fill:\"#828280\",transform:\"translate(97,0)\"})),_path697||(_path697=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0.33 19.14 0.66 29 1 C29.020625 4.114375 29.04125 7.22875 29.0625 10.4375 C29.071604 11.42032959 29.08070801 12.40315918 29.09008789 13.41577148 C29.09258545 14.18477783 29.09508301 14.95378418 29.09765625 15.74609375 C29.10551147 16.93223267 29.10551147 16.93223267 29.11352539 18.14233398 C29 20 29 20 28 21 C25.9394469 21.09993532 23.8754741 21.13080906 21.8125 21.1328125 C20.55695313 21.13410156 19.30140625 21.13539063 18.0078125 21.13671875 C17.35071289 21.13462402 16.69361328 21.1325293 16.01660156 21.13037109 C14.00838665 21.12502234 12.00039541 21.13031691 9.9921875 21.13671875 C8.73664063 21.13542969 7.48109375 21.13414062 6.1875 21.1328125 C5.02605469 21.13168457 3.86460937 21.13055664 2.66796875 21.12939453 C0 21 0 21 -1 20 C-1.10011296 17.01133358 -1.13873975 14.05089547 -1.125 11.0625 C-1.12886719 10.22525391 -1.13273438 9.38800781 -1.13671875 8.52539062 C-1.13542969 7.72423828 -1.13414062 6.92308594 -1.1328125 6.09765625 C-1.13168457 5.36039307 -1.13055664 4.62312988 -1.12939453 3.86352539 C-1 2 -1 2 0 0 Z \",fill:\"#777574\",transform:\"translate(159,188)\"})),_path698||(_path698=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 6.6 30 13.2 30 20 C20.1 20 10.2 20 0 20 C0 13.4 0 6.8 0 0 Z \",fill:\"#8E8C8B\",transform:\"translate(424,937)\"})),_path699||(_path699=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3 1 3 1 4.1875 3.0625 C5.9539934 5.92543758 7.68068213 7.66310797 10.125 9.9375 C12.91287568 12.62836169 13.91047345 13.68665706 15 17.5 C15 18.325 15 19.15 15 20 C15.66 20 16.32 20 17 20 C18 22 18 22 18 28 C8.43 28 -1.14 28 -11 28 C-11 19.75 -11 11.5 -11 3 C-7.7 2.67 -4.4 2.34 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#878685\",transform:\"translate(772,768)\"})),_path700||(_path700=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.74550869 -0.13514573 19.28600822 0.26686854 29 1 C29 7.6 29 14.2 29 21 C25.0306345 21.02291487 21.0614368 21.04284015 17.09204102 21.05493164 C15.74079614 21.05997057 14.38955674 21.06680177 13.03833008 21.07543945 C11.09979566 21.08752419 9.161222 21.09269828 7.22265625 21.09765625 C5.47094116 21.10551147 5.47094116 21.10551147 3.68383789 21.11352539 C1 21 1 21 0 20 C-0.08669432 18.5112814 -0.10703494 17.018555 -0.09765625 15.52734375 C-0.09443359 14.62822266 -0.09121094 13.72910156 -0.08789062 12.80273438 C-0.07951172 11.85720703 -0.07113281 10.91167969 -0.0625 9.9375 C-0.05798828 8.98810547 -0.05347656 8.03871094 -0.04882812 7.06054688 C-0.0370011 4.70696935 -0.02052025 2.35351523 0 0 Z \",fill:\"#898785\",transform:\"translate(38,188)\"})),_path701||(_path701=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C28 6.93 28 13.86 28 21 C18.43 21 8.86 21 -1 21 C-0.67 14.07 -0.34 7.14 0 0 Z \",fill:\"#888684\",transform:\"translate(277,96)\"})),_path702||(_path702=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C20.13 0 40.26 0 61 0 C61 0.33 61 0.66 61 1 C51.1 1 41.2 1 31 1 C31 6.61 31 12.22 31 18 C20.77 18 10.54 18 0 18 C0 12.06 0 6.12 0 0 Z \",fill:\"#676665\",transform:\"translate(305,1006)\"})),_path703||(_path703=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C28 6.93 28 13.86 28 21 C18.76 21 9.52 21 0 21 C0 14.07 0 7.14 0 0 Z \",fill:\"#878685\",transform:\"translate(277,959)\"})),_path704||(_path704=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.83523193 0.00249756 1.67046387 0.00499512 2.53100586 0.00756836 C3.56362549 0.01667236 4.59624512 0.02577637 5.66015625 0.03515625 C8.98078125 0.05578125 12.30140625 0.07640625 15.72265625 0.09765625 C16.05265625 7.02765625 16.38265625 13.95765625 16.72265625 21.09765625 C13.8759187 22.52102502 11.57650278 22.10524462 8.40234375 21.9765625 C7.14550781 21.92822266 5.88867188 21.87988281 4.59375 21.83007812 C3.27503906 21.77400391 1.95632813 21.71792969 0.59765625 21.66015625 C-0.74216813 21.60693212 -2.08201183 21.55419174 -3.421875 21.50195312 C-6.70722345 21.37195732 -9.99231168 21.23541566 -13.27734375 21.09765625 C-12.94734375 14.49765625 -12.61734375 7.89765625 -12.27734375 1.09765625 C-7.8963945 0.47180636 -4.29942004 -0.02670447 0 0 Z \",fill:\"#8D8C8B\",transform:\"translate(805.27734375,957.90234375)\"})),_path705||(_path705=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C17.35626589 -0.16237671 34.6594774 0.34475758 52 1 C52.495 9.91 52.495 9.91 53 19 C42.44 19 31.88 19 21 19 C21 13.06 21 7.12 21 1 C14.07 1 7.14 1 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#686664\",transform:\"translate(708,1005)\"})),_path706||(_path706=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.9693655 -0.02291487 7.9385632 -0.04284015 11.90795898 -0.05493164 C13.25920386 -0.05997057 14.61044326 -0.06680177 15.96166992 -0.07543945 C17.90020434 -0.08752419 19.838778 -0.09269828 21.77734375 -0.09765625 C23.52905884 -0.10551147 23.52905884 -0.10551147 25.31616211 -0.11352539 C28 0 28 0 29 1 C29.08669432 2.4887186 29.10703494 3.981445 29.09765625 5.47265625 C29.09515869 6.28226807 29.09266113 7.09187988 29.09008789 7.92602539 C29.08098389 8.96106201 29.07187988 9.99609863 29.0625 11.0625 C29.041875 14.341875 29.02125 17.62125 29 21 C19.43 20.67 9.86 20.34 0 20 C0 13.4 0 6.8 0 0 Z \",fill:\"#8A8987\",transform:\"translate(485,97)\"})),_path707||(_path707=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.135 -0.020625 6.27 -0.04125 9.5 -0.0625 C10.47130859 -0.071604 11.44261719 -0.08070801 12.44335938 -0.09008789 C13.23548828 -0.09258545 14.02761719 -0.09508301 14.84375 -0.09765625 C16.03774414 -0.10551147 16.03774414 -0.10551147 17.25585938 -0.11352539 C20.85334534 0.03530299 24.42724082 0.5534051 28 1 C28 7.93 28 14.86 28 22 C14.14 21.505 14.14 21.505 0 21 C0 14.07 0 7.14 0 0 Z \",fill:\"#8B8A88\",transform:\"translate(217,96)\"})),_path708||(_path708=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C28 12 28 12 27 21 C18.09 21 9.18 21 0 21 C0 14.07 0 7.14 0 0 Z \",fill:\"#858583\",transform:\"translate(277,0)\"})),_path709||(_path709=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.53924445 -0.2816565 8.35149521 -0.30885695 13 3 C15.0625 5.12109375 15.0625 5.12109375 17 7.4375 C19.80518144 10.70056284 22.61029789 13.34320646 26 16 C27.75336597 17.94226451 29.36968246 19.95045795 31 22 C29 25 29 25 26 26 C23.93501108 26.08315752 21.8674211 26.10735878 19.80078125 26.09765625 C18.59228516 26.09443359 17.38378906 26.09121094 16.13867188 26.08789062 C14.2447168 26.07532227 14.2447168 26.07532227 12.3125 26.0625 C10.40114258 26.05573242 10.40114258 26.05573242 8.45117188 26.04882812 C5.30073436 26.03702873 2.15039051 26.02056597 -1 26 C-1.02716089 22.97910522 -1.04691657 19.95845871 -1.0625 16.9375 C-1.07087891 16.08994141 -1.07925781 15.24238281 -1.08789062 14.36914062 C-1.10683006 9.4638278 -0.83326345 4.83555245 0 0 Z \",fill:\"#8A8988\",transform:\"translate(792,797)\"})),_path710||(_path710=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.47915328 -0.02886338 8.95828291 -0.04675187 13.4375 -0.0625 C14.71689453 -0.07087891 15.99628906 -0.07925781 17.31445312 -0.08789062 C19.13686523 -0.09272461 19.13686523 -0.09272461 20.99609375 -0.09765625 C22.12200928 -0.10289307 23.2479248 -0.10812988 24.40795898 -0.11352539 C27 0 27 0 28 1 C28.09974389 2.90284987 28.1308063 4.80938253 28.1328125 6.71484375 C28.13474609 8.45604492 28.13474609 8.45604492 28.13671875 10.23242188 C28.13285156 11.45509766 28.12898437 12.67777344 28.125 13.9375 C28.13080078 15.76571289 28.13080078 15.76571289 28.13671875 17.63085938 C28.13542969 18.79294922 28.13414062 19.95503906 28.1328125 21.15234375 C28.13168457 22.22476318 28.13055664 23.29718262 28.12939453 24.40209961 C28 27 28 27 27 29 C18.49883704 27.88182902 11.80186223 21.354247 6.5625 14.9375 C3.69447966 11.10167033 1.03710305 7.3399152 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#51504F\",transform:\"translate(609,563)\"})),_path711||(_path711=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0 20.46 0 31 0 C31 5.94 31 11.88 31 18 C20.77 18 10.54 18 0 18 C0 12.06 0 6.12 0 0 Z \",fill:\"#868583\",transform:\"translate(576,1006)\"})),_path712||(_path712=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.25421714 -0.0229132 8.50822157 -0.04283889 12.76245117 -0.05493164 C14.21070073 -0.05997101 15.65894517 -0.06680253 17.10717773 -0.07543945 C19.18474588 -0.08752247 21.26224697 -0.09323211 23.33984375 -0.09765625 C24.59144287 -0.10289307 25.84304199 -0.10812988 27.13256836 -0.11352539 C30 0 30 0 31 1 C31.07330331 3.86469325 31.09217831 6.69893674 31.0625 9.5625 C31.041875 12.346875 31.02125 15.13125 31 18 C20.77 18 10.54 18 0 18 C0 12.06 0 6.12 0 0 Z \",fill:\"#888786\",transform:\"translate(668,1006)\"})),_path713||(_path713=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.28146824 6.88789179 1 12.66670228 1 20 C-8.9 20 -18.8 20 -29 20 C-29 13.64793666 -28.78539109 8.18495487 -28 2 C-23.7319483 1.0118713 -19.48598272 0.68611677 -15.125 0.4375 C-14.44308594 0.39431641 -13.76117188 0.35113281 -13.05859375 0.30664062 C-8.69772275 0.04498836 -4.36849988 -0.03992102 0 0 Z \",fill:\"#8D8B88\",transform:\"translate(395,937)\"})),_path714||(_path714=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 7.92 0 15.84 0 24 C-9.57 24 -19.14 24 -29 24 C-29 21.03 -29 18.06 -29 15 C-29.66 14.67 -30.32 14.34 -31 14 C-29.97519531 13.39671875 -28.95039062 12.7934375 -27.89453125 12.171875 C-26.53373595 11.36478262 -25.17306546 10.55747978 -23.8125 9.75 C-22.80219727 9.15638672 -22.80219727 9.15638672 -21.77148438 8.55078125 C-18.74231022 6.74805322 -15.95469124 4.96360133 -13.19921875 2.75 C-9.18057957 -0.44778038 -4.98764982 0 0 0 Z \",fill:\"#767573\",transform:\"translate(729,616)\"})),_path715||(_path715=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.20970459 0.00523682 2.41940918 0.01047363 3.66577148 0.01586914 C4.97094727 0.0190918 6.27612305 0.02231445 7.62084961 0.02563477 C9.00952213 0.03399138 10.39819401 0.04245634 11.78686523 0.05102539 C13.17944179 0.05603873 14.57202005 0.06060193 15.96459961 0.06469727 C19.38453974 0.07653097 22.80445773 0.09446708 26.22436523 0.11352539 C26.22436523 6.05352539 26.22436523 11.99352539 26.22436523 18.11352539 C20.94436523 17.78352539 15.66436523 17.45352539 10.22436523 17.11352539 C10.22436523 17.77352539 10.22436523 18.43352539 10.22436523 19.11352539 C5.27436523 19.77352539 0.32436523 20.43352539 -4.77563477 21.11352539 C-4.63548794 17.80069309 -4.48879861 14.48838131 -4.33813477 11.17602539 C-4.29881836 10.23049805 -4.25950195 9.2849707 -4.21899414 8.31079102 C-4.17709961 7.41166992 -4.13520508 6.51254883 -4.09204102 5.58618164 C-4.0553833 4.75352783 -4.01872559 3.92087402 -3.98095703 3.06298828 C-3.65317154 -0.04921997 -3.18411671 0.13023259 0 0 Z \",fill:\"#858482\",transform:\"translate(641.775634765625,939.886474609375)\"})),_path716||(_path716=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 6.93 0 13.86 0 21 C-9.40076148 21.11750952 -18.62595212 20.64648606 -28 20 C-28 13.73 -28 7.46 -28 1 C-24.83345084 0.83079508 -21.66679087 0.66456638 -18.5 0.5 C-17.1696875 0.42845703 -17.1696875 0.42845703 -15.8125 0.35546875 C-14.9359375 0.31035156 -14.059375 0.26523437 -13.15625 0.21875 C-11.96225586 0.1559082 -11.96225586 0.1559082 -10.74414062 0.09179688 C-7.16463194 -0.0279447 -3.58151092 0 0 0 Z \",fill:\"#8C8B8A\",transform:\"translate(424,914)\"})),_path717||(_path717=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0 20.46 0 31 0 C31 5.94 31 11.88 31 18 C21.1 18 11.2 18 1 18 C0 11 0 11 0 0 Z \",fill:\"#656463\",transform:\"translate(514,1006)\"})),_path718||(_path718=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 3.3 1 6.6 1 10 C10.57 10 20.14 10 30 10 C30 15.94 30 21.88 30 28 C20.1 28 10.2 28 0 28 C0 18.76 0 9.52 0 0 Z \",fill:\"#808080\",transform:\"translate(545,996)\"})),_path719||(_path719=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.9693655 -0.02291487 7.9385632 -0.04284015 11.90795898 -0.05493164 C13.25920386 -0.05997057 14.61044326 -0.06680177 15.96166992 -0.07543945 C17.90020434 -0.08752419 19.838778 -0.09269828 21.77734375 -0.09765625 C23.52905884 -0.10551147 23.52905884 -0.10551147 25.31616211 -0.11352539 C28 0 28 0 29 1 C29.08631874 2.34267413 29.10706473 3.68974322 29.09765625 5.03515625 C29.09515869 5.76355713 29.09266113 6.49195801 29.09008789 7.24243164 C29.08098389 8.1730542 29.07187988 9.10367676 29.0625 10.0625 C29.041875 13.011875 29.02125 15.96125 29 19 C19.43 19 9.86 19 0 19 C0 12.73 0 6.46 0 0 Z \",fill:\"#8D8C8B\",transform:\"translate(216,937)\"})),_path720||(_path720=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C7.6 2 14.2 2 21 2 C21 10.91 21 19.82 21 29 C14.4 29 7.8 29 1 29 C0.67 20.42 0.34 11.84 0 3 C-2.31 2.67 -4.62 2.34 -7 2 C-7 1.67 -7 1.34 -7 1 C-3.535 0.505 -3.535 0.505 0 0 Z \",fill:\"#615F5D\",transform:\"translate(1003,384)\"})),_path721||(_path721=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 5.94 30 11.88 30 18 C20.1 18 10.2 18 0 18 C0 12.06 0 6.12 0 0 Z \",fill:\"#8B8A88\",transform:\"translate(913,1006)\"})),_path722||(_path722=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 5.94 30 11.88 30 18 C20.1 18 10.2 18 0 18 C0 12.06 0 6.12 0 0 Z \",fill:\"#878684\",transform:\"translate(852,1006)\"})),_path723||(_path723=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 5.94 30 11.88 30 18 C20.1 18 10.2 18 0 18 C0 12.06 0 6.12 0 0 Z \",fill:\"#898987\",transform:\"translate(761,1006)\"})),_path724||(_path724=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.77254813 -0.07347781 19.28273765 -0.11054427 29 1 C29 6.94 29 12.88 29 19 C19.43 19 9.86 19 0 19 C0 12.73 0 6.46 0 0 Z \",fill:\"#868583\",transform:\"translate(38,1005)\"})),_path725||(_path725=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 5.94 0 11.88 0 18 C-9.9 18.33 -19.8 18.66 -30 19 C-30 5.11111111 -30 5.11111111 -28 1 C-21.31517051 -2.34241474 -7.10188462 -2.36729487 0 0 Z \",fill:\"#8E8D8A\",transform:\"translate(1004,941)\"})),_path726||(_path726=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 5.94 29 11.88 29 18 C19.1 18 9.2 18 -1 18 C-1.020625 15.40125 -1.04125 12.8025 -1.0625 10.125 C-1.071604 9.30789551 -1.08070801 8.49079102 -1.09008789 7.64892578 C-1.11111111 2.22222222 -1.11111111 2.22222222 0 0 Z \",fill:\"#666462\",transform:\"translate(68,1006)\"})),_path727||(_path727=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.60488281 0.00676758 1.60488281 0.00676758 3.2421875 0.01367188 C5.86981589 0.02540236 8.49741531 0.04333609 11.125 0.0625 C11.125 6.3325 11.125 12.6025 11.125 19.0625 C1.885 19.0625 -7.355 19.0625 -16.875 19.0625 C-17.576923 12.74519299 -17.97396353 7.29720254 -17.875 1.0625 C-11.93872979 -0.24183619 -6.04167748 -0.04836318 0 0 Z \",fill:\"#8C8C8B\",transform:\"translate(471.875,913.9375)\"})),_path728||(_path728=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C2 5.95 2 10.9 2 16 C8.27 16 14.54 16 21 16 C21 24.25 21 32.5 21 41 C14.4 41 7.8 41 1 41 C0.67 32.75 0.34 24.5 0 16 C-0.99 15.67 -1.98 15.34 -3 15 C-2.34 14.67 -1.68 14.34 -1 14 C-0.52998967 10.72444392 -0.52998967 10.72444392 -0.375 6.9375 C-0.30023437 5.64714844 -0.22546875 4.35679687 -0.1484375 3.02734375 C-0.09945312 2.02832031 -0.05046875 1.02929688 0 0 Z \",fill:\"#7D7B78\",transform:\"translate(1003,448)\"})),_path729||(_path729=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 8.25 1 16.5 1 25 C3.91392578 24.98259766 3.91392578 24.98259766 6.88671875 24.96484375 C8.81648631 24.95787708 10.74625422 24.95095109 12.67602539 24.94506836 C14.63364327 24.93770264 16.59123871 24.92498174 18.54882812 24.91210938 C26.74950314 24.89124252 34.83492363 25.23303794 43 26 C43 26.33 43 26.66 43 27 C38.71 27 34.42 27 30 27 C30 31.62 30 36.24 30 41 C19.77 41 9.54 41 -1 41 C-1 25.25 -1 25.25 -0.78125 19.7265625 C-0.73613281 18.55351563 -0.69101562 17.38046875 -0.64453125 16.171875 C-0.59683594 15.00140625 -0.54914063 13.8309375 -0.5 12.625 C-0.45230469 11.40039062 -0.40460938 10.17578125 -0.35546875 8.9140625 C-0.23939616 5.94260411 -0.12088249 2.97126592 0 0 Z \",fill:\"#6E6D6C\",transform:\"translate(485,695)\"})),_path730||(_path730=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 5.94 29 11.88 29 18 C19.43 18 9.86 18 0 18 C0 12.06 0 6.12 0 0 Z \",fill:\"#777574\",transform:\"translate(792,1006)\"})),_path731||(_path731=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 5.94 29 11.88 29 18 C19.43 18 9.86 18 0 18 C0 12.06 0 6.12 0 0 Z \",fill:\"#858482\",transform:\"translate(246,1006)\"})),_path732||(_path732=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.6 0 13.2 0 20 0 C20 8.58 20 17.16 20 26 C13.4 26 6.8 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#737270\",transform:\"translate(252,386)\"})),_path733||(_path733=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C2.093125 1.979375 3.18625 1.95875 4.3125 1.9375 C8 2 8 2 11 3 C11 10.26 11 17.52 11 25 C-2.365 25.495 -2.365 25.495 -16 26 C-16 16 -16 16 -14.53125 13.39599609 C-13.52578125 12.46907959 -13.52578125 12.46907959 -12.5 11.5234375 C-11.778125 10.83378906 -11.05625 10.14414062 -10.3125 9.43359375 C-9.1678125 8.41458984 -9.1678125 8.41458984 -8 7.375 C-6.8553125 6.29798828 -6.8553125 6.29798828 -5.6875 5.19921875 C-3.81232257 3.44123991 -1.9180937 1.71085286 0 0 Z \",fill:\"#878585\",transform:\"translate(204,821)\"})),_path734||(_path734=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.92167969 0.00322266 1.84335937 0.00644531 2.79296875 0.00976562 C4.19482422 0.02233398 4.19482422 0.02233398 5.625 0.03515625 C6.59050781 0.03966797 7.55601562 0.04417969 8.55078125 0.04882812 C10.90888144 0.06050189 13.26694927 0.07843301 15.625 0.09765625 C15.625 6.03765625 15.625 11.97765625 15.625 18.09765625 C6.055 18.09765625 -3.515 18.09765625 -13.375 18.09765625 C-13.375 12.48765625 -13.375 6.87765625 -13.375 1.09765625 C-4.375 -0.02734375 -4.375 -0.02734375 0 0 Z \",fill:\"#797876\",transform:\"translate(713.375,1005.90234375)\"})),_path735||(_path735=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.495 1.485 0.495 1.485 1 3 C3.31 3 5.62 3 8 3 C8 3.33 8 3.66 8 4 C5.69 4 3.38 4 1 4 C0.67 10.93 0.34 17.86 0 25 C-14.30317439 25.88603735 -14.30317439 25.88603735 -20.33203125 20.6640625 C-23.62109302 17.46853964 -26.69288175 14.0921534 -29.64990234 10.58813477 C-31.05967353 8.8864937 -31.05967353 8.8864937 -33 7 C-32.34 7 -31.68 7 -31 7 C-30.67 5.68 -30.34 4.36 -30 3 C-30 3.66 -30 4.32 -30 5 C-29.13036621 4.83701416 -28.26073242 4.67402832 -27.36474609 4.50610352 C-24.22776422 4.03425883 -21.33095346 3.88531745 -18.1640625 3.90234375 C-17.10058594 3.90556641 -16.03710938 3.90878906 -14.94140625 3.91210938 C-13.29978516 3.92467773 -13.29978516 3.92467773 -11.625 3.9375 C-10.50738281 3.94201172 -9.38976562 3.94652344 -8.23828125 3.95117188 C-5.49213196 3.96290756 -2.74609414 3.97932637 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#6F6D6B\",transform:\"translate(1004,955)\"})),_path736||(_path736=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 5.61 30 11.22 30 17 C20.1 17 10.2 17 0 17 C0 11.39 0 5.78 0 0 Z \",fill:\"#888887\",transform:\"translate(336,1007)\"})),_path737||(_path737=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.6 0 13.2 0 20 0 C20 8.58 20 17.16 20 26 C13.4 25.67 6.8 25.34 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#7D7D7C\",transform:\"translate(252,668)\"})),_path738||(_path738=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.94 0 11.88 0 18 0 C18 8.58 18 17.16 18 26 C23.94 26 29.88 26 36 26 C36 26.33 36 26.66 36 27 C30.39 27 24.78 27 19 27 C18.67 27.66 18.34 28.32 18 29 C18 28.34 18 27.68 18 27 C12.06 27 6.12 27 0 27 C0 18.09 0 9.18 0 0 Z \",fill:\"#626260\",transform:\"translate(804,589)\"})),_path739||(_path739=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 3.3 1 6.6 1 10 C7.6 10 14.2 10 21 10 C21 18.25 21 26.5 21 35 C14.4 34.67 7.8 34.34 1 34 C0.01156078 22.63294892 -0.10323636 11.40188258 0 0 Z \",fill:\"#797978\",transform:\"translate(251,272)\"})),_path740||(_path740=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.279375 -0.020625 6.55875 -0.04125 9.9375 -0.0625 C10.97253662 -0.071604 12.00757324 -0.08070801 13.07397461 -0.09008789 C14.28839233 -0.09383423 14.28839233 -0.09383423 15.52734375 -0.09765625 C16.77632446 -0.10551147 16.77632446 -0.10551147 18.05053711 -0.11352539 C20 0 20 0 21 1 C21.08713831 2.70772358 21.10700007 4.41898649 21.09765625 6.12890625 C21.09443359 7.16337891 21.09121094 8.19785156 21.08789062 9.26367188 C21.07951172 10.35228516 21.07113281 11.44089844 21.0625 12.5625 C21.05798828 13.65498047 21.05347656 14.74746094 21.04882812 15.87304688 C21.0369984 18.58205432 21.01906231 21.2910338 21 24 C14.07 24 7.14 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#7E7E7D\",transform:\"translate(252,539)\"})),_path741||(_path741=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 8.58 0 17.16 0 26 C-6.6 26 -13.2 26 -20 26 C-20 17.75 -20 9.5 -20 1 C-15.606875 0.7525 -15.606875 0.7525 -11.125 0.5 C-10.20348145 0.44779297 -9.28196289 0.39558594 -8.33251953 0.34179688 C-7.24366455 0.28088867 -7.24366455 0.28088867 -6.1328125 0.21875 C-5.38918457 0.17685547 -4.64555664 0.13496094 -3.87939453 0.09179688 C-2.58744125 0.0286929 -1.29349349 0 0 0 Z \",fill:\"#8A8887\",transform:\"translate(1024,564)\"})),_path742||(_path742=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.10421014 -0.02690305 8.20824497 -0.04679208 12.3125 -0.0625 C13.47974609 -0.07087891 14.64699219 -0.07925781 15.84960938 -0.08789062 C17.52700195 -0.09272461 17.52700195 -0.09272461 19.23828125 -0.09765625 C20.26993408 -0.10289307 21.30158691 -0.10812988 22.36450195 -0.11352539 C25 0 25 0 28 1 C28 6.61 28 12.22 28 18 C18.76 18 9.52 18 0 18 C0 12.06 0 6.12 0 0 Z \",fill:\"#817F7E\",transform:\"translate(187,1006)\"})),_path743||(_path743=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 6.27 0 12.54 0 19 C-8.91 19 -17.82 19 -27 19 C-27 13.06 -27 7.12 -27 1 C-17.92798975 0.10399899 -9.10525688 -0.08430793 0 0 Z \",fill:\"#8E8D8D\",transform:\"translate(215,915)\"})),_path744||(_path744=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 0 3.96 0 6 0 C6 40.92 6 81.84 6 124 C5.67 124 5.34 124 5 124 C5 117.4 5 110.8 5 104 C3.68 104 2.36 104 1 104 C0.13925171 101.02588704 -0.11778847 98.39637654 -0.09765625 95.3046875 C-0.09443359 94.42425781 -0.09121094 93.54382813 -0.08789062 92.63671875 C-0.07951172 91.72535156 -0.07113281 90.81398438 -0.0625 89.875 C-0.05798828 88.95589844 -0.05347656 88.03679687 -0.04882812 87.08984375 C-0.03668177 84.72650955 -0.01875625 82.3632879 0 80 C0 79.34 0 78.68 0 78 C0 69.33333333 0 60.66666667 0 52 C1.65 52 3.3 52 5 52 C5 43.09 5 34.18 5 25 C3.35 24.67 1.7 24.34 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#898886\",transform:\"translate(216,616)\"})),_path745||(_path745=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.6 0 13.2 0 20 0 C20 8.25 20 16.5 20 25 C13.4 25 6.8 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#7A7A7A\",transform:\"translate(252,616)\"})),_path746||(_path746=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.6 0 13.2 0 20 0 C20 8.25 20 16.5 20 25 C16.885625 25.020625 13.77125 25.04125 10.5625 25.0625 C9.08825562 25.07615601 9.08825562 25.07615601 7.58422852 25.09008789 C6.81522217 25.09258545 6.04621582 25.09508301 5.25390625 25.09765625 C4.46314697 25.10289307 3.6723877 25.10812988 2.85766602 25.11352539 C1 25 1 25 0 24 C-0.08726223 22.21928754 -0.10699041 20.4351686 -0.09765625 18.65234375 C-0.09443359 17.57275391 -0.09121094 16.49316406 -0.08789062 15.38085938 C-0.07951172 14.24455078 -0.07113281 13.10824219 -0.0625 11.9375 C-0.05798828 10.79732422 -0.05347656 9.65714844 -0.04882812 8.48242188 C-0.0369976 5.65492582 -0.0190615 2.82745655 0 0 Z \",fill:\"#6E6C6A\",transform:\"translate(1004,232)\"})),_path747||(_path747=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.8765625 0.00322266 1.753125 0.00644531 2.65625 0.00976562 C3.9865625 0.02233398 3.9865625 0.02233398 5.34375 0.03515625 C6.2615625 0.03966797 7.179375 0.04417969 8.125 0.04882812 C10.3646121 0.06049277 12.60419011 0.07842339 14.84375 0.09765625 C14.84375 6.03765625 14.84375 11.97765625 14.84375 18.09765625 C5.60375 18.09765625 -3.63625 18.09765625 -13.15625 18.09765625 C-13.15625 12.48765625 -13.15625 6.87765625 -13.15625 1.09765625 C-4.15625 -0.02734375 -4.15625 -0.02734375 0 0 Z \",fill:\"#898886\",transform:\"translate(409.15625,1005.90234375)\"})),_path748||(_path748=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.27 0 12.54 0 19 0 C19 8.58 19 17.16 19 26 C12.73 26 6.46 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#7D7B79\",transform:\"translate(1005,308)\"})),_path749||(_path749=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.4530957 -0.00193359 1.4530957 -0.00193359 2.93554688 -0.00390625 C4.42731445 0.00189453 4.42731445 0.00189453 5.94921875 0.0078125 C6.96306641 0.00394531 7.97691406 0.00007812 9.02148438 -0.00390625 C9.98376953 -0.00261719 10.94605469 -0.00132812 11.9375 0 C12.81575439 0.00112793 13.69400879 0.00225586 14.59887695 0.00341797 C16.63671875 0.1328125 16.63671875 0.1328125 17.63671875 1.1328125 C17.71002206 3.99750575 17.72889706 6.83174924 17.69921875 9.6953125 C17.67859375 12.4796875 17.65796875 15.2640625 17.63671875 18.1328125 C8.06671875 17.8028125 -1.50328125 17.4728125 -11.36328125 17.1328125 C-11.36328125 11.8528125 -11.36328125 6.5728125 -11.36328125 1.1328125 C-7.29028658 0.45398005 -4.02409659 0.00513512 0 0 Z \",fill:\"#8D8D8C\",transform:\"translate(317.36328125,940.8671875)\"})),_path750||(_path750=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.93 0 13.86 0 21 0 C21 8.25 21 16.5 21 25 C20.67 24.34 20.34 23.68 20 23 C13.4 23.33 6.8 23.66 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#777776\",transform:\"translate(252,590)\"})),_path751||(_path751=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 8.58 0 17.16 0 26 C-1.98 26 -3.96 26 -6 26 C-6 33.92 -6 41.84 -6 50 C-4.35 50.33 -2.7 50.66 -1 51 C-1 59.91 -1 68.82 -1 78 C-9.25 78 -17.5 78 -26 78 C-26 77.67 -26 77.34 -26 77 C-19.4 77 -12.8 77 -6 77 C-6.33 69.08 -6.66 61.16 -7 53 C-15.58 53 -24.16 53 -33 53 C-33 52.67 -33 52.34 -33 52 C-24.42 52 -15.84 52 -7 52 C-7 43.42 -7 34.84 -7 26 C-14.97119173 26.32615809 -14.97119173 26.32615809 -22.94213867 26.65820312 C-30.63222858 26.96336062 -38.30423451 27.05736568 -46 27 C-46 26.67 -46 26.34 -46 26 C-42.37 26 -38.74 26 -35 26 C-35.01160156 24.20691406 -35.02320313 22.41382813 -35.03515625 20.56640625 C-35.04453229 18.23177187 -35.05363269 15.89713637 -35.0625 13.5625 C-35.07087891 12.37849609 -35.07925781 11.19449219 -35.08789062 9.97460938 C-35.09111328 8.84990234 -35.09433594 7.72519531 -35.09765625 6.56640625 C-35.10551147 5.00321655 -35.10551147 5.00321655 -35.11352539 3.40844727 C-35 1 -35 1 -34 0 C-29.63698994 -0.38898712 -25.25190232 -0.47126583 -20.875 -0.625 C-19.65039062 -0.6765625 -18.42578125 -0.728125 -17.1640625 -0.78125 C-15.97296875 -0.82507813 -14.781875 -0.86890625 -13.5546875 -0.9140625 C-12.46655762 -0.9548291 -11.37842773 -0.9955957 -10.25732422 -1.03759766 C-7 -1 -7 -1 0 0 Z M-34 1 C-34 8.92 -34 16.84 -34 25 C-25.09 25 -16.18 25 -7 25 C-7 17.08 -7 9.16 -7 1 C-15.91 1 -24.82 1 -34 1 Z \",fill:\"#71716F\",transform:\"translate(222,590)\"})),_path752||(_path752=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C11.22 0 22.44 0 34 0 C34 6.27 34 12.54 34 19 C18.81997631 20.44571654 18.81997631 20.44571654 15 18 C13.578125 16.30078125 13.578125 16.30078125 12.25 14.3125 C9.47766561 10.41279689 6.35883468 7.52775124 2.63671875 4.54296875 C1 3 1 3 0 0 Z \",fill:\"#666564\",transform:\"translate(5,0)\"})),_path753||(_path753=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.08331839 -0.02903892 8.1666102 -0.04681189 12.25 -0.0625 C13.98830078 -0.07506836 13.98830078 -0.07506836 15.76171875 -0.08789062 C16.87675781 -0.09111328 17.99179687 -0.09433594 19.140625 -0.09765625 C20.68024902 -0.10551147 20.68024902 -0.10551147 22.25097656 -0.11352539 C25 0 25 0 29 1 C29.495 8.92 29.495 8.92 30 17 C20.43 17 10.86 17 1 17 C-0.125 8 -0.125 8 -0.0625 4 C-0.05347656 3.236875 -0.04445313 2.47375 -0.03515625 1.6875 C-0.02355469 1.130625 -0.01195312 0.57375 0 0 Z \",fill:\"#838281\",transform:\"translate(485,1007)\"})),_path754||(_path754=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C29 6 29 6 29 17 C19.43 17 9.86 17 0 17 C0 11.39 0 5.78 0 0 Z \",fill:\"#888886\",transform:\"translate(455,1007)\"})),_path755||(_path755=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.61 0 11.22 0 17 0 C17.0268245 4.14587582 17.04675315 8.29158038 17.0625 12.4375 C17.07087891 13.62150391 17.07925781 14.80550781 17.08789062 16.02539062 C17.09272461 17.71245117 17.09272461 17.71245117 17.09765625 19.43359375 C17.10551147 20.99678345 17.10551147 20.99678345 17.11352539 22.59155273 C17 25 17 25 16 26 C13.92545653 26.01679563 11.85026768 25.96256686 9.77734375 25.87890625 C7.88725586 25.80639648 7.88725586 25.80639648 5.95898438 25.73242188 C4.61848492 25.67589183 3.27799018 25.61924973 1.9375 25.5625 C0.59311754 25.50929396 -0.75128343 25.45655347 -2.09570312 25.40429688 C-5.39731976 25.27412561 -8.69868642 25.13764297 -12 25 C-12 33.91 -12 42.82 -12 52 C-12.33 52 -12.66 52 -13 52 C-13.33 42.43 -13.66 32.86 -14 23 C-9.38 23 -4.76 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#717170\",transform:\"translate(528,616)\"})),_path756||(_path756=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C12 0 12 0 18 1 C18 9.58 18 18.16 18 27 C12.06 27 6.12 27 0 27 C0 18.09 0 9.18 0 0 Z \",fill:\"#5D5C5A\",transform:\"translate(804,385)\"})),_path757||(_path757=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 5.61 29 11.22 29 17 C19.23558902 17.09211708 9.73804296 16.80313756 0 16 C0 10.72 0 5.44 0 0 Z \",fill:\"#8E8D8B\",transform:\"translate(822,941)\"})),_path758||(_path758=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.6 0 13.2 0 20 0 C20 8.25 20 16.5 20 25 C13.73 25 7.46 25 1 25 C0.67 16.75 0.34 8.5 0 0 Z \",fill:\"#8C8A89\",transform:\"translate(1004,617)\"})),_path759||(_path759=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 8.25 0 16.5 0 25 C-6.6 25 -13.2 25 -20 25 C-20.10749313 16.93801514 -19.71489336 9.02978438 -19 1 C-12.43686385 -0.19329748 -6.96308479 0 0 0 Z \",fill:\"#8B8988\",transform:\"translate(1024,514)\"})),_path760||(_path760=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.27 0.33 12.54 0.66 19 1 C19 9.25 19 17.5 19 26 C12.73 26 6.46 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#868685\",transform:\"translate(804,463)\"})),_path761||(_path761=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C28 5.61 28 11.22 28 17 C18.76 17 9.52 17 0 17 C0 11.39 0 5.78 0 0 Z \",fill:\"#858482\",transform:\"translate(276,1007)\"})),_path762||(_path762=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.27 0 12.54 0 19 0 C19 8.25 19 16.5 19 25 C12.73 25 6.46 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#908E8C\",transform:\"translate(1005,669)\"})),_path763||(_path763=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.27 0 12.54 0 19 0 C19 8.25 19 16.5 19 25 C12.73 25 6.46 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#8B8987\",transform:\"translate(1005,361)\"})),_path764||(_path764=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.74886475 0.00523682 1.49772949 0.01047363 2.26928711 0.01586914 C3.36188843 0.01961548 3.36188843 0.01961548 4.4765625 0.0234375 C5.40718506 0.0325415 6.33780762 0.04164551 7.29663086 0.05102539 C11.72069336 0.08196289 11.72069336 0.08196289 16.23413086 0.11352539 C16.23413086 8.36352539 16.23413086 16.61352539 16.23413086 25.11352539 C9.96413086 25.11352539 3.69413086 25.11352539 -2.76586914 25.11352539 C-2.79269528 21.13431445 -2.81262307 17.15528198 -2.82836914 13.17602539 C-2.83674805 12.0397168 -2.84512695 10.9034082 -2.85375977 9.73266602 C-2.85698242 8.65307617 -2.86020508 7.57348633 -2.86352539 6.46118164 C-2.86876221 5.46094971 -2.87399902 4.46071777 -2.87939453 3.43017578 C-2.71987053 0.17485688 -2.71987053 0.17485688 0 0 Z \",fill:\"#878583\",transform:\"translate(1007.765869140625,412.886474609375)\"})),_path765||(_path765=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.27 0 12.54 0 19 0 C19 8.25 19 16.5 19 25 C12.73 25 6.46 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#7C7A78\",transform:\"translate(1005,336)\"})),_path766||(_path766=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.74886475 0.00523682 1.49772949 0.01047363 2.26928711 0.01586914 C3.36188843 0.01961548 3.36188843 0.01961548 4.4765625 0.0234375 C5.40718506 0.0325415 6.33780762 0.04164551 7.29663086 0.05102539 C11.72069336 0.08196289 11.72069336 0.08196289 16.23413086 0.11352539 C16.23413086 8.36352539 16.23413086 16.61352539 16.23413086 25.11352539 C2.73413086 25.11352539 2.73413086 25.11352539 -2.76586914 24.11352539 C-2.7947415 20.30104113 -2.81262406 16.48858469 -2.82836914 12.67602539 C-2.83674805 11.58741211 -2.84512695 10.49879883 -2.85375977 9.37719727 C-2.85698242 8.34272461 -2.86020508 7.30825195 -2.86352539 6.24243164 C-2.86876221 5.28409424 -2.87399902 4.32575684 -2.87939453 3.33837891 C-2.7421774 0.64921815 -2.69737206 0.17341048 0 0 Z \",fill:\"#615F5E\",transform:\"translate(1007.765869140625,163.886474609375)\"})),_path767||(_path767=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C14.19 0 28.38 0 43 0 C43 4.95 43 9.9 43 15 C33.1 15 23.2 15 13 15 C13 10.38 13 5.76 13 1 C8.71 1 4.42 1 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#747472\",transform:\"translate(352,721)\"})),_path768||(_path768=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 8.58 0 17.16 0 26 C-5.94 26 -11.88 26 -18 26 C-18 17.75 -18 9.5 -18 1 C-11 0 -11 0 0 0 Z \",fill:\"#7E7E7C\",transform:\"translate(291,513)\"})),_path769||(_path769=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 8.25 0 16.5 0 25 C-2.578125 25.020625 -5.15625 25.04125 -7.8125 25.0625 C-9.02450073 25.07615601 -9.02450073 25.07615601 -10.26098633 25.09008789 C-13.44381813 25.10246624 -15.96056322 25.01314559 -19 24 C-19 16.41 -19 8.82 -19 1 C-8 0 -8 0 0 0 Z \",fill:\"#888682\",transform:\"translate(1024,257)\"})),_path770||(_path770=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.6 0 13.2 0 20 0 C20 7.59 20 15.18 20 23 C13.4 23 6.8 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#656361\",transform:\"translate(1004,893)\"})),_path771||(_path771=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 2.64 1 5.28 1 8 C6.61 8 12.22 8 18 8 C18 16.25 18 24.5 18 33 C12.06 33 6.12 33 0 33 C0 22.11 0 11.22 0 0 Z \",fill:\"#818280\",transform:\"translate(804,300)\"})),_path772||(_path772=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.27 0 12.54 0 19 0 C19 7.92 19 15.84 19 24 C12.73 24 6.46 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#908E8C\",transform:\"translate(1005,772)\"})),_path773||(_path773=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.27 0 12.54 0 19 0 C19 7.92 19 15.84 19 24 C12.73 24 6.46 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#918F8E\",transform:\"translate(1005,722)\"})),_path774||(_path774=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.94 0.33 11.88 0.66 18 1 C18 9.25 18 17.5 18 26 C12.06 26 6.12 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#8A8989\",transform:\"translate(804,563)\"})),_path775||(_path775=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C13.86 0.495 13.86 0.495 28 1 C28.3125 11.625 28.3125 11.625 28.38793945 14.93994141 C28.72063694 23.76492438 31.0299069 28.54963407 37.5 34.625 C40.59658107 37.58194745 43.54582122 40.46797243 46 44 C45.505 44.99 45.505 44.99 45 46 C37.57657658 38.73873874 37.57657658 38.73873874 35 35.4375 C32.69703484 32.63076122 30.14170267 30.42520062 27.390625 28.06640625 C20.13529846 21.79505373 13.13857704 15.23441729 6.3125 8.5 C5.53664551 7.74360229 5.53664551 7.74360229 4.74511719 6.97192383 C2.42076932 4.65346934 1.05405693 3.1621708 0 0 Z \",fill:\"#818180\",transform:\"translate(395,385)\"})),_path776||(_path776=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.52191504 3.12312909 4.24077086 6.3237623 5.9609375 9.9453125 C6.51523437 11.10546875 7.06953125 12.265625 7.640625 13.4609375 C8.21894556 14.68219908 8.79706956 15.90355376 9.375 17.125 C10.50710643 19.50294045 11.63990833 21.88054993 12.7734375 24.2578125 C13.58699707 25.96565918 13.58699707 25.96565918 14.41699219 27.70800781 C16.56007036 32.16471141 18.76570152 36.58843277 21 41 C20 42 20 42 18.05053711 42.11352539 C16.8015564 42.10567017 16.8015564 42.10567017 15.52734375 42.09765625 C14.71773193 42.09515869 13.90812012 42.09266113 13.07397461 42.09008789 C12.03893799 42.08098389 11.00390137 42.07187988 9.9375 42.0625 C6.658125 42.041875 3.37875 42.02125 0 42 C0 34.41 0 26.82 0 19 C2.31 19 4.62 19 7 19 C5.03177114 17.03177114 1.65191291 17.33751619 -1 17 C-1.02708567 15.39592672 -1.04643483 13.7917215 -1.0625 12.1875 C-1.07410156 11.29417969 -1.08570313 10.40085937 -1.09765625 9.48046875 C-1 7 -1 7 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#757675\",transform:\"translate(366,521)\"})),_path777||(_path777=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-24.74593564 29.70383996 -24.74593564 29.70383996 -37.16015625 30.92578125 C-43.87934551 31.12127309 -50.43577353 30.43162871 -57 29 C-57 28.67 -57 28.34 -57 28 C-48.09 28 -39.18 28 -30 28 C-30 19.09 -30 10.18 -30 1 C-26.04930705 0.69159107 -22.09858763 0.38663337 -18.14697266 0.09057617 C-16.80241488 -0.01121539 -15.45800989 -0.11504632 -14.11376953 -0.22094727 C-12.18303014 -0.37269911 -10.25167425 -0.51654217 -8.3203125 -0.66015625 C-7.15773926 -0.74918213 -5.99516602 -0.83820801 -4.79736328 -0.92993164 C-2 -1 -2 -1 0 0 Z \",fill:\"#595857\",transform:\"translate(333,693)\"})),_path778||(_path778=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.94 0 11.88 0 18 0 C18 8.25 18 16.5 18 25 C12.06 25 6.12 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#898988\",transform:\"translate(804,514)\"})),_path779||(_path779=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.11177927 -0.02291394 8.22339658 -0.04283951 12.33520508 -0.05493164 C13.73495228 -0.0599708 15.1346942 -0.06680216 16.53442383 -0.07543945 C18.54245777 -0.0875232 20.55052957 -0.09269807 22.55859375 -0.09765625 C24.37315063 -0.10551147 24.37315063 -0.10551147 26.22436523 -0.11352539 C29 0 29 0 30 1 C30 5.62 30 10.24 30 15 C20.1 15 10.2 15 0 15 C0 10.05 0 5.1 0 0 Z \",fill:\"#7C7C7A\",transform:\"translate(637,721)\"})),_path780||(_path780=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.16015625 0.00322266 2.3203125 0.00644531 3.515625 0.00976562 C5.32546875 0.02233398 5.32546875 0.02233398 7.171875 0.03515625 C9.00492188 0.04192383 9.00492188 0.04192383 10.875 0.04882812 C13.89064592 0.06060799 16.90626665 0.07854324 19.921875 0.09765625 C19.921875 5.04765625 19.921875 9.99765625 19.921875 15.09765625 C10.021875 15.09765625 0.121875 15.09765625 -10.078125 15.09765625 C-10.078125 10.47765625 -10.078125 5.85765625 -10.078125 1.09765625 C-6.42966495 0.18554124 -3.72110969 -0.01824073 0 0 Z \",fill:\"#7A7877\",transform:\"translate(678.078125,720.90234375)\"})),_path781||(_path781=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.61 0 11.22 0 17 0 C17 16.17 17 32.34 17 49 C16.67 49 16.34 49 16 49 C16 40.42 16 31.84 16 23 C10.39 23 4.78 23 -1 23 C-1.02682987 19.35411831 -1.04675569 15.70843154 -1.0625 12.0625 C-1.07087891 11.02158203 -1.07925781 9.98066406 -1.08789062 8.90820312 C-1.09272461 7.42416992 -1.09272461 7.42416992 -1.09765625 5.91015625 C-1.10289307 4.99371338 -1.10812988 4.07727051 -1.11352539 3.13305664 C-1 1 -1 1 0 0 Z \",fill:\"#6F6E6C\",transform:\"translate(274,464)\"})),_path782||(_path782=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 7.59 0 15.18 0 23 C-9.9 23 -19.8 23 -30 23 C-25.29542938 17.51133428 -20.57048023 12.1983809 -15.5625 7 C-14.83740234 6.21238281 -14.11230469 5.42476562 -13.36523438 4.61328125 C-12.64787109 3.87464844 -11.93050781 3.13601563 -11.19140625 2.375 C-10.55404541 1.70210937 -9.91668457 1.02921875 -9.26000977 0.3359375 C-7 -1 -7 -1 0 0 Z \",fill:\"#858382\",transform:\"translate(187,845)\"})),_path783||(_path783=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.27 0 12.54 0 19 0 C19 7.59 19 15.18 19 23 C12.73 23 6.46 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#8F8D8B\",transform:\"translate(1005,141)\"})),_path784||(_path784=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 8.58 0 17.16 0 26 C-5.61 26 -11.22 26 -17 26 C-17 17.75 -17 9.5 -17 1 C-11 0 -11 0 0 0 Z \",fill:\"#7E7D7B\",transform:\"translate(291,563)\"})),_path785||(_path785=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.56 0 21.12 0 32 0 C32 11 32 11 31 13 C24.14701468 14.10846863 17.36517893 14.1221028 10.4375 14.0625 C9.42880859 14.05798828 8.42011719 14.05347656 7.38085938 14.04882812 C4.92054671 14.03716788 2.46026508 14.01923752 0 14 C0 9.38 0 4.76 0 0 Z \",fill:\"#545453\",transform:\"translate(334,243)\"})),_path786||(_path786=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 8.91 0 17.82 0 27 C-8.91 27 -17.82 27 -27 27 C-27 24 -27 24 -25.62646484 22.30175781 C-24.99434082 21.69170898 -24.3622168 21.08166016 -23.7109375 20.453125 C-23.01613281 19.7725 -22.32132812 19.091875 -21.60546875 18.390625 C-20.86941406 17.68421875 -20.13335937 16.9778125 -19.375 16.25 C-14.76786071 11.78449067 -10.30016623 7.37458732 -6.31103516 2.33886719 C-4.43611304 0.42414226 -2.63831205 0 0 0 Z \",fill:\"#7A7977\",transform:\"translate(365,666)\"})),_path787||(_path787=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.94 0.33 11.88 0.66 18 1 C18 8.92 18 16.84 18 25 C12.06 25 6.12 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#898988\",transform:\"translate(804,256)\"})),_path788||(_path788=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.93214301 1.58939426 6.33020346 4.16342502 9.25 7.1875 C12.3171068 10.35654821 15.38856225 13.36997661 18.73828125 16.23828125 C24.65616079 21.35389083 30.03204883 27.02119008 35.49023438 32.6171875 C39.2772338 36.45374735 42.99986563 40.1146815 47.33203125 43.33203125 C53.73222865 48.13869287 59.16028254 53.98546349 64.75 59.6875 C66.41928807 61.38458537 68.09011216 63.08008761 69.76397705 64.7726593 C70.79642659 65.81718549 71.82619518 66.86437137 72.85272217 67.91471863 C75.74566763 70.84777002 78.75518698 73.4658074 82 76 C82.99275753 77.07332162 83.95215979 78.17850143 84.875 79.3125 C92.60443535 88.34999364 101.25713377 96.85648941 110.35546875 104.5078125 C112.74408961 106.67515969 114.75730699 109.10547184 116.7734375 111.6171875 C117.97175539 113.14103109 117.97175539 113.14103109 120 114 C120 114.66 120 115.32 120 116 C120.66 116 121.32 116 122 116 C122 116.66 122 117.32 122 118 C122.55397461 118.22727783 123.10794922 118.45455566 123.67871094 118.6887207 C126.67733434 120.38262124 128.72794461 122.52222907 131.140625 124.98046875 C131.62650085 125.47154617 132.11237671 125.9626236 132.61297607 126.46858215 C134.16350303 128.03685648 135.70719156 129.61163482 137.25 131.1875 C139.27256095 133.24694558 141.29834952 135.30313309 143.328125 137.35546875 C143.8184874 137.85128448 144.30884979 138.34710022 144.81407166 138.85794067 C148.20328993 142.26045028 151.70384244 145.47588315 155.35498047 148.59301758 C162.77835564 154.9422178 168.9593953 162.35999169 175 170 C172 170 172 170 170.12719727 168.20581055 C169.42651123 167.37863525 168.7258252 166.55145996 168.00390625 165.69921875 C163.32509654 160.3256394 158.40959542 155.25662813 153.36108398 150.23071289 C151.93160283 148.80662508 150.50759489 147.37721956 149.08398438 145.94726562 C148.15779297 145.02236328 147.23160156 144.09746094 146.27734375 143.14453125 C145.04359009 141.91246948 145.04359009 141.91246948 143.78491211 140.65551758 C141.64140024 138.61159905 139.47713327 136.66891243 137.23461914 134.73901367 C132.59808544 130.71150565 128.28691451 126.39496431 123.96875 122.03125 C123.13339722 121.1921106 122.29804443 120.35297119 121.43737793 119.48840332 C117.89663871 115.9314548 114.36192676 112.3685388 110.82666016 108.80615234 C108.2302794 106.19159836 105.63083434 103.58011816 103.03125 100.96875 C102.24455933 100.17376099 101.45786865 99.37877197 100.64733887 98.55969238 C96.46948091 94.36354082 92.21761638 90.34492219 87.69494629 86.52111816 C85.15072615 84.23782489 83.14190788 81.6629125 81 79 C77.76208808 75.66973153 74.39931982 72.53223436 70.9375 69.4375 C64.11113882 63.26845922 57.6638618 56.72097104 51.20678711 50.16967773 C46.93703282 45.85607488 42.60646722 41.72950414 38.00097656 37.77832031 C33.34986293 33.64475373 29.0715046 29.10685451 24.7109375 24.671875 C20.54502118 20.46301109 16.30315277 16.44132316 11.8125 12.58105469 C9.26630998 10.35999776 6.88565924 8.01802238 4.5 5.625 C3.6440625 4.77164063 2.788125 3.91828125 1.90625 3.0390625 C0 1 0 1 0 0 Z \",fill:\"#ECEAEB\",transform:\"translate(49,47)\"})),_path789||(_path789=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.61 0 11.22 0 17 0 C17 8.25 17 16.5 17 25 C11.39 25 5.78 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#575656\",transform:\"translate(528,514)\"})),_path790||(_path790=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.96 0 7.92 0 12 0 C12 8.58 12 17.16 12 26 C6.06 25.67 0.12 25.34 -6 25 C-6.30507108 14.32251235 -6.44219142 8.58958856 0 0 Z \",fill:\"#4B4A49\",transform:\"translate(625,413)\"})),_path791||(_path791=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C30 4.62 30 9.24 30 14 C20.1 14 10.2 14 0 14 C0 9.38 0 4.76 0 0 Z \",fill:\"#5A5A5A\",transform:\"translate(607,243)\"})),_path792||(_path792=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0 20.46 0 31 0 C31 4.29 31 8.58 31 13 C20.63946908 13.83360594 10.3905794 14.12288464 0 14 C0 9.38 0 4.76 0 0 Z \",fill:\"#575656\",transform:\"translate(668,243)\"})),_path793||(_path793=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.27 0 12.54 0 19 0 C19 7.26 19 14.52 19 22 C12.73 22 6.46 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#8D8B89\",transform:\"translate(1005,870)\"})),_path794||(_path794=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.27 0 12.54 0 19 0 C19 7.26 19 14.52 19 22 C12.73 22 6.46 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#8F8D8C\",transform:\"translate(1005,824)\"})),_path795||(_path795=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.7108374 0.73271118 0.7108374 0.73271118 1.43603516 1.48022461 C1.9705127 2.02251709 2.50499023 2.56480957 3.05566406 3.12353516 C3.60657715 3.70401611 4.15749023 4.28449707 4.72509766 4.88256836 C5.30308105 5.47529541 5.88106445 6.06802246 6.4765625 6.67871094 C9.96597534 10.28266776 13.27872514 14.00198363 16.51806641 17.83178711 C20.48342805 22.1353459 24.96628715 25.95153396 29.35009766 29.82006836 C28.36009766 30.48006836 27.37009766 31.14006836 26.35009766 31.82006836 C24.35009766 28.82006836 24.35009766 28.82006836 23.35009766 26.82006836 C22.69227295 26.82530518 22.03444824 26.83054199 21.35668945 26.8359375 C7.31437848 26.93241046 -6.63683268 26.75538648 -20.64990234 25.82006836 C-20.64990234 25.49006836 -20.64990234 25.16006836 -20.64990234 24.82006836 C-14.37990234 24.82006836 -8.10990234 24.82006836 -1.64990234 24.82006836 C-1.79027873 21.36143318 -1.93694825 17.90326699 -2.08740234 14.44506836 C-2.12671875 13.46022461 -2.16603516 12.47538086 -2.20654297 11.46069336 C-2.2484375 10.51967773 -2.29033203 9.57866211 -2.33349609 8.60913086 C-2.37015381 7.73981934 -2.40681152 6.87050781 -2.44458008 5.97485352 C-2.52391778 3.77174216 -2.52391778 3.77174216 -3.64990234 1.82006836 C-6.7449329 0.73330055 -9.81355455 0.63037077 -13.07177734 0.50366211 C-14.60898437 0.44082031 -14.60898437 0.44082031 -16.17724609 0.37670898 C-17.24072266 0.33739258 -18.30419922 0.29807617 -19.39990234 0.25756836 C-20.47884766 0.21438477 -21.55779297 0.17120117 -22.66943359 0.12670898 C-25.32946663 0.02077847 -27.98959046 -0.08129585 -30.64990234 -0.17993164 C-30.64990234 -0.50993164 -30.64990234 -0.83993164 -30.64990234 -1.17993164 C-26.75450777 -1.37741055 -22.85858219 -1.56116193 -18.96240234 -1.74243164 C-17.85960937 -1.79850586 -16.75681641 -1.85458008 -15.62060547 -1.91235352 C-14.55390625 -1.96069336 -13.48720703 -2.0090332 -12.38818359 -2.05883789 C-11.40889893 -2.10596924 -10.42961426 -2.15310059 -9.4206543 -2.20166016 C-5.90243121 -2.1740699 -2.92388418 -2.09102283 0 0 Z \",fill:\"#5E5C5B\",transform:\"translate(700.64990234375,695.179931640625)\"})),_path796||(_path796=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 7.26 0 14.52 0 22 C-6.27 22 -12.54 22 -19 22 C-19 15.07 -19 8.14 -19 1 C-12.42255318 0.06036474 -6.60820813 -0.07424953 0 0 Z \",fill:\"#8C8A89\",transform:\"translate(1024,958)\"})),_path797||(_path797=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.66 1.98 1.32 3 2 C3.34057617 4.52197266 3.34057617 4.52197266 3.29296875 7.6640625 C3.28330078 8.78554688 3.27363281 9.90703125 3.26367188 11.0625 C3.23853516 12.238125 3.21339844 13.41375 3.1875 14.625 C3.16719727 16.40003906 3.16719727 16.40003906 3.14648438 18.2109375 C3.11103916 21.14107539 3.06162769 24.07031459 3 27 C-0.37498158 27.02922646 -3.74993021 27.04687468 -7.125 27.0625 C-8.55199219 27.07506836 -8.55199219 27.07506836 -10.0078125 27.08789062 C-14.79018487 27.10449608 -19.29771569 27.00537055 -24 26 C-23.60167969 25.54109375 -23.20335938 25.0821875 -22.79296875 24.609375 C-19.39984291 20.68325173 -19.39984291 20.68325173 -16.25 16.5625 C-15.8375 16.046875 -15.425 15.53125 -15 15 C-14.34 15 -13.68 15 -13 15 C-12.67 14.01 -12.34 13.02 -12 12 C-10.546875 10.60546875 -10.546875 10.60546875 -8.75 9.1875 C-5.35998743 6.39860306 -2.70890296 3.44769467 0 0 Z \",fill:\"#8D8C8A\",transform:\"translate(94,928)\"})),_path798||(_path798=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.27 0 12.54 0 19 0 C19 7.26 19 14.52 19 22 C12.73 21.67 6.46 21.34 0 21 C0 14.07 0 7.14 0 0 Z \",fill:\"#8A8885\",transform:\"translate(1005,96)\"})),_path799||(_path799=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.27 0 12.54 0 19 0 C19 6.93 19 13.86 19 21 C14.854375 21.0309375 14.854375 21.0309375 10.625 21.0625 C9.32103271 21.07615601 9.32103271 21.07615601 7.99072266 21.09008789 C2.22222222 21.11111111 2.22222222 21.11111111 0 20 C0 13.4 0 6.8 0 0 Z \",fill:\"#8F8D8B\",transform:\"translate(1005,916)\"})),_path800||(_path800=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C4.0394775 3.1184325 4.11494838 5.27475586 4.09765625 8.54296875 C4.09443359 9.61611328 4.09121094 10.68925781 4.08789062 11.79492188 C4.07951172 12.91447266 4.07113281 14.03402344 4.0625 15.1875 C4.05798828 16.31865234 4.05347656 17.44980469 4.04882812 18.61523438 C4.03703511 21.41017876 4.01909957 24.20509599 4 27 C-1.28 27 -6.56 27 -12 27 C-12 19.41 -12 11.82 -12 4 C-8.37 3.01 -4.74 2.02 -1 1 C-0.67 0.67 -0.34 0.34 0 0 Z \",fill:\"#706E6D\",transform:\"translate(540,487)\"})),_path801||(_path801=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.61 0 11.22 0 17 0 C17 7.92 17 15.84 17 24 C11.72 24.33 6.44 24.66 1 25 C0.67 16.75 0.34 8.5 0 0 Z \",fill:\"#747574\",transform:\"translate(527,360)\"})),_path802||(_path802=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 4.62 0 9.24 0 14 C-9.9 14 -19.8 14 -30 14 C-30 9.71 -30 5.42 -30 1 C-25.56252441 0.83266085 -21.12502205 0.66609845 -16.6875 0.5 C-15.42486328 0.45230469 -14.16222656 0.40460938 -12.86132812 0.35546875 C-11.65283203 0.31035156 -10.44433594 0.26523438 -9.19921875 0.21875 C-8.08377686 0.17685547 -6.96833496 0.13496094 -5.8190918 0.09179688 C-3.88018086 0.02866095 -1.9399386 0 0 0 Z \",fill:\"#5A5A59\",transform:\"translate(760,242)\"})),_path803||(_path803=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.27 0 12.54 0 19 0 C19 6.93 19 13.86 19 21 C16.421875 20.855625 13.84375 20.71125 11.1875 20.5625 C9.97549927 20.49784546 9.97549927 20.49784546 8.73901367 20.43188477 C5.62590943 20.24715282 2.97149083 19.99049694 0 19 C0 12.73 0 6.46 0 0 Z \",fill:\"#8E8C8A\",transform:\"translate(1005,189)\"})),_path804||(_path804=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C8.58 0 17.16 0 26 0 C26 3 26 3 24.19921875 4.83984375 C23.37035156 5.53207031 22.54148437 6.22429687 21.6875 6.9375 C16.9595351 11.01982531 12.80600754 15.3626711 8.7565918 20.10131836 C6.36459923 22.82376307 4.71550243 24.65437187 1 25 C-0.27861615 22.44276771 -0.11336609 20.63262898 -0.09765625 17.7734375 C-0.09515869 16.84450684 -0.09266113 15.91557617 -0.09008789 14.95849609 C-0.08098389 13.77594238 -0.07187988 12.59338867 -0.0625 11.375 C-0.041875 7.62125 -0.02125 3.8675 0 0 Z \",fill:\"#8B8989\",transform:\"translate(852,142)\"})),_path805||(_path805=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.9693655 -0.02291487 7.9385632 -0.04284015 11.90795898 -0.05493164 C13.25920386 -0.05997057 14.61044326 -0.06680177 15.96166992 -0.07543945 C17.90020434 -0.08752419 19.838778 -0.09269828 21.77734375 -0.09765625 C23.52905884 -0.10551147 23.52905884 -0.10551147 25.31616211 -0.11352539 C28 0 28 0 29 1 C29 4.96 29 8.92 29 13 C19.1 13 9.2 13 -1 13 C-0.67 8.71 -0.34 4.42 0 0 Z \",fill:\"#888888\",transform:\"translate(366,243)\"})),_path806||(_path806=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.57 0 19.14 0 29 0 C29 4.29 29 8.58 29 13 C19.43 13 9.86 13 0 13 C0 8.71 0 4.42 0 0 Z \",fill:\"#878887\",transform:\"translate(638,243)\"})),_path807||(_path807=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.23 0 20.46 0 31 0 C31 3.96 31 7.92 31 12 C20.77 12 10.54 12 0 12 C0 8.04 0 4.08 0 0 Z \",fill:\"#737372\",transform:\"translate(303,243)\"})),_path808||(_path808=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.28 0.33 10.56 0.66 16 1 C16 8.59 16 16.18 16 24 C10.72 24.33 5.44 24.66 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#7A7A7A\",transform:\"translate(528,438)\"})),_path809||(_path809=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.52088564 -0.0271069 7.04156004 -0.04689102 10.5625 -0.0625 C11.55314453 -0.07087891 12.54378906 -0.07925781 13.56445312 -0.08789062 C18.82548699 -0.10536914 23.81764665 0.07691602 29 1 C29 4.96 29 8.92 29 13 C19.43 13 9.86 13 0 13 C0 8.71 0 4.42 0 0 Z \",fill:\"#787979\",transform:\"translate(546,243)\"})),_path810||(_path810=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.59811523 0.00676758 1.59811523 0.00676758 3.22851562 0.01367188 C5.83986822 0.02538198 8.45119163 0.04331488 11.0625 0.0625 C11.0625 4.3525 11.0625 8.6425 11.0625 13.0625 C1.1625 13.0625 -8.7375 13.0625 -18.9375 13.0625 C-18.9375 9.1025 -18.9375 5.1425 -18.9375 1.0625 C-12.61160373 -0.07705862 -6.41471662 -0.0517637 0 0 Z \",fill:\"#787978\",transform:\"translate(595.9375,242.9375)\"})),_path811||(_path811=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.44041722 1.1101043 5.59113044 2.20584174 8.765625 5.3671875 C9.65507812 6.25277344 10.54453125 7.13835937 11.4609375 8.05078125 C12.38132812 8.98277344 13.30171875 9.91476562 14.25 10.875 C15.65378906 12.26138672 15.65378906 12.26138672 17.0859375 13.67578125 C17.97023438 14.56394531 18.85453125 15.45210938 19.765625 16.3671875 C20.98427246 17.59091064 20.98427246 17.59091064 22.22753906 18.83935547 C24 21 24 21 24 24 C15.97442193 25.03555846 8.08876337 25.0793016 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#6C6C6E\",transform:\"translate(366,360)\"})),_path812||(_path812=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.29 0 8.58 0 13 0 C13 8.91 13 17.82 13 27 C9.04 27 5.08 27 1 27 C0 26 0 26 -0.11352539 23.49975586 C-0.10828857 22.41573486 -0.10305176 21.33171387 -0.09765625 20.21484375 C-0.09443359 19.04501953 -0.09121094 17.87519531 -0.08789062 16.66992188 C-0.07951172 15.43822266 -0.07113281 14.20652344 -0.0625 12.9375 C-0.05798828 11.70193359 -0.05347656 10.46636719 -0.04882812 9.19335938 C-0.03699618 6.12888587 -0.01906008 3.06443707 0 0 Z \",fill:\"#7E7D7D\",transform:\"translate(760,386)\"})),_path813||(_path813=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C24.09 0 48.18 0 73 0 C73 0.33 73 0.66 73 1 C69.04 1 65.08 1 61 1 C61 2.65 61 4.3 61 6 C60.06615479 5.96447021 59.13230957 5.92894043 58.17016602 5.89233398 C54.71700422 5.76338667 51.26374148 5.63902888 47.81030273 5.51782227 C46.31349062 5.46433566 44.81674337 5.4090013 43.32006836 5.35180664 C41.17315668 5.27008044 39.02610207 5.1949254 36.87890625 5.12109375 C35.5854126 5.0739624 34.29191895 5.02683105 32.95922852 4.97827148 C30.11306192 4.6529728 30.11306192 4.6529728 29 6 C26.85441173 6.08775605 24.70595579 6.10695219 22.55859375 6.09765625 C21.25341797 6.09443359 19.94824219 6.09121094 18.60351562 6.08789062 C17.2148431 6.07953401 15.82617123 6.07106905 14.4375 6.0625 C13.04492344 6.05748666 11.65234519 6.05292347 10.25976562 6.04882812 C6.8398013 6.03699434 3.41992156 6.0205088 0 6 C0 4.02 0 2.04 0 0 Z \",fill:\"#858685\",transform:\"translate(304,765)\"})),_path814||(_path814=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.18990235 35.74838738 1.18990235 35.74838738 0.5625 48.125 C0.52326416 48.92131836 0.48402832 49.71763672 0.44360352 50.53808594 C0.13780131 55.72439737 0.13780131 55.72439737 -1 58 C-4.63 58 -8.26 58 -12 58 C-12 49.42 -12 40.84 -12 32 C-8.04 32 -4.08 32 0 32 C0 21.44 0 10.88 0 0 Z \",fill:\"#7D7E7D\",transform:\"translate(773,584)\"})),_path815||(_path815=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.17306293 1.39833601 5.26758379 3.04097227 7.6796875 5.51953125 C8.36160156 6.21240234 9.04351562 6.90527344 9.74609375 7.61914062 C10.79990234 8.70485352 10.79990234 8.70485352 11.875 9.8125 C16.4130624 14.46422444 20.916178 18.94409812 26 23 C24 25 24 25 21.47802734 25.13525391 C20.4411377 25.08288574 19.40424805 25.03051758 18.3359375 24.9765625 C17.21445312 24.925 16.09296875 24.8734375 14.9375 24.8203125 C13.761875 24.75585938 12.58625 24.69140625 11.375 24.625 C9.59996094 24.53992188 9.59996094 24.53992188 7.7890625 24.453125 C4.85878888 24.31133757 1.92933228 24.15989667 -1 24 C-1.04970805 17.9100733 -1.02242467 11.88568681 -0.5 5.8125 C-0.4071875 4.70519531 -0.314375 3.59789062 -0.21875 2.45703125 C-0.1465625 1.64621094 -0.074375 0.83539063 0 0 Z \",fill:\"#767577\",transform:\"translate(396,389)\"})),_path816||(_path816=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.475 0.495 2.475 0.495 5 1 C5 7.93 5 14.86 5 22 C-3.25 22 -11.5 22 -20 22 C-17.29823655 16.59647309 -13.40499604 12.95808804 -9.1875 8.6875 C-8.37990234 7.83865234 -7.57230469 6.98980469 -6.74023438 6.11523438 C-5.95326172 5.31794922 -5.16628906 4.52066406 -4.35546875 3.69921875 C-3.28268677 2.59839966 -3.28268677 2.59839966 -2.18823242 1.4753418 C-1.46611572 0.988479 -0.74399902 0.50161621 0 0 Z \",fill:\"#848280\",transform:\"translate(908,117)\"})),_path817||(_path817=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.75111172 2.19659696 6.93433291 4.93433291 10 8 C10.27783543 12.01194366 10.0856495 15.97447362 10 20 C3.73 20 -2.54 20 -9 20 C-9 13.73 -9 7.46 -9 1 C-5.78509882 -0.60745059 -3.5698929 -0.40305242 0 0 Z \",fill:\"#868583\",transform:\"translate(1014,1004)\"})),_path818||(_path818=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C8.91 0 17.82 0 27 0 C27.020625 2.701875 27.04125 5.40375 27.0625 8.1875 C27.071604 9.02949951 27.08070801 9.87149902 27.09008789 10.73901367 C27.10442325 14.62944463 26.96680139 18.20130793 26 22 C23 21 23 21 21.125 19.0625 C19.1977237 16.8838349 19.1977237 16.8838349 16.82421875 16.3125 C12.63267828 14.36456418 9.87468335 11.22971925 6.6875 7.9375 C6.04232422 7.28716797 5.39714844 6.63683594 4.73242188 5.96679688 C0 1.15424934 0 1.15424934 0 0 Z \",fill:\"#636262\",transform:\"translate(855,847)\"})),_path819||(_path819=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.515625 0.66 1.03125 1.32 1.5625 2 C7.64322633 9.49324098 7.64322633 9.49324098 14.625 16.125 C18.58180874 19.46596302 22.01603284 23.18187876 25.5 27 C29.55483277 31.43910294 33.61890944 35.63691395 38.2421875 39.49609375 C40.09504319 41.08131473 41.79337025 42.75893153 43.5 44.5 C45.81019441 46.851726 48.17782188 49.05039265 50.6875 51.1875 C54.88772768 54.79936894 58.7422167 58.7133395 62.63183594 62.65136719 C66.27304913 66.32042905 70.03893776 69.6856418 74 73 C75.6792977 74.65393918 77.34426194 76.32247592 79 78 C86.79187645 86.00449904 86.79187645 86.00449904 95.0625 93.5 C99.60995004 97.36104248 103.50685244 101.79988412 107.484375 106.23046875 C109.04583749 107.94953226 110.65398496 109.62874729 112.328125 111.23828125 C114 113 114 113 114 115 C114.56460938 115.23589844 115.12921875 115.47179687 115.7109375 115.71484375 C118.52071963 117.29234942 120.39619051 119.24051286 122.625 121.5625 C125.51070681 124.69042054 125.51070681 124.69042054 129 127 C129 127.66 129 128.32 129 129 C129.58652344 129.24878906 130.17304688 129.49757813 130.77734375 129.75390625 C133.31056333 131.17411196 134.70985353 132.71183746 136.5625 134.9375 C138.6269098 137.39732014 140.69358543 139.76368922 143 142 C142.34 142.66 141.68 143.32 141 144 C140.59475098 143.52328857 140.18950195 143.04657715 139.77197266 142.55541992 C135.19299508 137.23779353 130.36416362 132.24436757 125.375 127.3125 C124.63765625 126.57966797 123.9003125 125.84683594 123.140625 125.09179688 C121.71451785 123.67463484 120.28739314 122.25849587 118.85913086 120.84350586 C117.41108142 119.4076265 115.96818243 117.96655239 114.52734375 116.5234375 C112.29290073 114.29244803 110.0449076 112.07657183 107.79296875 109.86328125 C106.25770297 108.34646502 104.7225493 106.82953531 103.1875 105.3125 C102.39923828 104.54099609 101.61097656 103.76949219 100.79882812 102.97460938 C100.05439453 102.23662109 99.30996094 101.49863281 98.54296875 100.73828125 C97.86258545 100.06837158 97.18220215 99.39846191 96.48120117 98.70825195 C95 97 95 97 95 95 C94.40541992 94.7321167 93.81083984 94.4642334 93.19824219 94.18823242 C90.97760243 92.98789327 89.5756393 91.79297002 87.828125 89.98828125 C86.95414063 89.09786133 86.95414063 89.09786133 86.0625 88.18945312 C85.464375 87.57005859 84.86625 86.95066406 84.25 86.3125 C80.62550642 82.57975274 76.99187178 78.9394066 73.046875 75.54296875 C68.09727413 71.27695824 63.57259444 66.62284042 59 61.9609375 C55.08438041 57.99943175 51.06378991 54.25593281 46.84375 50.62109375 C44.26929553 48.35753739 41.8952606 45.95297773 39.5 43.5 C36.37644367 40.32403319 33.21749567 37.25151894 29.8125 34.375 C26.17026628 31.27427964 23.13081521 27.80563791 20.00390625 24.1953125 C17.50203766 21.45447401 14.78195878 19.08979779 11.953125 16.6953125 C8.8036481 13.96156655 5.91378476 10.98017479 3 8 C2.45988281 7.47921875 1.91976562 6.9584375 1.36328125 6.421875 C0 5 0 5 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#E5E4E4\",transform:\"translate(252,242)\"})),_path820||(_path820=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 28.38 1 56.76 1 86 C0.67 86 0.34 86 0 86 C-0.33 78.08 -0.66 70.16 -1 62 C-1.66 62 -2.32 62 -3 62 C-3 61.01 -3 60.02 -3 59 C-2.34 59 -1.68 59 -1 59 C-1.33 58.34 -1.66 57.68 -2 57 C-2.31255647 54.14792222 -2.51037482 51.29503146 -2.71875 48.43359375 C-2.73834922 46.05456695 -2.73834922 46.05456695 -4 45 C-5.97519761 36.60132165 -6.25679727 28.33709889 -6.125 19.75 C-6.11597656 18.61175781 -6.10695312 17.47351563 -6.09765625 16.30078125 C-6.0744028 13.53362119 -6.04172868 10.7669324 -6 8 C-4.02 8 -2.04 8 0 8 C0 5.36 0 2.72 0 0 Z \",fill:\"#7E7C7A\",transform:\"translate(221,248)\"})),_path821||(_path821=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.495 0.99 0.495 0.99 1 2 C-4.68367814 9.9094542 -11.44679469 16.60620221 -18.38818359 23.40185547 C-22.60586199 27.54339267 -26.62631359 31.7615857 -30.47875977 36.24511719 C-32.38104462 38.43956808 -34.38035058 40.51312809 -36.4375 42.5625 C-37.45650391 43.58537109 -37.45650391 43.58537109 -38.49609375 44.62890625 C-40.5314384 46.5562919 -42.5986223 48.38845852 -44.72265625 50.21484375 C-49.37413628 54.25784056 -53.68110577 58.6074045 -58 63 C-66.42502058 71.56879226 -66.42502058 71.56879226 -70.71875 75.22265625 C-76.97947205 80.60296427 -82.68792048 86.58336147 -88.5 92.4375 C-89.71591114 93.6584369 -90.93205516 94.87914192 -92.1484375 96.09960938 C-95.10164966 99.06374013 -98.05169398 102.03098958 -101 105 C-101.33 104.01 -101.66 103.02 -102 102 C-97.73490138 97.71000632 -93.46639432 93.42344263 -89.19482422 89.13989258 C-87.74501083 87.68507983 -86.29609983 86.22936717 -84.84814453 84.77270508 C-82.75535357 82.66765449 -80.65923626 80.56596381 -78.5625 78.46484375 C-77.60730469 77.50190651 -77.60730469 77.50190651 -76.6328125 76.51951599 C-73.63869138 73.52503014 -70.61370966 70.63410343 -67.38989258 67.88769531 C-61.01075187 62.37314354 -55.15284727 56.2963764 -49.19921875 50.33203125 C-47.8727705 49.00625773 -46.54617394 47.68063258 -45.21943665 46.35514832 C-42.45350237 43.59068103 -39.68936657 40.82443153 -36.92651367 38.05688477 C-33.38811839 34.51277037 -29.84522196 30.97319486 -26.30098248 27.43492603 C-23.56684012 24.70439722 -20.83508391 21.97149121 -18.10404396 19.23785973 C-16.79824998 17.93139984 -15.49171598 16.62567914 -14.18442345 15.32071877 C-12.36099538 13.49983268 -10.54080742 11.67576779 -8.72143555 9.85083008 C-8.18374542 9.31516418 -7.6460553 8.77949829 -7.09207153 8.2276001 C-4.50026964 5.6211053 -2.10782678 3.01544034 0 0 Z \",fill:\"#F1EFED\",transform:\"translate(1022,0)\"})),_path822||(_path822=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.50242162 4.50242162 4.50242162 4.50242162 6.2890625 7.93359375 C6.67320312 8.66513672 7.05734375 9.39667969 7.453125 10.15039062 C7.83984375 10.90513672 8.2265625 11.65988281 8.625 12.4375 C9.01945312 13.18837891 9.41390625 13.93925781 9.8203125 14.71289062 C15.44244517 25.51080421 15.44244517 25.51080421 15 32 C13.17466779 33.82533221 10.72190886 33.12341006 8.30078125 33.1328125 C5.51284817 32.97187918 2.75457817 32.45909636 0 32 C0 21.44 0 10.88 0 0 Z \",fill:\"#595A5A\",transform:\"translate(334,456)\"})),_path823||(_path823=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.495 0.99 0.495 2 1 C2 1.99 2 2.98 2 4 C5.96 4 9.92 4 14 4 C14 12.25 14 20.5 14 29 C10.04 29 6.08 29 2 29 C1.90912109 26.73962891 1.90912109 26.73962891 1.81640625 24.43359375 C1.7319539 22.43488809 1.64730828 20.43619059 1.5625 18.4375 C1.52318359 17.44685547 1.48386719 16.45621094 1.44335938 15.43554688 C1.21827654 10.22401363 0.85894761 5.14646762 0 0 Z \",fill:\"#545352\",transform:\"translate(759,460)\"})),_path824||(_path824=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.07345673 0.00141495 2.14691345 0.0028299 3.25289917 0.00428772 C6.6451916 0.009837 10.03741538 0.02237978 13.4296875 0.03515625 C15.74479071 0.04017781 18.05989496 0.04473957 20.375 0.04882812 C26.01825216 0.05978975 31.66146492 0.07647652 37.3046875 0.09765625 C36.9746875 1.74765625 36.6446875 3.39765625 36.3046875 5.09765625 C17.30322583 6.91971422 -1.66099331 5.85196738 -20.6953125 5.09765625 C-21.0253125 3.77765625 -21.3553125 2.45765625 -21.6953125 1.09765625 C-14.43923278 0.21811821 -7.30473987 -0.03695526 0 0 Z \",fill:\"#767676\",transform:\"translate(388.6953125,764.90234375)\"})),_path825||(_path825=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 54.45 1 108.9 1 165 C0.67 165 0.34 165 0 165 C-0.33 137.28 -0.66 109.56 -1 81 C-11.33516864 90.49388122 -11.33516864 90.49388122 -21.3125 100.3125 C-25.43423899 104.4790405 -29.57329207 108.54311719 -34.046875 112.3359375 C-36.57445208 114.48943318 -39.03463364 116.71316108 -41.5 118.9375 C-42.3559375 119.70964844 -43.211875 120.48179687 -44.09375 121.27734375 C-44.7228125 121.84582031 -45.351875 122.41429687 -46 123 C-46.66 122.34 -47.32 121.68 -48 121 C-46.16776737 119.31129226 -44.33423723 117.62402822 -42.5 115.9375 C-41.9946875 115.47150391 -41.489375 115.00550781 -40.96875 114.52539062 C-38.08226701 111.87343438 -35.16184791 109.27581154 -32.1875 106.72265625 C-27.39364371 102.54408798 -22.95873642 98.03030522 -18.5 93.5 C-16.88795587 91.86208036 -15.27340139 90.22662734 -13.65625 88.59375 C-12.95306641 87.87896484 -12.24988281 87.16417969 -11.52539062 86.42773438 C-9 84 -9 84 -6.96362305 82.77171326 C-2.97120127 80.10656941 -1.24427429 78.19420623 -0.26428223 73.40322876 C0.12751868 68.76291336 0.05713533 64.12491966 0 59.47265625 C0.00752435 57.75628321 0.01856344 56.0399223 0.03295898 54.32359314 C0.06131753 49.82359223 0.04215334 45.32501906 0.01287842 40.82507324 C-0.00855949 36.22638765 0.01523767 31.6279564 0.03515625 27.02929688 C0.06755183 18.01920962 0.04971315 9.00998235 0 0 Z \",fill:\"#CFD4CB\",transform:\"translate(483,472)\"})),_path826||(_path826=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.37478516 0.01740234 1.37478516 0.01740234 2.77734375 0.03515625 C3.69644531 0.04417969 4.61554687 0.05320312 5.5625 0.0625 C6.27277344 0.07410156 6.98304688 0.08570313 7.71484375 0.09765625 C8.90674738 8.44098169 8.80767924 16.69088647 8.71484375 25.09765625 C4.75484375 25.09765625 0.79484375 25.09765625 -3.28515625 25.09765625 C-3.31198239 21.11844531 -3.33191018 17.13941284 -3.34765625 13.16015625 C-3.35603516 12.02384766 -3.36441406 10.88753906 -3.37304688 9.71679688 C-3.37626953 8.63720703 -3.37949219 7.55761719 -3.3828125 6.4453125 C-3.38804932 5.44508057 -3.39328613 4.44484863 -3.39868164 3.41430664 C-3.24636591 0.30608305 -3.10907208 0.13286633 0 0 Z \",fill:\"#7D7E7D\",transform:\"translate(764.28515625,438.90234375)\"})),_path827||(_path827=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.06432275 3.19296825 1.03788336 5.20444941 0.87890625 8.54296875 C0.83056641 9.61611328 0.78222656 10.68925781 0.73242188 11.79492188 C0.67634766 12.91447266 0.62027344 14.03402344 0.5625 15.1875 C0.51029297 16.31865234 0.45808594 17.44980469 0.40429688 18.61523438 C0.27456371 21.41039436 0.1379346 24.20523273 0 27 C-3.63 27 -7.26 27 -11 27 C-11 18.42 -11 9.84 -11 1 C-5.555 0.505 -5.555 0.505 0 0 Z \",fill:\"#6B6B6A\",transform:\"translate(772,563)\"})),_path828||(_path828=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.495 1.485 0.495 1.485 1 3 C-4.89206265 9.78625102 -11.09058125 16.18003377 -17.50610352 22.46899414 C-20.64115305 25.5609103 -23.64404435 28.69618265 -26.51171875 32.0390625 C-29.8393356 35.89311873 -33.43060613 39.32030428 -37.1875 42.75 C-45.58090279 50.52464594 -53.67402564 58.58642599 -61.75 66.6875 C-62.36886078 67.30822388 -62.98772156 67.92894775 -63.62533569 68.56848145 C-66.46280406 71.41569022 -69.29844707 74.26469846 -72.13183594 77.1159668 C-74.74901875 79.74952939 -77.37461456 82.37461456 -80 85 C-80.79019531 85.80179687 -81.58039062 86.60359375 -82.39453125 87.4296875 C-86.2206918 91.29911642 -90.03605783 95.10354321 -94.1875 98.625 C-98.21648879 102.06317984 -101.61962337 105.93298437 -105 110 C-105 103.91655409 -99.20170671 99.07866057 -95.125 94.9375 C-92.51937475 92.39120588 -89.83924115 89.98219378 -87.0625 87.625 C-83.96424392 84.97366585 -81.29891286 82.14055434 -78.625 79.0625 C-75.66119578 75.6876202 -72.6977417 72.84412778 -69.125 70.125 C-64.23332537 66.36621321 -60.32268464 62.06559357 -56.23217773 57.46533203 C-52.89577034 53.81522666 -49.31203618 50.47626067 -45.67578125 47.12890625 C-37.75732348 39.76898897 -30.03920792 32.22541339 -22.39575195 24.58105469 C-20.28028978 22.46782376 -18.1568685 20.36279602 -16.03320312 18.2578125 C-14.66357563 16.89111274 -13.29441693 15.52394298 -11.92578125 14.15625 C-10.98983879 13.23108582 -10.98983879 13.23108582 -10.0349884 12.28723145 C-6.21118041 8.44343776 -3.04126629 4.49131849 0 0 Z \",fill:\"#E6E5E4\",transform:\"translate(772,248)\"})),_path829||(_path829=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.63 0 7.26 0 11 0 C11.71258451 3.56292256 12.12153291 6.13466164 12.09765625 9.64453125 C12.09443359 10.48564453 12.09121094 11.32675781 12.08789062 12.19335938 C12.07951172 13.05767578 12.07113281 13.92199219 12.0625 14.8125 C12.05798828 15.69615234 12.05347656 16.57980469 12.04882812 17.49023438 C12.03709866 19.66018559 12.01916495 21.83010172 12 24 C8.04 24 4.08 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#828180\",transform:\"translate(761,335)\"})),_path830||(_path830=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.93 0 13.86 0 21 0 C20.896875 3.0525 20.79375 6.105 20.6875 9.25 C20.65015747 10.68327637 20.65015747 10.68327637 20.61206055 12.14550781 C20.57894775 12.90702148 20.54583496 13.66853516 20.51171875 14.453125 C20.48553467 15.22817383 20.45935059 16.00322266 20.43237305 16.80175781 C19.90377653 19.48921295 18.76245761 20.94003791 17 23 C13.95495151 20.12875056 10.94367544 17.22438166 7.9375 14.3125 C7.07060547 13.49587891 6.20371094 12.67925781 5.31054688 11.83789062 C4.08754883 10.64389648 4.08754883 10.64389648 2.83984375 9.42578125 C2.08050537 8.69786377 1.32116699 7.96994629 0.53881836 7.2199707 C0.0310083 6.48738037 -0.47680176 5.75479004 -1 5 C-0.67 3.35 -0.34 1.7 0 0 Z \",fill:\"#747272\",transform:\"translate(107,95)\"})),_path831||(_path831=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 7.59 0 15.18 0 23 C-7.59 23 -15.18 23 -23 23 C-18.92615616 17.56820822 -15.10107567 12.80814932 -10.3125 8.125 C-9.74466797 7.5578125 -9.17683594 6.990625 -8.59179688 6.40625 C-2.11723378 0 -2.11723378 0 0 0 Z \",fill:\"#918F8D\",transform:\"translate(157,868)\"})),_path832||(_path832=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C0.67 10.23 0.34 20.46 0 31 C-3.63 31 -7.26 31 -11 31 C-11.04898438 30.00097656 -11.09796875 29.00195312 -11.1484375 27.97265625 C-11.22320313 26.68230469 -11.29796875 25.39195312 -11.375 24.0625 C-11.44460938 22.77472656 -11.51421875 21.48695313 -11.5859375 20.16015625 C-11.72257813 19.11730469 -11.85921875 18.07445312 -12 17 C-12.66 16.67 -13.32 16.34 -14 16 C-13.24074219 15.26394531 -12.48148438 14.52789062 -11.69921875 13.76953125 C-10.69504479 12.7841269 -9.69115346 11.79843448 -8.6875 10.8125 C-8.18798828 10.32974609 -7.68847656 9.84699219 -7.17382812 9.34960938 C-4.22722699 6.44203607 -2.03107887 3.59546972 0 0 Z \",fill:\"#737270\",transform:\"translate(773,249)\"})),_path833||(_path833=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.47949219 1.25146484 1.47949219 1.25146484 3 3 C3.24392954 5.95619367 3.32779815 8.678395 3.25 11.625 C3.24484375 12.41390625 3.2396875 13.2028125 3.234375 14.015625 C3.15423563 19.84576437 3.15423563 19.84576437 2 21 C0.21928754 21.08726223 -1.5648314 21.10699041 -3.34765625 21.09765625 C-4.42724609 21.09443359 -5.50683594 21.09121094 -6.61914062 21.08789062 C-7.75544922 21.07951172 -8.89175781 21.07113281 -10.0625 21.0625 C-11.20267578 21.05798828 -12.34285156 21.05347656 -13.51757812 21.04882812 C-16.34510351 21.03699747 -19.1725264 21.0205141 -22 21 C-21.24847656 20.25105469 -20.49695313 19.50210938 -19.72265625 18.73046875 C-18.17794427 17.18132431 -16.63935448 15.62585839 -15.12109375 14.05078125 C-14.56550781 13.47714844 -14.00992188 12.90351562 -13.4375 12.3125 C-12.87933594 11.73113281 -12.32117188 11.14976563 -11.74609375 10.55078125 C-10 9 -10 9 -7.98828125 8.01953125 C-5.63146922 6.81102842 -4.41589294 5.41950498 -2.75 3.375 C-2.22921875 2.74335938 -1.7084375 2.11171875 -1.171875 1.4609375 C-0.78515625 0.97882812 -0.3984375 0.49671875 0 0 Z \",fill:\"#8C8682\",transform:\"translate(1001,27)\"})),_path834||(_path834=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.93 0 13.86 0 21 0 C21.33 7.92 21.66 15.84 22 24 C17.92178748 21.96089374 16.16483987 20.24150397 13.1875 16.875 C12.31609375 15.89273438 11.4446875 14.91046875 10.546875 13.8984375 C9.70640625 12.94195313 8.8659375 11.98546875 8 11 C7.28328125 10.20851563 6.5665625 9.41703125 5.828125 8.6015625 C5.20421875 7.90804687 4.5803125 7.21453125 3.9375 6.5 C3.38964844 5.8915625 2.84179688 5.283125 2.27734375 4.65625 C1 3 1 3 0 0 Z \",fill:\"#626160\",transform:\"translate(678,668)\"})),_path835||(_path835=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.28915719 1.93373579 2.55665423 3.88217595 3.796875 5.84765625 C6.04920225 9.07040109 8.45043062 11.68192386 11.25 14.4375 C11.73525146 14.91630615 12.22050293 15.3951123 12.72045898 15.88842773 C16.02848469 19.12654634 19.45492259 22.18551771 22.96875 25.1953125 C30.40748098 31.80433887 37.17441634 39.11762625 43.48046875 46.8046875 C46.66330607 50.64457167 50.06239637 53.88255981 53.85546875 57.1171875 C58.94722851 61.58754852 63.7426395 66.4037052 68.0625 71.625 C70.62634528 74.68910777 73.4576367 77.17893423 76.5 79.7578125 C82.24355194 84.90906064 87.58058003 90.51207613 93 96 C90 96 90 96 88.34375 94.56640625 C87.7353125 93.90511719 87.126875 93.24382812 86.5 92.5625 C83.37772262 89.30869811 80.15568313 86.43054283 76.625 83.625 C69.78649149 78.12198969 63.62492301 72.07909818 57.921875 65.41015625 C53.06867265 59.82766541 47.76218583 54.69164264 42.5 49.5 C36.63799148 43.7165757 30.81803311 37.95895548 25.46240234 31.69384766 C20.67699711 26.15108613 15.31749951 21.06031029 9.75 16.3125 C5.341462 12.52992074 0.86724573 8.6017372 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#D0CECD\",transform:\"translate(651,640)\"})),_path836||(_path836=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.71993164 0.00773438 1.71993164 0.00773438 3.47460938 0.015625 C5.26415039 0.0465625 5.26415039 0.0465625 7.08984375 0.078125 C8.28673828 0.08328125 9.48363281 0.0884375 10.71679688 0.09375 C19.56317552 0.17340226 19.56317552 0.17340226 23.02734375 1.328125 C23.35734375 0.998125 23.68734375 0.668125 24.02734375 0.328125 C29.86840335 -0.04273593 29.86840335 -0.04273593 32.02734375 0.328125 C32.68734375 1.318125 33.34734375 2.308125 34.02734375 3.328125 C32.44534744 3.97722654 30.86168651 4.62227194 29.27734375 5.265625 C28.395625 5.62527344 27.51390625 5.98492188 26.60546875 6.35546875 C16.77551429 10.06404248 4.55981121 9.90777116 -5.09765625 5.828125 C-6.73900269 5.0274682 -8.37183338 4.20700814 -9.97265625 3.328125 C-6.65285214 0.30876242 -4.43491389 -0.03950319 0 0 Z \",fill:\"#6D6D6B\",transform:\"translate(643.97265625,589.671875)\"})),_path837||(_path837=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.80711426 0.00249756 1.61422852 0.00499512 2.44580078 0.00756836 C3.98469971 0.02122437 3.98469971 0.02122437 5.5546875 0.03515625 C10.4428125 0.06609375 10.4428125 0.06609375 15.4296875 0.09765625 C15.4296875 7.35765625 15.4296875 14.61765625 15.4296875 22.09765625 C11.66889674 20.21726087 10.36808938 19.14624532 7.8046875 16.03515625 C5.47483198 13.11889913 5.47483198 13.11889913 2.4296875 11.09765625 C2.4296875 10.43765625 2.4296875 9.77765625 2.4296875 9.09765625 C1.8728125 8.89140625 1.3159375 8.68515625 0.7421875 8.47265625 C-2.49532552 6.54764851 -4.25262391 4.05914723 -6.5703125 1.09765625 C-4.16971433 -0.10264283 -2.67670601 -0.01694118 0 0 Z \",fill:\"#7F7E7E\",transform:\"translate(378.5703125,359.90234375)\"})),_path838||(_path838=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.01289469 2.95632251 8.82565044 6.65077469 12.875 10.81640625 C14.56654741 12.5545956 16.29168989 14.21989624 18.0625 15.875 C20 18 20 18 20 21 C13.30324864 22.03026944 6.7685324 22.10152799 0 22 C-1.90417311 5.71251932 -1.90417311 5.71251932 0 0 Z \",fill:\"#848280\",transform:\"translate(914,910)\"})),_path839||(_path839=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.99195261 2.19822958 19.68626682 5.78664451 29 10 C29 11.32 29 12.64 29 14 C25.03069011 14.02465881 21.06140966 14.04284023 17.09204102 14.05493164 C15.74079614 14.05997057 14.38955674 14.06680177 13.03833008 14.07543945 C11.09979566 14.08752419 9.161222 14.09269828 7.22265625 14.09765625 C5.47094116 14.10551147 5.47094116 14.10551147 3.68383789 14.11352539 C1 14 1 14 0 13 C-0.07258946 10.81360547 -0.08373783 8.62499611 -0.0625 6.4375 C-0.05347656 5.23996094 -0.04445313 4.04242187 -0.03515625 2.80859375 C-0.02355469 1.88175781 -0.01195312 0.95492187 0 0 Z \",fill:\"#686868\",transform:\"translate(606,629)\"})),_path840||(_path840=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.61 0 11.22 0 17 0 C17 1.32 17 2.64 17 4 C9.57142857 4.14285714 9.57142857 4.14285714 6 3 C6.03122943 4.96756452 6.03122943 4.96756452 7 7 C8.97746603 7.73080266 10.98072489 8.39421747 13 9 C15.24319621 10.68108381 15.91781167 11.55647921 16.43359375 14.33984375 C16.44399112 21.25409492 16.44399112 21.25409492 14.4375 24.625 C11.05297673 26.53421825 8.83294661 26.47071274 5 26 C2.0625 25 2.0625 25 0 23 C-0.43015 20.20402501 -0.23400793 17.85489675 0 15 C2.97 15.495 2.97 15.495 6 16 C6 18.31 6 20.62 6 23 C7.97536745 22.65213292 7.97536745 22.65213292 10 22 C11.4783226 19.04335481 11.06032783 16.25770263 11 13 C7.37 12.01 3.74 11.02 0 10 C0 6.7 0 3.4 0 0 Z \",fill:\"#F4F4F4\",transform:\"translate(12,496)\"})),_path841||(_path841=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-4.37625212 5.23380697 -8.97545497 10.12876938 -13.8125 14.9375 C-14.49248047 15.62134766 -15.17246094 16.30519531 -15.87304688 17.00976562 C-16.51951172 17.65494141 -17.16597656 18.30011719 -17.83203125 18.96484375 C-18.41702393 19.5487085 -19.0020166 20.13257324 -19.60473633 20.73413086 C-21 22 -21 22 -22 22 C-22 14.74 -22 7.48 -22 0 C-6.86607143 -1.20535714 -6.86607143 -1.20535714 0 0 Z \",fill:\"#888787\",transform:\"translate(61,959)\"})),_path842||(_path842=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 1.65 3.3 3.3 5 5 C5.99 5.66 6.98 6.32 8 7 C7.79431396 7.82830322 7.79431396 7.82830322 7.58447266 8.67333984 C5.85800141 16.31030887 5.56798025 23.81734072 5.375 31.625 C5.33632812 32.91535156 5.29765625 34.20570313 5.2578125 35.53515625 C5.16433658 38.6899687 5.07857687 41.84478727 5 45 C3.02 45 1.04 45 -1 45 C-1.33 46.32 -1.66 47.64 -2 49 C-2 47.68 -2 46.36 -2 45 C-5.3 45 -8.6 45 -12 45 C-12 44.67 -12 44.34 -12 44 C-8.37 44 -4.74 44 -1 44 C-1 36.41 -1 28.82 -1 21 C-0.34 21 0.32 21 1 21 C0.67 14.07 0.34 7.14 0 0 Z \",fill:\"#6F6F6D\",transform:\"translate(216,211)\"})),_path843||(_path843=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 0 3.96 0 6 0 C6 40.92 6 81.84 6 124 C5.67 124 5.34 124 5 124 C4.84374609 115.07880315 4.69565531 106.15751415 4.5570364 97.23602581 C4.49238277 93.09013813 4.42526732 88.94432571 4.35180664 84.79858398 C3.99978895 64.82140269 3.9518197 44.96207627 5 25 C3.35 24.67 1.7 24.34 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#B1B4B2\",transform:\"translate(216,616)\"})),_path844||(_path844=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C30.03 0 60.06 0 91 0 C91 0.33 91 0.66 91 1 C81.1 1 71.2 1 61 1 C61 2.65 61 4.3 61 6 C56.76419747 6.07407906 52.52873659 6.12856696 48.29248047 6.16479492 C46.85100742 6.17989483 45.40958041 6.20037658 43.96826172 6.22631836 C41.89799657 6.2626513 39.82833793 6.27971329 37.7578125 6.29296875 C36.5114502 6.3086792 35.26508789 6.32438965 33.98095703 6.34057617 C32.99724121 6.22818604 32.01352539 6.1157959 31 6 C30.34 5.01 29.68 4.02 29 3 C27.16780354 1.16780354 24.24286259 1.76098672 21.77734375 1.68359375 C19.88725586 1.62075195 19.88725586 1.62075195 17.95898438 1.55664062 C16.61849264 1.51682404 15.2779978 1.47711186 13.9375 1.4375 C12.59308477 1.39431958 11.2486834 1.35070544 9.90429688 1.30664062 C6.6029766 1.20014642 3.30157764 1.0981354 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#888887\",transform:\"translate(607,765)\"})),_path845||(_path845=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.27 0 12.54 0 19 0 C19 4.18883702 16.67400903 5.9308428 13.9375 8.8125 C13.43887451 9.34713867 12.94024902 9.88177734 12.42651367 10.43261719 C8.83096005 14.24233696 5.0942029 17.72463768 1 21 C0 20 0 20 -0.11352539 18.05053711 C-0.10567017 16.8015564 -0.10567017 16.8015564 -0.09765625 15.52734375 C-0.09443359 14.62822266 -0.09121094 13.72910156 -0.08789062 12.80273438 C-0.07951172 11.85720703 -0.07113281 10.91167969 -0.0625 9.9375 C-0.05798828 8.98810547 -0.05347656 8.03871094 -0.04882812 7.06054688 C-0.03700128 4.70700469 -0.01906521 2.35349468 0 0 Z \",fill:\"#757472\",transform:\"translate(335,668)\"})),_path846||(_path846=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.92 0 15.84 0 24 0 C24.33 7.59 24.66 15.18 25 23 C20 18 20 18 17.60546875 15.015625 C14.76675454 11.73003674 11.79332392 9.30444383 8.3125 6.75 C2.16484716 2.16484716 2.16484716 2.16484716 0 0 Z \",fill:\"#807E7D\",transform:\"translate(706,490)\"})),_path847||(_path847=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.92 0 15.84 0 24 0 C24 0.33 24 0.66 24 1 C18.72 1 13.44 1 8 1 C8 9.58 8 18.16 8 27 C5.36 27 2.72 27 0 27 C0 18.09 0 9.18 0 0 Z \",fill:\"#7F8081\",transform:\"translate(0,615)\"})),_path848||(_path848=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0 2.64 0 4 0 C4.08636719 0.74765625 4.17273438 1.4953125 4.26171875 2.265625 C4.40222656 3.25046875 4.54273438 4.2353125 4.6875 5.25 C4.81511719 6.22453125 4.94273437 7.1990625 5.07421875 8.203125 C6.31070644 11.9386743 7.59517119 13.04403451 11 15 C13.77307339 15.58350603 16.48469568 15.6944042 19.3125 15.75 C20.42334961 15.79447266 20.42334961 15.79447266 21.55664062 15.83984375 C23.37052046 15.91005845 25.18526278 15.95735048 27 16 C27.33 17.65 27.66 19.3 28 21 C18.94911849 21.94385356 10.08882628 22.0841558 1 22 C0.67 14.74 0.34 7.48 0 0 Z \",fill:\"#7F8280\",transform:\"translate(216,748)\"})),_path849||(_path849=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.5 1.3125 2.5 1.3125 4 3 C4 3.99 4 4.98 4 6 C3.484375 5.835 2.96875 5.67 2.4375 5.5 C-0.73363876 4.84951 -3.77218334 4.9379266 -7 5 C-7.33 5.99 -7.66 6.98 -8 8 C-7.31292969 8.12117187 -6.62585937 8.24234375 -5.91796875 8.3671875 C-5.01691406 8.53476562 -4.11585937 8.70234375 -3.1875 8.875 C-2.29417969 9.03742187 -1.40085937 9.19984375 -0.48046875 9.3671875 C2 10 2 10 5 12 C5.5 14.8125 5.5 14.8125 5 18 C2.42089807 21.51695718 0.68229237 22.79287553 -3.5 24.0625 C-7 24 -7 24 -9.9375 22.25 C-12 20 -12 20 -12 17 C-8.97580475 17.58803797 -5.98241547 18.22678118 -3 19 C-2.67 17.35 -2.34 15.7 -2 14 C-2.62648438 13.80664062 -3.25296875 13.61328125 -3.8984375 13.4140625 C-4.71570312 13.15367187 -5.53296875 12.89328125 -6.375 12.625 C-7.59316406 12.24214844 -7.59316406 12.24214844 -8.8359375 11.8515625 C-11 11 -11 11 -13 9 C-12.85941192 5.69618018 -12.5776943 3.69323316 -10.4375 1.125 C-6.92908439 -0.49426874 -3.80008379 -0.58402927 0 0 Z \",fill:\"#F1F2F4\",transform:\"translate(57,912)\"})),_path850||(_path850=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.53133073 1.76566537 5.21342643 2.97493331 7.890625 5.6953125 C8.95410156 6.76845703 8.95410156 6.76845703 10.0390625 7.86328125 C11.13347656 8.98283203 11.13347656 8.98283203 12.25 10.125 C12.99507812 10.87910156 13.74015625 11.63320312 14.5078125 12.41015625 C16.3431342 14.26900772 18.1736191 16.13237005 20 18 C19.67 18.66 19.34 19.32 19 20 C12.73 20 6.46 20 0 20 C0 13.4 0 6.8 0 0 Z \",fill:\"#8D8C8D\",transform:\"translate(98,96)\"})),_path851||(_path851=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.1796875 -0.29296875 9.1796875 -0.29296875 12 0 C14 3 14 3 14 16 C4.1 16 -5.8 16 -16 16 C-16 15.67 -16 15.34 -16 15 C-10.72 15 -5.44 15 0 15 C0 10.05 0 5.1 0 0 Z \",fill:\"#7D7E7D\",transform:\"translate(760,721)\"})),_path852||(_path852=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 3.96 1 7.92 1 12 C8.92 12.33 16.84 12.66 25 13 C25 13.33 25 13.66 25 14 C17.08 14 9.16 14 1 14 C1 19.61 1 25.22 1 31 C-3.3157814 27.43478928 -7.42162922 23.71412126 -11.4375 19.8125 C-12.30246094 18.97332031 -13.16742188 18.13414062 -14.05859375 17.26953125 C-16 15 -16 15 -16 12 C-10.72 12 -5.44 12 0 12 C0 8.04 0 4.08 0 0 Z \",fill:\"#6D6A68\",transform:\"translate(215,176)\"})),_path853||(_path853=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.61 0 11.22 0 17 0 C17 0.66 17 1.32 17 2 C26.24 2 35.48 2 45 2 C45 2.33 45 2.66 45 3 C35.43 3 25.86 3 16 3 C16 8.61 16 14.22 16 20 C2.21398499 8.46476295 2.21398499 8.46476295 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#686666\",transform:\"translate(652,640)\"})),_path854||(_path854=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C9 1 9 1 9.11352539 3.31665039 C9.10828857 4.31688232 9.10305176 5.31711426 9.09765625 6.34765625 C9.09443359 7.42724609 9.09121094 8.50683594 9.08789062 9.61914062 C9.07951172 10.75544922 9.07113281 11.89175781 9.0625 13.0625 C9.05798828 14.20267578 9.05347656 15.34285156 9.04882812 16.51757812 C9.03699747 19.34510351 9.0205141 22.1725264 9 25 C6.03 25 3.06 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#656566\",transform:\"translate(0,981)\"})),_path855||(_path855=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8.02886338 4.47915328 8.04675187 8.95828291 8.0625 13.4375 C8.07087891 14.71689453 8.07925781 15.99628906 8.08789062 17.31445312 C8.09111328 18.52939453 8.09433594 19.74433594 8.09765625 20.99609375 C8.10289307 22.12200928 8.10812988 23.2479248 8.11352539 24.40795898 C8 27 8 27 7 28 C4.69 27.67 2.38 27.34 0 27 C0 18.09 0 9.18 0 0 Z \",fill:\"#7F8082\",transform:\"translate(0,512)\"})),_path856||(_path856=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.90105469 0.01804687 1.80210938 0.03609375 2.73046875 0.0546875 C3.41753906 0.07789063 4.10460938 0.10109375 4.8125 0.125 C5.4725 1.775 6.1325 3.425 6.8125 5.125 C3.5125 4.795 0.2125 4.465 -3.1875 4.125 C-3.1875 5.445 -3.1875 6.765 -3.1875 8.125 C-2.56101562 8.24617187 -1.93453125 8.36734375 -1.2890625 8.4921875 C-0.06316406 8.74355469 -0.06316406 8.74355469 1.1875 9 C1.99960937 9.16242187 2.81171875 9.32484375 3.6484375 9.4921875 C5.8125 10.125 5.8125 10.125 7.8125 12.125 C8.29642816 15.75446124 8.01948779 17.71102442 6.375 21 C3.11065542 23.70701746 1.14143787 23.71827725 -2.9921875 23.5 C-5.87492689 23.00757477 -7.88778066 21.90542787 -10.1875 20.125 C-9.8125 18.1875 -9.8125 18.1875 -9.1875 16.125 C-8.5275 15.795 -7.8675 15.465 -7.1875 15.125 C-6.878125 16.0840625 -6.878125 16.0840625 -6.5625 17.0625 C-5.29211791 19.47425077 -5.29211791 19.47425077 -2.0625 19.875 C-1.11375 19.9575 -0.165 20.04 0.8125 20.125 C1.1425 17.815 1.4725 15.505 1.8125 13.125 C0.925625 13.0425 0.03875 12.96 -0.875 12.875 C-4.60005464 12.0315914 -6.39678838 10.66947236 -9.1875 8.125 C-8.875 5.25 -8.875 5.25 -8.1875 2.125 C-4.87379 -0.08414 -3.8428979 -0.09981553 0 0 Z \",fill:\"#F0F1F3\",transform:\"translate(33.1875,911.875)\"})),_path857||(_path857=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.20849609 0.00322266 2.41699219 0.00644531 3.66210938 0.00976562 C4.92474609 0.01814453 6.18738281 0.02652344 7.48828125 0.03515625 C9.39963867 0.04192383 9.39963867 0.04192383 11.34960938 0.04882812 C14.50004689 0.06062752 17.65039074 0.07709028 20.80078125 0.09765625 C20.80078125 2.40765625 20.80078125 4.71765625 20.80078125 7.09765625 C6.61078125 7.09765625 -7.57921875 7.09765625 -22.19921875 7.09765625 C-22.19921875 6.76765625 -22.19921875 6.43765625 -22.19921875 6.09765625 C-17.90921875 6.09765625 -13.61921875 6.09765625 -9.19921875 6.09765625 C-9.19921875 4.44765625 -9.19921875 2.79765625 -9.19921875 1.09765625 C-5.90187229 -0.00145924 -3.4696313 -0.01628935 0 0 Z \",fill:\"#727271\",transform:\"translate(494.19921875,764.90234375)\"})),_path858||(_path858=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8 8.25 8 16.5 8 25 C13.28 25 18.56 25 24 25 C24 25.33 24 25.66 24 26 C20.75001888 26.02909763 17.50007143 26.04683161 14.25 26.0625 C13.32960938 26.07087891 12.40921875 26.07925781 11.4609375 26.08789062 C10.57148438 26.09111328 9.68203125 26.09433594 8.765625 26.09765625 C7.94868164 26.10289307 7.13173828 26.10812988 6.29003906 26.11352539 C4 26 4 26 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#828282\",transform:\"translate(0,721)\"})),_path859||(_path859=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8 8.91 8 17.82 8 27 C5.36 27 2.72 27 0 27 C0 18.09 0 9.18 0 0 Z \",fill:\"#5C5B5D\",transform:\"translate(0,642)\"})),_path860||(_path860=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.05127928 3.38391578 1.04087598 6.33203425 0.87890625 9.859375 C0.83056641 10.97441406 0.78222656 12.08945312 0.73242188 13.23828125 C0.67634766 14.39714844 0.62027344 15.55601562 0.5625 16.75 C0.51029297 17.92433594 0.45808594 19.09867188 0.40429688 20.30859375 C0.27473776 23.20600664 0.13977553 26.10306493 0 29 C-2.64 29 -5.28 29 -8 29 C-8 20.42 -8 11.84 -8 3 C-5.36 3 -2.72 3 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#585859\",transform:\"translate(8,692)\"})),_path861||(_path861=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 6.93 1 13.86 1 21 C-4.61 21 -10.22 21 -16 21 C-16.33 20.01 -16.66 19.02 -17 18 C-16.35933594 17.3709375 -15.71867188 16.741875 -15.05859375 16.09375 C-10.26208073 11.34727512 -5.61843469 6.5668893 -1.27734375 1.3984375 C-0.85582031 0.93695313 -0.43429687 0.47546875 0 0 Z \",fill:\"#8E8C8A\",transform:\"translate(882,142)\"})),_path862||(_path862=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8 8.58 8 17.16 8 26 C5.36 26 2.72 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#808183\",transform:\"translate(0,669)\"})),_path863||(_path863=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8 8.58 8 17.16 8 26 C5.36 26 2.72 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#838383\",transform:\"translate(0,308)\"})),_path864||(_path864=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C11.22 0 22.44 0 34 0 C33.01 0.33 32.02 0.66 31 1 C31 2.65 31 4.3 31 6 C20.64297197 7.02472362 10.39671302 7.1050173 0 7 C0 4.69 0 2.38 0 0 Z \",fill:\"#8D8D8C\",transform:\"translate(454,765)\"})),_path865||(_path865=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8 8.58 8 17.16 8 26 C5.36 25.67 2.72 25.34 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#828283\",transform:\"translate(0,360)\"})),_path866||(_path866=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 6.93 1 13.86 1 21 C-5.79307008 22.23510365 -12.10151834 23.26532622 -19 23 C-15.95958234 19.36633011 -12.93346627 15.89023407 -9.5 12.625 C-6.12612367 9.3335962 -3.65409928 5.71070981 -1.1640625 1.72265625 C-0.58785156 0.86994141 -0.58785156 0.86994141 0 0 Z \",fill:\"#84837F\",transform:\"translate(1023,0)\"})),_path867||(_path867=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0.33 5.28 0.66 8 1 C8 9.25 8 17.5 8 26 C5.36 26 2.72 26 0 26 C0 17.42 0 8.84 0 0 Z \",fill:\"#555556\",transform:\"translate(0,589)\"})),_path868||(_path868=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.1640625 0.36328125 2.1640625 0.36328125 4.7265625 2.23828125 C6.1640625 4.36328125 6.1640625 4.36328125 6.1640625 6.36328125 C2.2890625 5.48828125 2.2890625 5.48828125 1.1640625 4.36328125 C-1.16411714 3.99567394 -3.497776 3.66086544 -5.8359375 3.36328125 C-5.72659854 5.79649614 -5.72659854 5.79649614 -4.8359375 8.36328125 C-2.57558391 9.83141099 -2.57558391 9.83141099 0.1640625 10.80078125 C2.90625 12.02734375 2.90625 12.02734375 5.1640625 13.36328125 C6.2890625 16.67578125 6.2890625 16.67578125 6.1640625 19.36328125 C3.11424269 21.68695348 0.93629717 23.25296201 -2.8984375 23.80078125 C-6.18242727 23.31167639 -8.14172244 22.26508012 -10.8359375 20.36328125 C-10.5059375 19.04328125 -10.1759375 17.72328125 -9.8359375 16.36328125 C-6.5359375 17.02328125 -3.2359375 17.68328125 0.1640625 18.36328125 C0.1640625 17.04328125 0.1640625 15.72328125 0.1640625 14.36328125 C-0.9290625 14.09515625 -2.0221875 13.82703125 -3.1484375 13.55078125 C-8.30094879 11.89149795 -8.30094879 11.89149795 -9.8359375 9.36328125 C-10.47886662 4.21984826 -10.47886662 4.21984826 -8.58984375 1.703125 C-5.81606603 -0.41581879 -3.38067837 -0.10461383 0 0 Z \",fill:\"#F1F2F5\",transform:\"translate(34.8359375,18.63671875)\"})),_path869||(_path869=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8 8.25 8 16.5 8 25 C5.36 25 2.72 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#848486\",transform:\"translate(0,564)\"})),_path870||(_path870=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.31 0.33 4.62 0.66 7 1 C8.10102642 9.35600408 8.10094304 17.58807963 8 26 C4.04 26.495 4.04 26.495 0 27 C0 18.09 0 9.18 0 0 Z \",fill:\"#565656\",transform:\"translate(0,281)\"})),_path871||(_path871=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.27 0 12.54 0 19 0 C19.96186931 3.84747723 20.30659027 7.30167852 20.5625 11.25 C20.68818359 13.14492188 20.68818359 13.14492188 20.81640625 15.078125 C20.87699219 16.04234375 20.93757812 17.0065625 21 18 C14.70793589 16.67690241 11.40846685 12.90774592 7.125 8.4375 C6.43664062 7.73947266 5.74828125 7.04144531 5.0390625 6.32226562 C0 1.16822452 0 1.16822452 0 0 Z \",fill:\"#716F70\",transform:\"translate(802,795)\"})),_path872||(_path872=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0.33 5.28 0.66 8 1 C8 8.92 8 16.84 8 25 C5.36 25 2.72 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#5B5B5B\",transform:\"translate(0,746)\"})),_path873||(_path873=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.99 0.66 1.98 1 3 C2.32 2.67 3.64 2.34 5 2 C4.8453125 3.3921875 4.8453125 3.3921875 4.6875 4.8125 C4.63271237 8.11727877 4.63271237 8.11727877 7.125 9.75 C10.04466848 11.01942108 12.95300529 12.07881555 16 13 C15.67 14.65 15.34 16.3 15 18 C13.1875 18.625 13.1875 18.625 11 19 C10.01 18.34 9.02 17.68 8 17 C5.48250172 16.85231087 5.48250172 16.85231087 3 18 C0.66585353 20.95849927 0.66585353 20.95849927 -1 24 C-1.33 23.34 -1.66 22.68 -2 22 C-1.690625 21.2575 -1.38125 20.515 -1.0625 19.75 C0.13278785 16.65631379 0.15290981 14.28756092 0 11 C-1.093125 10.525625 -2.18625 10.05125 -3.3125 9.5625 C-3.92738281 9.29566406 -4.54226562 9.02882813 -5.17578125 8.75390625 C-6.75711021 8.10038058 -8.37675406 7.54108198 -10 7 C-10 5.68 -10 4.36 -10 3 C-2.25 2.875 -2.25 2.875 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#4F4F53\",transform:\"translate(40,913)\"})),_path874||(_path874=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C8.19760374 1.63952075 15.53958805 5.59813772 21 12 C19 14 19 14 17.02880859 14.22705078 C16.24328613 14.21657715 15.45776367 14.20610352 14.6484375 14.1953125 C13.79765625 14.18886719 12.946875 14.18242188 12.0703125 14.17578125 C10.73613281 14.15064453 10.73613281 14.15064453 9.375 14.125 C8.02921875 14.11146484 8.02921875 14.11146484 6.65625 14.09765625 C4.43738678 14.07405132 2.2186603 14.03817962 0 14 C0 9.38 0 4.76 0 0 Z \",fill:\"#636363\",transform:\"translate(668,524)\"})),_path875||(_path875=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8.0271045 3.04172719 8.04688964 6.08320997 8.0625 9.125 C8.07087891 9.9809375 8.07925781 10.836875 8.08789062 11.71875 C8.10538306 16.26678411 7.93192358 20.52383164 7 25 C4.69 25 2.38 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#7B7B7C\",transform:\"translate(0,413)\"})),_path876||(_path876=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8.09744014 8.72630608 8.16711095 17.33003296 7 26 C4.69 25.67 2.38 25.34 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#818181\",transform:\"translate(0,256)\"})),_path877||(_path877=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8 7.92 8 15.84 8 24 C5.36 24 2.72 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#7C7C7E\",transform:\"translate(0,464)\"})),_path878||(_path878=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8 7.92 8 15.84 8 24 C5.36 24 2.72 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#595657\",transform:\"translate(0,164)\"})),_path879||(_path879=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.46648033 -0.00502388 6.91590492 -0.22284859 10.375 -0.4375 C11.76525391 -0.51581055 11.76525391 -0.51581055 13.18359375 -0.59570312 C15.45613901 -0.72455878 17.72815099 -0.85948311 20 -1 C20 1.31 20 3.62 20 6 C20.66 6 21.32 6 22 6 C22.144375 6.61875 22.28875 7.2375 22.4375 7.875 C22.93152225 10.03258322 22.93152225 10.03258322 24 12 C12.24819648 9.65836588 1.80642328 6.17777482 -9 1 C-5.17465657 -1.55022895 -4.42546309 -0.76421654 0 0 Z \",fill:\"#767371\",transform:\"translate(646,464)\"})),_path880||(_path880=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.31 0 4.62 0 7 0 C8.19190363 8.34332544 8.09283549 16.59323022 8 25 C5.36 25 2.72 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#575556\",transform:\"translate(0,335)\"})),_path881||(_path881=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6 0 6 0 8 1 C8 8.59 8 16.18 8 24 C5.36 24 2.72 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#5B5B5B\",transform:\"translate(0,823)\"})),_path882||(_path882=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 0 2.64 0 4 0 C4 8.58 4 17.16 4 26 C2.02 26 0.04 26 -2 26 C-2 33.59 -2 41.18 -2 49 C-2.33 49 -2.66 49 -3 49 C-3 33.16 -3 17.32 -3 1 C-2.01 1 -1.02 1 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#6D6E6D\",transform:\"translate(218,463)\"})),_path883||(_path883=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 3.63 0 7.26 0 11 C-9.57 11 -19.14 11 -29 11 C-29 10.34 -29 9.68 -29 9 C-29.66 8.67 -30.32 8.34 -31 8 C-29.11667969 7.63648438 -29.11667969 7.63648438 -27.1953125 7.265625 C-15.18380138 4.92137232 -15.18380138 4.92137232 -3.71484375 0.734375 C-2 0 -2 0 0 0 Z \",fill:\"#7C7C7C\",transform:\"translate(698,631)\"})),_path884||(_path884=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-2.39151841 2.15686003 -4.78457622 4.31197307 -7.1796875 6.46484375 C-8.99943437 8.10059959 -10.81728593 9.73846755 -12.6328125 11.37890625 C-13.43460938 12.09949219 -14.23640625 12.82007813 -15.0625 13.5625 C-15.79597656 14.22378906 -16.52945313 14.88507813 -17.28515625 15.56640625 C-19 17 -19 17 -20 17 C-20 11.06 -20 5.12 -20 -1 C-17.256875 -1.20625 -14.51375 -1.4125 -11.6875 -1.625 C-10.82729248 -1.69541504 -9.96708496 -1.76583008 -9.08081055 -1.83837891 C-8.39801025 -1.88397949 -7.71520996 -1.92958008 -7.01171875 -1.9765625 C-6.31522217 -2.02893066 -5.61872559 -2.08129883 -4.90112305 -2.13525391 C-3 -2 -3 -2 0 0 Z \",fill:\"#6C6C6B\",transform:\"translate(565,466)\"})),_path885||(_path885=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.350474 3.70730813 10.30091041 7.56345924 14 13 C14 13.66 14 14.32 14 15 C15.2065625 15.433125 15.2065625 15.433125 16.4375 15.875 C19 17 19 17 20 19 C19.72057545 20.67654729 19.39171753 22.34608154 19 24 C18.01 23.34 17.02 22.68 16 22 C12.80193335 21.5396236 12.80193335 21.5396236 9.3125 21.375 C8.13300781 21.30023437 6.95351562 21.22546875 5.73828125 21.1484375 C4.83464844 21.09945313 3.93101563 21.05046875 3 21 C3.03480469 20.04738281 3.06960938 19.09476563 3.10546875 18.11328125 C3.13253906 16.85902344 3.15960938 15.60476562 3.1875 14.3125 C3.22230469 13.07113281 3.25710938 11.82976563 3.29296875 10.55078125 C2.981976 6.78154909 2.10477202 5.06600649 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#7D7778\",transform:\"translate(6,3)\"})),_path886||(_path886=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8 7.92 8 15.84 8 24 C5.69 24 3.38 24 1 24 C0.09516363 18.63510405 -0.12303662 13.49682543 -0.0625 8.0625 C-0.05798828 7.28326172 -0.05347656 6.50402344 -0.04882812 5.70117188 C-0.03716908 3.80074732 -0.01923877 1.90036294 0 0 Z \",fill:\"#72716F\",transform:\"translate(214,539)\"})),_path887||(_path887=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8 7.59 8 15.18 8 23 C5.36 23 2.72 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#878787\",transform:\"translate(0,141)\"})),_path888||(_path888=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8 7.59 8 15.18 8 23 C5.36 23 2.72 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#565658\",transform:\"translate(0,117)\"})),_path889||(_path889=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8 7.59 8 15.18 8 23 C5.36 23 2.72 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#575757\",transform:\"translate(0,72)\"})),_path890||(_path890=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.45598077 3.68397116 2.2271532 6.44723808 2.125 10.6875 C2.08375 13.100625 2.0425 15.51375 2 18 C-3.61 18 -9.22 18 -15 18 C-15 15 -15 15 -13.62304688 13.2824707 C-12.99462891 12.66976318 -12.36621094 12.05705566 -11.71875 11.42578125 C-11.04199219 10.75869141 -10.36523438 10.09160156 -9.66796875 9.40429688 C-8.95253906 8.71400391 -8.23710938 8.02371094 -7.5 7.3125 C-6.42685547 6.2596582 -6.42685547 6.2596582 -5.33203125 5.18554688 C-3.56120423 3.45013639 -1.78376544 1.7220927 0 0 Z \",fill:\"#848383\",transform:\"translate(972,54)\"})),_path891||(_path891=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8 7.59 8 15.18 8 23 C5.36 23 2.72 23 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#878787\",transform:\"translate(0,48)\"})),_path892||(_path892=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.6 0 13.2 0 20 0 C20 8.91 20 17.82 20 27 C29.9 27 39.8 27 50 27 C50 19.41 50 11.82 50 4 C50.33 4 50.66 4 51 4 C51 19.84 51 35.68 51 52 C60.57 52 70.14 52 80 52 C80 52.33 80 52.66 80 53 C70.43 53 60.86 53 51 53 C51 60.59 51 68.18 51 76 C50.67 76 50.34 76 50 76 C49.04794168 59.88625103 49.13626372 44.1230772 50 28 C38.78 28 27.56 28 16 28 C16.99 27.67 17.98 27.34 19 27 C19 18.42 19 9.84 19 1 C12.73 1 6.46 1 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#777674\",transform:\"translate(924,694)\"})),_path893||(_path893=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.59 0 15.18 0 23 0 C23 0.33 23 0.66 23 1 C21.35 1 19.7 1 18 1 C18 4.63 18 8.26 18 12 C15.36 12.66 12.72 13.32 10 14 C8.51207039 12.42489875 7.0349394 10.83959136 5.5625 9.25 C4.73878906 8.36828125 3.91507812 7.4865625 3.06640625 6.578125 C1 4 1 4 0 0 Z \",fill:\"#7F7F7F\",transform:\"translate(253,242)\"})),_path894||(_path894=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C2.32795532 1.66418945 2.32795532 1.66418945 1.64233398 2.34179688 C-0.42870096 4.39176683 -2.49560697 6.44585433 -4.5625 8.5 C-5.26697266 9.19609375 -5.97144531 9.8921875 -6.69726562 10.609375 C-10.00598572 13.90284754 -13.21408733 17.20367431 -16.21484375 20.78125 C-19.22198198 24.27566388 -22.50980914 27.38905339 -25.91796875 30.484375 C-33.98099685 37.80878152 -41.6353894 45.52529473 -49.3125 53.25 C-50.74650724 54.68903884 -52.18075075 56.12784229 -53.61523438 57.56640625 C-57.07954245 61.04157327 -60.54067335 64.51987452 -64 68 C-64.99 67.67 -65.98 67.34 -67 67 C-64.50434749 64.47483195 -62.00267549 61.95570627 -59.5 59.4375 C-58.80390625 58.73302734 -58.1078125 58.02855469 -57.390625 57.30273438 C-53.32861711 53.22192089 -49.18518558 49.32932128 -44.78076172 45.61914062 C-42.32278018 43.38424433 -40.27704318 40.89121409 -38.2265625 38.28515625 C-37.61941406 37.64900391 -37.61941406 37.64900391 -37 37 C-36.34 37 -35.68 37 -35 37 C-35 36.34 -35 35.68 -35 35 C-33.53344727 33.55249023 -33.53344727 33.55249023 -31.50390625 31.87109375 C-27.10434314 28.12812404 -23.00851552 24.15720718 -18.9375 20.0625 C-18.26912109 19.39798828 -17.60074219 18.73347656 -16.91210938 18.04882812 C-12.93928889 14.06828593 -9.15254626 9.97891822 -5.49023438 5.71069336 C-3.74919297 3.71208963 -1.9118202 1.83534739 0 0 Z \",fill:\"#E6E4E2\",transform:\"translate(255,767)\"})),_path895||(_path895=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.07988883 1.23195553 5.99842851 2.43430233 8.9609375 3.875 C10.03988281 4.39320313 10.03988281 4.39320313 11.140625 4.921875 C12.6238744 5.63756877 14.10566429 6.35629566 15.5859375 7.078125 C20.0035725 9.19227889 24.25032513 10.79691613 29 12 C29 12.33 29 12.66 29 13 C19.43 13 9.86 13 0 13 C0 8.71 0 4.42 0 0 Z \",fill:\"#7E7F7E\",transform:\"translate(607,500)\"})),_path896||(_path896=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.04159095 -0.0272616 4.08328963 -0.04651345 6.125 -0.0625 C7.26195313 -0.07410156 8.39890625 -0.08570312 9.5703125 -0.09765625 C13 0 13 0 19 1 C19 5.95 19 10.9 19 16 C13.37267189 14.87453438 13.37267189 14.87453438 10.44921875 11.875 C9.83369141 11.25109375 9.21816406 10.6271875 8.58398438 9.984375 C7.95814453 9.32953125 7.33230469 8.6746875 6.6875 8 C6.04232422 7.34515625 5.39714844 6.6903125 4.73242188 6.015625 C0 1.16802249 0 1.16802249 0 0 Z \",fill:\"#999997\",transform:\"translate(77,72)\"})),_path897||(_path897=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.00074006 3.50037003 12.28524135 9.81187928 17 16 C17 16.66 17 17.32 17 18 C11.39 18 5.78 18 0 18 C0 12.06 0 6.12 0 0 Z \",fill:\"#666463\",transform:\"translate(852,849)\"})),_path898||(_path898=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 8.91 0 17.82 0 27 C-2.31 26.67 -4.62 26.34 -7 26 C-7.05816623 22.58340509 -7.09365195 19.16693795 -7.125 15.75 C-7.14175781 14.78191406 -7.15851563 13.81382812 -7.17578125 12.81640625 C-7.18222656 11.88183594 -7.18867188 10.94726562 -7.1953125 9.984375 C-7.20578613 9.12553711 -7.21625977 8.26669922 -7.22705078 7.38183594 C-6.97928483 4.78269116 -6.39529069 3.19548592 -5 1 C-3 0 -3 0 0 0 Z \",fill:\"#999A96\",transform:\"translate(222,563)\"})),_path899||(_path899=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.75363052 3.35091771 2.11979937 6.43109812 2.09765625 9.86328125 C2.09443359 10.74951172 2.09121094 11.63574219 2.08789062 12.54882812 C2.07532227 13.9168457 2.07532227 13.9168457 2.0625 15.3125 C2.05798828 16.24384766 2.05347656 17.17519531 2.04882812 18.13476562 C2.03709234 20.42324373 2.02067363 22.71158808 2 25 C-4.1676029 26.09857724 -10.18415123 26.11539104 -16.4375 26.0625 C-17.45521484 26.05798828 -18.47292969 26.05347656 -19.52148438 26.04882812 C-22.01438509 26.03712437 -24.50716074 26.02072848 -27 26 C-26.99476318 26.67764404 -26.98952637 27.35528809 -26.98413086 28.0534668 C-26.8840967 43.07252002 -27.10865215 58.00625584 -28 73 C-28.33 73 -28.66 73 -29 73 C-29 66.07 -29 59.14 -29 52 C-32.3 52 -35.6 52 -39 52 C-39 51.67 -39 51.34 -39 51 C-35.7 51 -32.4 51 -29 51 C-29 42.09 -29 33.18 -29 24 C-19.43 24 -9.86 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#686765\",transform:\"translate(483,283)\"})),_path900||(_path900=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8 7.26 8 14.52 8 22 C5.36 22 2.72 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#898989\",transform:\"translate(0,95)\"})),_path901||(_path901=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.31 0.33 4.62 0.66 7 1 C7.33 8.59 7.66 16.18 8 24 C4.04 24.495 4.04 24.495 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#535154\",transform:\"translate(0,539)\"})),_path902||(_path902=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.30469503 0.86093901 7.18809398 1.84953283 11.0625 3.75 C12.08472656 4.23984375 13.10695313 4.7296875 14.16015625 5.234375 C17.21298144 7.13241762 18.9331825 9.08563863 21 12 C13.94278228 12.94096236 7.12134764 13.08185457 0 13 C0 8.71 0 4.42 0 0 Z \",fill:\"#828383\",transform:\"translate(668,400)\"})),_path903||(_path903=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.44013065 4.09074799 13.05784697 10.64024358 18.5 17.0625 C20.92165423 19.88406043 23.4532002 22.36288914 26.25 24.8125 C31.74061853 29.65313877 36.93293082 34.77950077 42.125 39.9375 C42.99157227 40.79126221 43.85814453 41.64502441 44.75097656 42.5246582 C45.55760742 43.32991943 46.36423828 44.13518066 47.1953125 44.96484375 C47.92766113 45.6930835 48.66000977 46.42132324 49.41455078 47.17163086 C51 49 51 49 51 51 C51.5887793 51.26280762 52.17755859 51.52561523 52.78417969 51.79638672 C55.10339241 53.05616181 56.60949403 54.38004021 58.453125 56.2578125 C59.071875 56.88300781 59.690625 57.50820313 60.328125 58.15234375 C60.96234375 58.80332031 61.5965625 59.45429687 62.25 60.125 C62.8996875 60.78371094 63.549375 61.44242188 64.21875 62.12109375 C65.81711727 63.74296643 67.41061897 65.3693281 69 67 C68.67 67.66 68.34 68.32 68 69 C65.2448485 66.44299296 62.49683037 63.87844154 59.75 61.3125 C58.58404297 60.2306543 58.58404297 60.2306543 57.39453125 59.12695312 C53.62476694 55.59884037 50.10192667 52.14863592 47 48 C43.04940151 43.81701336 38.72826539 40.06726463 34.40234375 36.28125 C32 34 32 34 30.19140625 31.65625 C27.78949197 28.74483875 25.16058098 26.47772597 22.30078125 24.02978516 C17.85227126 20.10524016 13.69479943 15.87925088 9.5 11.6875 C8.5821875 10.78193359 7.664375 9.87636719 6.71875 8.94335938 C5.8525 8.07904297 4.98625 7.21472656 4.09375 6.32421875 C3.30677734 5.54135498 2.51980469 4.75849121 1.70898438 3.9519043 C0 2 0 2 0 0 Z \",fill:\"#E6E3E6\",transform:\"translate(775,770)\"})),_path904||(_path904=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.78670972 2.68006459 3.21589207 5.32895199 4.6875 8.1875 C7.20619012 12.87039793 10.03956869 16.67833042 13.6796875 20.5390625 C15 22 15 22 15 23 C9.72 23 4.44 23 -1 23 C-1.02687864 19.54161528 -1.04677983 16.08343775 -1.0625 12.625 C-1.07087891 11.64015625 -1.07925781 10.6553125 -1.08789062 9.640625 C-1.09111328 8.69960938 -1.09433594 7.75859375 -1.09765625 6.7890625 C-1.10289307 5.91975098 -1.10812988 5.05043945 -1.11352539 4.15478516 C-1 2 -1 2 0 0 Z \",fill:\"#787878\",transform:\"translate(578,465)\"})),_path905||(_path905=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 0 3.96 0 6 0 C6 16.5 6 33 6 50 C5.34 50 4.68 50 4 50 C4.33 41.42 4.66 32.84 5 24 C3.35 23.67 1.7 23.34 0 23 C0 15.41 0 7.82 0 0 Z \",fill:\"#999A99\",transform:\"translate(216,489)\"})),_path906||(_path906=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8 6.93 8 13.86 8 21 C5.36 21 2.72 21 0 21 C0 14.07 0 7.14 0 0 Z \",fill:\"#606061\",transform:\"translate(0,871)\"})),_path907||(_path907=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.31 0 4.62 0 7 0 C7 7.92 7 15.84 7 24 C4.69 24 2.38 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#7B7B7D\",transform:\"translate(0,771)\"})),_path908||(_path908=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.28 0 10.56 0 16 0 C16 3 16 3 14.0234375 4.98046875 C13.14945313 5.70878906 12.27546875 6.43710937 11.375 7.1875 C7.32835272 10.68885439 4.08673897 14.16573062 1.05859375 18.56640625 C0.70925781 19.03949219 0.35992188 19.51257813 0 20 C-0.33 20 -0.66 20 -1 20 C-1.11381955 13.23405981 -0.88021369 6.71162938 0 0 Z \",fill:\"#858484\",transform:\"translate(668,335)\"})),_path909||(_path909=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.61 0 11.22 0 17 0 C12.49625187 6.75562219 12.49625187 6.75562219 10.01953125 9.2109375 C9.49552734 9.73300781 8.97152344 10.25507813 8.43164062 10.79296875 C7.89732422 11.31503906 7.36300781 11.83710938 6.8125 12.375 C6.26658203 12.92027344 5.72066406 13.46554687 5.15820312 14.02734375 C1.14074248 18 1.14074248 18 0 18 C0 12.06 0 6.12 0 0 Z \",fill:\"#918E8B\",transform:\"translate(1005,0)\"})),_path910||(_path910=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0.33 5.28 0.66 8 1 C8 7.93 8 14.86 8 22 C5.36 22 2.72 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#7B7B7B\",transform:\"translate(0,958)\"})),_path911||(_path911=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.9 0 19.8 0 30 0 C29.67 1.65 29.34 3.3 29 5 C19.31337984 6.04518445 9.72654773 6.10371911 0 6 C0 4.02 0 2.04 0 0 Z \",fill:\"#8F8F8E\",transform:\"translate(515,765)\"})),_path912||(_path912=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.09316037 0.30861464 4.01303436 1.0138971 6.18359375 3.328125 C6.92738281 4.29234375 7.67117188 5.2565625 8.4375 6.25 C10.77961702 9.26420278 13.02708916 12.02598736 15.78515625 14.671875 C18 17 18 17 18 20 C17.29230469 19.66871094 16.58460938 19.33742188 15.85546875 18.99609375 C11.93420707 17.62821177 8.52412898 17.99527836 4.42578125 18.22265625 C3.62527344 18.14917969 2.82476563 18.07570313 2 18 C-0.45391569 14.31912647 -0.22802759 11.55644412 -0.125 7.3125 C-0.11597656 6.61060547 -0.10695313 5.90871094 -0.09765625 5.18554688 C-0.07413704 3.45688475 -0.03826713 1.72839855 0 0 Z \",fill:\"#6A6B6B\",transform:\"translate(575,600)\"})),_path913||(_path913=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C12.74005147 10.29004158 12.74005147 10.29004158 14 17 C9.04726253 18.98109499 5.23859642 19.08658837 0 19 C-0.1938211 16.02111874 -0.38035102 13.04209754 -0.5625 10.0625 C-0.61857422 9.21236328 -0.67464844 8.36222656 -0.73242188 7.48632812 C-0.80493164 6.27299805 -0.80493164 6.27299805 -0.87890625 5.03515625 C-0.9260376 4.2862915 -0.97316895 3.53742676 -1.02172852 2.76586914 C-1 1 -1 1 0 0 Z \",fill:\"#8C8B8C\",transform:\"translate(944,938)\"})),_path914||(_path914=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.62 0 9.24 0 14 0 C14 2.31 14 4.62 14 7 C13.34 7 12.68 7 12 7 C10.25821064 8.98550212 10.25821064 8.98550212 8.5 11.4375 C5.20595533 15.89702233 5.20595533 15.89702233 3 17 C-0.99590101 11.34700618 -0.22255791 6.75092338 0 0 Z \",fill:\"#8A8A89\",transform:\"translate(760,242)\"})),_path915||(_path915=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.38294718 0.01329757 2.76582404 0.03715018 4.1484375 0.0703125 C4.85484375 0.07933594 5.56125 0.08835937 6.2890625 0.09765625 C8.03399848 0.12123647 9.77876045 0.15710789 11.5234375 0.1953125 C11.5234375 4.8153125 11.5234375 9.4353125 11.5234375 14.1953125 C10.5334375 14.6903125 10.5334375 14.6903125 9.5234375 15.1953125 C9.5234375 14.5353125 9.5234375 13.8753125 9.5234375 13.1953125 C8.2034375 13.5253125 6.8834375 13.8553125 5.5234375 14.1953125 C1.8934375 10.2353125 -1.7365625 6.2753125 -5.4765625 2.1953125 C-3.4765625 0.1953125 -3.4765625 0.1953125 0 0 Z \",fill:\"#7B7A78\",transform:\"translate(353.4765625,334.8046875)\"})),_path916||(_path916=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.26 0 14.52 0 22 0 C22 0.33 22 0.66 22 1 C15.4 1 8.8 1 2 1 C2 7.27 2 13.54 2 20 C5.58875 19.9690625 5.58875 19.9690625 9.25 19.9375 C16.21157759 19.90817153 23.07290458 20.26530806 30 21 C26.83211081 22.86611127 24.60437073 23.22137314 20.94921875 23.125 C19.95116211 23.10824219 18.95310547 23.09148438 17.92480469 23.07421875 C16.85649414 23.04972656 15.78818359 23.02523437 14.6875 23 C3.11438199 22.85088808 -8.21674736 23.57820054 -19.71777344 24.81640625 C-22.15430347 25.01241295 -24.55665005 25.03023146 -27 25 C-27 27.97 -27 30.94 -27 34 C-27.33 34 -27.66 34 -28 34 C-28 31.03 -28 28.06 -28 25 C-29.98 25 -31.96 25 -34 25 C-34 24.67 -34 24.34 -34 24 C-22.67305404 22.82628226 -11.36465852 21.74117338 0 21 C0 14.07 0 7.14 0 0 Z \",fill:\"#747271\",transform:\"translate(394,914)\"})),_path917||(_path917=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8 6.6 8 13.2 8 20 C5.36 20 2.72 20 0 20 C0 13.4 0 6.8 0 0 Z \",fill:\"#59585A\",transform:\"translate(0,938)\"})),_path918||(_path918=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.31 0 4.62 0 7 0 C8.23839599 6.65637843 8.09139136 13.2471936 8 20 C5.36 20 2.72 20 0 20 C0 13.4 0 6.8 0 0 Z \",fill:\"#838284\",transform:\"translate(0,189)\"})),_path919||(_path919=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-7.38297872 17.34042553 -7.38297872 17.34042553 -12 25 C-13.01044795 21.96865616 -13.05032949 20.25604057 -12.87890625 17.11328125 C-12.83056641 16.17548828 -12.78222656 15.23769531 -12.73242188 14.27148438 C-12.67634766 13.29501953 -12.62027344 12.31855469 -12.5625 11.3125 C-12.51029297 10.32443359 -12.45808594 9.33636719 -12.40429688 8.31835938 C-12.27464694 5.87858324 -12.13968258 3.43921895 -12 1 C-7.92212105 0.10554296 -4.18001995 -0.08196118 0 0 Z \",fill:\"#838380\",transform:\"translate(467,386)\"})),_path920||(_path920=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 0 3.96 0 6 0 C6 7.92 6 15.84 6 24 C4.02 24 2.04 24 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#9D9D9D\",transform:\"translate(216,439)\"})),_path921||(_path921=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C9.24 0 18.48 0 28 0 C28 7.59 28 15.18 28 23 C30.97 23 33.94 23 37 23 C37 23.33 37 23.66 37 24 C24.13 24 11.26 24 -2 24 C-2 31.26 -2 38.52 -2 46 C-2.33 46 -2.66 46 -3 46 C-3 38.74 -3 31.48 -3 24 C-4.32 24.33 -5.64 24.66 -7 25 C-9.08234592 25.06743348 -11.16668557 25.08514472 -13.25 25.0625 C-14.32765625 25.05347656 -15.4053125 25.04445313 -16.515625 25.03515625 C-17.33546875 25.02355469 -18.1553125 25.01195312 -19 25 C-19 24.34 -19 23.68 -19 23 C-13.72 23 -8.44 23 -3 23 C-2.67 22.34 -2.34 21.68 -2 21 C-2 21.66 -2 22.32 -2 23 C7.57 23 17.14 23 27 23 C27 15.74 27 8.48 27 1 C18.09 1 9.18 1 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#787776\",transform:\"translate(487,823)\"})),_path922||(_path922=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.48831242 0.00667405 2.97660807 0.01863442 4.46484375 0.03515625 C5.22345703 0.03966797 5.98207031 0.04417969 6.76367188 0.04882812 C8.64326246 0.06064945 10.52281274 0.07858547 12.40234375 0.09765625 C12.40234375 0.42765625 12.40234375 0.75765625 12.40234375 1.09765625 C8.44234375 1.09765625 4.48234375 1.09765625 0.40234375 1.09765625 C0.40234375 2.74765625 0.40234375 4.39765625 0.40234375 6.09765625 C-14.44765625 5.60265625 -14.44765625 5.60265625 -29.59765625 5.09765625 C-29.59765625 3.77765625 -29.59765625 2.45765625 -29.59765625 1.09765625 C-28.84556885 1.10289307 -28.09348145 1.10812988 -27.31860352 1.11352539 C-23.93246283 1.13422852 -20.54633541 1.14729502 -17.16015625 1.16015625 C-15.97615234 1.16853516 -14.79214844 1.17691406 -13.57226562 1.18554688 C-12.44755859 1.18876953 -11.32285156 1.19199219 -10.1640625 1.1953125 C-8.6008728 1.20316772 -8.6008728 1.20316772 -7.00610352 1.21118164 C-3.69151564 1.0549441 -3.75332247 0.10188172 0 0 Z \",fill:\"#7F7F7E\",transform:\"translate(364.59765625,764.90234375)\"})),_path923||(_path923=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.27081471 -0.02902429 6.5415963 -0.04680684 9.8125 -0.0625 C10.74126953 -0.07087891 11.67003906 -0.07925781 12.62695312 -0.08789062 C13.51962891 -0.09111328 14.41230469 -0.09433594 15.33203125 -0.09765625 C16.56530151 -0.10551147 16.56530151 -0.10551147 17.82348633 -0.11352539 C20 0 20 0 23 1 C24.1875 3.0625 24.1875 3.0625 25 5 C24 6 24 6 21.68334961 6.11352539 C20.68311768 6.10828857 19.68288574 6.10305176 18.65234375 6.09765625 C17.57275391 6.09443359 16.49316406 6.09121094 15.38085938 6.08789062 C14.24455078 6.07951172 13.10824219 6.07113281 11.9375 6.0625 C10.79732422 6.05798828 9.65714844 6.05347656 8.48242188 6.04882812 C5.65489649 6.03699747 2.8274736 6.0205141 0 6 C0 4.02 0 2.04 0 0 Z \",fill:\"#8C8C8B\",transform:\"translate(730,765)\"})),_path924||(_path924=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.62 0 9.24 0 14 0 C10.53786351 6.92427298 5.66863795 12.09640705 -1 16 C-1.02741912 14.4584364 -1.04658248 12.91672526 -1.0625 11.375 C-1.07410156 10.51648438 -1.08570313 9.65796875 -1.09765625 8.7734375 C-1 6 -1 6 0 0 Z \",fill:\"#807E7C\",transform:\"translate(700,306)\"})),_path925||(_path925=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.62 0 9.24 0 14 0 C14.33 0.66 14.66 1.32 15 2 C10.66666667 6.33333333 6.33333333 10.66666667 2 15 C1.34 14.67 0.68 14.34 0 14 C0 9.38 0 4.76 0 0 Z \",fill:\"#757371\",transform:\"translate(366,642)\"})),_path926||(_path926=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.36216755 3.04899897 -2.90071556 5.14794506 -5.265625 7.49609375 C-5.90886719 8.13740234 -6.55210937 8.77871094 -7.21484375 9.43945312 C-8.22224609 10.42848633 -8.22224609 10.42848633 -9.25 11.4375 C-9.90613281 12.09298828 -10.56226563 12.74847656 -11.23828125 13.42382812 C-14.16141014 16.32080576 -17.09312531 19.13736495 -20.28125 21.7421875 C-22.55508591 23.63051675 -24.38100618 25.4201154 -26.25 27.6875 C-29.88912455 31.96978079 -33.84241947 35.87843982 -37.86328125 39.80078125 C-40.1352713 42.00578065 -40.1352713 42.00578065 -42 45 C-42.495 43.515 -42.495 43.515 -43 42 C-35.76575774 33.8734283 -28.21496668 26.12642746 -20.45947266 18.49658203 C-16.28421562 14.36896892 -12.29634741 10.1652616 -8.49829102 5.68652344 C-3.44643891 0 -3.44643891 0 0 0 Z \",fill:\"#E4E2E0\",transform:\"translate(844,180)\"})),_path927||(_path927=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C10.33333333 0 20.66666667 0 31 0 C30.67 1.32 30.34 2.64 30 4 C29.2793335 4.02505615 28.55866699 4.0501123 27.81616211 4.07592773 C24.52312536 4.19260076 21.23032499 4.31500179 17.9375 4.4375 C16.80376953 4.47681641 15.67003906 4.51613281 14.50195312 4.55664062 C8.93261605 4.76772337 3.49489474 5.05095432 -2 6 C-1.34 4.02 -0.68 2.04 0 0 Z \",fill:\"#7A7979\",transform:\"translate(607,766)\"})),_path928||(_path928=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 25.41 2 50.82 2 77 C1.67 77 1.34 77 1 77 C0.67 64.79 0.34 52.58 0 40 C-0.33 40 -0.66 40 -1 40 C-0.67 26.8 -0.34 13.6 0 0 Z \",fill:\"#90918E\",transform:\"translate(220,335)\"})),_path929||(_path929=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2 2 2 2 2.1953125 5.0390625 C2.13020833 8.359375 2.06510417 11.6796875 2 15 C-2.29 15 -6.58 15 -11 15 C-11 11.30165104 -10.18635778 10.72918572 -7.75 8.0625 C-7.11449219 7.36253906 -6.47898437 6.66257812 -5.82421875 5.94140625 C-3.92272554 3.91776145 -2.00339585 1.92326002 0 0 Z \",fill:\"#6A6766\",transform:\"translate(758,266)\"})),_path930||(_path930=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3.61593211 8.96523405 3.61593211 8.96523405 1.4375 12.625 C-1.94702327 14.53421825 -4.16705339 14.47071274 -8 14 C-10.9375 13 -10.9375 13 -13 11 C-13.43015 8.20402501 -13.23400793 5.85489675 -13 3 C-10.03 3.495 -10.03 3.495 -7 4 C-7 6.31 -7 8.62 -7 11 C-5.68 10.67 -4.36 10.34 -3 10 C-2.86722656 9.36191406 -2.73445313 8.72382812 -2.59765625 8.06640625 C-2.42105469 7.24011719 -2.24445312 6.41382813 -2.0625 5.5625 C-1.88847656 4.73878906 -1.71445312 3.91507812 -1.53515625 3.06640625 C-1 1 -1 1 0 0 Z \",fill:\"#F8F5F7\",transform:\"translate(25,508)\"})),_path931||(_path931=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2.495 11.385 2.495 11.385 3 23 C-12.84 23.495 -12.84 23.495 -29 24 C-29 26.64 -29 29.28 -29 32 C-29.33 32 -29.66 32 -30 32 C-30.34179688 28.97265625 -30.34179688 28.97265625 -30.68359375 25.9453125 C-30.91292961 23.92595684 -30.91292961 23.92595684 -32 22 C-31.9129796 20.28766312 -31.75902838 18.57824594 -31.5625 16.875 C-31.46066406 15.96492187 -31.35882812 15.05484375 -31.25390625 14.1171875 C-31.17011719 13.41851562 -31.08632813 12.71984375 -31 12 C-30.67 12 -30.34 12 -30 12 C-30 15.3 -30 18.6 -30 22 C-28.9171875 21.83628906 -27.834375 21.67257813 -26.71875 21.50390625 C-21.31325808 20.82821976 -15.93934383 20.8911014 -10.5 20.9375 C-9.48679687 20.94201172 -8.47359375 20.94652344 -7.4296875 20.95117188 C-4.95309907 20.9628539 -2.47654144 20.98078545 0 21 C0 14.07 0 7.14 0 0 Z \",fill:\"#6E6C6A\",transform:\"translate(698,0)\"})),_path932||(_path932=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 3.96 0 7.92 0 12 C5.28 12 10.56 12 16 12 C16 12.33 16 12.66 16 13 C10.72 13 5.44 13 0 13 C0 18.28 0 23.56 0 29 C-0.33 29 -0.66 29 -1 29 C-1 23.72 -1 18.44 -1 13 C-4.3 12.67 -7.6 12.34 -11 12 C-9.93663267 7.74653068 -9.09469815 6.71091682 -6.0625 3.75 C-5.35222656 3.04359375 -4.64195312 2.3371875 -3.91015625 1.609375 C-2 0 -2 0 0 0 Z \",fill:\"#62605F\",transform:\"translate(216,811)\"})),_path933||(_path933=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 0 3.3 0 5 0 C5 8.25 5 16.5 5 25 C3.35 24.67 1.7 24.34 0 24 C0 16.08 0 8.16 0 0 Z \",fill:\"#969998\",transform:\"translate(216,616)\"})),_path934||(_path934=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C8.3984375 -0.1953125 8.3984375 -0.1953125 11 0 C11.66 0.66 12.32 1.32 13 2 C12.52949219 2.58007812 12.05898438 3.16015625 11.57421875 3.7578125 C8.17861407 8.01813638 5.18021001 11.99834175 3 17 C2.67 16.34 2.34 15.68 2 15 C1.34 15 0.68 15 0 15 C0 10.05 0 5.1 0 0 Z \",fill:\"#797978\",transform:\"translate(577,387)\"})),_path935||(_path935=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.29 0 8.58 0 13 0 C11.59506504 2.80986991 10.19225472 5.4544362 8.5625 8.125 C8.15128906 8.80820312 7.74007813 9.49140625 7.31640625 10.1953125 C6 12 6 12 3 14 C2.01 13.67 1.02 13.34 0 13 C0 8.71 0 4.42 0 0 Z \",fill:\"#6A6A6A\",transform:\"translate(395,613)\"})),_path936||(_path936=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C18.315 0.495 18.315 0.495 37 1 C37 1.33 37 1.66 37 2 C28.75 2 20.5 2 12 2 C12.18344635 9.80191787 12.18344635 9.80191787 16.0625 14.5625 C17.5165625 15.7690625 17.5165625 15.7690625 19 17 C18.67 17.66 18.34 18.32 18 19 C17.5875 18.57589844 17.175 18.15179688 16.75 17.71484375 C12.91109736 13.81595825 8.95355837 10.13624596 4.796875 6.578125 C3.11629258 5.10213522 1.48766149 3.6713234 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#696866\",transform:\"translate(290,280)\"})),_path937||(_path937=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.03515625 2.92578125 -1.03515625 2.92578125 -3 6 C-5.77188277 6.79151601 -7.6384474 7.10430668 -10.4375 7.1875 C-11.10587891 7.25001953 -11.77425781 7.31253906 -12.46289062 7.37695312 C-14.43359375 7.48046875 -14.43359375 7.48046875 -18 7 C-20.47265625 4.61328125 -20.47265625 4.61328125 -22 2 C-22 1.34 -22 0.68 -22 0 C-19.08365878 -0.19502282 -16.16720455 -0.38129328 -13.25 -0.5625 C-12.0125 -0.64661133 -12.0125 -0.64661133 -10.75 -0.73242188 C-9.95078125 -0.78076172 -9.1515625 -0.82910156 -8.328125 -0.87890625 C-7.5949707 -0.9260376 -6.86181641 -0.97316895 -6.10644531 -1.02172852 C-3.91642774 -0.99913793 -2.09512813 -0.61487456 0 0 Z \",fill:\"#706F6F\",transform:\"translate(794,764)\"})),_path938||(_path938=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 2.31 1 4.62 1 7 C10.24 7 19.48 7 29 7 C29.33 6.01 29.66 5.02 30 4 C30 4.99 30 5.98 30 7 C39.24 7 48.48 7 58 7 C58 7.33 58 7.66 58 8 C48.76 8 39.52 8 30 8 C30 13.28 30 18.56 30 24 C29.67 24 29.34 24 29 24 C29 18.72 29 13.44 29 8 C19.76 8 10.52 8 1 8 C1 15.59 1 23.18 1 31 C0.67 31 0.34 31 0 31 C0 23.41 0 15.82 0 8 C-4.29 8 -8.58 8 -13 8 C-13 7.67 -13 7.34 -13 7 C-8.71 7 -4.42 7 0 7 C0 4.69 0 2.38 0 0 Z \",fill:\"#737270\",transform:\"translate(157,64)\"})),_path939||(_path939=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.52136854 3.31282112 8.06231999 4.88885536 10 11 C10 12.32 10 13.64 10 15 C9 16 9 16 6.93359375 16.09765625 C3.46679688 16.04882812 3.46679688 16.04882812 0 16 C0 10.72 0 5.44 0 0 Z \",fill:\"#7F7D7C\",transform:\"translate(127,124)\"})),_path940||(_path940=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.95 0 9.9 0 15 0 C15 4.62 15 9.24 15 14 C10.76823721 11.46094233 8.08344143 9.3262827 4.6875 5.875 C3.80449219 4.98554687 2.92148437 4.09609375 2.01171875 3.1796875 C0 1 0 1 0 0 Z \",fill:\"#92908E\",transform:\"translate(52,48)\"})),_path941||(_path941=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.96 0.33 7.92 0.66 12 1 C12 4 12 4 9.41015625 6.91796875 C8.30190591 8.01557563 7.18565055 9.10514493 6.0625 10.1875 C5.49853516 10.74630859 4.93457031 11.30511719 4.35351562 11.88085938 C0.15390339 16 0.15390339 16 -1 16 C-0.67 10.72 -0.34 5.44 0 0 Z \",fill:\"#92908E\",transform:\"translate(159,848)\"})),_path942||(_path942=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.28915719 1.93373579 2.55665423 3.88217595 3.796875 5.84765625 C6.04920225 9.07040109 8.45043062 11.68192386 11.25 14.4375 C11.73525146 14.91630615 12.22050293 15.3951123 12.72045898 15.88842773 C16.02190884 19.12010946 19.43974975 22.17493095 22.94921875 25.17578125 C28.00576076 29.67369576 33.23679368 34.35519052 37 40 C36.67 40.99 36.34 41.98 36 43 C35.58226318 42.55197021 35.16452637 42.10394043 34.73413086 41.64233398 C32.80320328 39.57285496 30.87036294 37.50517147 28.9375 35.4375 C28.28072266 34.73302734 27.62394531 34.02855469 26.94726562 33.30273438 C18.78759736 24.54383927 18.78759736 24.54383927 9.9375 16.5 C5.48159687 12.65093192 0.89426173 8.68278519 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#BFBDBC\",transform:\"translate(651,640)\"})),_path943||(_path943=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.66666667 4.66666667 9.33333333 9.33333333 14 14 C10.78817851 15.90608098 8.46117397 16.22266247 4.75 16.125 C3.1825 16.08375 1.615 16.0425 0 16 C0 10.72 0 5.44 0 0 Z \",fill:\"#757374\",transform:\"translate(272,266)\"})),_path944||(_path944=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.77670952 2.75704884 1.12809985 5.21263315 1.1328125 8.07421875 C1.13474609 9.19860352 1.13474609 9.19860352 1.13671875 10.34570312 C1.13285156 11.11849609 1.12898438 11.89128906 1.125 12.6875 C1.12886719 13.47189453 1.13273437 14.25628906 1.13671875 15.06445312 C1.12667749 20.87332251 1.12667749 20.87332251 0 22 C-2.33297433 22.04092937 -4.66705225 22.04241723 -7 22 C-8.18960605 18.58957132 -7.85398723 16.91628018 -6.34765625 13.671875 C-5.98349609 12.87265625 -5.61933594 12.0734375 -5.24414062 11.25 C-4.85419922 10.425 -4.46425781 9.6 -4.0625 8.75 C-3.67642578 7.90953125 -3.29035156 7.0690625 -2.89257812 6.203125 C-1.93865013 4.13039258 -0.97423909 2.06324373 0 0 Z \",fill:\"#716F6D\",transform:\"translate(453,517)\"})),_path945||(_path945=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 25.08 1 50.16 1 76 C0.67 76 0.34 76 0 76 C-0.33 68.08 -0.66 60.16 -1 52 C-1.66 52 -2.32 52 -3 52 C-3 51.01 -3 50.02 -3 49 C-2.34 49 -1.68 49 -1 49 C-1.00523682 48.36835938 -1.01047363 47.73671875 -1.01586914 47.0859375 C-1.12775033 31.36025797 -0.79812732 15.70570217 0 0 Z \",fill:\"#969A96\",transform:\"translate(221,258)\"})),_path946||(_path946=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 7.26 1 14.52 1 22 C7.6 22 14.2 22 21 22 C21 22.33 21 22.66 21 23 C14.4 23 7.8 23 1 23 C1 31.58 1 40.16 1 49 C-8.57 49 -18.14 49 -28 49 C-28 48.67 -28 48.34 -28 48 C-18.76 48 -9.52 48 0 48 C0 39.75 0 31.5 0 23 C-4.95 23 -9.9 23 -15 23 C-15 22.67 -15 22.34 -15 22 C-10.05 22 -5.1 22 0 22 C0 14.74 0 7.48 0 0 Z \",fill:\"#72706F\",transform:\"translate(67,748)\"})),_path947||(_path947=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.495 1.98 0.495 1.98 1 4 C-0.32 4.33 -1.64 4.66 -3 5 C-3 5.66 -3 6.32 -3 7 C-7.47058824 11 -7.47058824 11 -10 11 C-10 11.66 -10 12.32 -10 13 C-11.67721041 14.56958193 -13.46794114 15.9480525 -15.2734375 17.3671875 C-17.12640368 19.11954014 -17.87554842 20.74164766 -19 23 C-20.66666667 23.66666667 -22.33333333 24.33333333 -24 25 C-24.69937532 26.31647119 -25.36729133 27.65022151 -26 29 C-27.32520503 29.68268138 -28.65812182 30.3507041 -30 31 C-30.495 32.485 -30.495 32.485 -31 34 C-33.375 36.25 -33.375 36.25 -36 38 C-36.99 37.67 -37.98 37.34 -39 37 C-37.50341097 35.47580995 -36.00251195 33.95585169 -34.5 32.4375 C-33.6646875 31.59058594 -32.829375 30.74367188 -31.96875 29.87109375 C-29.77986434 27.70582231 -27.50107292 25.68054751 -25.16796875 23.671875 C-20.83813119 19.9194514 -16.82355863 15.9003253 -12.8125 11.8125 C-4.64194577 3.48821944 -4.64194577 3.48821944 0 0 Z \",fill:\"#6C6965\",transform:\"translate(482,552)\"})),_path948||(_path948=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 4.29 0 8.58 0 13 C-5.08387224 11.72903194 -7.57016873 9.31496491 -10.3125 4.875 C-11 3 -11 3 -11 0 C-7.53278671 -1.73360665 -3.76147685 -0.48361845 0 0 Z \",fill:\"#5A595A\",transform:\"translate(333,307)\"})),_path949||(_path949=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.33 0 0.66 0 1 C-3.96 1 -7.92 1 -12 1 C-12 6.94 -12 12.88 -12 19 C-3.09 19 5.82 19 15 19 C15 12.73 15 6.46 15 0 C15.33 0 15.66 0 16 0 C16 6.6 16 13.2 16 20 C6.43 20 -3.14 20 -13 20 C-13 13.73 -13 7.46 -13 1 C-22.57 1 -32.14 1 -42 1 C-42 0.67 -42 0.34 -42 0 C-38.10835398 -0.17061496 -34.21641628 -0.33077072 -30.32397461 -0.48217773 C-28.36615764 -0.56035734 -26.40865471 -0.64628075 -24.45117188 -0.73242188 C-16.21545796 -1.0467621 -8.20021939 -0.83278729 0 0 Z \",fill:\"#7D7C7C\",transform:\"translate(200,915)\"})),_path950||(_path950=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.29159316 -0.05790353 6.58305603 -0.09356261 9.875 -0.125 C10.81214844 -0.14175781 11.74929688 -0.15851562 12.71484375 -0.17578125 C13.61074219 -0.18222656 14.50664063 -0.18867187 15.4296875 -0.1953125 C16.25710449 -0.20578613 17.08452148 -0.21625977 17.93701172 -0.22705078 C20 0 20 0 22 2 C21.67 3.32 21.34 4.64 21 6 C15.39 6 9.78 6 4 6 C3.67 4.35 3.34 2.7 3 1 C2.01 0.67 1.02 0.34 0 0 Z \",fill:\"#6E6F6D\",transform:\"translate(750,765)\"})),_path951||(_path951=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 1.65 3.3 3.3 5 5 C5.99 5.66 6.98 6.32 8 7 C7.86722656 7.53625 7.73445312 8.0725 7.59765625 8.625 C5.77830798 16.69918795 5.38849511 24.75981434 5 33 C4.67 33 4.34 33 4 33 C3.34 28.05 2.68 23.1 2 18 C1.67 18 1.34 18 1 18 C0.67 12.06 0.34 6.12 0 0 Z \",fill:\"#616062\",transform:\"translate(216,211)\"})),_path952||(_path952=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 4.29 0 8.58 0 13 C-4.29 12.67 -8.58 12.34 -13 12 C-4.2 0 -4.2 0 0 0 Z \",fill:\"#888583\",transform:\"translate(852,175)\"})),_path953||(_path953=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C-0.43851195 5.4776426 -4.81706112 9.30822237 -9.5 12.9375 C-11.60060795 14.67050156 -13.13342044 16.25266225 -14.875 18.3125 C-20.80607312 25.27852548 -27.49493721 31.57648573 -34 38 C-34.495 36.515 -34.495 36.515 -35 35 C-23.33333333 23.33333333 -11.66666667 11.66666667 0 0 Z \",fill:\"#E8E5E2\",transform:\"translate(75,945)\"})),_path954||(_path954=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 8.25 1 16.5 1 25 C8.26 25 15.52 25 23 25 C23 25.33 23 25.66 23 26 C15.74 26 8.48 26 1 26 C1 34.25 1 42.5 1 51 C0.67 51 0.34 51 0 51 C0 42.75 0 34.5 0 26 C-9.24 26 -18.48 26 -28 26 C-28 25.67 -28 25.34 -28 25 C-18.76 25 -9.52 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#6E6D6B\",transform:\"translate(157,282)\"})),_path955||(_path955=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-4.66666667 4.66666667 -9.33333333 9.33333333 -14 14 C-15.32229189 11.35541621 -15.09677194 9.32238699 -15.0625 6.375 C-15.05347656 5.37210938 -15.04445313 4.36921875 -15.03515625 3.3359375 C-15.02355469 2.56507813 -15.01195313 1.79421875 -15 1 C-12.87630763 0.63807496 -10.7509887 0.28568253 -8.625 -0.0625 C-6.84996094 -0.35833984 -6.84996094 -0.35833984 -5.0390625 -0.66015625 C-2 -1 -2 -1 0 0 Z \",fill:\"#8F8C89\",transform:\"translate(83,938)\"})),_path956||(_path956=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.37478516 0.01740234 1.37478516 0.01740234 2.77734375 0.03515625 C3.69644531 0.04417969 4.61554687 0.05320313 5.5625 0.0625 C6.27277344 0.07410156 6.98304688 0.08570313 7.71484375 0.09765625 C4.44390342 5.54922347 0.29631049 9.71635068 -4.28515625 14.09765625 C-4.94515625 13.76765625 -5.60515625 13.43765625 -6.28515625 13.09765625 C-4.96515625 9.79765625 -3.64515625 6.49765625 -2.28515625 3.09765625 C-9.87515625 3.09765625 -17.46515625 3.09765625 -25.28515625 3.09765625 C-25.28515625 2.76765625 -25.28515625 2.43765625 -25.28515625 2.09765625 C-24.29334351 2.06007202 -24.29334351 2.06007202 -23.28149414 2.02172852 C-20.3033332 1.90612523 -17.32551705 1.78323871 -14.34765625 1.66015625 C-12.7862793 1.60118164 -12.7862793 1.60118164 -11.19335938 1.54101562 C-9.70932617 1.47817383 -9.70932617 1.47817383 -8.1953125 1.4140625 C-6.82064819 1.35907593 -6.82064819 1.35907593 -5.41821289 1.30297852 C-2.83355242 1.05418609 -2.64578382 0.11306768 0 0 Z \",fill:\"#7A7875\",transform:\"translate(825.28515625,187.90234375)\"})),_path957||(_path957=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C3.26953125 1.29296875 3.26953125 1.29296875 4.8125 3.1875 C12.5411622 12.24979829 21.03017673 20.40452897 30.35546875 27.8046875 C36.12270423 32.59225964 41.63474615 37.88584637 46 44 C45.505 44.99 45.505 44.99 45 46 C37.57657658 38.73873874 37.57657658 38.73873874 35 35.4375 C32.69703484 32.63076122 30.14170267 30.42520062 27.390625 28.06640625 C20.13529846 21.79505373 13.13857704 15.23441729 6.3125 8.5 C5.53664551 7.74360229 5.53664551 7.74360229 4.74511719 6.97192383 C2.42076932 4.65346934 1.05405693 3.1621708 0 0 Z \",fill:\"#EDECED\",transform:\"translate(395,385)\"})),_path958||(_path958=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 2.31 1 4.62 1 7 C4.3 7 7.6 7 11 7 C11 7.33 11 7.66 11 8 C-1.87 8 -14.74 8 -28 8 C-28 13.94 -28 19.88 -28 26 C-28.33 28.64 -28.66 31.28 -29 34 C-29.33 34 -29.66 34 -30 34 C-30.02892385 29.87501462 -30.04677267 25.75005515 -30.0625 21.625 C-30.07087891 20.449375 -30.07925781 19.27375 -30.08789062 18.0625 C-30.09111328 16.94101562 -30.09433594 15.81953125 -30.09765625 14.6640625 C-30.10289307 13.62717285 -30.10812988 12.5902832 -30.11352539 11.52197266 C-30 9 -30 9 -29 7 C-20.09 6.67 -11.18 6.34 -2 6 C-1.34 4.02 -0.68 2.04 0 0 Z \",fill:\"#686665\",transform:\"translate(943,482)\"})),_path959||(_path959=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 2.64 1 5.28 1 8 C10.57 8 20.14 8 30 8 C30 16.58 30 25.16 30 34 C29.67 34 29.34 34 29 34 C29 25.75 29 17.5 29 9 C19.76 9 10.52 9 1 9 C1 17.25 1 25.5 1 34 C0.67 34 0.34 34 0 34 C0 25.75 0 17.5 0 9 C-2.97 9 -5.94 9 -9 9 C-9 8.67 -9 8.34 -9 8 C-6.03 8 -3.06 8 0 8 C0 5.36 0 2.72 0 0 Z \",fill:\"#757372\",transform:\"translate(97,404)\"})),_path960||(_path960=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 6.93 1 13.86 1 21 C8.59 21 16.18 21 24 21 C24 21.33 24 21.66 24 22 C16.41 22 8.82 22 1 22 C1 29.26 1 36.52 1 44 C0.67 44 0.34 44 0 44 C0 36.74 0 29.48 0 22 C-9.24 22 -18.48 22 -28 22 C-28 21.67 -28 21.34 -28 21 C-18.76 21 -9.52 21 0 21 C0 14.07 0 7.14 0 0 Z \",fill:\"#7C7A78\",transform:\"translate(760,871)\"})),_path961||(_path961=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 18.15 1 36.3 1 55 C1.66 55.33 2.32 55.66 3 56 C2.34 56 1.68 56 1 56 C1 62.6 1 69.2 1 76 C0.67 76 0.34 76 0 76 C0 69.4 0 62.8 0 56 C-5.61 56 -11.22 56 -17 56 C-17 55.67 -17 55.34 -17 55 C-11.39 55 -5.78 55 0 55 C0 36.85 0 18.7 0 0 Z \",fill:\"#72716F\",transform:\"translate(821,16)\"})),_path962||(_path962=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.97 0 5.94 0 9 0 C9.66 1.32 10.32 2.64 11 4 C9.35718838 5.66964521 7.71067239 7.3356464 6.0625 9 C4.68771484 10.3921875 4.68771484 10.3921875 3.28515625 11.8125 C1 14 1 14 0 14 C0 9.38 0 4.76 0 0 Z \",fill:\"#828080\",transform:\"translate(0,1006)\"})),_path963||(_path963=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.20970459 0.00523682 2.41940918 0.01047363 3.66577148 0.01586914 C4.97094727 0.0190918 6.27612305 0.02231445 7.62084961 0.02563477 C9.00952213 0.03399138 10.39819401 0.04245634 11.78686523 0.05102539 C13.17944179 0.05603873 14.57202005 0.06060193 15.96459961 0.06469727 C19.38456394 0.07653105 22.80444367 0.09301659 26.22436523 0.11352539 C26.55436523 1.10352539 26.88436523 2.09352539 27.22436523 3.11352539 C17.65436523 3.11352539 8.08436523 3.11352539 -1.77563477 3.11352539 C-2.10563477 4.43352539 -2.43563477 5.75352539 -2.77563477 7.11352539 C-3.15696775 5.12211979 -3.48889059 3.12073462 -3.77563477 1.11352539 C-2.77563477 0.11352539 -2.77563477 0.11352539 0 0 Z \",fill:\"#6E6D6B\",transform:\"translate(609.775634765625,820.886474609375)\"})),_path964||(_path964=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.61 0 11.22 0 17 0 C18 4 18 4 17 6 C11.39 5.67 5.78 5.34 0 5 C0 3.35 0 1.7 0 0 Z \",fill:\"#818282\",transform:\"translate(558,765)\"})),_path965||(_path965=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.61 0 11.22 0 17 0 C14.98127747 4.03744506 12.91899872 6.62010675 10 10 C6.17475764 8.549046 4.80909034 6.61818068 3 3 C3 2.34 3 1.68 3 1 C2.01 0.67 1.02 0.34 0 0 Z \",fill:\"#71706E\",transform:\"translate(792,212)\"})),_path966||(_path966=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.60407328 -0.02708567 3.2082785 -0.04643483 4.8125 -0.0625 C5.70582031 -0.07410156 6.59914063 -0.08570313 7.51953125 -0.09765625 C10 0 10 0 13 1 C13.76173392 5.3164922 14.16063604 8.74433453 13 13 C11.2925002 11.71937515 9.62626404 10.38232443 8 9 C8 8.34 8 7.68 8 7 C7.4225 6.773125 6.845 6.54625 6.25 6.3125 C3.4336339 4.66961977 1.91922886 2.60466773 0 0 Z \",fill:\"#858180\",transform:\"translate(990,980)\"})),_path967||(_path967=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.3177458 0.50797009 8.03302114 1.19682779 12 3 C12.25 9.625 12.25 9.625 10 13 C8.68 13 7.36 13 6 13 C6 10.69 6 8.38 6 6 C3.03 5.505 3.03 5.505 0 5 C0 3.35 0 1.7 0 0 Z \",fill:\"#504D4F\",transform:\"translate(12,506)\"})),_path968||(_path968=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.84755859 0.0515625 1.69511719 0.103125 2.56835938 0.15625 C3.44943359 0.22070312 4.33050781 0.28515625 5.23828125 0.3515625 C6.13095703 0.40828125 7.02363281 0.465 7.94335938 0.5234375 C10.14665538 0.66482548 12.34879664 0.81622228 14.55078125 0.9765625 C14.55078125 3.6165625 14.55078125 6.2565625 14.55078125 8.9765625 C13.73351562 8.70070313 12.91625 8.42484375 12.07421875 8.140625 C8.12084797 6.83452246 4.15133359 5.58808149 0.17578125 4.3515625 C-0.56027344 4.12210937 -1.29632812 3.89265625 -2.0546875 3.65625 C-3.85270132 3.09583011 -5.65093722 2.53612279 -7.44921875 1.9765625 C-4.22473728 -0.17309181 -3.6499091 -0.24496034 0 0 Z \",fill:\"#7B7B7A\",transform:\"translate(683.44921875,359.0234375)\"})),_path969||(_path969=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.33 9.9 1.66 19.8 2 30 C11.57 30 21.14 30 31 30 C31 30.33 31 30.66 31 31 C21.43 31 11.86 31 2 31 C2 35.95 2 40.9 2 46 C1.67 46 1.34 46 1 46 C0.505 38.575 0.505 38.575 0 31 C-4.29 30.67 -8.58 30.34 -13 30 C-13 29.67 -13 29.34 -13 29 C-8.71 29 -4.42 29 0 29 C0 19.43 0 9.86 0 0 Z \",fill:\"#6D6C6B\",transform:\"translate(273,766)\"})),_path970||(_path970=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.96 0 7.92 0 12 0 C12 4.62 12 9.24 12 14 C10.85807217 12.85807217 9.71677615 11.71550762 8.578125 10.5703125 C7.43198823 9.42984968 6.27413185 8.30112694 5.109375 7.1796875 C4.47515625 6.56351563 3.8409375 5.94734375 3.1875 5.3125 C2.58292969 4.73113281 1.97835937 4.14976562 1.35546875 3.55078125 C0 2 0 2 0 0 Z \",fill:\"#696768\",transform:\"translate(779,771)\"})),_path971||(_path971=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 4.29 0 8.58 0 13 C-4.29 13 -8.58 13 -13 13 C-2.08 0 -2.08 0 0 0 Z \",fill:\"#8A8782\",transform:\"translate(944,82)\"})),_path972||(_path972=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.79158489 -0.02696365 3.58328473 -0.04637917 5.375 -0.0625 C6.37273438 -0.07410156 7.37046875 -0.08570313 8.3984375 -0.09765625 C11 0 11 0 13 1 C13 4.63 13 8.26 13 12 C10 12 10 12 8.28125 10.390625 C7.6934375 9.68421875 7.105625 8.9778125 6.5 8.25 C5.9121875 7.55390625 5.324375 6.8578125 4.71875 6.140625 C3.10014974 4.12473195 1.53603811 2.0792711 0 0 Z \",fill:\"#818080\",transform:\"translate(899,890)\"})),_path973||(_path973=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.88358108 5.76299811 13.45249764 11.86116725 20 18 C20.68578125 18.64195312 21.3715625 19.28390625 22.078125 19.9453125 C27.19072777 24.8906806 31.57064245 30.44572625 36 36 C33 36 33 36 31.13818359 34.21459961 C30.44031738 33.38968018 29.74245117 32.56476074 29.0234375 31.71484375 C25.60449747 27.78700925 22.10181278 23.99178999 18.4140625 20.31640625 C17.94047302 19.84383392 17.46688354 19.3712616 16.97894287 18.8843689 C15.52960575 17.44174081 14.07740163 16.00204207 12.625 14.5625 C11.63127202 13.57380726 10.6377814 12.58487589 9.64453125 11.59570312 C7.83689613 9.79613425 6.0276701 7.99822393 4.21728516 6.20141602 C2.4745646 4.47116814 0.73490288 2.73807777 -1 1 C-0.67 0.67 -0.34 0.34 0 0 Z \",fill:\"#D8D5D5\",transform:\"translate(188,181)\"})),_path974||(_path974=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.93214301 1.58939426 6.33020346 4.16342502 9.25 7.1875 C12.3100156 10.34922132 15.3745392 13.35905636 18.71484375 16.22265625 C23.83122953 20.64686795 28.55485928 25.44671402 33.3125 30.25 C34.65151367 31.59578125 34.65151367 31.59578125 36.01757812 32.96875 C37.66302846 34.62286712 39.30744327 36.27801551 40.95043945 37.93457031 C42.62980364 39.62693732 44.31261406 41.31563865 46 43 C41.51105944 41.57699727 39.02870976 39.36787784 35.76171875 36.01953125 C35.03502739 35.28291512 35.03502739 35.28291512 34.2936554 34.53141785 C32.75095583 32.96543073 31.21877277 31.38965541 29.6875 29.8125 C27.67448512 27.75264844 25.65707262 25.69718398 23.63671875 23.64453125 C23.14867767 23.14789978 22.6606366 22.65126831 22.1578064 22.1395874 C18.80776631 18.75363809 15.34134849 15.57062043 11.71801758 12.48217773 C9.19393953 10.30459101 6.85367182 7.98593624 4.5 5.625 C3.6440625 4.77164063 2.788125 3.91828125 1.90625 3.0390625 C0 1 0 1 0 0 Z \",fill:\"#F7F5F5\",transform:\"translate(49,47)\"})),_path975||(_path975=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 7.26 2 14.52 2 22 C11.57 22 21.14 22 31 22 C31 15.07 31 8.14 31 1 C31.33 1 31.66 1 32 1 C32 7.93 32 14.86 32 22 C35.63 22 39.26 22 43 22 C43 22.33 43 22.66 43 23 C37.05549867 23.19205195 31.1108049 23.37080791 25.16552734 23.53710938 C23.14198009 23.59560279 21.11853548 23.65776484 19.09521484 23.72363281 C16.19127083 23.81753791 13.28721633 23.898356 10.3828125 23.9765625 C9.47443634 24.00875885 8.56606018 24.0409552 7.63015747 24.0741272 C6.78943695 24.09429901 5.94871643 24.11447083 5.08251953 24.13525391 C3.96999313 24.16856308 3.96999313 24.16856308 2.83499146 24.20254517 C1 24 1 24 -1 22 C-0.34 22 0.32 22 1 22 C0.67 14.74 0.34 7.48 0 0 Z \",fill:\"#777573\",transform:\"translate(973,95)\"})),_path976||(_path976=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.24095065 1.41920753 5.35835505 3.13308248 7.8203125 5.66015625 C8.52027344 6.37107422 9.22023438 7.08199219 9.94140625 7.81445312 C11.02228516 8.92723633 11.02228516 8.92723633 12.125 10.0625 C13.56287561 11.53473193 15.00287708 13.00489156 16.4453125 14.47265625 C17.39688232 15.45117554 17.39688232 15.45117554 18.36767578 16.44946289 C19.93459167 18.08886 19.93459167 18.08886 22 19 C22 19.66 22 20.32 22 21 C22.5878125 21.25136719 23.175625 21.50273438 23.78125 21.76171875 C26.27682175 23.15449383 27.66530515 24.63171498 29.5 26.8125 C30.39912109 27.87404297 30.39912109 27.87404297 31.31640625 28.95703125 C33.23559869 31.2858889 35.14207754 33.62185925 37 36 C33.19283739 34.44893375 30.81196719 31.88519315 28 29 C25.4000945 26.37076554 22.79351549 23.74817646 20.1875 21.125 C19.51396484 20.44308594 18.84042969 19.76117187 18.14648438 19.05859375 C14.13353372 15.02644238 10.02152704 11.17897701 5.70629883 7.47143555 C3.69334984 5.73555866 1.76721973 3.9881222 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#D8D7D5\",transform:\"translate(976,968)\"})),_path977||(_path977=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.66 1.32 1.32 2 2 C2.68642578 2.68449219 2.68642578 2.68449219 3.38671875 3.3828125 C4.5402876 4.53917449 5.68809309 5.70129744 6.83203125 6.8671875 C10.10396549 10.18429638 13.40153674 13.4016431 16.9375 16.4375 C21.53303205 20.38435854 25.76310351 24.67483483 30 29 C29.34 29.66 28.68 30.32 28 31 C22.49968324 26.21904056 17.35132453 21.41618838 12.65234375 15.84375 C10.50201022 13.44432346 8.12710365 11.43217908 5.64453125 9.38671875 C3.28060965 7.39338819 1.15265303 5.21788494 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#D3D1CF\",transform:\"translate(911,903)\"})),_path978||(_path978=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.85415052 -0.02923559 7.70827215 -0.04687777 11.5625 -0.0625 C12.64853516 -0.07087891 13.73457031 -0.07925781 14.85351562 -0.08789062 C20.34832611 -0.10459218 25.58961935 0.01417741 31 1 C31 1.33 31 1.66 31 2 C27.68821046 2.34064639 24.37547963 2.67114622 21.0625 3 C20.13630859 3.09539063 19.21011719 3.19078125 18.25585938 3.2890625 C12.47088893 3.85741047 6.81269724 4.09538785 1 4 C0.67 2.68 0.34 1.36 0 0 Z \",fill:\"#5E5C5D\",transform:\"translate(698,956)\"})),_path979||(_path979=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.96 0 7.92 0 12 0 C7.75802296 5.65596939 2.5954014 9.71924631 -3 14 C-3.33 13.01 -3.66 12.02 -4 11 C-3.01 10.34 -2.02 9.68 -1 9 C-1.33 8.01 -1.66 7.02 -2 6 C-1.0625 2.8125 -1.0625 2.8125 0 0 Z \",fill:\"#797875\",transform:\"translate(426,590)\"})),_path980||(_path980=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.515625 0.66 1.03125 1.32 1.5625 2 C7.64322633 9.49324098 7.64322633 9.49324098 14.625 16.125 C20.46029453 21.05462013 25.466072 26.84078583 30.59301758 32.48535156 C32.02650242 34.02853046 33.5018054 35.51979591 35 37 C31.02727285 36.45826448 29.23518619 34.57885695 26.5 31.75 C25.70722656 30.93273437 24.91445313 30.11546875 24.09765625 29.2734375 C22 27 22 27 19.9375 24.375 C17.58934355 21.49661468 14.91233463 19.24435497 12.09375 16.8359375 C8.90765124 14.04215687 5.96084803 11.02831039 3 8 C2.45988281 7.47921875 1.91976562 6.9584375 1.36328125 6.421875 C0 5 0 5 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#D3D3D2\",transform:\"translate(252,242)\"})),_path981||(_path981=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.29 0 8.58 0 13 0 C13 0.33 13 0.66 13 1 C9.04 1 5.08 1 1 1 C1 9.25 1 17.5 1 26 C-8.24 26 -17.48 26 -27 26 C-27 25.67 -27 25.34 -27 25 C-18.42 24.67 -9.84 24.34 -1 24 C-1.020625 21.525 -1.04125 19.05 -1.0625 16.5 C-1.0856549 10.91119873 -0.92108592 5.52651554 0 0 Z \",fill:\"#747270\",transform:\"translate(883,668)\"})),_path982||(_path982=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C3.3302664 9.97699803 3.09502917 19.95614824 3 30 C2.67 30 2.34 30 2 30 C1.67 23.73 1.34 17.46 1 11 C-2.3 11 -5.6 11 -9 11 C-8.071875 9.9275 -7.14375 8.855 -6.1875 7.75 C-4.44361555 5.72709404 -2.80913318 3.73414979 -1.25 1.5625 C-0.8375 1.046875 -0.425 0.53125 0 0 Z \",fill:\"#555453\",transform:\"translate(728,606)\"})),_path983||(_path983=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 0.66 2 1.32 2 2 C10.91 2 19.82 2 29 2 C29 2.33 29 2.66 29 3 C25.7 3 22.4 3 19 3 C19.12568359 5.35898438 19.12568359 5.35898438 19.25390625 7.765625 C19.91609417 21.26896107 19.97932946 34.51538668 19 48 C18.67 48 18.34 48 18 48 C18 41.4 18 34.8 18 28 C16.02 28 14.04 28 12 28 C12 27.67 12 27.34 12 27 C13.98 27 15.96 27 18 27 C18 19.08 18 11.16 18 3 C12.39 3 6.78 3 1 3 C0.67 2.01 0.34 1.02 0 0 Z \",fill:\"#777573\",transform:\"translate(864,161)\"})),_path984||(_path984=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.92403281 17.07889209 1.97678174 33.92293147 1 51 C0.67 51 0.34 51 0 51 C0 42.75 0 34.5 0 26 C-9.9 26 -19.8 26 -30 26 C-30 25.67 -30 25.34 -30 25 C-20.1 25 -10.2 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#71706F\",transform:\"translate(38,387)\"})),_path985||(_path985=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 8.25 1 16.5 1 25 C1.99 25.33 2.98 25.66 4 26 C3.01 26 2.02 26 1 26 C1 33.92 1 41.84 1 50 C0.67 50 0.34 50 0 50 C0 42.08 0 34.16 0 26 C-9.24 26 -18.48 26 -28 26 C-28 25.67 -28 25.34 -28 25 C-18.76 25 -9.52 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#6D6B6A\",transform:\"translate(852,413)\"})),_path986||(_path986=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.03163018 4.29785078 10.02718443 8.63425542 15 13 C14.67 13.66 14.34 14.32 14 15 C11.36 14.67 8.72 14.34 6 14 C6 16.31 6 18.62 6 21 C5.67 21 5.34 21 5 21 C4.34 15.72 3.68 10.44 3 5 C2.34 5 1.68 5 1 5 C0.67 3.35 0.34 1.7 0 0 Z \",fill:\"#747171\",transform:\"translate(786,783)\"})),_path987||(_path987=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 1.32 1.32 2.64 2 4 C1.40445313 4.26554687 0.80890625 4.53109375 0.1953125 4.8046875 C-2.06329384 6.03446248 -3.38744356 7.24774053 -5.125 9.125 C-7.8282174 11.91430712 -10.62494966 14.36091579 -13.6875 16.75 C-18.39278497 20.42171238 -22.75300906 24.37598307 -27.06518555 28.49511719 C-30.78896851 32 -30.78896851 32 -33 32 C-33 30 -33 30 -31.6015625 28.58984375 C-30.94929687 28.04457031 -30.29703125 27.49929688 -29.625 26.9375 C-26.42453655 24.22076214 -23.28693937 21.45664781 -20.1875 18.625 C-15.75054937 14.60637084 -11.14842819 10.84278604 -6.4453125 7.140625 C-3.94627132 4.95296595 -1.99217351 2.65005407 0 0 Z \",fill:\"#C7C7C4\",transform:\"translate(575,455)\"})),_path988||(_path988=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.42457867 1.71228933 5.14918235 2.87695314 7.75 5.5 C8.67039062 6.41265625 8.67039062 6.41265625 9.609375 7.34375 C11 9 11 9 11 11 C7.37 11 3.74 11 0 11 C0 7.37 0 3.74 0 0 Z \",fill:\"#656361\",transform:\"translate(883,880)\"})),_path989||(_path989=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.54269531 0.27714844 1.08539062 0.55429687 1.64453125 0.83984375 C2.71767578 1.38318359 2.71767578 1.38318359 3.8125 1.9375 C4.87404297 2.47697266 4.87404297 2.47697266 5.95703125 3.02734375 C8.11810285 4.10730516 8.11810285 4.10730516 11 5 C11.8125 6.875 11.8125 6.875 12 9 C11.01 10.485 11.01 10.485 10 12 C7 12.3125 7 12.3125 4 12 C1.22917166 9.22917166 1.46903579 6.81929143 1 3 C0.67 2.01 0.34 1.02 0 0 Z \",fill:\"#56575A\",transform:\"translate(24,920)\"})),_path990||(_path990=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C2.55197021 1.44279297 2.10394043 1.88558594 1.64233398 2.34179688 C-0.42870096 4.39176683 -2.49560697 6.44585433 -4.5625 8.5 C-5.26697266 9.19609375 -5.97144531 9.8921875 -6.69726562 10.609375 C-10.78549159 14.67876122 -14.67572526 18.82810335 -18.37475586 23.25585938 C-20.10224216 25.1097218 -21.93438332 26.53974051 -24 28 C-24 25 -24 25 -21.40234375 22.14453125 C-20.25397665 21.02705138 -19.09860329 19.91674066 -17.9375 18.8125 C-16.73769762 17.6451642 -15.53976785 16.47590051 -14.34375 15.3046875 C-13.76496094 14.7384668 -13.18617188 14.17224609 -12.58984375 13.58886719 C-10.04058814 11.04117746 -7.69964962 8.33425814 -5.3671875 5.58984375 C-3.67616069 3.62342114 -1.87038091 1.79556567 0 0 Z \",fill:\"#EBE8E6\",transform:\"translate(255,767)\"})),_path991||(_path991=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.33 0 0.66 0 1 C-15.51 1.33 -31.02 1.66 -47 2 C-47.33 3.65 -47.66 5.3 -48 7 C-49.20628008 4.66785852 -50.1654738 2.50357861 -51 0 C-33.99933507 -1.55420987 -17.02551166 -0.66811271 0 0 Z \",fill:\"#78777C\",transform:\"translate(273,214)\"})),_path992||(_path992=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.97 0 5.94 0 9 0 C5.47412292 4.18185421 1.92446674 8.19095875 -2 12 C-3.125 10.375 -3.125 10.375 -4 8 C-3.125 4.75 -3.125 4.75 -2 2 C-1.34 2 -0.68 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#7B7876\",transform:\"translate(916,97)\"})),_path993||(_path993=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 6.6 1 13.2 1 20 C10.57 20 20.14 20 30 20 C30 20.33 30 20.66 30 21 C20.43 21 10.86 21 1 21 C1 28.59 1 36.18 1 44 C0.67 44 0.34 44 0 44 C-0.84278122 29.23890664 -1.06066736 14.75143531 0 0 Z \",fill:\"#71716F\",transform:\"translate(606,51)\"})),_path994||(_path994=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 1.65 1 3.3 1 5 C8.92 5 16.84 5 25 5 C25 5.33 25 5.66 25 6 C17.08 6 9.16 6 1 6 C1 12.93 1 19.86 1 27 C0.67 27 0.34 27 0 27 C0 20.07 0 13.14 0 6 C-7.26 6 -14.52 6 -22 6 C-22 5.67 -22 5.34 -22 5 C-14.74 5 -7.48 5 0 5 C0 3.35 0 1.7 0 0 Z \",fill:\"#737271\",transform:\"translate(454,952)\"})),_path995||(_path995=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.95117134 1.1725131 -1.91117009 2.33787015 -2.875 3.5 C-3.67550781 4.47453125 -3.67550781 4.47453125 -4.4921875 5.46875 C-4.98976562 5.9740625 -5.48734375 6.479375 -6 7 C-6.66 7 -7.32 7 -8 7 C-8 7.66 -8 8.32 -8 9 C-8.99 9.33 -9.98 9.66 -11 10 C-12 9 -12 9 -12.1328125 7.1875 C-12.13023437 6.465625 -12.12765625 5.74375 -12.125 5 C-12.12757813 4.278125 -12.13015625 3.55625 -12.1328125 2.8125 C-12 1 -12 1 -11 0 C-3.58695652 -1.19565217 -3.58695652 -1.19565217 0 0 Z \",fill:\"#85837E\",transform:\"translate(228,795)\"})),_path996||(_path996=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 8.25 1 16.5 1 25 C10.57 25 20.14 25 30 25 C30 25.33 30 25.66 30 26 C29.40050537 26.02505615 28.80101074 26.0501123 28.18334961 26.07592773 C25.43456676 26.19285773 22.68604625 26.31513947 19.9375 26.4375 C18.52307617 26.49647461 18.52307617 26.49647461 17.08007812 26.55664062 C11.98884522 26.78725396 7.02935244 27.1699127 2 28 C1.67 29.65 1.34 31.3 1 33 C0.67 33 0.34 33 0 33 C-1.35361775 26.17175048 -0.89104878 19.48468295 -0.5625 12.5625 C-0.51029297 11.35400391 -0.45808594 10.14550781 -0.40429688 8.90039062 C-0.27529246 5.93328916 -0.1403565 2.96658252 0 0 Z \",fill:\"#696867\",transform:\"translate(545,695)\"})),_path997||(_path997=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 1.32 0.66 2.64 1 4 C10.9 4 20.8 4 31 4 C31 11.92 31 19.84 31 28 C30.67 28 30.34 28 30 28 C30 20.41 30 12.82 30 5 C20.43 5 10.86 5 1 5 C1 8.63 1 12.26 1 16 C0.67 16 0.34 16 0 16 C0 12.37 0 8.74 0 5 C-0.99 4.67 -1.98 4.34 -3 4 C-2.01 4 -1.02 4 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#7E7C7B\",transform:\"translate(943,976)\"})),_path998||(_path998=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 3.3 0 6.6 0 10 C-3.96 10 -7.92 10 -12 10 C-3.88679245 0 -3.88679245 0 0 0 Z \",fill:\"#868685\",transform:\"translate(637,403)\"})),_path999||(_path999=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.36421031 2.72842061 0.87807211 4.60953318 0.5625 7.625 C0.46066406 8.62789063 0.35882812 9.63078125 0.25390625 10.6640625 C0.17011719 11.43492187 0.08632813 12.20578125 0 13 C-6.75 13.125 -6.75 13.125 -9 12 C-8.45015228 8.12488273 -6.72444669 6.40423494 -3.9375 3.75 C-3.20402344 3.04359375 -2.47054687 2.3371875 -1.71484375 1.609375 C-1.14894531 1.07828125 -0.58304688 0.5471875 0 0 Z \",fill:\"#757370\",transform:\"translate(730,294)\"})),_path1000||(_path1000=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 15.18 2 30.36 2 46 C1.67 46 1.34 46 1 46 C0.83227069 42.22921314 0.66599875 38.45836341 0.5 34.6875 C0.42845703 33.0797168 0.42845703 33.0797168 0.35546875 31.43945312 C0.31035156 30.41142578 0.26523437 29.38339844 0.21875 28.32421875 C0.17685547 27.37635498 0.13496094 26.42849121 0.09179688 25.4519043 C-0.08837019 20.6396229 0 15.8155724 0 11 C-0.33 11 -0.66 11 -1 11 C-1.02688151 9.35425434 -1.04634123 7.70838587 -1.0625 6.0625 C-1.07410156 5.14597656 -1.08570313 4.22945313 -1.09765625 3.28515625 C-1 1 -1 1 0 0 Z \",fill:\"#747371\",transform:\"translate(453,118)\"})),_path1001||(_path1001=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 1.32 0 2.64 0 4 C0.66 4.33 1.32 4.66 2 5 C0.67935547 5.02126953 0.67935547 5.02126953 -0.66796875 5.04296875 C-7.89872592 5.14670873 -7.89872592 5.14670873 -14.0625 8.4375 C-14.701875 9.283125 -15.34125 10.12875 -16 11 C-18.12109375 12.16015625 -18.12109375 12.16015625 -20 13 C-18.58451955 11.30343123 -17.15503036 9.62265165 -15.703125 7.95703125 C-14.6292491 6.72305917 -13.57414078 5.4722551 -12.546875 4.19921875 C-8.58059404 -0.36636291 -5.96481373 -0.6170497 0 0 Z \",fill:\"#6C6A69\",transform:\"translate(268,765)\"})),_path1002||(_path1002=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.15358254 3.43469325 7.78875342 6.63270466 11 11 C7.37 11.33 3.74 11.66 0 12 C0 8.04 0 4.08 0 0 Z \",fill:\"#989795\",transform:\"translate(974,968)\"})),_path1003||(_path1003=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.53917889 0.11965306 9.07808074 0.24219039 13.61694336 0.37231445 C15.16214289 0.41571985 16.70739214 0.45739071 18.25268555 0.49731445 C20.46939096 0.55488199 22.6858448 0.61861424 24.90234375 0.68359375 C25.94454323 0.70866249 25.94454323 0.70866249 27.00779724 0.73423767 C31.88612829 0.88612829 31.88612829 0.88612829 33 2 C33.04080783 3.99958364 33.04254356 6.00045254 33 8 C31 4.25 31 4.25 31 2 C21.43 2 11.86 2 2 2 C2 8.93 2 15.86 2 23 C1.67 23 1.34 23 1 23 C0.67 15.41 0.34 7.82 0 0 Z \",fill:\"#787675\",transform:\"translate(575,868)\"})),_path1004||(_path1004=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.24480464 -0.33292585 6.35542625 -0.43885872 9.9375 2 C10.618125 2.66 11.29875 3.32 12 4 C11.34 4.66 10.68 5.32 10 6 C9.67 7.32 9.34 8.64 9 10 C6.03 8.35 3.06 6.7 0 5 C0 3.35 0 1.7 0 0 Z \",fill:\"#6D6F76\",transform:\"translate(29,22)\"})),_path1005||(_path1005=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C7.48118887 4.1724106 6.28848726 6.25416821 3.4375 9.3125 C2.79683594 10.00988281 2.15617188 10.70726562 1.49609375 11.42578125 C1.00238281 11.94527344 0.50867188 12.46476563 0 13 C-0.66 12.67 -1.32 12.34 -2 12 C-1.34 8.04 -0.68 4.08 0 0 Z \",fill:\"#7B7979\",transform:\"translate(245,766)\"})),_path1006||(_path1006=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 1.32 0 2.64 0 4 C-7.92 4.495 -7.92 4.495 -16 5 C-16 3.68 -16 2.36 -16 1 C-13.8973294 0.63705686 -11.79278943 0.28493028 -9.6875 -0.0625 C-8.51574219 -0.25972656 -7.34398437 -0.45695313 -6.13671875 -0.66015625 C-3 -1 -3 -1 0 0 Z \",fill:\"#767A79\",transform:\"translate(244,765)\"})),_path1007||(_path1007=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C3 5.95 3 10.9 3 16 C-5.58 16 -14.16 16 -23 16 C-23 15.67 -23 15.34 -23 15 C-15.74 15 -8.48 15 -1 15 C-1 14.34 -1 13.68 -1 13 C-0.34 13 0.32 13 1 13 C0.505 6.565 0.505 6.565 0 0 Z \",fill:\"#5E5D5B\",transform:\"translate(574,344)\"})),_path1008||(_path1008=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C2.26750669 6.79663036 2.11139726 13.54298684 2.0625 20.4375 C2.05798828 21.64599609 2.05347656 22.85449219 2.04882812 24.09960938 C2.03710145 27.06645789 2.02068896 30.0332027 2 33 C0.02 33.495 0.02 33.495 -2 34 C-1.01 33.505 -1.01 33.505 0 33 C-0.03552979 32.24904053 -0.07105957 31.49808105 -0.10766602 30.72436523 C-0.26605113 27.29568457 -0.41436124 23.86663802 -0.5625 20.4375 C-0.61857422 19.25607422 -0.67464844 18.07464844 -0.73242188 16.85742188 C-0.97482635 11.08819538 -1.12515684 5.67579117 0 0 Z \",fill:\"#6A6B6A\",transform:\"translate(214,274)\"})),_path1009||(_path1009=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 3 0 3 -1.46533203 4.82177734 C-2.13935059 5.4864502 -2.81336914 6.15112305 -3.5078125 6.8359375 C-4.61769531 7.93808594 -4.61769531 7.93808594 -5.75 9.0625 C-6.53375 9.825625 -7.3175 10.58875 -8.125 11.375 C-8.88554688 12.13039062 -9.64609375 12.88578125 -10.4296875 13.6640625 C-14.47219643 17.65081269 -18.57048489 21.44789683 -23 25 C-23.66 24.67 -24.32 24.34 -25 24 C-22.15009378 21.12075054 -19.29431083 18.24739749 -16.4375 15.375 C-15.63763672 14.56675781 -14.83777344 13.75851563 -14.01367188 12.92578125 C-9.50079493 8.3944844 -4.92257541 4.08342497 0 0 Z \",fill:\"#F4F2F1\",transform:\"translate(868,155)\"})),_path1010||(_path1010=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.97 0.495 2.97 0.495 6 1 C6 3.31 6 5.62 6 8 C6.99 8.33 7.98 8.66 9 9 C7.3125 10.1875 7.3125 10.1875 5 11 C2.25 10.125 2.25 10.125 0 8 C-0.44501756 5.2035316 -0.23424471 2.85778543 0 0 Z \",fill:\"#F1EEF1\",transform:\"translate(12,511)\"})),_path1011||(_path1011=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.65394676 4.02784682 -4.46011355 6.97232018 -7.375 10.125 C-7.85710938 10.66253906 -8.33921875 11.20007813 -8.8359375 11.75390625 C-11.33758027 14.47988111 -13.51212528 16.66105283 -17 18 C-16.4164506 14.60733571 -15.33564677 12.95964862 -12.91015625 10.546875 C-12.29076172 9.928125 -11.67136719 9.309375 -11.03320312 8.671875 C-10.38287109 8.03765625 -9.73253906 7.4034375 -9.0625 6.75 C-8.09280273 5.77546875 -8.09280273 5.77546875 -7.10351562 4.78125 C-2.26702009 0 -2.26702009 0 0 0 Z \",fill:\"#F6F5F1\",transform:\"translate(1001,24)\"})),_path1012||(_path1012=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.67943176 2.90931813 6.64366344 5.69958685 9.578125 9.38671875 C11.86488616 11.98131314 14.49700753 14.15602777 17.1328125 16.38671875 C18.83703768 17.85919783 20.43024216 19.38636694 22 21 C21.67 21.99 21.34 22.98 21 24 C17.9997088 21.07380414 15.00934707 18.13792339 12.02783203 15.19262695 C11.01195893 14.19185072 9.99341103 13.19378218 8.97216797 12.19848633 C7.50559059 10.7682527 6.04887437 9.32859157 4.59375 7.88671875 C3.71396484 7.02264404 2.83417969 6.15856934 1.92773438 5.26831055 C0 3 0 3 0 0 Z \",fill:\"#DAD9D9\",transform:\"translate(688,681)\"})),_path1013||(_path1013=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 2.97 1 5.94 1 9 C-3.62 9.33 -8.24 9.66 -13 10 C-13 10.33 -13 10.66 -13 11 C-19.435 11.495 -19.435 11.495 -26 12 C-25.67 10.68 -25.34 9.36 -25 8 C-17.08 8 -9.16 8 -1 8 C-0.67 5.36 -0.34 2.72 0 0 Z \",fill:\"#737270\",transform:\"translate(125,63)\"})),_path1014||(_path1014=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.99 0.66 1.98 1 3 C2.32 2.67 3.64 2.34 5 2 C4.34 3.98 3.68 5.96 3 8 C1 8 1 8 -0.625 6.5 C-1.07875 6.005 -1.5325 5.51 -2 5 C-2 5.66 -2 6.32 -2 7 C-5.28696233 7.79953138 -6.71023192 8.09658936 -10 7 C-10 5.68 -10 4.36 -10 3 C-2.25 2.875 -2.25 2.875 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#5F5F62\",transform:\"translate(40,913)\"})),_path1015||(_path1015=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 6.27 0 12.54 0 19 C-0.33 19 -0.66 19 -1 19 C-1 13.39 -1 7.78 -1 2 C-9.91 2 -18.82 2 -28 2 C-28 1.67 -28 1.34 -28 1 C-23.70906486 0.636565 -19.41718655 0.2858188 -15.125 -0.0625 C-13.90167969 -0.16626953 -12.67835937 -0.27003906 -11.41796875 -0.37695312 C-10.25136719 -0.47041016 -9.08476563 -0.56386719 -7.8828125 -0.66015625 C-6.80402832 -0.74918213 -5.72524414 -0.83820801 -4.61376953 -0.92993164 C-2 -1 -2 -1 0 0 Z \",fill:\"#696867\",transform:\"translate(128,693)\"})),_path1016||(_path1016=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C2.25234375 1.53109375 1.5046875 2.0621875 0.734375 2.609375 C-0.25046875 3.31578125 -1.2353125 4.0221875 -2.25 4.75 C-3.22453125 5.44609375 -4.1990625 6.1421875 -5.203125 6.859375 C-7.69233296 8.76452299 -9.84971939 10.72684621 -12 13 C-12 10.03 -12 7.06 -12 4 C-11.21753906 3.79503906 -10.43507813 3.59007812 -9.62890625 3.37890625 C-8.61699219 3.10949219 -7.60507812 2.84007812 -6.5625 2.5625 C-5.55316406 2.29566406 -4.54382813 2.02882813 -3.50390625 1.75390625 C-1.08247999 1.24021923 -1.08247999 1.24021923 0 0 Z \",fill:\"#8A8989\",transform:\"translate(540,487)\"})),_path1017||(_path1017=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.99 0.66 1.98 1 3 C-4.94 8.94 -10.88 14.88 -17 21 C-17.33 20.01 -17.66 19.02 -18 18 C-12 12 -6 6 0 0 Z \",fill:\"#E9E8E3\",transform:\"translate(919,103)\"})),_path1018||(_path1018=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.27075883 -0.0580476 6.54138524 -0.09361165 9.8125 -0.125 C10.74126953 -0.14175781 11.67003906 -0.15851562 12.62695312 -0.17578125 C13.51962891 -0.18222656 14.41230469 -0.18867187 15.33203125 -0.1953125 C16.15421143 -0.20578613 16.9763916 -0.21625977 17.82348633 -0.22705078 C20 0 20 0 23 2 C18.91117983 2.97945122 15.07361649 3.13391426 10.875 3.125 C9.65554688 3.12757813 8.43609375 3.13015625 7.1796875 3.1328125 C4 3 4 3 1 2 C0.67 3.32 0.34 4.64 0 6 C0 4.02 0 2.04 0 0 Z \",fill:\"#838382\",transform:\"translate(730,765)\"})),_path1019||(_path1019=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 1.32 0.66 2.64 1 4 C-0.32 4.33 -1.64 4.66 -3 5 C-3 5.66 -3 6.32 -3 7 C-7.47058824 11 -7.47058824 11 -10 11 C-10 11.66 -10 12.32 -10 13 C-11.64453125 14.65625 -11.64453125 14.65625 -13.8125 16.5 C-14.52019531 17.1084375 -15.22789062 17.716875 -15.95703125 18.34375 C-18 20 -18 20 -21 22 C-19.66893869 19.04405374 -18.214922 16.96711134 -15.91796875 14.6875 C-15.31533203 14.08679688 -14.71269531 13.48609375 -14.09179688 12.8671875 C-13.46337891 12.25101563 -12.83496094 11.63484375 -12.1875 11 C-11.57068359 10.38382813 -10.95386719 9.76765625 -10.31835938 9.1328125 C-7.02457968 5.87053548 -3.6944564 2.81482392 0 0 Z \",fill:\"#595754\",transform:\"translate(482,552)\"})),_path1020||(_path1020=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.61 0 11.22 0 17 0 C17 1.32 17 2.64 17 4 C9.57142857 4.14285714 9.57142857 4.14285714 6 3 C5.67 3.99 5.34 4.98 5 6 C4.896875 5.360625 4.79375 4.72125 4.6875 4.0625 C4.3471875 3.0415625 4.3471875 3.0415625 4 2 C3.01 1.67 2.02 1.34 1 1 C0.67 1.99 0.34 2.98 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#D3D5D4\",transform:\"translate(12,496)\"})),_path1021||(_path1021=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C4.43558715 3.71779358 8.35899893 3.40446288 12.15234375 3.62109375 C15 4 15 4 18 6 C10.08 6 2.16 6 -6 6 C-4 4 -2 2 0 0 Z \",fill:\"#7A7571\",transform:\"translate(985,42)\"})),_path1022||(_path1022=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-3.61251516 4.56048012 -6.98797445 8.01665146 -12 11 C-11.34 7.7 -10.68 4.4 -10 1 C-6.41220825 0.10305206 -3.65381163 -0.08304117 0 0 Z \",fill:\"#898584\",transform:\"translate(108,913)\"})),_path1023||(_path1023=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.99 0.66 1.98 1 3 C-1.2207461 5.27919862 -3.45302104 7.54676959 -5.6875 9.8125 C-6.31333984 10.45509766 -6.93917969 11.09769531 -7.58398438 11.75976562 C-10.84322105 15.05313044 -13.83260622 17.85654125 -18 20 C-16.5735422 16.7413364 -14.83295838 14.5975146 -12.3046875 12.109375 C-11.23154297 11.04589844 -11.23154297 11.04589844 -10.13671875 9.9609375 C-9.39035156 9.23132813 -8.64398437 8.50171875 -7.875 7.75 C-7.12089844 7.00492188 -6.36679687 6.25984375 -5.58984375 5.4921875 C-3.73099228 3.6568658 -1.86762995 1.8263809 0 0 Z \",fill:\"#EDECE9\",transform:\"translate(900,122)\"})),_path1024||(_path1024=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.4 -0.49230769 6.4 -0.49230769 9.4375 2 C10.2109375 2.99 10.2109375 2.99 11 4 C10.67 4.66 10.34 5.32 10 6 C8.54119891 5.85892253 7.08296449 5.71197585 5.625 5.5625 C4.40683594 5.44068359 4.40683594 5.44068359 3.1640625 5.31640625 C1 5 1 5 -1 4 C-0.67 2.68 -0.34 1.36 0 0 Z \",fill:\"#56585B\",transform:\"translate(50,916)\"})),_path1025||(_path1025=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C2.67 1.98 2.34 3.96 2 6 C1.34 6 0.68 6 0 6 C0 6.66 0 7.32 0 8 C-2.64 8 -5.28 8 -8 8 C-8 7.34 -8 6.68 -8 6 C-7.34 6 -6.68 6 -6 6 C-5.34 4.68 -4.68 3.36 -4 2 C-2.68 2 -1.36 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#7B7976\",transform:\"translate(300,729)\"})),_path1026||(_path1026=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.3584202 3.04332765 -2.88463024 5.12309151 -5.2578125 7.453125 C-5.88300781 8.071875 -6.50820313 8.690625 -7.15234375 9.328125 C-7.80332031 9.96234375 -8.45429688 10.5965625 -9.125 11.25 C-9.78371094 11.8996875 -10.44242187 12.549375 -11.12109375 13.21875 C-12.74296643 14.81711727 -14.3693281 16.41061897 -16 18 C-16.66 17.34 -17.32 16.68 -18 16 C-15.38308836 13.32529045 -12.75518292 10.66165519 -10.125 8 C-9.00544922 6.8553125 -9.00544922 6.8553125 -7.86328125 5.6875 C-7.14785156 4.965625 -6.43242187 4.24375 -5.6953125 3.5 C-5.03547363 2.8296875 -4.37563477 2.159375 -3.69580078 1.46875 C-2 0 -2 0 0 0 Z \",fill:\"#D9D8D8\",transform:\"translate(321,706)\"})),_path1027||(_path1027=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.17539996 0.92652701 2.34010577 1.86663387 3.5 2.8125 C4.1496875 3.33457031 4.799375 3.85664063 5.46875 4.39453125 C7 6 7 6 7 9 C4.36 9 1.72 9 -1 9 C-1.09765625 2.84765625 -1.09765625 2.84765625 -1 1 C-0.67 0.67 -0.34 0.34 0 0 Z \",fill:\"#8F8E8D\",transform:\"translate(305,298)\"})),_path1028||(_path1028=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.33117943 0.32310178 8.48390142 3.26814083 12 7 C13.91812417 9.53399248 15.73515926 12.07505579 17 15 C16.67 15.66 16.34 16.32 16 17 C15.43285278 16.38741333 15.43285278 16.38741333 14.85424805 15.76245117 C13.13260958 13.90356726 11.41006414 12.04552614 9.6875 10.1875 C9.09259766 9.54490234 8.49769531 8.90230469 7.88476562 8.24023438 C7.30791016 7.61826172 6.73105469 6.99628906 6.13671875 6.35546875 C5.60780029 5.78465576 5.07888184 5.21384277 4.53393555 4.62573242 C3.05064301 3.0536737 1.5362705 1.52016282 0 0 Z \",fill:\"#82807F\",transform:\"translate(870,863)\"})),_path1029||(_path1029=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-4.33333333 4.33333333 -8.66666667 8.66666667 -13 13 C-12.125 8.25 -12.125 8.25 -11 6 C-10.34 6 -9.68 6 -9 6 C-8.731875 5.030625 -8.46375 4.06125 -8.1875 3.0625 C-7.795625 2.051875 -7.40375 1.04125 -7 0 C-3.86650268 -1.04449911 -3.01031744 -0.93423645 0 0 Z \",fill:\"#908884\",transform:\"translate(37,984)\"})),_path1030||(_path1030=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.02689449 2.95839355 1.04678741 5.91654427 1.0625 8.875 C1.07087891 9.71675781 1.07925781 10.55851563 1.08789062 11.42578125 C1.09111328 12.23144531 1.09433594 13.03710938 1.09765625 13.8671875 C1.10289307 14.61081543 1.10812988 15.35444336 1.11352539 16.12060547 C1 18 1 18 0 20 C2.64 20 5.28 20 8 20 C8 20.33 8 20.66 8 21 C6.88625 21.12375 5.7725 21.2475 4.625 21.375 C0.96896323 21.6465813 0.96896323 21.6465813 -1 24 C-1 23.01 -1 22.02 -1 21 C-4.63 21 -8.26 21 -12 21 C-12 20.67 -12 20.34 -12 20 C-8.37 20 -4.74 20 -1 20 C-0.67 13.4 -0.34 6.8 0 0 Z \",fill:\"#7C7B7A\",transform:\"translate(792,959)\"})),_path1031||(_path1031=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.33 0 0.66 0 1 C-0.88042969 1.03738281 -1.76085937 1.07476562 -2.66796875 1.11328125 C-3.82941406 1.17902344 -4.99085938 1.24476563 -6.1875 1.3125 C-7.33605469 1.37050781 -8.48460937 1.42851562 -9.66796875 1.48828125 C-15.14984035 2.33016306 -18.32742819 5.05801978 -22.125 8.9375 C-22.78757812 9.60652344 -23.45015625 10.27554688 -24.1328125 10.96484375 C-25.9027762 12.89403012 -27.4707529 14.87710107 -29 17 C-29.33 16.01 -29.66 15.02 -30 14 C-20.81470918 2.74801875 -14.79093326 -2.42033453 0 0 Z \",fill:\"#565352\",transform:\"translate(834,207)\"})),_path1032||(_path1032=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.97 0.99 5.94 1.98 9 3 C9 4.32 9 5.64 9 7 C2.6 7.36923077 2.6 7.36923077 -0.4375 5.5 C-0.953125 5.005 -1.46875 4.51 -2 4 C-1.34 2.68 -0.68 1.36 0 0 Z \",fill:\"#4E4F58\",transform:\"translate(26,30)\"})),_path1033||(_path1033=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.66 0 1.32 0 2 C-4.09003859 3.14982602 -8.03177051 3.11094256 -12.25 3.0625 C-12.99507813 3.05798828 -13.74015625 3.05347656 -14.5078125 3.04882812 C-16.3385764 3.03709246 -18.16929873 3.0191585 -20 3 C-20 2.34 -20 1.68 -20 1 C-13.30324864 -0.03026944 -6.7685324 -0.10152799 0 0 Z \",fill:\"#6A6B69\",transform:\"translate(272,613)\"})),_path1034||(_path1034=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.96 0 7.92 0 12 0 C11.67 1.65 11.34 3.3 11 5 C7.7 5 4.4 5 1 5 C0.67 3.35 0.34 1.7 0 0 Z \",fill:\"#696667\",transform:\"translate(18,499)\"})),_path1035||(_path1035=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 3.92823101 -1.51754449 5.06618894 -4 8 C-5.31361698 10.62723396 -5.21253909 12.72610561 -5.31640625 15.6640625 C-5.35830078 16.78554688 -5.40019531 17.90703125 -5.44335938 19.0625 C-5.48267578 20.238125 -5.52199219 21.41375 -5.5625 22.625 C-5.60568359 23.80835938 -5.64886719 24.99171875 -5.69335938 26.2109375 C-5.79967426 29.14050328 -5.90170642 32.07015588 -6 35 C-6.33 35 -6.66 35 -7 35 C-7.4027698 30.67022463 -7.70956558 26.33864344 -8 22 C-8.11472656 20.77925781 -8.22945312 19.55851562 -8.34765625 18.30078125 C-8.88198775 9.31429685 -8.88198775 9.31429685 -6.21484375 5.33984375 C-4.23751396 3.36251396 -2.26857138 1.63053568 0 0 Z \",fill:\"#61605B\",transform:\"translate(551,479)\"})),_path1036||(_path1036=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 1.32 0.66 2.64 1 4 C1.66 4 2.32 4 3 4 C3.33 4.99 3.66 5.98 4 7 C2.90112305 8.48168945 2.90112305 8.48168945 1 10 C-1.91088867 10.34057617 -1.91088867 10.34057617 -5.41796875 10.29296875 C-6.67158203 10.28330078 -7.92519531 10.27363281 -9.21679688 10.26367188 C-10.52712891 10.23853516 -11.83746094 10.21339844 -13.1875 10.1875 C-14.52277163 10.17244967 -15.85805937 10.15876187 -17.19335938 10.14648438 C-20.46264576 10.11107694 -23.73112093 10.0616889 -27 10 C-27 9.67 -27 9.34 -27 9 C-18.09 9 -9.18 9 0 9 C0 6.03 0 3.06 0 0 Z \",fill:\"#504F4E\",transform:\"translate(303,712)\"})),_path1037||(_path1037=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.475 0.99 2.475 0.99 5 2 C5 2.66 5 3.32 5 4 C5.87978516 4.37318359 5.87978516 4.37318359 6.77734375 4.75390625 C9.31056333 6.17411196 10.70985353 7.71183746 12.5625 9.9375 C14.6269098 12.39732014 16.69358543 14.76368922 19 17 C18.34 17.66 17.68 18.32 17 19 C16.61070312 18.53851563 16.22140625 18.07703125 15.8203125 17.6015625 C11.42831754 12.48094165 6.76838956 7.71579011 1.94140625 3.00390625 C0 1 0 1 0 0 Z \",fill:\"#D4D3D5\",transform:\"translate(376,367)\"})),_path1038||(_path1038=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 1.65 1 3.3 1 5 C10.24 5 19.48 5 29 5 C29 5.33 29 5.66 29 6 C27.83428467 6.029729 27.83428467 6.029729 26.64501953 6.06005859 C23.13799309 6.15507009 19.63158206 6.26484559 16.125 6.375 C14.29001953 6.42140625 14.29001953 6.42140625 12.41796875 6.46875 C11.25136719 6.50742187 10.08476562 6.54609375 8.8828125 6.5859375 C7.80402832 6.6173584 6.72524414 6.6487793 5.61376953 6.68115234 C2.84238346 6.74676322 2.84238346 6.74676322 1 9 C-2.125 9.125 -2.125 9.125 -5 9 C-5 8.67 -5 8.34 -5 8 C-3.35 8 -1.7 8 0 8 C0 5.36 0 2.72 0 0 Z \",fill:\"#767373\",transform:\"translate(275,864)\"})),_path1039||(_path1039=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C-2.61 6.28 -8.22 11.56 -14 17 C-14.33 16.01 -14.66 15.02 -15 14 C-10.05 9.38 -5.1 4.76 0 0 Z \",fill:\"#E6E5E3\",transform:\"translate(187,835)\"})),_path1040||(_path1040=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.94324199 -0.0974442 5.82591608 -0.10954553 9.18359375 2.12890625 C8.50780273 2.14872559 7.83201172 2.16854492 7.13574219 2.18896484 C4.06797331 2.28433863 1.00087377 2.3939679 -2.06640625 2.50390625 C-3.66162109 2.5503125 -3.66162109 2.5503125 -5.2890625 2.59765625 C-6.82626953 2.65566406 -6.82626953 2.65566406 -8.39453125 2.71484375 C-9.3371582 2.74626465 -10.27978516 2.77768555 -11.25097656 2.81005859 C-13.92851591 3.14283994 -15.56245198 3.66303495 -17.81640625 5.12890625 C-18.47640625 6.11890625 -19.13640625 7.10890625 -19.81640625 8.12890625 C-20.00390625 5.75390625 -20.00390625 5.75390625 -19.81640625 3.12890625 C-14.18128311 -0.62784251 -6.62518567 0.30323319 0 0 Z \",fill:\"#7B7A77\",transform:\"translate(994.81640625,939.87109375)\"})),_path1041||(_path1041=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.27875 -0.061875 2.5575 -0.12375 3.875 -0.1875 C4.95394531 -0.23970703 4.95394531 -0.23970703 6.0546875 -0.29296875 C6.69664062 -0.19628906 7.33859375 -0.09960938 8 0 C8.66 0.99 9.32 1.98 10 3 C3.375 6 3.375 6 0 6 C0 4.02 0 2.04 0 0 Z \",fill:\"#74736F\",transform:\"translate(668,590)\"})),_path1042||(_path1042=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.41805831 0.28482368 2.83440379 0.57818144 4.25 0.875 C5.03890625 1.03742188 5.8278125 1.19984375 6.640625 1.3671875 C9 2 9 2 13 4 C3.43 4 -6.14 4 -16 4 C-16 3.67 -16 3.34 -16 3 C-7.585 2.505 -7.585 2.505 1 2 C0.67 1.34 0.34 0.68 0 0 Z \",fill:\"#747473\",transform:\"translate(623,509)\"})),_path1043||(_path1043=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.01458252 0.77714355 1.02916504 1.55428711 1.04418945 2.35498047 C1.11846978 5.86216688 1.21519589 9.3683801 1.3125 12.875 C1.33505859 14.09832031 1.35761719 15.32164062 1.38085938 16.58203125 C1.41630859 17.74863281 1.45175781 18.91523438 1.48828125 20.1171875 C1.51446533 21.19597168 1.54064941 22.27475586 1.56762695 23.38623047 C1.71031006 24.24877441 1.85299316 25.11131836 2 26 C2.99 26.66 3.98 27.32 5 28 C4.34 29.32 3.68 30.64 3 32 C3 31.34 3 30.68 3 30 C2.34 30 1.68 30 1 30 C0.67 29.01 0.34 28.02 0 27 C-2.00016466 25.79117904 -2.00016466 25.79117904 -4 25 C-2.68 25 -1.36 25 0 25 C0 16.75 0 8.5 0 0 Z \",fill:\"#555352\",transform:\"translate(364,308)\"})),_path1044||(_path1044=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.59846469 4.24908336 -4.8130392 6.82225739 -8.125 9.75 C-8.68832031 10.25660156 -9.25164062 10.76320313 -9.83203125 11.28515625 C-11.21651531 12.52884532 -12.60761488 13.76516305 -14 15 C-14.99 14.67 -15.98 14.34 -17 14 C-14.54921238 11.65863048 -12.08817454 9.32832922 -9.625 7 C-8.57699219 5.99839844 -8.57699219 5.99839844 -7.5078125 4.9765625 C-6.8375 4.34492187 -6.1671875 3.71328125 -5.4765625 3.0625 C-4.85861816 2.47597656 -4.24067383 1.88945313 -3.60400391 1.28515625 C-2 0 -2 0 0 0 Z \",fill:\"#E1DFDE\",transform:\"translate(131,892)\"})),_path1045||(_path1045=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C-4.27 7.27 -10.54 13.54 -17 20 C-17 16.45595664 -16.39010515 15.89732095 -14.125 13.3125 C-13.32449219 12.37857422 -13.32449219 12.37857422 -12.5078125 11.42578125 C-11 10 -11 10 -9 10 C-9 9.34 -9 8.68 -9 8 C-7.28515625 6.30859375 -7.28515625 6.30859375 -5.0625 4.4375 C-4.33160156 3.81746094 -3.60070312 3.19742188 -2.84765625 2.55859375 C-2.23792969 2.04425781 -1.62820312 1.52992188 -1 1 C-0.67 0.67 -0.34 0.34 0 0 Z \",fill:\"#F7F5F1\",transform:\"translate(229,794)\"})),_path1046||(_path1046=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.33 0.66 -0.66 1.32 -1 2 C-1.56509277 2.02505615 -2.13018555 2.0501123 -2.71240234 2.07592773 C-5.26683742 2.19179956 -7.8208955 2.31456537 -10.375 2.4375 C-11.26445313 2.47681641 -12.15390625 2.51613281 -13.0703125 2.55664062 C-13.92109375 2.59853516 -14.771875 2.64042969 -15.6484375 2.68359375 C-16.43395996 2.72025146 -17.21948242 2.75690918 -18.02880859 2.79467773 C-20.07523496 2.890891 -20.07523496 2.890891 -22 4 C-22.66 3.67 -23.32 3.34 -24 3 C-24 2.34 -24 1.68 -24 1 C-15.9874678 -0.03387512 -8.07094823 -0.10466648 0 0 Z \",fill:\"#555352\",transform:\"translate(882,936)\"})),_path1047||(_path1047=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.66 0.66 1.32 1 2 C0.55269531 2.50789062 0.10539062 3.01578125 -0.35546875 3.5390625 C-0.96003906 4.22742188 -1.56460937 4.91578125 -2.1875 5.625 C-2.82429688 6.34945312 -3.46109375 7.07390625 -4.1171875 7.8203125 C-5.7265641 9.68344972 -7.2760031 11.57707873 -8.8125 13.5 C-9.534375 14.325 -10.25625 15.15 -11 16 C-11.66 16 -12.32 16 -13 16 C-12.42308522 12.83145253 -11.58353113 11.21773541 -9.27734375 8.984375 C-8.73916016 8.45585938 -8.20097656 7.92734375 -7.64648438 7.3828125 C-7.08251953 6.84398437 -6.51855469 6.30515625 -5.9375 5.75 C-5.36966797 5.19570313 -4.80183594 4.64140625 -4.21679688 4.0703125 C-2.81787531 2.70665786 -1.40980886 1.35239583 0 0 Z \",fill:\"#6C6A67\",transform:\"translate(387,640)\"})),_path1048||(_path1048=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 6.93 2 13.86 2 21 C1.67 20.34 1.34 19.68 1 19 C0.34 19 -0.32 19 -1 19 C-0.67 12.73 -0.34 6.46 0 0 Z \",fill:\"#5C5C5C\",transform:\"translate(275,0)\"})),_path1049||(_path1049=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.09125955 2.21886329 7.07157732 4.86015272 10.3125 8.1875 C11.19550781 9.08855469 12.07851563 9.98960937 12.98828125 10.91796875 C13.98408203 11.94857422 13.98408203 11.94857422 15 13 C14.34 13.66 13.68 14.32 13 15 C10.82722286 12.88094537 8.66173092 10.75527122 6.5 8.625 C5.87996094 8.02171875 5.25992188 7.4184375 4.62109375 6.796875 C4.03457031 6.21679688 3.44804688 5.63671875 2.84375 5.0390625 C2.29912109 4.50490723 1.75449219 3.97075195 1.19335938 3.42041016 C0 2 0 2 0 0 Z \",fill:\"#E4E2E3\",transform:\"translate(775,770)\"})),_path1050||(_path1050=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.54822446 0.57881268 5.18422803 1.82692359 7.671875 4.37890625 C8.33574219 5.05244141 8.99960937 5.72597656 9.68359375 6.41992188 C10.36550781 7.12697266 11.04742188 7.83402344 11.75 8.5625 C12.44738281 9.27341797 13.14476562 9.98433594 13.86328125 10.71679688 C15.5824658 12.47130714 17.29425872 14.23243352 19 16 C16 16 16 16 14.23828125 14.49609375 C13.60277344 13.81675781 12.96726562 13.13742187 12.3125 12.4375 C8.86482096 8.84270294 5.27318352 5.55947609 1.46875 2.34765625 C0.9840625 1.90292969 0.499375 1.45820312 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#DBD8D6\",transform:\"translate(725,720)\"})),_path1051||(_path1051=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.31 0 4.62 0 7 0 C6.88637738 1.4800841 6.75877092 2.95910074 6.625 4.4375 C6.55539062 5.26121094 6.48578125 6.08492188 6.4140625 6.93359375 C6.27742188 7.61550781 6.14078125 8.29742187 6 9 C5.01 9.495 5.01 9.495 4 10 C3.32845067 8.71086513 2.66291141 7.41859796 2 6.125 C1.62875 5.40570313 1.2575 4.68640625 0.875 3.9453125 C0 2 0 2 0 0 Z \",fill:\"#797B7B\",transform:\"translate(387,464)\"})),_path1052||(_path1052=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C-3.61 6.61 -9.22 12.22 -15 18 C-15 12.78391019 -10.50427167 9.58349868 -7 6 C-4.72395669 3.90689101 -2.40160434 1.95130352 0 0 Z \",fill:\"#E4E4E3\",transform:\"translate(602,376)\"})),_path1053||(_path1053=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.03708705 1.34981647 5.03741247 2.83916739 7.3125 5.25 C10.69808043 8.74550187 14.26855998 11.87777468 18 15 C17.67 15.99 17.34 16.98 17 18 C14.16266225 15.19151503 11.33081251 12.37756077 8.5 9.5625 C7.68917969 8.76005859 6.87835938 7.95761719 6.04296875 7.13085938 C5.27597656 6.36708984 4.50898438 5.60332031 3.71875 4.81640625 C3.00654297 4.10943604 2.29433594 3.40246582 1.56054688 2.67407227 C0 1 0 1 0 0 Z \",fill:\"#EFEEEC\",transform:\"translate(142,137)\"})),_path1054||(_path1054=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.625 -0.1875 2.625 -0.1875 5 0 C5 2.64 5 5.28 5 8 C1.34683329 6.75023244 0.21934164 6.32901247 -2 3 C-1.34 2.01 -0.68 1.02 0 0 Z \",fill:\"#747270\",transform:\"translate(152,140)\"})),_path1055||(_path1055=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C-0.85461839 6.41234476 -6.54194956 10.78950394 -12 15 C-12.66 15.66 -13.32 16.32 -14 17 C-14 14 -14 14 -12.64453125 12.3515625 C-12.03996094 11.78179688 -11.43539062 11.21203125 -10.8125 10.625 C-10.17570312 10.01527344 -9.53890625 9.40554688 -8.8828125 8.77734375 C-8.26148437 8.19082031 -7.64015625 7.60429688 -7 7 C-5.6078125 5.6078125 -5.6078125 5.6078125 -4.1875 4.1875 C-2.09375 2.09375 -2.09375 2.09375 0 0 Z \",fill:\"#E3DDDB\",transform:\"translate(75,945)\"})),_path1056||(_path1056=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.96260189 4.82082706 10.96679794 10.22494276 16 16 C15.67 16.66 15.34 17.32 15 18 C10.73512296 13.82828775 6.713443 9.67618748 3 5 C2.01 4.34 1.02 3.68 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#D6D6D4\",transform:\"translate(425,413)\"})),_path1057||(_path1057=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C2.360625 1.61875 1.72125 2.2375 1.0625 2.875 C-3.14668062 7.07201536 -7.04656399 11.56422757 -11 16 C-11 10.37522089 -5.96398137 5.84998132 -2.125 2 C-1.42375 1.34 -0.7225 0.68 0 0 Z \",fill:\"#EBEAEA\",transform:\"translate(678,342)\"})),_path1058||(_path1058=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.06546953 3.1964086 1.07427838 5.65747276 1 9 C-1.64 9 -4.28 9 -7 9 C-6.02180976 7.68677212 -5.0424189 6.37443848 -4.0625 5.0625 C-3.51722656 4.33160156 -2.97195312 3.60070312 -2.41015625 2.84765625 C-1 1 -1 1 0 0 Z \",fill:\"#858382\",transform:\"translate(7,1015)\"})),_path1059||(_path1059=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.62 0 9.24 0 14 0 C13.67 0.99 13.34 1.98 13 3 C8.71 3 4.42 3 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#575554\",transform:\"translate(730,871)\"})),_path1060||(_path1060=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.41459584 0.40226457 6.53697056 3.40387125 9.25 6.5625 C9.70890625 7.08263672 10.1678125 7.60277344 10.640625 8.13867188 C11.7682143 9.41895555 12.88517315 10.70858798 14 12 C13.67 12.66 13.34 13.32 13 14 C12.56429687 13.55269531 12.12859375 13.10539063 11.6796875 12.64453125 C8.74649716 9.66689863 5.83335543 6.79481674 2.5625 4.1875 C1.716875 3.465625 0.87125 2.74375 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#E2E0DE\",transform:\"translate(871,866)\"})),_path1061||(_path1061=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.99 0.66 1.98 1 3 C0.25556641 3.61875 0.25556641 3.61875 -0.50390625 4.25 C-4.96075038 8.03874036 -8.85542737 11.96234936 -12.5546875 16.49609375 C-13.03164062 16.99238281 -13.50859375 17.48867188 -14 18 C-14.66 18 -15.32 18 -16 18 C-14.6415798 14.95667235 -13.11536976 12.87690849 -10.7421875 10.546875 C-10.11699219 9.928125 -9.49179688 9.309375 -8.84765625 8.671875 C-8.19667969 8.03765625 -7.54570312 7.4034375 -6.875 6.75 C-6.21628906 6.1003125 -5.55757812 5.450625 -4.87890625 4.78125 C-3.25703357 3.18288273 -1.6306719 1.58938103 0 0 Z \",fill:\"#7B7877\",transform:\"translate(204,821)\"})),_path1062||(_path1062=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.26929552 1.90394328 2.52149195 3.81948735 3.75 5.75 C6.27361491 9.39522153 9.06062733 12.68830679 12 16 C7.99617055 15.47815257 6.3933805 13.61746557 3.8125 10.625 C2.77029297 9.43777344 2.77029297 9.43777344 1.70703125 8.2265625 C0 6 0 6 -1 3 C-0.67 2.01 -0.34 1.02 0 0 Z \",fill:\"#D5D4D3\",transform:\"translate(651,640)\"})),_path1063||(_path1063=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.66666667 4.66666667 9.33333333 9.33333333 14 14 C13.34 14.66 12.68 15.32 12 16 C11.24074219 15.16855469 10.48148438 14.33710938 9.69921875 13.48046875 C8.69534886 12.38277925 7.6914406 11.28512484 6.6875 10.1875 C6.18798828 9.64029297 5.68847656 9.09308594 5.17382812 8.52929688 C2.83056872 5.96878163 0.48855146 3.42060466 -2 1 C-1.34 0.67 -0.68 0.34 0 0 Z \",fill:\"#D5D3D2\",transform:\"translate(129,122)\"})),_path1064||(_path1064=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C3 1.66 3 2.32 3 3 C3.99 2.67 4.98 2.34 6 2 C6.99 3.485 6.99 3.485 8 5 C7.34 5 6.68 5 6 5 C5.67 6.32 5.34 7.64 5 9 C4.34 9 3.68 9 3 9 C2.731875 8.401875 2.46375 7.80375 2.1875 7.1875 C1.01506533 5.02775192 -0.19369282 3.64209744 -2 2 C-1.34 2 -0.68 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#575759\",transform:\"translate(38,918)\"})),_path1065||(_path1065=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.99 0.66 1.98 1 3 C3.31 3.33 5.62 3.66 8 4 C8 3.34 8 2.68 8 2 C12.75 2.875 12.75 2.875 15 4 C15 4.66 15 5.32 15 6 C11.34142468 7.31534494 8.91973519 6.65468309 5.25 5.5625 C4.26515625 5.27503906 3.2803125 4.98757813 2.265625 4.69140625 C1.14414063 4.34916016 1.14414063 4.34916016 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#E7E4E5\",transform:\"translate(12,502)\"})),_path1066||(_path1066=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.97 0 5.94 0 9 0 C8.67 5.61 8.34 11.22 8 17 C7.67 17 7.34 17 7 17 C6.67 11.72 6.34 6.44 6 1 C4.02 1 2.04 1 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#686866\",transform:\"translate(90,72)\"})),_path1067||(_path1067=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 0.66 0 1.32 0 2 C-0.70125 2.556875 -1.4025 3.11375 -2.125 3.6875 C-5.10774407 6.0866637 -7.29594533 8.6302638 -9.66796875 11.609375 C-10.10753906 12.06828125 -10.54710937 12.5271875 -11 13 C-11.66 13 -12.32 13 -13 13 C-13 13.66 -13 14.32 -13 15 C-13.66 14.67 -14.32 14.34 -15 14 C-13.87050952 10.61152855 -12.87716782 9.80305816 -10.1875 7.5625 C-7.88734132 5.62032666 -5.72884408 3.7217084 -3.625 1.5625 C-2 0 -2 0 0 0 Z \",fill:\"#595451\",transform:\"translate(839,188)\"})),_path1068||(_path1068=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.07376031 1.61010527 6.76507069 4.53822271 9.75 7.625 C10.25660156 8.140625 10.76320313 8.65625 11.28515625 9.1875 C12.52803902 10.45383339 13.76465276 11.7263144 15 13 C14.67 13.66 14.34 14.32 14 15 C11.65864102 12.88370326 9.32835941 10.75558371 7 8.625 C6.33226562 8.02171875 5.66453125 7.4184375 4.9765625 6.796875 C4.34492187 6.21679688 3.71328125 5.63671875 3.0625 5.0390625 C2.47597656 4.50490723 1.88945313 3.97075195 1.28515625 3.42041016 C0 2 0 2 0 0 Z \",fill:\"#F5F4F5\",transform:\"translate(829,824)\"})),_path1069||(_path1069=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.66 1.32 1.32 2 2 C-2.95 6.62 -7.9 11.24 -13 16 C-13.66 15.67 -14.32 15.34 -15 15 C-10.05 10.05 -5.1 5.1 0 0 Z \",fill:\"#ECE9E6\",transform:\"translate(335,690)\"})),_path1070||(_path1070=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-2.87494471 3.98069267 -5.82117329 6.43571997 -10 9 C-9.65544802 5.89903219 -9.15182706 4.20062862 -7.25 1.6875 C-4.58761061 -0.30929204 -3.25047681 -0.36116409 0 0 Z \",fill:\"#8F8D8B\",transform:\"translate(437,591)\"})),_path1071||(_path1071=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.61010527 4.07376031 -4.53822271 6.76507069 -7.625 9.75 C-8.140625 10.25660156 -8.65625 10.76320313 -9.1875 11.28515625 C-10.45383339 12.52803902 -11.7263144 13.76465276 -13 15 C-13.66 14.67 -14.32 14.34 -15 14 C-12.88370326 11.65864102 -10.75558371 9.32835941 -8.625 7 C-8.02171875 6.33226562 -7.4184375 5.66453125 -6.796875 4.9765625 C-6.21679688 4.34492188 -5.63671875 3.71328125 -5.0390625 3.0625 C-4.23782959 2.18271484 -4.23782959 2.18271484 -3.42041016 1.28515625 C-2 0 -2 0 0 0 Z \",fill:\"#EFEEEC\",transform:\"translate(719,304)\"})),_path1072||(_path1072=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.92 0 15.84 0 24 0 C24 0.33 24 0.66 24 1 C22.7934375 1.04898438 21.586875 1.09796875 20.34375 1.1484375 C18.72914694 1.22353532 17.11456461 1.29908003 15.5 1.375 C14.70851563 1.4059375 13.91703125 1.436875 13.1015625 1.46875 C7.81871388 1.72856223 3.09256131 2.56333706 -2 4 C-1.34 2.68 -0.68 1.36 0 0 Z \",fill:\"#5E5B57\",transform:\"translate(43,980)\"})),_path1073||(_path1073=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C13.86 0.495 13.86 0.495 28 1 C28 1.33 28 1.66 28 2 C19.42 2 10.84 2 2 2 C2 2.66 2 3.32 2 4 C1.34 4 0.68 4 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#7C7A78\",transform:\"translate(944,868)\"})),_path1074||(_path1074=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2 2 2 2 2.23046875 4.96875 C2.21628906 6.1340625 2.20210937 7.299375 2.1875 8.5 C2.17783203 10.24796875 2.17783203 10.24796875 2.16796875 12.03125 C2 15 2 15 1 17 C-0.32 16.67 -1.64 16.34 -3 16 C-2.34 16 -1.68 16 -1 16 C-0.67 10.72 -0.34 5.44 0 0 Z \",fill:\"#5C5D5B\",transform:\"translate(215,754)\"})),_path1075||(_path1075=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 4.09632497 -1.55398196 5.76067881 -4 9 C-6.75 11.375 -6.75 11.375 -9 13 C-8.51286902 8.58489226 -7.14946803 6.69553355 -3.9375 3.6875 C-3.20402344 2.99011719 -2.47054688 2.29273438 -1.71484375 1.57421875 C-1.14894531 1.05472656 -0.58304687 0.53523437 0 0 Z \",fill:\"#726F6E\",transform:\"translate(329,698)\"})),_path1076||(_path1076=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.7425 0.763125 1.485 1.52625 2.25 2.3125 C4.823554 4.95571199 4.823554 4.95571199 7.3125 6.6875 C7.869375 7.120625 8.42625 7.55375 9 8 C9 8.66 9 9.32 9 10 C9.66 10 10.32 10 11 10 C11 10.66 11 11.32 11 12 C12.32 12.66 13.64 13.32 15 14 C14.34 14.66 13.68 15.32 13 16 C10.82404478 13.90474642 8.65936733 11.79972937 6.5 9.6875 C5.87996094 9.09259766 5.25992188 8.49769531 4.62109375 7.88476562 C4.03457031 7.30791016 3.44804687 6.73105469 2.84375 6.13671875 C2.02680664 5.34334106 2.02680664 5.34334106 1.19335938 4.53393555 C0 3 0 3 0 0 Z \",fill:\"#E2E0E0\",transform:\"translate(160,153)\"})),_path1077||(_path1077=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.01113235 1.4317521 6.94469549 3.98445693 10 8 C8.3125 8.8125 8.3125 8.8125 6 9 C2.77272377 6.37314725 0.47246642 4.25219775 0 0 Z \",fill:\"#999698\",transform:\"translate(71,71)\"})),_path1078||(_path1078=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 3 0 3 -1.86328125 5.2265625 C-2.67152344 6.01804687 -3.47976563 6.80953125 -4.3125 7.625 C-5.51326172 8.81996094 -5.51326172 8.81996094 -6.73828125 10.0390625 C-9 12 -9 12 -12 13 C-10.61536056 9.87250593 -9.00477577 7.7595015 -6.5625 5.375 C-5.96566406 4.78460937 -5.36882812 4.19421875 -4.75390625 3.5859375 C-3 2 -3 2 0 0 Z \",fill:\"#F4F3F1\",transform:\"translate(402,624)\"})),_path1079||(_path1079=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.99 0.66 1.98 1 3 C-2.63 6.3 -6.26 9.6 -10 13 C-10.66 12.34 -11.32 11.68 -12 11 C-8.04 7.37 -4.08 3.74 0 0 Z \",fill:\"#D2D0CB\",transform:\"translate(447,582)\"})),_path1080||(_path1080=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C2 6.28 2 11.56 2 17 C1.01 16.34 0.02 15.68 -1 15 C-0.67 10.05 -0.34 5.1 0 0 Z \",fill:\"#5D5A58\",transform:\"translate(214,190)\"})),_path1081||(_path1081=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.29 0 8.58 0 13 0 C13 0.99 13 1.98 13 3 C11.35 3.33 9.7 3.66 8 4 C8 3.34 8 2.68 8 2 C5.69 2 3.38 2 1 2 C0.67 1.34 0.34 0.68 0 0 Z \",fill:\"#787170\",transform:\"translate(136,870)\"})),_path1082||(_path1082=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.11728368 1.36508501 5.08663738 2.86919698 7.3125 5.4375 C7.84488281 6.03433594 8.37726562 6.63117187 8.92578125 7.24609375 C9.45751953 8.11427734 9.45751953 8.11427734 10 9 C9.67 9.99 9.34 10.98 9 12 C7.49405319 10.38050958 5.99539332 8.75424026 4.5 7.125 C3.6646875 6.22007812 2.829375 5.31515625 1.96875 4.3828125 C0 2 0 2 0 0 Z \",fill:\"#CCCBC9\",transform:\"translate(678,671)\"})),_path1083||(_path1083=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.33 3.63 1.66 7.26 2 11 C4.97 11.33 7.94 11.66 11 12 C11 12.33 11 12.66 11 13 C9.88625 13.103125 8.7725 13.20625 7.625 13.3125 C6.42875 13.539375 5.2325 13.76625 4 14 C3.01 15.485 3.01 15.485 2 17 C-1.84361434 11.31145078 -0.95342799 6.45574131 0 0 Z \",fill:\"#514F4F\",transform:\"translate(759,348)\"})),_path1084||(_path1084=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 0.66 2 1.32 2 2 C7.94 2.33 13.88 2.66 20 3 C20 3.33 20 3.66 20 4 C15.05 4 10.1 4 5 4 C4.67 4.99 4.34 5.98 4 7 C2 5.1875 2 5.1875 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#84807F\",transform:\"translate(194,184)\"})),_path1085||(_path1085=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.29 0 8.58 0 13 0 C13 0.66 13 1.32 13 2 C11.86111328 2.07347656 11.86111328 2.07347656 10.69921875 2.1484375 C9.70535156 2.22320313 8.71148437 2.29796875 7.6875 2.375 C6.20830078 2.47941406 6.20830078 2.47941406 4.69921875 2.5859375 C1.78471567 2.83865472 1.78471567 2.83865472 -1 5 C-0.67 3.35 -0.34 1.7 0 0 Z \",fill:\"#747471\",transform:\"translate(487,640)\"})),_path1086||(_path1086=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.40844718 3.21524305 -3.10344786 5.32183868 -5.625 7.75 C-6.57246094 8.67039062 -6.57246094 8.67039062 -7.5390625 9.609375 C-8.02117187 10.06828125 -8.50328125 10.5271875 -9 11 C-9.99 10.34 -10.98 9.68 -12 9 C-10.38050958 7.49405319 -8.75424026 5.99539332 -7.125 4.5 C-6.22007812 3.6646875 -5.31515625 2.829375 -4.3828125 1.96875 C-2 0 -2 0 0 0 Z \",fill:\"#E1E0DE\",transform:\"translate(390,636)\"})),_path1087||(_path1087=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.66 1.32 1.32 2 2 C-1.3 5.3 -4.6 8.6 -8 12 C-8.33 11.01 -8.66 10.02 -9 9 C-6.03 6.03 -3.06 3.06 0 0 Z \",fill:\"#EEEDEA\",transform:\"translate(929,93)\"})),_path1088||(_path1088=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C-0.97 4.3 -3.94 7.6 -7 11 C-7.33 9.68 -7.66 8.36 -8 7 C-5.53973429 4.12969001 -3.14510786 2.09673857 0 0 Z \",fill:\"#A29C9A\",transform:\"translate(77,941)\"})),_path1089||(_path1089=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C3 5.95 3 10.9 3 16 C2.67 16 2.34 16 2 16 C1.77213542 13.94921875 1.54427083 11.8984375 1.31640625 9.84765625 C1.18113386 7.98859771 1.18113386 7.98859771 0 7 C-0.04092937 4.66702567 -0.04241723 2.33294775 0 0 Z \",fill:\"#656463\",transform:\"translate(574,344)\"})),_path1090||(_path1090=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.3 0 6.6 0 10 0 C10.66 1.65 11.32 3.3 12 5 C6.76977608 3.86678482 4.40585465 3.30439099 0 0 Z \",fill:\"#DFDFE1\",transform:\"translate(28,912)\"})),_path1091||(_path1091=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.04254356 1.99954746 0.04080783 4.00041636 0 6 C-1 7 -1 7 -4.0625 7.0625 C-5.5165625 7.0315625 -5.5165625 7.0315625 -7 7 C-6.04004484 4.12013451 -3.56234645 0 0 0 Z \",fill:\"#6B6968\",transform:\"translate(188,838)\"})),_path1092||(_path1092=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 2.31 2 4.62 2 7 C-3.75 5.25 -3.75 5.25 -6 3 C-4.02 2.67 -2.04 2.34 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#8D8C8B\",transform:\"translate(696,361)\"})),_path1093||(_path1093=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C7.48291572 6.15034169 7.48291572 6.15034169 10 10 C9.67 10.66 9.34 11.32 9 12 C7.99403703 11.0479279 6.99538437 10.08812654 6 9.125 C5.443125 8.59132813 4.88625 8.05765625 4.3125 7.5078125 C3 6 3 6 3 4 C1.68 3.34 0.36 2.68 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#D0D0CF\",transform:\"translate(344,333)\"})),_path1094||(_path1094=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.48191452 1.88211596 6.03178994 3.5009599 8 7 C7.67 7.99 7.34 8.98 7 10 C5.82739389 8.71372289 4.6620717 7.42080217 3.5 6.125 C2.8503125 5.40570312 2.200625 4.68640625 1.53125 3.9453125 C0 2 0 2 0 0 Z \",fill:\"#D0D0CF\",transform:\"translate(956,948)\"})),_path1095||(_path1095=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 6.6 1 13.2 1 20 C2.65 20 4.3 20 6 20 C6 20.33 6 20.66 6 21 C4.02 21.33 2.04 21.66 0 22 C-1.22625047 19.54749907 -1.03425355 18.15689565 -0.87890625 15.4296875 C-0.83056641 14.53378906 -0.78222656 13.63789062 -0.73242188 12.71484375 C-0.67634766 11.77769531 -0.62027344 10.84054688 -0.5625 9.875 C-0.51029297 8.93011719 -0.45808594 7.98523437 -0.40429688 7.01171875 C-0.27443239 4.6741581 -0.1394613 2.33700455 0 0 Z \",fill:\"#6D6D6B\",transform:\"translate(514,52)\"})),_path1096||(_path1096=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C0.03 3.97 -2.94 6.94 -6 10 C-6.33 9.01 -6.66 8.02 -7 7 C-4.69 4.69 -2.38 2.38 0 0 Z \",fill:\"#E5DFD5\",transform:\"translate(47,973)\"})),_path1097||(_path1097=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 0 3.96 0 6 0 C4.60667426 3.36720387 3.0210714 4.9859524 0 7 C0 4.69 0 2.38 0 0 Z \",fill:\"#716F6E\",transform:\"translate(246,769)\"})),_path1098||(_path1098=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 0 3.3 0 5 0 C3.55746343 3.36591866 1.66735273 5.51047079 -1 8 C-1.66 7.67 -2.32 7.34 -3 7 C-2.01 4.69 -1.02 2.38 0 0 Z \",fill:\"#75716F\",transform:\"translate(822,194)\"})),_path1099||(_path1099=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.8203125 0.0234375 2.8203125 0.0234375 6.125 0.375 C7.22070312 0.48585938 8.31640625 0.59671875 9.4453125 0.7109375 C10.28835938 0.80632812 11.13140625 0.90171875 12 1 C12 1.33 12 1.66 12 2 C11.34773437 2.03738281 10.69546875 2.07476562 10.0234375 2.11328125 C4.68377043 2.51493762 0.6795908 3.16761609 -4 6 C-2.84826645 3.53199953 -1.95216435 1.95216435 0 0 Z \",fill:\"#5A5654\",transform:\"translate(953,72)\"})),_path1100||(_path1100=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.475 0.495 2.475 0.495 5 1 C5.12375 1.804375 5.2475 2.60875 5.375 3.4375 C5.684375 4.7059375 5.684375 4.7059375 6 6 C6.66 6.33 7.32 6.66 8 7 C4.65980694 6.40353695 2.49529367 5.31705841 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#E5E6EB\",transform:\"translate(45,929)\"})),_path1101||(_path1101=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.50884026 2.31883213 6.93906776 5.06451569 10 9 C7 9 7 9 5.17578125 7.5390625 C4.56089844 6.90742187 3.94601562 6.27578125 3.3125 5.625 C2.68988281 4.99851562 2.06726563 4.37203125 1.42578125 3.7265625 C0 2 0 2 0 0 Z \",fill:\"#D0CECC\",transform:\"translate(885,879)\"})),_path1102||(_path1102=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.66 1.32 1.32 2 2 C-0.64 4.64 -3.28 7.28 -6 10 C-6.66 9.34 -7.32 8.68 -8 8 C-5.36 5.36 -2.72 2.72 0 0 Z \",fill:\"#E3E0DC\",transform:\"translate(238,785)\"})),_path1103||(_path1103=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.31 0 4.62 0 7 0 C6.071875 0.495 6.071875 0.495 5.125 1 C1.98415875 3.95608588 1.82441798 6.80920859 1 11 C0.67 11 0.34 11 0 11 C0 7.37 0 3.74 0 0 Z \",fill:\"#7D7A7A\",transform:\"translate(97,669)\"})),_path1104||(_path1104=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C0.66666667 3.33333333 -1.66666667 5.66666667 -4 8 C-4.99 7.67 -5.98 7.34 -7 7 C-4.69 4.69 -2.38 2.38 0 0 Z \",fill:\"#5E5C58\",transform:\"translate(450,582)\"})),_path1105||(_path1105=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 1.32 1.32 2.64 2 4 C1.41734375 4.26554687 0.8346875 4.53109375 0.234375 4.8046875 C-2.06174228 6.03302996 -3.80356018 7.40314939 -5.75 9.125 C-6.36359375 9.66382813 -6.9771875 10.20265625 -7.609375 10.7578125 C-8.06828125 11.16773438 -8.5271875 11.57765625 -9 12 C-9 9 -9 9 -7.5390625 7.5 C-6.90742187 7.005 -6.27578125 6.51 -5.625 6 C-3.13659847 4.03385558 -1.8042713 2.70640694 0 0 Z \",fill:\"#C5BFB8\",transform:\"translate(575,455)\"})),_path1106||(_path1106=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.37462715 0.54723683 5.08235 1.0549 8 3 C8.1875 5.625 8.1875 5.625 8 8 C6.85073734 7.04578192 5.70569459 6.08647955 4.5625 5.125 C3.92441406 4.59132813 3.28632812 4.05765625 2.62890625 3.5078125 C1 2 1 2 0 0 Z \",fill:\"#7A7776\",transform:\"translate(721,384)\"})),_path1107||(_path1107=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.66 1.32 1.32 2 2 C-1.3 4.97 -4.6 7.94 -8 11 C-8.66 10.67 -9.32 10.34 -10 10 C-6.7 6.7 -3.4 3.4 0 0 Z \",fill:\"#EEEBEA\",transform:\"translate(853,169)\"})),_path1108||(_path1108=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.99 0.66 1.98 1 3 C-0.43359375 5.04296875 -0.43359375 5.04296875 -2.4375 7.1875 C-3.09621094 7.90292969 -3.75492188 8.61835938 -4.43359375 9.35546875 C-5.20896484 10.16951172 -5.20896484 10.16951172 -6 11 C-6.99 10.34 -7.98 9.68 -9 9 C-7.6078125 7.88625 -7.6078125 7.88625 -6.1875 6.75 C-3.72873042 4.70974439 -1.78352451 2.67528677 0 0 Z \",fill:\"#E4E2E0\",transform:\"translate(881,140)\"})),_path1109||(_path1109=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 0.99 1.98 0.99 4 2 C3.01 2.33 2.02 2.66 1 3 C1 8.61 1 14.22 1 20 C0.67 20 0.34 20 0 20 C0 13.4 0 6.8 0 0 Z \",fill:\"#858585\",transform:\"translate(98,96)\"})),_path1110||(_path1110=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.31 0 4.62 0 7 0 C7.33 0.99 7.66 1.98 8 3 C5.36 3.33 2.72 3.66 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#5C5E64\",transform:\"translate(29,22)\"})),_path1111||(_path1111=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.4375 2.0625 1.4375 2.0625 1 5 C-1.07017366 7.62982691 -3.36690452 9.93284133 -6 12 C-6.66 12 -7.32 12 -8 12 C-8 11.34 -8 10.68 -8 10 C-7.34 10 -6.68 10 -6 10 C-6 9.01 -6 8.02 -6 7 C-5.071875 6.6596875 -5.071875 6.6596875 -4.125 6.3125 C-1.38589791 4.62070165 -0.94975528 3.00755839 0 0 Z \",fill:\"#6B6563\",transform:\"translate(1004,14)\"})),_path1112||(_path1112=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.7952131 1.49097658 5.61042731 3.75700849 8 7 C7.01 7.33 6.02 7.66 5 8 C3.02 5.69 1.04 3.38 -1 1 C-0.67 0.67 -0.34 0.34 0 0 Z \",fill:\"#D3D1D1\",transform:\"translate(865,859)\"})),_path1113||(_path1113=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.19882812 0.15275391 1.19882812 0.15275391 2.421875 0.30859375 C3.02515625 0.39238281 3.6284375 0.47617187 4.25 0.5625 C2.25 2.5625 2.25 2.5625 -1.125 2.8125 C-4.38523324 2.58765633 -6.05632641 2.2864511 -8.75 0.5625 C-5.62819599 -0.40411363 -3.22916205 -0.42738909 0 0 Z \",fill:\"#7C7E7B\",transform:\"translate(748.75,765.4375)\"})),_path1114||(_path1114=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2 3.63 2 7.26 2 11 C2.99 11 3.98 11 5 11 C4.34 12.32 3.68 13.64 3 15 C2.01 14.34 1.02 13.68 0 13 C-0.29296875 9.9609375 -0.29296875 9.9609375 -0.1875 6.375 C-0.16042969 5.18648437 -0.13335937 3.99796875 -0.10546875 2.7734375 C-0.07066406 1.85820313 -0.03585937 0.94296875 0 0 Z \",fill:\"#5C5A5B\",transform:\"translate(393,615)\"})),_path1115||(_path1115=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.55603771 3.81936528 -3.95604931 6.26044438 -7 9 C-7.66 9 -8.32 9 -9 9 C-7.45665977 5.21180126 -4.44676575 0 0 0 Z \",fill:\"#EBEAE5\",transform:\"translate(471,561)\"})),_path1116||(_path1116=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65322266 0.01740234 1.65322266 0.01740234 3.33984375 0.03515625 C4.99693359 0.04869141 4.99693359 0.04869141 6.6875 0.0625 C7.54214844 0.07410156 8.39679687 0.08570313 9.27734375 0.09765625 C8.94734375 0.75765625 8.61734375 1.41765625 8.27734375 2.09765625 C6.25911458 2.06510417 4.24088542 2.03255208 2.22265625 2 C0.19548971 1.97116383 0.19548971 1.97116383 -1.72265625 3.09765625 C-2.85616159 5.11435452 -2.85616159 5.11435452 -3.72265625 7.09765625 C-3.76519981 5.09810879 -3.76346408 3.09723989 -3.72265625 1.09765625 C-2.72265625 0.09765625 -2.72265625 0.09765625 0 0 Z \",fill:\"#545351\",transform:\"translate(639.72265625,437.90234375)\"})),_path1117||(_path1117=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.66 1.32 1.32 2 2 C-0.31 4.31 -2.62 6.62 -5 9 C-5.99 8.67 -6.98 8.34 -8 8 C-5.36 5.36 -2.72 2.72 0 0 Z \",fill:\"#E9E6E1\",transform:\"translate(950,72)\"})),_path1118||(_path1118=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C6.93 0.495 6.93 0.495 14 1 C14 1.33 14 1.66 14 2 C6.08 2.495 6.08 2.495 -2 3 C-1.34 2.01 -0.68 1.02 0 0 Z \",fill:\"#7A7773\",transform:\"translate(1006,20)\"})),_path1119||(_path1119=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.62 0 9.24 0 14 0 C14.33 1.32 14.66 2.64 15 4 C14.38125 3.690625 13.7625 3.38125 13.125 3.0625 C8.81197706 1.5960722 4.5240004 1.33380974 0 1 C0 0.67 0 0.34 0 0 Z \",fill:\"#636363\",transform:\"translate(578,616)\"})),_path1120||(_path1120=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C-0.64 3.64 -3.28 6.28 -6 9 C-6.66 8.34 -7.32 7.68 -8 7 C-5.36 4.69 -2.72 2.38 0 0 Z \",fill:\"#DFDDDC\",transform:\"translate(726,296)\"})),_path1121||(_path1121=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 3.73869249 -0.90485692 4.36550705 -3.375 7.0625 C-4.31472656 8.10083984 -4.31472656 8.10083984 -5.2734375 9.16015625 C-6.49397067 10.46076965 -7.73879097 11.73879097 -9 13 C-9.33 12.01 -9.66 11.02 -10 10 C-6.7 6.7 -3.4 3.4 0 0 Z \",fill:\"#5C5B59\",transform:\"translate(814,211)\"})),_path1122||(_path1122=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C5.01113235 1.4317521 6.94469549 3.98445693 10 8 C7 8 7 8 5.17578125 6.50390625 C4.56089844 5.86324219 3.94601563 5.22257812 3.3125 4.5625 C2.68988281 3.92441406 2.06726563 3.28632812 1.42578125 2.62890625 C0 1 0 1 0 0 Z \",fill:\"#EBE9EA\",transform:\"translate(94,90)\"})),_path1123||(_path1123=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.5830577 4.2742558 -4.50568404 6.26531794 -8 9 C-8 6 -8 6 -6.7578125 4.39453125 C-5.94957031 3.61142578 -5.94957031 3.61142578 -5.125 2.8125 C-4.59132813 2.28269531 -4.05765625 1.75289062 -3.5078125 1.20703125 C-2 0 -2 0 0 0 Z \",fill:\"#F2EFEA\",transform:\"translate(1009,16)\"})),_path1124||(_path1124=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.63 0 7.26 0 11 0 C11 0.33 11 0.66 11 1 C8.36 1 5.72 1 3 1 C3.99 2.32 4.98 3.64 6 5 C5.67 5.66 5.34 6.32 5 7 C3.29115995 5.37660195 1.62553283 3.70680947 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#7A7A78\",transform:\"translate(952,942)\"})),_path1125||(_path1125=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 1.32 2.64 2.64 4 4 C3.34 4 2.68 4 2 4 C1.67 6.97 1.34 9.94 1 13 C0.67 13 0.34 13 0 13 C-0.19466332 11.20909747 -0.38051213 9.41723495 -0.5625 7.625 C-0.66691406 6.62726562 -0.77132812 5.62953125 -0.87890625 4.6015625 C-1 2 -1 2 0 0 Z \",fill:\"#7F7E7C\",transform:\"translate(822,819)\"})),_path1126||(_path1126=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.36591866 1.44253657 5.51047079 3.33264727 8 6 C7.67 6.99 7.34 7.98 7 9 C5.82737096 7.88121617 4.66204862 6.75476949 3.5 5.625 C2.8503125 4.99851562 2.200625 4.37203125 1.53125 3.7265625 C0 2 0 2 0 0 Z \",fill:\"#E1DFE0\",transform:\"translate(702,696)\"})),_path1127||(_path1127=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 0 3.3 0 5 0 C5 1.98 5 3.96 5 6 C3.0625 5.25 3.0625 5.25 1 4 C0.25 1.875 0.25 1.875 0 0 Z \",fill:\"#8A8788\",transform:\"translate(389,376)\"})),_path1128||(_path1128=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0.99 0.66 1.98 1 3 C-1.31 5.31 -3.62 7.62 -6 10 C-6.66 9.34 -7.32 8.68 -8 8 C-7.236875 7.4225 -6.47375 6.845 -5.6875 6.25 C-3.33799083 4.28296907 -1.70676495 2.51523256 0 0 Z \",fill:\"#E0DED9\",transform:\"translate(919,103)\"})),_path1129||(_path1129=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0 3.96130371 -1.34877125 4.82914401 -4 7.6875 C-4.7425 8.49574219 -5.485 9.30398437 -6.25 10.13671875 C-6.8275 10.75160156 -7.405 11.36648437 -8 12 C-8 8.03869629 -6.65122875 7.17085599 -4 4.3125 C-3.2575 3.50425781 -2.515 2.69601563 -1.75 1.86328125 C-1.1725 1.24839844 -0.595 0.63351563 0 0 Z \",fill:\"#79716B\",transform:\"translate(1001,25)\"})),_path1130||(_path1130=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.3 0 6.6 0 10 0 C7.53721199 2.46278801 5.29323018 2.99771255 2 4 C1.34 2.68 0.68 1.36 0 0 Z \",fill:\"#5A5858\",transform:\"translate(5,0)\"})),_path1131||(_path1131=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.66 1.32 1.32 2 2 C2.99 1.67 3.98 1.34 5 1 C5 1.66 5 2.32 5 3 C5.66 3.33 6.32 3.66 7 4 C6.01 4 5.02 4 4 4 C4.33 4.99 4.66 5.98 5 7 C3.0625 6.3125 3.0625 6.3125 1 5 C0.25 2.375 0.25 2.375 0 0 Z \",fill:\"#E2E4E6\",transform:\"translate(44,917)\"})),_path1132||(_path1132=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.5 2.3125 2.5 2.3125 5 5 C5 5.99 5 6.98 5 8 C0.125 5.375 0.125 5.375 -1 2 C-0.67 1.34 -0.34 0.68 0 0 Z \",fill:\"#CCCAC9\",transform:\"translate(911,903)\"})),_path1133||(_path1133=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8 0.66 8 1.32 8 2 C6.68 2 5.36 2 4 2 C3.67 2.99 3.34 3.98 3 5 C1.5 3.625 1.5 3.625 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#616161\",transform:\"translate(652,641)\"})),_path1134||(_path1134=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.33 5.28 1.66 10.56 2 16 C0.35 16 -1.3 16 -3 16 C-2.34 15.34 -1.68 14.68 -1 14 C-0.69940057 11.63490639 -0.50484988 9.25558119 -0.375 6.875 C-0.30023437 5.59367188 -0.22546875 4.31234375 -0.1484375 2.9921875 C-0.09945312 2.00476563 -0.05046875 1.01734375 0 0 Z \",fill:\"#545253\",transform:\"translate(821,548)\"})),_path1135||(_path1135=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 0 5.28 0 8 0 C8 1.32 8 2.64 8 4 C7.01 4 6.02 4 5 4 C5 3.34 5 2.68 5 2 C3.35 2 1.7 2 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#E9E9E9\",transform:\"translate(21,496)\"})),_path1136||(_path1136=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 0 3.3 0 5 0 C6.0625 1.8125 6.0625 1.8125 7 4 C6.67 4.99 6.34 5.98 6 7 C4.02 4.69 2.04 2.38 0 0 Z \",fill:\"#767576\",transform:\"translate(418,406)\"})),_path1137||(_path1137=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.14926266 0.95421808 2.29430541 1.91352045 3.4375 2.875 C4.07558594 3.40867187 4.71367187 3.94234375 5.37109375 4.4921875 C7 6 7 6 8 8 C4.65902615 7.40339753 2.45699871 6.36924875 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#7F7D7E\",transform:\"translate(333,325)\"})),_path1138||(_path1138=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C-0.96 4.465 -0.96 4.465 -5 8 C-5.66 7.67 -6.32 7.34 -7 7 C-4.69 4.69 -2.38 2.38 0 0 Z \",fill:\"#504D4C\",transform:\"translate(704,320)\"})),_path1139||(_path1139=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C-1.44615385 6.78461538 -1.44615385 6.78461538 -4.25 7.875 C-4.8275 7.91625 -5.405 7.9575 -6 8 C-4.55746343 4.63408134 -2.66735273 2.48952921 0 0 Z \",fill:\"#7F7C79\",transform:\"translate(908,117)\"})),_path1140||(_path1140=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C-0.96 4.465 -0.96 4.465 -5 8 C-5 5 -5 5 -2.5 2.3125 C-1.675 1.549375 -0.85 0.78625 0 0 Z \",fill:\"#585450\",transform:\"translate(917,108)\"})),_path1141||(_path1141=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.475 0.99 2.475 0.99 5 2 C4.67 2.99 4.34 3.98 4 5 C2.02 5 0.04 5 -2 5 C-1.34 3.35 -0.68 1.7 0 0 Z \",fill:\"#48494F\",transform:\"translate(26,30)\"})),_path1142||(_path1142=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.75 0.125 1.75 0.125 4 1 C6.25 4.0625 6.25 4.0625 8 7 C7.67 7.66 7.34 8.32 7 9 C5.83037314 7.69013727 4.66437056 6.3770374 3.5 5.0625 C2.8503125 4.33160156 2.200625 3.60070312 1.53125 2.84765625 C0 1 0 1 0 0 Z \",fill:\"#9A9795\",transform:\"translate(879,871)\"})),_path1143||(_path1143=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.7952131 1.49097658 5.61042731 3.75700849 8 7 C5 7 5 7 2.3125 4.625 C0 2 0 2 0 0 Z \",fill:\"#E2E0E0\",transform:\"translate(858,852)\"})),_path1144||(_path1144=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C0.88121617 2.17262904 -0.24523051 3.33795138 -1.375 4.5 C-2.00148438 5.1496875 -2.62796875 5.799375 -3.2734375 6.46875 C-5 8 -5 8 -7 8 C-5.50902342 4.2047869 -3.24299151 2.38957269 0 0 Z \",fill:\"#F1EEE9\",transform:\"translate(434,594)\"})),_path1145||(_path1145=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C3.33 2.98 3.66 4.96 4 7 C2.68 6.67 1.36 6.34 0 6 C0 4.02 0 2.04 0 0 Z \",fill:\"#6D6E6E\",transform:\"translate(370,532)\"})),_path1146||(_path1146=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0 1.32 0 2 0 C2.33 1.65 2.66 3.3 3 5 C0.69 5 -1.62 5 -4 5 C-2.71937515 3.2925002 -1.38232443 1.62626404 0 0 Z \",fill:\"#7B7B79\",transform:\"translate(629,408)\"})),_path1147||(_path1147=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 1.32 1.32 2.64 2 4 C1.01 4.99 0.02 5.98 -1 7 C-1.66 6.34 -2.32 5.68 -3 5 C-2.75 2.9375 -2.75 2.9375 -2 1 C-1.34 0.67 -0.68 0.34 0 0 Z \",fill:\"#7A7979\",transform:\"translate(799,213)\"})),_path1148||(_path1148=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C-0.64 3.64 -3.28 6.28 -6 9 C-6.33 7.68 -6.66 6.36 -7 5 C-6.01 5 -5.02 5 -4 5 C-4 4.34 -4 3.68 -4 3 C-2 1.375 -2 1.375 0 0 Z \",fill:\"#989594\",transform:\"translate(890,130)\"})),_path1149||(_path1149=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.88437779 1.29299694 4.87219421 2.65941363 7 5 C6.67 5.66 6.34 6.32 6 7 C5.38125 6.2265625 5.38125 6.2265625 4.75 5.4375 C4.1725 4.963125 3.595 4.48875 3 4 C0.83700789 4.22757731 0.83700789 4.22757731 -1 5 C-0.67 3.35 -0.34 1.7 0 0 Z \",fill:\"#747273\",transform:\"translate(67,66)\"})),_path1150||(_path1150=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.29299694 2.88437779 -2.65941363 4.87219421 -5 7 C-5.99 6.67 -6.98 6.34 -8 6 C-7.0479279 4.99403703 -6.08812654 3.99538437 -5.125 3 C-4.59132812 2.443125 -4.05765625 1.88625 -3.5078125 1.3125 C-2 0 -2 0 0 0 Z \",fill:\"#F0EFED\",transform:\"translate(196,828)\"})),_path1151||(_path1151=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 0 3.3 0 5 0 C5 1.32 5 2.64 5 4 C3.35 4 1.7 4 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#7B7B7B\",transform:\"translate(268,765)\"})),_path1152||(_path1152=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C1.35 2.98 -0.3 4.96 -2 7 C-2.99 6.34 -3.98 5.68 -5 5 C-3.35 3.35 -1.7 1.7 0 0 Z \",fill:\"#E1DFDC\",transform:\"translate(356,668)\"})),_path1153||(_path1153=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1.02708567 1.60407328 1.04643483 3.2082785 1.0625 4.8125 C1.07410156 5.70582031 1.08570313 6.59914062 1.09765625 7.51953125 C1 10 1 10 0 13 C-0.66 13 -1.32 13 -2 13 C-2 11.35 -2 9.7 -2 8 C-1.34 8 -0.68 8 0 8 C0 5.36 0 2.72 0 0 Z \",fill:\"#8E908A\",transform:\"translate(221,248)\"})),_path1154||(_path1154=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 1.32 0.66 2.64 1 4 C-0.65 3.67 -2.3 3.34 -4 3 C-4 3.66 -4 4.32 -4 5 C-4.99 5.33 -5.98 5.66 -7 6 C-7 5.01 -7 4.02 -7 3 C-2.77777778 0 -2.77777778 0 0 0 Z \",fill:\"#747172\",transform:\"translate(44,37)\"})),_path1155||(_path1155=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.25543229 0.34879632 4.01873107 1.02133261 6.25 3.5625 C6.8275 4.366875 7.405 5.17125 8 6 C5 6 5 6 3.61328125 4.6875 C2.40885417 3.125 1.20442708 1.5625 0 0 Z \",fill:\"#D9D7D4\",transform:\"translate(933,927)\"})),_path1156||(_path1156=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 1.65 3.96 3.3 6 5 C5.01 5.66 4.02 6.32 3 7 C1.5 5.75 1.5 5.75 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#CAC8C6\",transform:\"translate(929,921)\"})),_path1157||(_path1157=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.37948772 0.17625835 3.70225849 0.69719773 5.37890625 2.40234375 C6.62115486 3.90649092 7.81376056 5.45129851 9 7 C8.67 7.66 8.34 8.32 8 9 C6.66368764 7.6905332 5.33102075 6.37734515 4 5.0625 C3.2575 4.33160156 2.515 3.60070312 1.75 2.84765625 C0 1 0 1 0 0 Z \",fill:\"#ECEBE9\",transform:\"translate(876,871)\"})),_path1158||(_path1158=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-1.49097658 3.7952131 -3.75700849 5.61042731 -7 8 C-7.66 7.67 -8.32 7.34 -9 7 C-7.88121617 5.82737096 -6.75476949 4.66204862 -5.625 3.5 C-4.68527344 2.52546875 -4.68527344 2.52546875 -3.7265625 1.53125 C-2 0 -2 0 0 0 Z \",fill:\"#E4E1DE\",transform:\"translate(157,866)\"})),_path1159||(_path1159=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C4.28359673 1.8855148 6.15103592 4.35965701 9 8 C8.01 8 7.02 8 6 8 C4.39453125 6.25 4.39453125 6.25 2.8125 4 C2.28269531 3.2575 1.75289062 2.515 1.20703125 1.75 C0.80871094 1.1725 0.41039062 0.595 0 0 Z \",fill:\"#F6F4F7\",transform:\"translate(802,797)\"})),_path1160||(_path1160=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.98 1.32 3.96 2.64 6 4 C5.67 4.66 5.34 5.32 5 6 C2.36 5.34 -0.28 4.68 -3 4 C-2.01 3.67 -1.02 3.34 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#696665\",transform:\"translate(795,792)\"})),_path1161||(_path1161=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.32 1.32 2.64 2.64 4 4 C3.01 4.495 3.01 4.495 2 5 C1.59270772 7.32156597 1.25561323 9.6568787 1 12 C0.67 12 0.34 12 0 12 C0 8.04 0 4.08 0 0 Z \",fill:\"#656362\",transform:\"translate(700,696)\"})),_path1162||(_path1162=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 1.65 3.3 3.3 5 5 C1.125 8 1.125 8 0 8 C0 5.36 0 2.72 0 0 Z \",fill:\"#6F6E6D\",transform:\"translate(272,266)\"})),_path1163||(_path1163=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.24208567 0.35049575 4.61527704 0.56221181 6.8125 3.0625 C7.204375 3.701875 7.59625 4.34125 8 5 C4.40142046 5 2.90548882 4.04169485 0 2 C0 1.34 0 0.68 0 0 Z \",fill:\"#A1A0A1\",transform:\"translate(99,99)\"})),_path1164||(_path1164=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.64 1.98 5.28 3.96 8 6 C5 7 5 7 3 7 C0 2.61538462 0 2.61538462 0 0 Z \",fill:\"#878284\",transform:\"translate(6,3)\"})),_path1165||(_path1165=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.66 1.32 1.32 2 2 C0.50260417 3.23697917 -0.99479167 4.47395833 -2.4921875 5.7109375 C-3.71051161 6.75250992 -4.86660097 7.86660097 -6 9 C-6 6 -6 6 -4.6875 4.39453125 C-4.130625 3.87246094 -3.57375 3.35039063 -3 2.8125 C-2.443125 2.28269531 -1.88625 1.75289062 -1.3125 1.20703125 C-0.6628125 0.60955078 -0.6628125 0.60955078 0 0 Z \",fill:\"#D7D1CF\",transform:\"translate(67,953)\"})),_path1166||(_path1166=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C-0.465 3.97 -0.465 3.97 -4 7 C-3.04065919 3.16263678 -2.76390737 2.40339772 0 0 Z \",fill:\"#D8D7D5\",transform:\"translate(176,845)\"})),_path1167||(_path1167=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C3 2.33333333 3 3.66666667 3 5 C1.35 5 -0.3 5 -2 5 C-1.125 1.125 -1.125 1.125 0 0 Z \",fill:\"#5F5C5B\",transform:\"translate(207,818)\"})),_path1168||(_path1168=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C0.515 3.475 0.515 3.475 -1 6 C-2.32 5.67 -3.64 5.34 -5 5 C-3.35 3.35 -1.7 1.7 0 0 Z \",fill:\"#6D6865\",transform:\"translate(236,790)\"})),_path1169||(_path1169=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.33 1.32 0.66 2 1 C0.82421875 2.51953125 0.82421875 2.51953125 -1 4 C-3.48046875 4.07421875 -3.48046875 4.07421875 -6.1875 3.6875 C-7.53908203 3.50767578 -7.53908203 3.50767578 -8.91796875 3.32421875 C-9.94857422 3.16373047 -9.94857422 3.16373047 -11 3 C-11 2.67 -11 2.34 -11 2 C-10.06027344 1.90912109 -10.06027344 1.90912109 -9.1015625 1.81640625 C-7.87566406 1.69072266 -7.87566406 1.69072266 -6.625 1.5625 C-5.81289063 1.48128906 -5.00078125 1.40007813 -4.1640625 1.31640625 C-1.95727195 1.10909886 -1.95727195 1.10909886 0 0 Z \",fill:\"#4D4A47\",transform:\"translate(331,692)\"})),_path1170||(_path1170=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 2.97 1 5.94 1 9 C0.01 9.33 -0.98 9.66 -2 10 C-1.125 2.25 -1.125 2.25 0 0 Z \",fill:\"#595B58\",transform:\"translate(743,575)\"})),_path1171||(_path1171=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C1.65 0 3.3 0 5 0 C3.35 1.98 1.7 3.96 0 6 C-1.125 2.25 -1.125 2.25 0 0 Z \",fill:\"#7D7672\",transform:\"translate(455,570)\"})),_path1172||(_path1172=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C-0.66 1.32 -1.32 2.64 -2 4 C-3.32 3.34 -4.64 2.68 -6 2 C-6 1.34 -6 0.68 -6 0 C-3.50907189 -1.24546405 -2.58919267 -0.7767578 0 0 Z \",fill:\"#6F6E6E\",transform:\"translate(324,307)\"})),_path1173||(_path1173=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.66 0.99 1.32 1.98 2 3 C0.35 4.32 -1.3 5.64 -3 7 C-3.33 6.01 -3.66 5.02 -4 4 C-2.68 2.68 -1.36 1.36 0 0 Z \",fill:\"#EDEBE7\",transform:\"translate(983,40)\"})),_path1174||(_path1174=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0.33 1.98 0.66 3 1 C0.03 3.475 0.03 3.475 -3 6 C-2.625 3.5625 -2.625 3.5625 -2 1 C-1.34 0.67 -0.68 0.34 0 0 Z \",fill:\"#9B9796\",transform:\"translate(104,914)\"})),_path1175||(_path1175=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C2.475 0.495 2.475 0.495 5 1 C5.33 1.99 5.66 2.98 6 4 C3.03 3.505 3.03 3.505 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#5F5D5C\",transform:\"translate(888,887)\"})),_path1176||(_path1176=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 2.31 1 4.62 1 7 C-0.32 6.34 -1.64 5.68 -3 5 C-2.67 4.01 -2.34 3.02 -2 2 C-1.34 2.33 -0.68 2.66 0 3 C0 2.01 0 1.02 0 0 Z \",fill:\"#514F4E\",transform:\"translate(729,714)\"})),_path1177||(_path1177=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C3.33 1.98 3.66 3.96 4 6 C2.68 5.34 1.36 4.68 0 4 C0 2.68 0 1.36 0 0 Z \",fill:\"#565454\",transform:\"translate(696,686)\"})),_path1178||(_path1178=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.99 0 1.98 0 3 0 C4.25664978 2.90600261 5 4.79604584 5 8 C0 2.25 0 2.25 0 0 Z \",fill:\"#686B6A\",transform:\"translate(253,242)\"})),_path1179||(_path1179=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C3.16115776 1.36983503 3.9927092 1.9890638 6 5 C4.02 5 2.04 5 0 5 C0 3.33333333 0 1.66666667 0 0 Z \",fill:\"#5C5A59\",transform:\"translate(208,204)\"})),_path1180||(_path1180=/*#__PURE__*/React.createElement(\"path\",{d:\"M0 0 C0.33 0 0.66 0 1 0 C1 2.97 1 5.94 1 9 C0.67 8.34 0.34 7.68 0 7 C-0.66 7 -1.32 7 -2 7 C-1.34 4.69 -0.68 2.38 0 0 Z \",fill:\"#686766\",transform:\"translate(276,12)\"})));}const ForwardRef=/*#__PURE__*/React.forwardRef(SvgLogo);export default __webpack_public_path__+\"static/media/logo.9b007f53f1799e5c207944b61ee0e5c2.svg\";export{ForwardRef as ReactComponent};","var _path, _path2, _path3;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgNavIcon1(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.996 16V15.9993H16V10.1313C16 7.26065 15.382 5.04932 12.026 5.04932C10.4127 5.04932 9.33 5.93465 8.888 6.77398H8.84133V5.31732H5.65933V15.9993H8.97267V10.71C8.97267 9.31732 9.23667 7.97065 10.9613 7.97065C12.6607 7.97065 12.686 9.55998 12.686 10.7993V16H15.996Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.264008 5.31812H3.58134V16.0001H0.264008V5.31812Z\",\n    fill: \"white\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1.92133 0C0.860667 0 0 0.860667 0 1.92133C0 2.982 0.860667 3.86067 1.92133 3.86067C2.982 3.86067 3.84267 2.982 3.84267 1.92133C3.842 0.860667 2.98133 0 1.92133 0V0Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgNavIcon1);\nexport default __webpack_public_path__ + \"static/media/nav-icon1.721d5414c26365f117e71d46b6641cb2.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgNavIcon2(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 0C3.58 0 0 3.58 0 8C0 11.54 2.29 14.36 5.47 15.32C5.87 15.39 6.03 15.15 6.03 14.94C6.03 14.74 6.02 14.2 6.02 13.53C4 13.91 3.48 12.89 3.48 12.89C3.13 12.1 2.67 11.89 2.67 11.89C2.02 11.51 2.75 11.52 2.75 11.52C3.5 11.58 3.89 12.3 3.89 12.3C4.58 13.43 5.68 13.09 6.1 12.88C6.16 12.42 6.35 12.11 6.55 11.91C4.77 11.71 2.92 11 2.92 7.86C2.92 6.96 3.29 6.25 3.89 5.74C3.78 5.52 3.44 4.65 3.97 3.5C3.97 3.5 4.63 3.28 6.02 4.28C6.67 4.08 7.36 4 8.05 4C8.74 4 9.43 4.08 10.08 4.28C11.47 3.28 12.13 3.5 12.13 3.5C12.66 4.65 12.32 5.52 12.21 5.74C12.81 6.25 13.18 6.96 13.18 7.86C13.18 11.01 11.33 11.71 9.55 11.91C9.79 12.14 10.02 12.6 10.02 13.28C10.02 14.2 10.01 14.73 10.01 14.94C10.01 15.15 10.17 15.39 10.57 15.32C13.75 14.36 16 11.54 16 8C16 3.58 12.42 0 8 0Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgNavIcon2);\nexport default __webpack_public_path__ + \"static/media/nav-icon2.b5a274231a5921ececd7f6f4a0ef50d3.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgNavIcon3(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.00269 3.8916C5.73406 3.8916 3.89743 5.73024 3.89743 7.99686C3.89743 10.2655 5.73606 12.1021 8.00269 12.1021C10.2713 12.1021 12.108 10.2635 12.108 7.99686C12.108 5.72824 10.2693 3.8916 8.00269 3.8916V3.8916ZM8.00269 10.6615C6.53005 10.6615 5.33807 9.46884 5.33807 7.99686C5.33807 6.52489 6.53072 5.33224 8.00269 5.33224C9.47467 5.33224 10.6673 6.52489 10.6673 7.99686C10.668 9.46884 9.47533 10.6615 8.00269 10.6615V10.6615Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.2986 0.0502569C9.82665 -0.0184086 6.18071 -0.0150753 4.7074 0.0502569C3.41276 0.110922 2.27078 0.423584 1.35013 1.34423C-0.188512 2.88287 0.00815137 4.95617 0.00815137 7.99678C0.00815137 11.1087 -0.165179 13.134 1.35013 14.6493C2.89477 16.1933 4.99806 15.9913 8.00268 15.9913C11.0853 15.9913 12.1493 15.9933 13.2393 15.5713C14.7212 14.996 15.8399 13.6714 15.9492 11.2921C16.0185 9.81942 16.0145 6.17415 15.9492 4.70084C15.8172 1.89222 14.3099 0.188921 11.2986 0.0502569V0.0502569ZM13.6286 13.6314C12.6199 14.64 11.2206 14.55 7.98335 14.55C4.65007 14.55 3.31343 14.5993 2.33811 13.6214C1.2148 12.5034 1.41813 10.7081 1.41813 7.98612C1.41813 4.30285 1.04013 1.65023 4.73674 1.4609C5.58605 1.4309 5.83605 1.4209 7.97401 1.4209L8.00401 1.4409C11.5566 1.4409 14.3439 1.06891 14.5112 4.76484C14.5492 5.60816 14.5579 5.86149 14.5579 7.99612C14.5572 11.2907 14.6199 12.6354 13.6286 13.6314V13.6314Z\",\n    fill: \"white\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.2706 4.6889C12.8004 4.6889 13.2299 4.2594 13.2299 3.72958C13.2299 3.19976 12.8004 2.77026 12.2706 2.77026C11.7408 2.77026 11.3113 3.19976 11.3113 3.72958C11.3113 4.2594 11.7408 4.6889 12.2706 4.6889Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgNavIcon3);\nexport default __webpack_public_path__ + \"static/media/nav-icon3.08b285abb8e118b52637efa5d65c5367.svg\";\nexport { ForwardRef as ReactComponent };","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n// TODO: (v7) Change the Location generic default from `any` to `unknown` and\n// remove Remix `useLocation` wrapper.\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location<State = any> extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: State;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. This may be either a URL or the pieces\n * of a URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { invariant, parsePath, warning } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: unknown;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  // We keep the raw Response for redirects so we can return it verbatim\n  response: Response;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: unknown;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\n/**\n * Result from a loader or action called via dataStrategy\n */\nexport interface HandlerResult {\n  type: \"data\" | \"error\";\n  result: unknown; // data, Error, Response, DeferredData, DataWithResponseInit\n}\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on `<Form>`,\n * useSubmit(), `<fetcher.Form>`, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\"\n  | \"application/json\"\n  | \"text/plain\";\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport type Submission =\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: FormData;\n      json: undefined;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: JsonValue;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: undefined;\n      text: string;\n    };\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs<Context> {\n  request: Request;\n  params: Params;\n  context?: Context;\n}\n\n// TODO: (v7) Change the defaults from any to unknown in and remove Remix wrappers:\n//   ActionFunction, ActionFunctionArgs, LoaderFunction, LoaderFunctionArgs\n//   Also, make them a type alias instead of an interface\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\ntype DataFunctionReturnValue = Promise<DataFunctionValue> | DataFunctionValue;\n\n/**\n * Route loader function signature\n */\nexport type LoaderFunction<Context = any> = {\n  (\n    args: LoaderFunctionArgs<Context>,\n    handlerCtx?: unknown\n  ): DataFunctionReturnValue;\n} & { hydrate?: boolean };\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction<Context = any> {\n  (\n    args: ActionFunctionArgs<Context>,\n    handlerCtx?: unknown\n  ): DataFunctionReturnValue;\n}\n\n/**\n * Arguments passed to shouldRevalidate function\n */\nexport interface ShouldRevalidateFunctionArgs {\n  currentUrl: URL;\n  currentParams: AgnosticDataRouteMatch[\"params\"];\n  nextUrl: URL;\n  nextParams: AgnosticDataRouteMatch[\"params\"];\n  formMethod?: Submission[\"formMethod\"];\n  formAction?: Submission[\"formAction\"];\n  formEncType?: Submission[\"formEncType\"];\n  text?: Submission[\"text\"];\n  formData?: Submission[\"formData\"];\n  json?: Submission[\"json\"];\n  actionStatus?: number;\n  actionResult?: any;\n  defaultShouldRevalidate: boolean;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: ShouldRevalidateFunctionArgs): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\nexport interface DataStrategyMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {\n  shouldLoad: boolean;\n  resolve: (\n    handlerOverride?: (\n      handler: (ctx?: unknown) => DataFunctionReturnValue\n    ) => Promise<HandlerResult>\n  ) => Promise<HandlerResult>;\n}\n\nexport interface DataStrategyFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {\n  matches: DataStrategyMatch[];\n}\n\nexport interface DataStrategyFunction {\n  (args: DataStrategyFunctionArgs): Promise<HandlerResult[]>;\n}\n\nexport interface AgnosticPatchRoutesOnMissFunction<\n  M extends AgnosticRouteMatch = AgnosticRouteMatch\n> {\n  (opts: {\n    path: string;\n    matches: M[];\n    patch: (routeId: string | null, children: AgnosticRouteObject[]) => void;\n  }): void | Promise<void>;\n}\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\ntype RequireOne<T, Key = keyof T> = Exclude<\n  {\n    [K in keyof T]: K extends Key ? Omit<T, K> & Required<Pick<T, K>> : never;\n  }[keyof T],\n  undefined\n>;\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<RequireOne<Omit<R, ImmutableRouteKey>>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction | boolean;\n  action?: ActionFunction | boolean;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\nexport type PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise, return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if you could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: string[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\n\nexport function matchRoutesImpl<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename: string,\n  allowPartial: boolean\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      decoded,\n      allowPartial\n    );\n  }\n\n  return matches;\n}\n\nexport interface UIMatch<Data = unknown, Handle = unknown> {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: Data;\n  handle: Handle;\n}\n\nexport function convertRouteMatchToUiMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UIMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle,\n  };\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string,\n  allowPartial = false\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    let route = meta.route;\n\n    if (\n      !match &&\n      end &&\n      allowPartial &&\n      !routesMeta[routesMeta.length - 1].route.index\n    ) {\n      match = matchPath(\n        {\n          path: meta.relativePath,\n          caseSensitive: meta.caseSensitive,\n          end: false,\n        },\n        remainingPathname\n      );\n    }\n\n    if (!match) {\n      return null;\n    }\n\n    Object.assign(matchedParams, match.params);\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const stringify = (p: any) =>\n    p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        // Apply the splat\n        return stringify(params[star]);\n      }\n\n      const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n        invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n        return stringify(param);\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, compiledParams] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = compiledParams.reduce<Mutable<Params>>(\n    (memo, { paramName, isOptional }, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      const value = captureGroups[index];\n      if (isOptional && !value) {\n        memo[paramName] = undefined;\n      } else {\n        memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n      }\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\ntype CompiledPathParam = { paramName: string; isOptional?: boolean };\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, CompiledPathParam[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let params: CompiledPathParam[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(\n        /\\/:([\\w-]+)(\\?)?/g,\n        (_: string, paramName: string, isOptional) => {\n          params.push({ paramName, isOptional: isOptional != null });\n          return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n        }\n      );\n\n  if (path.endsWith(\"*\")) {\n    params.push({ paramName: \"*\" });\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, params];\n}\n\nexport function decodePath(value: string) {\n  try {\n    return value\n      .split(\"/\")\n      .map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\"))\n      .join(\"/\");\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nexport function getResolveToMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[], v7_relativeSplatPath: boolean) {\n  let pathMatches = getPathContributingMatches(matches);\n\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) =>\n      idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\n    );\n  }\n\n  return pathMatches.map((match) => match.pathnameBase);\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport class DataWithResponseInit<D> {\n  type: string = \"DataWithResponseInit\";\n  data: D;\n  init: ResponseInit | null;\n\n  constructor(data: D, init?: ResponseInit) {\n    this.data = data;\n    this.init = init || null;\n  }\n}\n\n/**\n * Create \"responses\" that contain `status`/`headers` without forcing\n * serialization into an actual `Response` - used by Remix single fetch\n */\nexport function data<D>(data: D, init?: number | ResponseInit) {\n  return new DataWithResponseInit(\n    data,\n    typeof init === \"number\" ? { status: init } : init\n  );\n}\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, undefined, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\n        `Deferred data for key \"${key}\" resolved/rejected with \\`undefined\\`, ` +\n          `you must resolve/reject with a value or \\`null\\`.`\n      );\n      Object.defineProperty(promise, \"_error\", { get: () => undefinedError });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirectDocument: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n\n/**\n * A redirect response that will perform a `history.replaceState` instead of a\n * `history.pushState` for client-side navigation redirects.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const replace: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\n\nexport type ErrorResponse = {\n  status: number;\n  statusText: string;\n  data: any;\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nexport class ErrorResponseImpl implements ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  private error?: Error;\n  private internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DataStrategyMatch,\n  AgnosticRouteObject,\n  DataResult,\n  DataStrategyFunction,\n  DataStrategyFunctionArgs,\n  DeferredData,\n  DeferredResult,\n  DetectErrorBoundaryFunction,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  HTMLFormMethod,\n  HandlerResult,\n  ImmutableRouteKey,\n  MapRoutePropertiesFunction,\n  MutationFormMethod,\n  RedirectResult,\n  RouteData,\n  RouteManifest,\n  ShouldRevalidateFunctionArgs,\n  Submission,\n  SuccessResult,\n  UIMatch,\n  V7_FormMethod,\n  V7_MutationFormMethod,\n  AgnosticPatchRoutesOnMissFunction,\n  DataWithResponseInit,\n} from \"./utils\";\nimport {\n  ErrorResponseImpl,\n  ResultType,\n  convertRouteMatchToUiMatch,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  getResolveToMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  matchRoutesImpl,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the future config for the router\n   */\n  get future(): FutureConfig;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the window associated with the router\n   */\n  get window(): RouterInit[\"window\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE DO NOT USE\n   *\n   * Patch additional children routes into an existing parent route\n   * @param routeId The parent route id or a callback function accepting `patch`\n   *                to perform batch patching\n   * @param children The additional children routes\n   */\n  patchRoutes(routeId: string | null, children: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_fetcherPersist: boolean;\n  v7_normalizeFormMethod: boolean;\n  v7_partialHydration: boolean;\n  v7_prependBasename: boolean;\n  v7_relativeSplatPath: boolean;\n  v7_skipActionErrorRevalidation: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n  window?: Window;\n  unstable_patchRoutesOnMiss?: AgnosticPatchRoutesOnMissFunction;\n  unstable_dataStrategy?: DataStrategyFunction;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: {\n      requestContext?: unknown;\n      skipLoaderErrorBubbling?: boolean;\n      unstable_dataStrategy?: DataStrategyFunction;\n    }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: {\n      routeId?: string;\n      requestContext?: unknown;\n      unstable_dataStrategy?: DataStrategyFunction;\n    }\n  ): Promise<any>;\n}\n\ntype ViewTransitionOpts = {\n  currentLocation: Location;\n  nextLocation: Location;\n};\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (\n    state: RouterState,\n    opts: {\n      deletedFetchers: string[];\n      unstable_viewTransitionOpts?: ViewTransitionOpts;\n      unstable_flushSync: boolean;\n    }\n  ): void;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UIMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\n// Allowed for any navigation or fetch\ntype BaseNavigateOrFetchOptions = {\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  unstable_flushSync?: boolean;\n};\n\n// Only allowed for navigations\ntype BaseNavigateOptions = BaseNavigateOrFetchOptions & {\n  replace?: boolean;\n  state?: any;\n  fromRouteId?: string;\n  unstable_viewTransition?: boolean;\n};\n\n// Only allowed for submission navigations\ntype BaseSubmissionOptions = {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n} & (\n  | { formData: FormData; body?: undefined }\n  | { formData?: undefined; body: any }\n);\n\n/**\n * Options for a navigate() call for a normal (non-submission) navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a submission navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to navigate() for a navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options for a fetch() load\n */\ntype LoadFetchOptions = BaseNavigateOrFetchOptions;\n\n/**\n * Options for a fetch() submission\n */\ntype SubmitFetchOptions = BaseNavigateOrFetchOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions = LoadFetchOptions | SubmitFetchOptions;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    json: undefined;\n    text: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    text: Submission[\"text\"];\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    text: undefined;\n    formData: undefined;\n    json: undefined;\n    data: TData | undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    data: TData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    text: Submission[\"text\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    data: TData | undefined;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ntype PendingActionResult = [string, SuccessResult | ErrorResult];\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Route matches which may have been updated from fog of war discovery\n   */\n  matches?: RouterState[\"matches\"];\n  /**\n   * Tuple for the returned or thrown value from the current action.  The routeId\n   * is the action route for success and the bubbled boundary route for errors.\n   */\n  pendingActionResult?: PendingActionResult;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * Route matches which may have been updated from fog of war discovery\n   */\n  matches?: RouterState[\"matches\"];\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  const routerWindow = init.window\n    ? init.window\n    : typeof window !== \"undefined\"\n    ? window\n    : undefined;\n  const isBrowser =\n    typeof routerWindow !== \"undefined\" &&\n    typeof routerWindow.document !== \"undefined\" &&\n    typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.unstable_dataStrategy || defaultDataStrategy;\n  let patchRoutesOnMissImpl = init.unstable_patchRoutesOnMiss;\n\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null && !patchRoutesOnMissImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  // In SPA apps, if the user provided a patchRoutesOnMiss implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(\n      initialMatches,\n      dataRoutes,\n      init.history.location.pathname\n    );\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n\n  let initialized: boolean;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n\n    // If partial hydration and fog of war is enabled, we will be running\n    // `patchRoutesOnMiss` during hydration so include any partial matches as\n    // the initial matches so we can properly render `HydrateFallback`'s\n    if (future.v7_partialHydration) {\n      let fogOfWar = checkFogOfWar(\n        null,\n        dataRoutes,\n        init.history.location.pathname\n      );\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatches = fogOfWar.matches;\n      }\n    }\n  } else if (initialMatches.some((m) => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some((m) => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    let isRouteInitialized = (m: AgnosticDataRouteMatch) => {\n      // No loader, nothing to initialize\n      if (!m.route.loader) {\n        return true;\n      }\n      // Explicitly opting-in to running on hydration\n      if (\n        typeof m.route.loader === \"function\" &&\n        m.route.loader.hydrate === true\n      ) {\n        return false;\n      }\n      // Otherwise, initialized if hydrated with data or an error\n      return (\n        (loaderData && loaderData[m.route.id] !== undefined) ||\n        (errors && errors[m.route.id] !== undefined)\n      );\n    };\n\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(\n        (m) => errors![m.route.id] !== undefined\n      );\n      initialized = initialMatches.slice(0, idx + 1).every(isRouteInitialized);\n    } else {\n      initialized = initialMatches.every(isRouteInitialized);\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions: Map<string, Set<string>> = new Map<\n    string,\n    Set<string>\n  >();\n\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener: (() => void) | null = null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: Set<string> = new Set();\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map<string, number>();\n\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set<string>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Map of pending patchRoutesOnMiss() promises (keyed by path/matches) so\n  // that we only kick them off once for a given combo\n  let pendingPatchRoutes = new Map<\n    string,\n    ReturnType<AgnosticPatchRoutesOnMissFunction>\n  >();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (ignoreNextHistoryUpdate) {\n          ignoreNextHistoryUpdate = false;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          ignoreNextHistoryUpdate = true;\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked\n              init.history.go(delta);\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey!, IDLE_BLOCKER);\n              updateState({ blockers });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () =>\n        persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () =>\n        routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location, {\n        initialHydration: true,\n      });\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(\n    newState: Partial<RouterState>,\n    opts: {\n      flushSync?: boolean;\n      viewTransitionOpts?: ViewTransitionOpts;\n    } = {}\n  ): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers: string[] = [];\n    let deletedFetchersKeys: string[] = [];\n\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach((subscriber) =>\n      subscriber(state, {\n        deletedFetchers: deletedFetchersKeys,\n        unstable_viewTransitionOpts: opts.viewTransitionOpts,\n        unstable_flushSync: opts.flushSync === true,\n      })\n    );\n\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach((key) => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach((key) => deleteFetcher(key));\n    }\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>,\n    { flushSync }: { flushSync?: boolean } = {}\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    let viewTransitionOpts: ViewTransitionOpts | undefined;\n\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === HistoryAction.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location,\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location,\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set<string>([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location,\n      };\n    }\n\n    updateState(\n      {\n        ...newState, // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition: getSavedScrollPosition(\n          location,\n          newState.matches || state.matches\n        ),\n        preventScrollReset,\n        blockers,\n      },\n      {\n        viewTransitionOpts,\n        flushSync: flushSync === true,\n      }\n    );\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      future.v7_relativeSplatPath,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey!, IDLE_BLOCKER);\n          updateState({ blockers });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.unstable_viewTransition,\n      flushSync,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      initialHydration?: boolean;\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponseImpl;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n      enableViewTransition?: boolean;\n      flushSync?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let { error, notFoundMatches, route } = handleNavigational404(\n        location.pathname\n      );\n      completeNavigation(\n        location,\n        {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error,\n          },\n        },\n        { flushSync }\n      );\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (\n      state.initialized &&\n      !isRevalidationRequired &&\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches }, { flushSync });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionResult: PendingActionResult | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [\n        findNearestBoundary(matches).route.id,\n        { type: ResultType.error, error: opts.pendingError },\n      ];\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        fogOfWar.active,\n        { replace: opts.replace, flushSync }\n      );\n\n      if (actionResult.shortCircuited) {\n        return;\n      }\n\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (\n          isErrorResult(result) &&\n          isRouteErrorResponse(result.error) &&\n          result.error.status === 404\n        ) {\n          pendingNavigationController = null;\n\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error,\n            },\n          });\n          return;\n        }\n      }\n\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n\n      // Create a GET request for the loaders\n      request = createClientSideRequest(\n        init.history,\n        request.url,\n        request.signal\n      );\n    }\n\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors,\n    } = await handleLoaders(\n      request,\n      location,\n      matches,\n      fogOfWar.active,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      opts && opts.initialHydration === true,\n      flushSync,\n      pendingActionResult\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches: updatedMatches || matches,\n      ...getActionDataForCommit(pendingActionResult),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    opts: { replace?: boolean; flushSync?: boolean } = {}\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let { boundaryId, error } = handleDiscoverRouteError(\n          location.pathname,\n          discoverResult\n        );\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [\n            boundaryId,\n            {\n              type: ResultType.error,\n              error,\n            },\n          ],\n        };\n      } else if (!discoverResult.matches) {\n        let { notFoundMatches, error, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [\n            route.id,\n            {\n              type: ResultType.error,\n              error,\n            },\n          ],\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      let results = await callDataStrategy(\n        \"action\",\n        request,\n        [actionMatch],\n        matches\n      );\n      result = results[0];\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(\n          result.response.headers.get(\"Location\")!,\n          new URL(request.url),\n          basename\n        );\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, {\n        submission,\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result],\n      };\n    }\n\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result],\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    initialHydration?: boolean,\n    flushSync?: boolean,\n    pendingActionResult?: PendingActionResult\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation =\n      overrideNavigation || getLoadingNavigation(location, submission);\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission ||\n      fetcherSubmission ||\n      getSubmissionFromNavigation(loadingNavigation);\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState =\n      !isUninterruptedRevalidation &&\n      (!future.v7_partialHydration || !initialHydration);\n\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(\n          {\n            navigation: loadingNavigation,\n            ...(actionData !== undefined ? { actionData } : {}),\n          },\n          {\n            flushSync,\n          }\n        );\n      }\n\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let { boundaryId, error } = handleDiscoverRouteError(\n          location.pathname,\n          discoverResult\n        );\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: error,\n          },\n        };\n      } else if (!discoverResult.matches) {\n        let { error, notFoundMatches, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error,\n          },\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      future.v7_partialHydration && initialHydration === true,\n      future.v7_skipActionErrorRevalidation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionResult\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(\n        location,\n        {\n          matches,\n          loaderData: {},\n          // Commit pending error if we're short circuiting\n          errors:\n            pendingActionResult && isErrorResult(pendingActionResult[1])\n              ? { [pendingActionResult[0]]: pendingActionResult[1].error }\n              : null,\n          ...getActionDataForCommit(pendingActionResult),\n          ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n        },\n        { flushSync }\n      );\n      return { shortCircuited: true };\n    }\n\n    if (shouldUpdateNavigationState) {\n      let updates: Partial<RouterState> = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, { flushSync });\n    }\n\n    revalidatingFetchers.forEach((rf) => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect([...loaderResults, ...fetcherResults]);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      await startRedirectNavigation(request, redirect.result, {\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingActionResult,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    // During partial hydration, preserve SSR errors for routes that don't re-run\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      Object.entries(state.errors)\n        .filter(([id]) => !matchesToLoad.some((m) => m.route.id === id))\n        .forEach(([routeId, error]) => {\n          errors = Object.assign(errors || {}, { [routeId]: error });\n        });\n    }\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      matches,\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  function getUpdatedActionData(\n    pendingActionResult: PendingActionResult | undefined\n  ): Record<string, RouteData> | null | undefined {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data as any,\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n\n  function getUpdatedRevalidatingFetchers(\n    revalidatingFetchers: RevalidatingFetcher[]\n  ) {\n    revalidatingFetchers.forEach((rf) => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(\n        undefined,\n        fetcher ? fetcher.data : undefined\n      );\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      future.v7_relativeSplatPath,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath }),\n        { flushSync }\n      );\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n\n    if (error) {\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n\n    let match = getTargetMatch(matches, path);\n\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(\n        key,\n        routeId,\n        path,\n        match,\n        matches,\n        fogOfWar.active,\n        flushSync,\n        submission\n      );\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(\n      key,\n      routeId,\n      path,\n      match,\n      matches,\n      fogOfWar.active,\n      flushSync,\n      submission\n    );\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    flushSync: boolean,\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    function detectAndHandle405Error(m: AgnosticDataRouteMatch) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId,\n        });\n        setFetcherError(key, routeId, error, { flushSync });\n        return true;\n      }\n      return false;\n    }\n\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync,\n    });\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        requestMatches,\n        path,\n        fetchRequest.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        let { error } = handleDiscoverRouteError(path, discoverResult);\n        setFetcherError(key, routeId, error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\n      \"action\",\n      fetchRequest,\n      [match],\n      requestMatches\n    );\n    let actionResult = actionResults[0];\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, {\n            fetcherSubmission: submission,\n          });\n        }\n      }\n\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      false,\n      future.v7_skipActionErrorRevalidation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      [match.route.id, actionResult]\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          existingFetcher ? existingFetcher.data : undefined\n        );\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        if (fetchControllers.has(staleKey)) {\n          abortFetcher(staleKey);\n        }\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect([...loaderResults, ...fetcherResults]);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      return startRedirectNavigation(revalidationRequest, redirect.result);\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n\n    abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        fetchers: new Map(state.fetchers),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    flushSync: boolean,\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(\n      key,\n      getLoadingFetcher(\n        submission,\n        existingFetcher ? existingFetcher.data : undefined\n      ),\n      { flushSync }\n    );\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        path,\n        fetchRequest.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        let { error } = handleDiscoverRouteError(path, discoverResult);\n        setFetcherError(key, routeId, error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\n      \"loader\",\n      fetchRequest,\n      [match],\n      matches\n    );\n    let result = results[0];\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result);\n        return;\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    request: Request,\n    redirect: RedirectResult,\n    {\n      submission,\n      fetcherSubmission,\n      replace,\n    }: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      replace?: boolean;\n    } = {}\n  ) {\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(\n      location,\n      new URL(request.url),\n      basename\n    );\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true,\n    });\n\n    if (isBrowser) {\n      let isDocumentReload = false;\n\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n          // Hard reload if it's an absolute URL to a new origin\n          url.origin !== routerWindow.location.origin ||\n          // Hard reload if it's an absolute URL that does not match our basename\n          stripBasename(url.pathname, basename) == null;\n      }\n\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true || redirect.response.headers.has(\"X-Remix-Replace\")\n        ? HistoryAction.Replace\n        : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (\n      !submission &&\n      !fetcherSubmission &&\n      formMethod &&\n      formAction &&\n      formEncType\n    ) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.response.status) &&\n      activeSubmission &&\n      isMutationMethod(activeSubmission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: location,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    }\n  }\n\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(\n    type: \"loader\" | \"action\",\n    request: Request,\n    matchesToLoad: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[]\n  ): Promise<DataResult[]> {\n    try {\n      let results = await callDataStrategyImpl(\n        dataStrategyImpl,\n        type,\n        request,\n        matchesToLoad,\n        matches,\n        manifest,\n        mapRouteProperties\n      );\n\n      return await Promise.all(\n        results.map((result, i) => {\n          if (isRedirectHandlerResult(result)) {\n            let response = result.result as Response;\n            return {\n              type: ResultType.redirect,\n              response: normalizeRelativeRoutingRedirectResponse(\n                response,\n                request,\n                matchesToLoad[i].route.id,\n                matches,\n                basename,\n                future.v7_relativeSplatPath\n              ),\n            };\n          }\n\n          return convertHandlerResultToDataResult(result);\n        })\n      );\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      return matchesToLoad.map(() => ({\n        type: ResultType.error,\n        error: e,\n      }));\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    let [loaderResults, ...fetcherResults] = await Promise.all([\n      matchesToLoad.length\n        ? callDataStrategy(\"loader\", request, matchesToLoad, matches)\n        : [],\n      ...fetchersToLoad.map((f) => {\n        if (f.matches && f.match && f.controller) {\n          let fetcherRequest = createClientSideRequest(\n            init.history,\n            f.path,\n            f.controller.signal\n          );\n          return callDataStrategy(\n            \"loader\",\n            fetcherRequest,\n            [f.match],\n            f.matches\n          ).then((r) => r[0]);\n        } else {\n          return Promise.resolve<DataResult>({\n            type: ResultType.error,\n            error: getInternalRouterError(404, {\n              pathname: f.path,\n            }),\n          });\n        }\n      }),\n    ]);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        loaderResults.map(() => request.signal),\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map((f) => f.match),\n        fetcherResults,\n        fetchersToLoad.map((f) => (f.controller ? f.controller.signal : null)),\n        true\n      ),\n    ]);\n\n    return {\n      loaderResults,\n      fetcherResults,\n    };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function updateFetcherState(\n    key: string,\n    fetcher: Fetcher,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    state.fetchers.set(key, fetcher);\n    updateState(\n      { fetchers: new Map(state.fetchers) },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function setFetcherError(\n    key: string,\n    routeId: string,\n    error: any,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState(\n      {\n        errors: {\n          [boundaryMatch.route.id]: error,\n        },\n        fetchers: new Map(state.fetchers),\n      },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    if (future.v7_fetcherPersist) {\n      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n      // If this fetcher was previously marked for deletion, unmark it since we\n      // have a new instance\n      if (deletedFetchers.has(key)) {\n        deletedFetchers.delete(key);\n      }\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  function deleteFetcher(key: string): void {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (\n      fetchControllers.has(key) &&\n      !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))\n    ) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    deletedFetchers.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function deleteFetcherAndUpdateState(key: string): void {\n    if (future.v7_fetcherPersist) {\n      let count = (activeFetchers.get(key) || 0) - 1;\n      if (count <= 0) {\n        activeFetchers.delete(key);\n        deletedFetchers.add(key);\n      } else {\n        activeFetchers.set(key, count);\n      }\n    } else {\n      deleteFetcher(key);\n    }\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function handleNavigational404(pathname: string) {\n    let error = getInternalRouterError(404, { pathname });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { matches, route } = getShortCircuitMatches(routesToUse);\n\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n\n    return { notFoundMatches: matches, route, error };\n  }\n\n  function handleDiscoverRouteError(\n    pathname: string,\n    discoverResult: DiscoverRoutesErrorResult\n  ) {\n    return {\n      boundaryId: findNearestBoundary(discoverResult.partialMatches).route.id,\n      error: getInternalRouterError(400, {\n        type: \"route-discovery\",\n        pathname,\n        message:\n          discoverResult.error != null && \"message\" in discoverResult.error\n            ? discoverResult.error\n            : String(discoverResult.error),\n      }),\n    };\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function getScrollKey(location: Location, matches: AgnosticDataRouteMatch[]) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function checkFogOfWar(\n    matches: AgnosticDataRouteMatch[] | null,\n    routesToUse: AgnosticDataRouteObject[],\n    pathname: string\n  ): { active: boolean; matches: AgnosticDataRouteMatch[] | null } {\n    if (patchRoutesOnMissImpl) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n          routesToUse,\n          pathname,\n          basename,\n          true\n        );\n\n        return { active: true, matches: fogMatches || [] };\n      } else {\n        let leafRoute = matches[matches.length - 1].route;\n        if (\n          leafRoute.path &&\n          (leafRoute.path === \"*\" || leafRoute.path.endsWith(\"/*\"))\n        ) {\n          // If we matched a splat, it might only be because we haven't yet fetched\n          // the children that would match with a higher score, so let's fetch\n          // around and find out\n          let partialMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n            routesToUse,\n            pathname,\n            basename,\n            true\n          );\n          return { active: true, matches: partialMatches };\n        }\n      }\n    }\n\n    return { active: false, matches: null };\n  }\n\n  type DiscoverRoutesSuccessResult = {\n    type: \"success\";\n    matches: AgnosticDataRouteMatch[] | null;\n  };\n  type DiscoverRoutesErrorResult = {\n    type: \"error\";\n    error: any;\n    partialMatches: AgnosticDataRouteMatch[];\n  };\n  type DiscoverRoutesAbortedResult = { type: \"aborted\" };\n  type DiscoverRoutesResult =\n    | DiscoverRoutesSuccessResult\n    | DiscoverRoutesErrorResult\n    | DiscoverRoutesAbortedResult;\n\n  async function discoverRoutes(\n    matches: AgnosticDataRouteMatch[],\n    pathname: string,\n    signal: AbortSignal\n  ): Promise<DiscoverRoutesResult> {\n    let partialMatches: AgnosticDataRouteMatch[] | null = matches;\n    let route =\n      partialMatches.length > 0\n        ? partialMatches[partialMatches.length - 1].route\n        : null;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      try {\n        await loadLazyRouteChildren(\n          patchRoutesOnMissImpl!,\n          pathname,\n          partialMatches,\n          routesToUse,\n          manifest,\n          mapRouteProperties,\n          pendingPatchRoutes,\n          signal\n        );\n      } catch (e) {\n        return { type: \"error\", error: e, partialMatches };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n\n      if (signal.aborted) {\n        return { type: \"aborted\" };\n      }\n\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      let matchedSplat = false;\n      if (newMatches) {\n        let leafRoute = newMatches[newMatches.length - 1].route;\n\n        if (leafRoute.index) {\n          // If we found an index route, we can stop\n          return { type: \"success\", matches: newMatches };\n        }\n\n        if (leafRoute.path && leafRoute.path.length > 0) {\n          if (leafRoute.path === \"*\") {\n            // If we found a splat route, we can't be sure there's not a\n            // higher-scoring route down some partial matches trail so we need\n            // to check that out\n            matchedSplat = true;\n          } else {\n            // If we found a non-splat route, we can stop\n            return { type: \"success\", matches: newMatches };\n          }\n        }\n      }\n\n      let newPartialMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n        routesToUse,\n        pathname,\n        basename,\n        true\n      );\n\n      // If we are no longer partially matching anything, this was either a\n      // legit splat match above, or it's a 404.  Also avoid loops if the\n      // second pass results in the same partial matches\n      if (\n        !newPartialMatches ||\n        partialMatches.map((m) => m.route.id).join(\"-\") ===\n          newPartialMatches.map((m) => m.route.id).join(\"-\")\n      ) {\n        return { type: \"success\", matches: matchedSplat ? newMatches : null };\n      }\n\n      partialMatches = newPartialMatches;\n      route = partialMatches[partialMatches.length - 1].route;\n      if (route.path === \"*\") {\n        // The splat is still our most accurate partial, so run with it\n        return { type: \"success\", matches: partialMatches };\n      }\n    }\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      undefined,\n      manifest\n    );\n  }\n\n  function patchRoutes(\n    routeId: string | null,\n    children: AgnosticRouteObject[]\n  ): void {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(\n      routeId,\n      children,\n      routesToUse,\n      manifest,\n      mapRouteProperties\n    );\n\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface StaticHandlerFutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_throwAbortReason: boolean;\n}\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<StaticHandlerFutureConfig>;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future: StaticHandlerFutureConfig = {\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false,\n    ...(opts ? opts.future : null),\n  };\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(\n    request: Request,\n    {\n      requestContext,\n      skipLoaderErrorBubbling,\n      unstable_dataStrategy,\n    }: {\n      requestContext?: unknown;\n      skipLoaderErrorBubbling?: boolean;\n      unstable_dataStrategy?: DataStrategyFunction;\n    } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      unstable_dataStrategy || null,\n      skipLoaderErrorBubbling === true,\n      null\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n      unstable_dataStrategy,\n    }: {\n      requestContext?: unknown;\n      routeId?: string;\n      unstable_dataStrategy?: DataStrategyFunction;\n    } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      unstable_dataStrategy || null,\n      false,\n      match\n    );\n\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    unstable_dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    routeMatch: AgnosticDataRouteMatch | null\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          unstable_dataStrategy,\n          skipLoaderErrorBubbling,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        unstable_dataStrategy,\n        skipLoaderErrorBubbling,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `HandlerResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isHandlerResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    unstable_dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      let results = await callDataStrategy(\n        \"action\",\n        request,\n        [actionMatch],\n        matches,\n        isRouteRequest,\n        requestContext,\n        unstable_dataStrategy\n      );\n      result = results[0];\n\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")!,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling\n        ? actionMatch\n        : findNearestBoundary(matches, actionMatch.route.id);\n\n      let context = await loadRouteData(\n        loaderRequest,\n        matches,\n        requestContext,\n        unstable_dataStrategy,\n        skipLoaderErrorBubbling,\n        null,\n        [boundaryMatch.route.id, result]\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : result.statusCode != null\n          ? result.statusCode\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    let context = await loadRouteData(\n      loaderRequest,\n      matches,\n      requestContext,\n      unstable_dataStrategy,\n      skipLoaderErrorBubbling,\n      null\n    );\n\n    return {\n      ...context,\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionHeaders: result.headers\n        ? { [actionMatch.route.id]: result.headers }\n        : {},\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    unstable_dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    routeMatch: AgnosticDataRouteMatch | null,\n    pendingActionResult?: PendingActionResult\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0])\n      : matches;\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors:\n          pendingActionResult && isErrorResult(pendingActionResult[1])\n            ? {\n                [pendingActionResult[0]]: pendingActionResult[1].error,\n              }\n            : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await callDataStrategy(\n      \"loader\",\n      request,\n      matchesToLoad,\n      matches,\n      isRouteRequest,\n      requestContext,\n      unstable_dataStrategy\n    );\n\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionResult,\n      activeDeferreds,\n      skipLoaderErrorBubbling\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(\n    type: \"loader\" | \"action\",\n    request: Request,\n    matchesToLoad: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    isRouteRequest: boolean,\n    requestContext: unknown,\n    unstable_dataStrategy: DataStrategyFunction | null\n  ): Promise<DataResult[]> {\n    let results = await callDataStrategyImpl(\n      unstable_dataStrategy || defaultDataStrategy,\n      type,\n      request,\n      matchesToLoad,\n      matches,\n      manifest,\n      mapRouteProperties,\n      requestContext\n    );\n\n    return await Promise.all(\n      results.map((result, i) => {\n        if (isRedirectHandlerResult(result)) {\n          let response = result.result as Response;\n          // Throw redirects and let the server handle them with an HTTP redirect\n          throw normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            matchesToLoad[i].route.id,\n            matches,\n            basename,\n            future.v7_relativeSplatPath\n          );\n        }\n        if (isResponse(result.result) && isRouteRequest) {\n          // For SSR single-route requests, we want to hand Responses back\n          // directly without unwrapping\n          throw result;\n        }\n\n        return convertHandlerResultToDataResult(result);\n      })\n    );\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction throwStaticHandlerAbortedError(\n  request: Request,\n  isRouteRequest: boolean,\n  future: StaticHandlerFutureConfig\n) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(`${method}() call aborted: ${request.method} ${request.url}`);\n}\n\nfunction isSubmissionNavigation(\n  opts: BaseNavigateOrFetchOptions\n): opts is SubmissionNavigateOptions {\n  return (\n    opts != null &&\n    ((\"formData\" in opts && opts.formData != null) ||\n      (\"body\" in opts && opts.body !== undefined))\n  );\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  v7_relativeSplatPath: boolean,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getResolveToMatches(contextualMatches, v7_relativeSplatPath),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Add an ?index param for matched index routes if we don't already have one\n  if (\n    (to == null || to === \"\" || to === \".\") &&\n    activeRouteMatch &&\n    activeRouteMatch.route.index &&\n    !hasNakedIndexQuery(path.search)\n  ) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: BaseNavigateOrFetchOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponseImpl;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" }),\n  });\n\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod\n    ? (rawFormMethod.toUpperCase() as V7_FormMethod)\n    : (rawFormMethod.toLowerCase() as FormMethod);\n  let formAction = stripHashFromPath(path);\n\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      let text =\n        typeof opts.body === \"string\"\n          ? opts.body\n          : opts.body instanceof FormData ||\n            opts.body instanceof URLSearchParams\n          ? // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n            Array.from(opts.body.entries()).reduce(\n              (acc, [name, value]) => `${acc}${name}=${value}\\n`,\n              \"\"\n            )\n          : String(opts.body);\n\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text,\n        },\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      try {\n        let json =\n          typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined,\n          },\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n\n  let searchParams: URLSearchParams;\n  let formData: FormData;\n\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n\n  let submission: Submission = {\n    formMethod,\n    formAction,\n    formEncType:\n      (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined,\n  };\n\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isInitialLoad: boolean,\n  skipActionErrorRevalidation: boolean,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: Set<string>,\n  deletedFetchers: Set<string>,\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  fetchRedirectIds: Set<string>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionResult?: PendingActionResult\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingActionResult\n    ? isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[1].error\n      : pendingActionResult[1].data\n    : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId =\n    pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[0]\n      : undefined;\n  let boundaryMatches = boundaryId\n    ? getLoaderMatchesUntilBoundary(matches, boundaryId)\n    : matches;\n\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult\n    ? pendingActionResult[1].statusCode\n    : undefined;\n  let shouldSkipRevalidation =\n    skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let { route } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n\n    if (route.loader == null) {\n      return false;\n    }\n\n    if (isInitialLoad) {\n      if (typeof route.loader !== \"function\" || route.loader.hydrate) {\n        return true;\n      }\n      return (\n        state.loaderData[route.id] === undefined &&\n        // Don't re-run if the loader ran and threw an error\n        (!state.errors || state.errors[route.id] === undefined)\n      );\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation\n        ? false\n        : // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n          isRevalidationRequired ||\n          currentUrl.pathname + currentUrl.search ===\n            nextUrl.pathname + nextUrl.search ||\n          // Search params affect all loaders\n          currentUrl.search !== nextUrl.search ||\n          isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial load (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (\n      isInitialLoad ||\n      !matches.some((m) => m.route.id === f.routeId) ||\n      deletedFetchers.has(key)\n    ) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      // Always mark for revalidation if the fetcher was cancelled\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (\n      fetcher &&\n      fetcher.state !== \"idle\" &&\n      fetcher.data === undefined\n    ) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params,\n        ...submission,\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation\n          ? false\n          : isRevalidationRequired,\n      });\n    }\n\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: ShouldRevalidateFunctionArgs\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\n/**\n * Idempotent utility to execute patchRoutesOnMiss() to lazily load route\n * definitions and update the routes/routeManifest\n */\nasync function loadLazyRouteChildren(\n  patchRoutesOnMissImpl: AgnosticPatchRoutesOnMissFunction,\n  path: string,\n  matches: AgnosticDataRouteMatch[],\n  routes: AgnosticDataRouteObject[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  pendingRouteChildren: Map<string, ReturnType<typeof patchRoutesOnMissImpl>>,\n  signal: AbortSignal\n) {\n  let key = [path, ...matches.map((m) => m.route.id)].join(\"-\");\n  try {\n    let pending = pendingRouteChildren.get(key);\n    if (!pending) {\n      pending = patchRoutesOnMissImpl({\n        path,\n        matches,\n        patch: (routeId, children) => {\n          if (!signal.aborted) {\n            patchRoutesImpl(\n              routeId,\n              children,\n              routes,\n              manifest,\n              mapRouteProperties\n            );\n          }\n        },\n      });\n      pendingRouteChildren.set(key, pending);\n    }\n\n    if (pending && isPromise<AgnosticRouteObject[]>(pending)) {\n      await pending;\n    }\n  } finally {\n    pendingRouteChildren.delete(key);\n  }\n}\n\nfunction patchRoutesImpl(\n  routeId: string | null,\n  children: AgnosticRouteObject[],\n  routesToUse: AgnosticDataRouteObject[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction\n) {\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(\n      route,\n      `No route found to patch children into: routeId = ${routeId}`\n    );\n    let dataChildren = convertRoutesToDataRoutes(\n      children,\n      mapRouteProperties,\n      [routeId, \"patch\", String(route.children?.length || \"0\")],\n      manifest\n    );\n    if (route.children) {\n      route.children.push(...dataChildren);\n    } else {\n      route.children = dataChildren;\n    }\n  } else {\n    let dataChildren = convertRoutesToDataRoutes(\n      children,\n      mapRouteProperties,\n      [\"patch\", String(routesToUse.length || \"0\")],\n      manifest\n    );\n    routesToUse.push(...dataChildren);\n  }\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nfunction defaultDataStrategy(\n  opts: DataStrategyFunctionArgs\n): ReturnType<DataStrategyFunction> {\n  return Promise.all(opts.matches.map((m) => m.resolve()));\n}\n\nasync function callDataStrategyImpl(\n  dataStrategyImpl: DataStrategyFunction,\n  type: \"loader\" | \"action\",\n  request: Request,\n  matchesToLoad: AgnosticDataRouteMatch[],\n  matches: AgnosticDataRouteMatch[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  requestContext?: unknown\n): Promise<HandlerResult[]> {\n  let routeIdsToLoad = matchesToLoad.reduce(\n    (acc, m) => acc.add(m.route.id),\n    new Set<string>()\n  );\n  let loadedMatches = new Set<string>();\n\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: matches.map((match) => {\n      let shouldLoad = routeIdsToLoad.has(match.route.id);\n      // `resolve` encapsulates the route.lazy, executing the\n      // loader/action, and mapping return values/thrown errors to a\n      // HandlerResult.  Users can pass a callback to take fine-grained control\n      // over the execution of the loader/action\n      let resolve: DataStrategyMatch[\"resolve\"] = (handlerOverride) => {\n        loadedMatches.add(match.route.id);\n        return shouldLoad\n          ? callLoaderOrAction(\n              type,\n              request,\n              match,\n              manifest,\n              mapRouteProperties,\n              handlerOverride,\n              requestContext\n            )\n          : Promise.resolve({ type: ResultType.data, result: undefined });\n      };\n\n      return {\n        ...match,\n        shouldLoad,\n        resolve,\n      };\n    }),\n    request,\n    params: matches[0].params,\n    context: requestContext,\n  });\n\n  // Throw if any loadRoute implementations not called since they are what\n  // ensures a route is fully loaded\n  matches.forEach((m) =>\n    invariant(\n      loadedMatches.has(m.route.id),\n      `\\`match.resolve()\\` was not called for route id \"${m.route.id}\". ` +\n        \"You must call `match.resolve()` on every match passed to \" +\n        \"`dataStrategy` to ensure all routes are properly loaded.\"\n    )\n  );\n\n  // Filter out any middleware-only matches for which we didn't need to run handlers\n  return results.filter((_, i) => routeIdsToLoad.has(matches[i].route.id));\n}\n\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  handlerOverride: Parameters<DataStrategyMatch[\"resolve\"]>[0],\n  staticContext?: unknown\n): Promise<HandlerResult> {\n  let result: HandlerResult;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (\n    handler: AgnosticRouteObject[\"loader\"] | AgnosticRouteObject[\"action\"]\n  ): Promise<HandlerResult> => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    // This will never resolve so safe to type it as Promise<HandlerResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise<HandlerResult>((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n\n    let actualHandler = (ctx?: unknown) => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(\n          new Error(\n            `You cannot call the handler for a route which defines a boolean ` +\n              `\"${type}\" [routeId: ${match.route.id}]`\n          )\n        );\n      }\n      return handler(\n        {\n          request,\n          params: match.params,\n          context: staticContext,\n        },\n        ...(ctx !== undefined ? [ctx] : [])\n      );\n    };\n\n    let handlerPromise: Promise<HandlerResult>;\n    if (handlerOverride) {\n      handlerPromise = handlerOverride((ctx: unknown) => actualHandler(ctx));\n    } else {\n      handlerPromise = (async () => {\n        try {\n          let val = await actualHandler();\n          return { type: \"data\", result: val };\n        } catch (e) {\n          return { type: \"error\", result: e };\n        }\n      })();\n    }\n\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          loadLazyRouteModule(match.route, mapRouteProperties, manifest),\n        ]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value!;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, result: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result.result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // HandlerResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return { type: ResultType.error, result: e };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  return result;\n}\n\nasync function convertHandlerResultToDataResult(\n  handlerResult: HandlerResult\n): Promise<DataResult> {\n  let { result, type } = handlerResult;\n\n  if (isResponse(result)) {\n    let data: any;\n\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return { type: ResultType.error, error: e };\n    }\n\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (type === ResultType.error) {\n    if (isDataWithResponseInit(result)) {\n      if (result.data instanceof Error) {\n        return {\n          type: ResultType.error,\n          error: result.data,\n          statusCode: result.init?.status,\n        };\n      }\n\n      // Convert thrown unstable_data() to ErrorResponse instances\n      result = new ErrorResponseImpl(\n        result.init?.status || 500,\n        undefined,\n        result.data\n      );\n    }\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : undefined,\n    };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  if (isDataWithResponseInit(result)) {\n    return {\n      type: ResultType.data,\n      data: result.data,\n      statusCode: result.init?.status,\n      headers: result.init?.headers\n        ? new Headers(result.init.headers)\n        : undefined,\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(\n  response: Response,\n  request: Request,\n  routeId: string,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  v7_relativeSplatPath: boolean\n) {\n  let location = response.headers.get(\"Location\");\n  invariant(\n    location,\n    \"Redirects returned/thrown from loaders/actions must have a Location header\"\n  );\n\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(\n      0,\n      matches.findIndex((m) => m.route.id === routeId) + 1\n    );\n    location = normalizeTo(\n      new URL(request.url),\n      trimmedMatches,\n      basename,\n      true,\n      location,\n      v7_relativeSplatPath\n    );\n    response.headers.set(\"Location\", location);\n  }\n\n  return response;\n}\n\nfunction normalizeRedirectLocation(\n  location: string,\n  currentUrl: URL,\n  basename: string\n): string {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\")\n      ? new URL(currentUrl.protocol + normalizedLocation)\n      : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (\n      formEncType === \"application/x-www-form-urlencoded\" &&\n      submission.formData\n    ) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n\n  return searchParams;\n}\n\nfunction convertSearchParamsToFormData(\n  searchParams: URLSearchParams\n): FormData {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingActionResult: PendingActionResult | undefined,\n  activeDeferreds: Map<string, DeferredData>,\n  skipLoaderErrorBubbling: boolean\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n  let pendingError =\n    pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[1].error\n      : undefined;\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (\n          result.statusCode != null &&\n          result.statusCode !== 200 &&\n          !foundError\n        ) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = { [pendingActionResult[0]]: pendingError };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingActionResult: PendingActionResult | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingActionResult,\n    activeDeferreds,\n    false // This method is only called client side so we always want to bubble\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, match, controller } = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\nfunction getActionDataForCommit(\n  pendingActionResult: PendingActionResult | undefined\n) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1])\n    ? {\n        // Clear out prior actionData on errors\n        actionData: {},\n      }\n    : {\n        actionData: {\n          [pendingActionResult[0]]: pendingActionResult[1].data,\n        },\n      };\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route =\n    routes.length === 1\n      ? routes[0]\n      : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n          id: `__shim-error-route__`,\n        };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n    message,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\" | \"invalid-body\" | \"route-discovery\";\n    message?: string;\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (type === \"route-discovery\") {\n      errorMessage =\n        `Unable to match URL \"${pathname}\" - the \\`unstable_patchRoutesOnMiss()\\` ` +\n        `function threw the following error:\\n${message}`;\n    } else if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(\n  results: DataResult[]\n): { result: RedirectResult; idx: number } | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return { result, idx: i };\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\n\nfunction isPromise<T = unknown>(val: unknown): val is Promise<T> {\n  return typeof val === \"object\" && val != null && \"then\" in val;\n}\n\nfunction isHandlerResult(result: unknown): result is HandlerResult {\n  return (\n    result != null &&\n    typeof result === \"object\" &&\n    \"type\" in result &&\n    \"result\" in result &&\n    (result.type === ResultType.data || result.type === ResultType.error)\n  );\n}\n\nfunction isRedirectHandlerResult(result: HandlerResult) {\n  return (\n    isResponse(result.result) && redirectStatusCodes.has(result.result.status)\n  );\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDataWithResponseInit(\n  value: any\n): value is DataWithResponseInit<unknown> {\n  return (\n    typeof value === \"object\" &&\n    value != null &&\n    \"type\" in value &&\n    \"data\" in value &&\n    \"init\" in value &&\n    value.type === \"DataWithResponseInit\"\n  );\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: (AgnosticDataRouteMatch | null)[],\n  results: DataResult[],\n  signals: (AbortSignal | null)[],\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(\n        signal,\n        \"Expected an AbortSignal for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n\nfunction getSubmissionFromNavigation(\n  navigation: Navigation\n): Submission | undefined {\n  let { formMethod, formAction, formEncType, text, formData, json } =\n    navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text,\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined,\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined,\n    };\n  }\n}\n\nfunction getLoadingNavigation(\n  location: Location,\n  submission?: Submission\n): NavigationStates[\"Loading\"] {\n  if (submission) {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n    };\n    return navigation;\n  } else {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n    };\n    return navigation;\n  }\n}\n\nfunction getSubmittingNavigation(\n  location: Location,\n  submission: Submission\n): NavigationStates[\"Submitting\"] {\n  let navigation: NavigationStates[\"Submitting\"] = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n  };\n  return navigation;\n}\n\nfunction getLoadingFetcher(\n  submission?: Submission,\n  data?: Fetcher[\"data\"]\n): FetcherStates[\"Loading\"] {\n  if (submission) {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data,\n    };\n    return fetcher;\n  } else {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data,\n    };\n    return fetcher;\n  }\n}\n\nfunction getSubmittingFetcher(\n  submission: Submission,\n  existingFetcher?: Fetcher\n): FetcherStates[\"Submitting\"] {\n  let fetcher: FetcherStates[\"Submitting\"] = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined,\n  };\n  return fetcher;\n}\n\nfunction getDoneFetcher(data: Fetcher[\"data\"]): FetcherStates[\"Idle\"] {\n  let fetcher: FetcherStates[\"Idle\"] = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data,\n  };\n  return fetcher;\n}\n\nfunction restoreAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\n\nfunction persistAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  if (transitions.size > 0) {\n    let json: Record<string, string[]> = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\n//#endregion\n","import * as React from \"react\";\nimport type {\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  AgnosticRouteMatch,\n  History,\n  LazyRouteFunction,\n  Location,\n  Action as NavigationType,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject\n  // Omit `future` since those can be pulled from the `router`\n  // `NavigationContext` needs future since it doesn't have a `router` in all cases\n  extends Omit<NavigationContextObject, \"future\"> {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  unstable_flushSync?: boolean;\n  unstable_viewTransition?: boolean;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n  future: {\n    v7_relativeSplatPath: boolean;\n  };\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n  UIMatch,\n} from \"@remix-run/router\";\nimport {\n  IDLE_BLOCKER,\n  Action as NavigationType,\n  UNSAFE_convertRouteMatchToUiMatch as convertRouteMatchToUiMatch,\n  UNSAFE_decodePath as decodePath,\n  UNSAFE_getResolveToMatches as getResolveToMatches,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteMatch,\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, decodePath(pathname)),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, future, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getResolveToMatches(matches, future.v7_relativeSplatPath)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { future } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(\n    getResolveToMatches(matches, future.v7_relativeSplatPath)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"],\n  future?: RemixRouter[\"future\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined ||\n        matches[matches.length - 1].route.lazy !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState,\n    future\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error !== undefined ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null,\n  future: RemixRouter[\"future\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (!dataRouterState) {\n      return null;\n    }\n\n    if (dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else if (\n      future?.v7_partialHydration &&\n      parentMatches.length === 0 &&\n      !dataRouterState.initialized &&\n      dataRouterState.matches.length > 0\n    ) {\n      // Don't bail if we're initializing with partial hydration and we have\n      // router matches.  That means we're actively running `patchRoutesOnMiss`\n      // so we should render down the partial matches to the appropriate\n      // `HydrateFallback`.  We only do this if `parentMatches` is empty so it\n      // only impacts the root matches for `RouterProvider` and no descendant\n      // `<Routes>`\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id] !== undefined\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n\n      if (match.route.id) {\n        let { loaderData, errors } = dataRouterState;\n        let needsToRunLoader =\n          match.route.loader &&\n          loaderData[match.route.id] === undefined &&\n          (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error: any;\n    let shouldRenderHydrateFallback = false;\n    let errorElement: React.ReactNode | null = null;\n    let hydrateFallbackElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\n            \"route-fallback\",\n            false,\n            \"No `HydrateFallback` element provided to render during initial hydration\"\n          );\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(\n    () => ({\n      revalidate: dataRouterContext.router.revalidate,\n      state: state.revalidation,\n    }),\n    [dataRouterContext.router.revalidate, state.revalidation]\n  );\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches(): UIMatch[] {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router, basename } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n\n      // If they provided us a function and we've got an active basename, strip\n      // it from the locations we expose to the user to match the behavior of\n      // useLocation\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname:\n            stripBasename(currentLocation.pathname, basename) ||\n            currentLocation.pathname,\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname:\n            stripBasename(nextLocation.pathname, basename) ||\n            nextLocation.pathname,\n        },\n        historyAction,\n      });\n    },\n    [basename, shouldBlock]\n  );\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey)\n    ? state.blockers.get(blockerKey)!\n    : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import type {\n  InitialEntry,\n  LazyRouteFunction,\n  Location,\n  MemoryHistory,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RouterState,\n  RouterSubscriber,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  UNSAFE_getResolveToMatches as getResolveToMatches,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\nimport * as React from \"react\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  _renderMatches,\n  useAsyncValue,\n  useInRouterContext,\n  useLocation,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  useRoutesImpl,\n} from \"./hooks\";\n\nexport interface FutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_startTransition: boolean;\n}\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n  // Only accept future flags relevant to rendering behavior\n  // routing flags should be accessed via router.future\n  future?: Partial<Pick<FutureConfig, \"v7_startTransition\">>;\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let { v7_startTransition } = future || {};\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (newState: RouterState) => {\n      if (v7_startTransition && startTransitionImpl) {\n        startTransitionImpl(() => setStateImpl(newState));\n      } else {\n        setStateImpl(newState);\n      }\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={basename}\n            location={state.location}\n            navigationType={state.historyAction}\n            navigator={navigator}\n            future={{\n              v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n            }}\n          >\n            {state.initialized || router.future.v7_partialHydration ? (\n              <DataRoutes\n                routes={router.routes}\n                future={router.future}\n                state={state}\n              />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  future?: Partial<FutureConfig>;\n}\n\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n  future,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  let { future, static: isStatic } = React.useContext(NavigationContext);\n\n  warning(\n    !isStatic,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getResolveToMatches(matches, future.v7_relativeSplatPath),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n  future?: Partial<Pick<FutureConfig, \"v7_relativeSplatPath\">>;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n  future,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({\n      basename,\n      navigator,\n      static: staticProp,\n      future: {\n        v7_relativeSplatPath: false,\n        ...future,\n      },\n    }),\n    [basename, future, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        \"_error\" in promise\n          ? AwaitRenderStatus.error\n          : \"_data\" in promise\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\n/**\n * Submit options shared by both navigations and fetchers\n */\ninterface SharedSubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * Enable flushSync for this submission's state updates\n   */\n  unstable_flushSync?: boolean;\n}\n\n/**\n * Submit options available to fetchers\n */\nexport interface FetcherSubmitOptions extends SharedSubmitOptions {}\n\n/**\n * Submit options available to navigations\n */\nexport interface SubmitOptions extends FetcherSubmitOptions {\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Enable view transitions on this submission navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport type {\n  DataRouteObject,\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  Navigator,\n  RelativeRoutingType,\n  RouteObject,\n  RouterProps,\n  RouterProviderProps,\n  To,\n  unstable_PatchRoutesOnMissFunction,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n  UNSAFE_useRoutesImpl as useRoutesImpl,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  unstable_DataStrategyFunction,\n  unstable_DataStrategyFunctionArgs,\n  unstable_DataStrategyMatch,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n  RouterState,\n  RouterSubscriber,\n  BlockerFunction,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n  matchPath,\n  IDLE_FETCHER,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n  FetcherSubmitOptions,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  unstable_DataStrategyFunction,\n  unstable_DataStrategyFunctionArgs,\n  unstable_DataStrategyMatch,\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams, ErrorResponseImpl as UNSAFE_ErrorResponseImpl };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker,\n  BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  ErrorResponse,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathParam,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n  unstable_HandlerResult,\n  unstable_PatchRoutesOnMissFunction,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  replace,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n  var __reactRouterVersion: string;\n  interface Document {\n    startViewTransition(cb: () => Promise<void> | void): ViewTransition;\n  }\n}\n\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"0\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  unstable_dataStrategy?: unstable_DataStrategyFunction;\n  unstable_patchRoutesOnMiss?: unstable_PatchRoutesOnMissFunction;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    unstable_dataStrategy: opts?.unstable_dataStrategy,\n    unstable_patchRoutesOnMiss: opts?.unstable_patchRoutesOnMiss,\n    window: opts?.window,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    unstable_dataStrategy: opts?.unstable_dataStrategy,\n    unstable_patchRoutesOnMiss: opts?.unstable_patchRoutesOnMiss,\n    window: opts?.window,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Contexts\n////////////////////////////////////////////////////////////////////////////////\n\ntype ViewTransitionContextObject =\n  | {\n      isTransitioning: false;\n    }\n  | {\n      isTransitioning: true;\n      flushSync: boolean;\n      currentLocation: Location;\n      nextLocation: Location;\n    };\n\nconst ViewTransitionContext = React.createContext<ViewTransitionContextObject>({\n  isTransitioning: false,\n});\nif (__DEV__) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nexport { ViewTransitionContext as UNSAFE_ViewTransitionContext };\n\n// TODO: (v7) Change the useFetcher data from `any` to `unknown`\ntype FetchersContextObject = Map<string, any>;\n\nconst FetchersContext = React.createContext<FetchersContextObject>(new Map());\nif (__DEV__) {\n  FetchersContext.displayName = \"Fetchers\";\n}\n\nexport { FetchersContext as UNSAFE_FetchersContext };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\n\nfunction startTransitionSafe(cb: () => void) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\nfunction flushSyncSafe(cb: () => void) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\n\ninterface ViewTransition {\n  finished: Promise<void>;\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  skipTransition(): void;\n}\n\nclass Deferred<T> {\n  status: \"pending\" | \"resolved\" | \"rejected\" = \"pending\";\n  promise: Promise<T>;\n  // @ts-expect-error - no initializer\n  resolve: (value: T) => void;\n  // @ts-expect-error - no initializer\n  reject: (reason?: unknown) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState<RouterState>();\n  let [vtContext, setVtContext] = React.useState<ViewTransitionContextObject>({\n    isTransitioning: false,\n  });\n  let [renderDfd, setRenderDfd] = React.useState<Deferred<void>>();\n  let [transition, setTransition] = React.useState<ViewTransition>();\n  let [interruption, setInterruption] = React.useState<{\n    state: RouterState;\n    currentLocation: Location;\n    nextLocation: Location;\n  }>();\n  let fetcherData = React.useRef<Map<string, any>>(new Map());\n  let { v7_startTransition } = future || {};\n\n  let optInStartTransition = React.useCallback(\n    (cb: () => void) => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    },\n    [v7_startTransition]\n  );\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (\n      newState: RouterState,\n      {\n        deletedFetchers,\n        unstable_flushSync: flushSync,\n        unstable_viewTransitionOpts: viewTransitionOpts,\n      }\n    ) => {\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== undefined) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n\n      let isViewTransitionUnavailable =\n        router.window == null ||\n        router.window.document == null ||\n        typeof router.window.document.startViewTransition !== \"function\";\n\n      // If this isn't a view transition or it's not available in this browser,\n      // just update and be done with it\n      if (!viewTransitionOpts || isViewTransitionUnavailable) {\n        if (flushSync) {\n          flushSyncSafe(() => setStateImpl(newState));\n        } else {\n          optInStartTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n\n      // flushSync + startViewTransition\n      if (flushSync) {\n        // Flush through the context to mark DOM elements as transition=ing\n        flushSyncSafe(() => {\n          // Cancel any pending transitions\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation,\n          });\n        });\n\n        // Update the DOM\n        let t = router.window!.document.startViewTransition(() => {\n          flushSyncSafe(() => setStateImpl(newState));\n        });\n\n        // Clean up after the animation completes\n        t.finished.finally(() => {\n          flushSyncSafe(() => {\n            setRenderDfd(undefined);\n            setTransition(undefined);\n            setPendingState(undefined);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n\n        flushSyncSafe(() => setTransition(t));\n        return;\n      }\n\n      // startTransition + startViewTransition\n      if (transition) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      }\n    },\n    [router.window, transition, renderDfd, fetcherData, optInStartTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred<void>());\n    }\n  }, [vtContext]);\n\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (\n      renderDfd &&\n      pendingState &&\n      state.location.key === pendingState.location.key\n    ) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation,\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  let routerFuture = React.useMemo<RouterProps[\"future\"]>(\n    () => ({\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n    }),\n    [router.future.v7_relativeSplatPath]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <FetchersContext.Provider value={fetcherData.current}>\n            <ViewTransitionContext.Provider value={vtContext}>\n              <Router\n                basename={basename}\n                location={state.location}\n                navigationType={state.historyAction}\n                navigator={navigator}\n                future={routerFuture}\n              >\n                {state.initialized || router.future.v7_partialHydration ? (\n                  <MemoizedDataRoutes\n                    routes={router.routes}\n                    future={router.future}\n                    state={state}\n                  />\n                ) : (\n                  fallbackElement\n                )}\n              </Router>\n            </ViewTransitionContext.Provider>\n          </FetchersContext.Provider>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = React.memo(DataRoutes);\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n  unstable_viewTransition?: boolean;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport type NavLinkRenderProps = {\n  isActive: boolean;\n  isPending: boolean;\n  isTransitioning: boolean;\n};\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?: React.ReactNode | ((props: NavLinkRenderProps) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: NavLinkRenderProps) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: NavLinkRenderProps) => React.CSSProperties | undefined);\n}\n\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator, basename } = React.useContext(NavigationContext);\n    let isTransitioning =\n      routerState != null &&\n      // Conditional usage is OK here because the usage of a data router is static\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useViewTransitionState(path) &&\n      unstable_viewTransition === true;\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    if (nextLocationPathname && basename) {\n      nextLocationPathname =\n        stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n\n    // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n    // we're looking for a slash _after_ what's in `to`.  For example:\n    //\n    // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n    // both want to look for a / at index 6 to match URL `/users/matt`\n    const endSlashPosition =\n      toPathname !== \"/\" && toPathname.endsWith(\"/\")\n        ? toPathname.length - 1\n        : toPathname.length;\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(endSlashPosition) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning,\n    };\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n        unstable_viewTransition={unstable_viewTransition}\n      >\n        {typeof children === \"function\" ? children(renderProps) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\n/**\n * Form props shared by navigations and fetchers\n */\ninterface SharedFormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * Form props available to fetchers\n */\nexport interface FetcherFormProps extends SharedFormProps {}\n\n/**\n * Form props available to navigations\n */\nexport interface FormProps extends SharedFormProps {\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Enable view transitions on this Form navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (\n    {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        unstable_viewTransition,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n  useViewTransitionState = \"useViewTransitionState\",\n}\n\nenum DataRouterStateHook {\n  UseFetcher = \"useFetcher\",\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\n// Internal hooks\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n// External hooks\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n    unstable_viewTransition?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          unstable_viewTransition,\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: FetcherSubmitOptions\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          unstable_flushSync: options.unstable_flushSync,\n        });\n      } else {\n        router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          unstable_flushSync: options.unstable_flushSync,\n          unstable_viewTransition: options.unstable_viewTransition,\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    if (params.has(\"index\") && params.get(\"index\") === \"\") {\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: React.ForwardRefExoticComponent<\n    FetcherFormProps & React.RefAttributes<HTMLFormElement>\n  >;\n  submit: FetcherSubmitFunction;\n  load: (href: string, opts?: { unstable_flushSync?: boolean }) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>({\n  key,\n}: { key?: string } = {}): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState<string>(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  // Fetcher additions\n  let load = React.useCallback(\n    (href: string, opts?: { unstable_flushSync?: boolean }) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      router.fetch(fetcherKey, routeId, href, opts);\n    },\n    [fetcherKey, routeId, router]\n  );\n\n  let submitImpl = useSubmit();\n  let submit = React.useCallback<FetcherSubmitFunction>(\n    (target, opts) => {\n      submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey,\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n      (props, ref) => {\n        return (\n          <Form {...props} navigate={false} fetcherKey={fetcherKey} ref={ref} />\n        );\n      }\n    );\n    if (__DEV__) {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data,\n    }),\n    [FetcherForm, submit, load, fetcher, data]\n  );\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): (Fetcher & { key: string })[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key,\n  }));\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({\n  when,\n  message,\n}: {\n  when: boolean | BlockerFunction;\n  message: string;\n}) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(\n  to: To,\n  opts: { relative?: RelativeRoutingType } = {}\n) {\n  let vtContext = React.useContext(ViewTransitionContext);\n\n  invariant(\n    vtContext != null,\n    \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" +\n      \"Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n\n  let { basename } = useDataRouterContext(\n    DataRouterHook.useViewTransitionState\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath =\n    stripBasename(vtContext.currentLocation.pathname, basename) ||\n    vtContext.currentLocation.pathname;\n  let nextPath =\n    stripBasename(vtContext.nextLocation.pathname, basename) ||\n    vtContext.nextLocation.pathname;\n\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (\n    matchPath(path.pathname, nextPath) != null ||\n    matchPath(path.pathname, currentPath) != null\n  );\n}\n\nexport { useViewTransitionState as unstable_useViewTransitionState };\n\n//#endregion\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, NavLink } from 'react-router-dom';\n\nlet hashFragment = '';\nlet observer = null;\nlet asyncTimerId = null;\nlet scrollFunction = null;\n\nfunction reset() {\n  hashFragment = '';\n  if (observer !== null) observer.disconnect();\n  if (asyncTimerId !== null) {\n    window.clearTimeout(asyncTimerId);\n    asyncTimerId = null;\n  }\n}\n\nfunction isInteractiveElement(element) {\n  const formTags = ['BUTTON', 'INPUT', 'SELECT', 'TEXTAREA'];\n  const linkTags = ['A', 'AREA'];\n  return (\n    (formTags.includes(element.tagName) && !element.hasAttribute('disabled')) ||\n    (linkTags.includes(element.tagName) && element.hasAttribute('href'))\n  );\n}\n\nfunction getElAndScroll() {\n  let element = null;\n  if (hashFragment === '#') {\n    // use document.body instead of document.documentElement because of a bug in smoothscroll-polyfill in safari\n    // see https://github.com/iamdustan/smoothscroll/issues/138\n    // while smoothscroll-polyfill is not included, it is the recommended way to implement smoothscroll\n    // in browsers that don't natively support el.scrollIntoView({ behavior: 'smooth' })\n    element = document.body;\n  } else {\n    // check for element with matching id before assume '#top' is the top of the document\n    // see https://html.spec.whatwg.org/multipage/browsing-the-web.html#target-element\n    const id = hashFragment.replace('#', '');\n    element = document.getElementById(id);\n    if (element === null && hashFragment === '#top') {\n      // see above comment for why document.body instead of document.documentElement\n      element = document.body;\n    }\n  }\n\n  if (element !== null) {\n    scrollFunction(element);\n\n    // update focus to where the page is scrolled to\n    // unfortunately this doesn't work in safari (desktop and iOS) when blur() is called\n    let originalTabIndex = element.getAttribute('tabindex');\n    if (originalTabIndex === null && !isInteractiveElement(element)) {\n      element.setAttribute('tabindex', -1);\n    }\n    element.focus({ preventScroll: true });\n    if (originalTabIndex === null && !isInteractiveElement(element)) {\n      // for some reason calling blur() in safari resets the focus region to where it was previously,\n      // if blur() is not called it works in safari, but then are stuck with default focus styles\n      // on an element that otherwise might never had focus styles applied, so not an option\n      element.blur();\n      element.removeAttribute('tabindex');\n    }\n\n    reset();\n    return true;\n  }\n  return false;\n}\n\nfunction hashLinkScroll(timeout) {\n  // Push onto callback queue so it runs after the DOM is updated\n  window.setTimeout(() => {\n    if (getElAndScroll() === false) {\n      if (observer === null) {\n        observer = new MutationObserver(getElAndScroll);\n      }\n      observer.observe(document, {\n        attributes: true,\n        childList: true,\n        subtree: true,\n      });\n      // if the element doesn't show up in specified timeout or 10 seconds, stop checking\n      asyncTimerId = window.setTimeout(() => {\n        reset();\n      }, timeout || 10000);\n    }\n  }, 0);\n}\n\nexport function genericHashLink(As) {\n  return React.forwardRef((props, ref) => {\n    let linkHash = '';\n    if (typeof props.to === 'string' && props.to.includes('#')) {\n      linkHash = `#${props.to.split('#').slice(1).join('#')}`;\n    } else if (\n      typeof props.to === 'object' &&\n      typeof props.to.hash === 'string'\n    ) {\n      linkHash = props.to.hash;\n    }\n\n    const passDownProps = {};\n    if (As === NavLink) {\n      passDownProps.isActive = (match, location) =>\n        match && match.isExact && location.hash === linkHash;\n    }\n\n    function handleClick(e) {\n      reset();\n      hashFragment = props.elementId ? `#${props.elementId}` : linkHash;\n      if (props.onClick) props.onClick(e);\n      if (\n        hashFragment !== '' &&\n        // ignore non-vanilla click events, same as react-router\n        // below logic adapted from react-router: https://github.com/ReactTraining/react-router/blob/fc91700e08df8147bd2bb1be19a299cbb14dbcaa/packages/react-router-dom/modules/Link.js#L43-L48\n        !e.defaultPrevented && // onClick prevented default\n        e.button === 0 && // ignore everything but left clicks\n        (!props.target || props.target === '_self') && // let browser handle \"target=_blank\" etc\n        !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) // ignore clicks with modifier keys\n      ) {\n        scrollFunction =\n          props.scroll ||\n          ((el) =>\n            props.smooth\n              ? el.scrollIntoView({ behavior: 'smooth' })\n              : el.scrollIntoView());\n        hashLinkScroll(props.timeout);\n      }\n    }\n    const { scroll, smooth, timeout, elementId, ...filteredProps } = props;\n    return (\n      <As {...passDownProps} {...filteredProps} onClick={handleClick} ref={ref}>\n        {props.children}\n      </As>\n    );\n  });\n}\n\nexport const HashLink = genericHashLink(Link);\n\nexport const NavHashLink = genericHashLink(NavLink);\n\nif (process.env.NODE_ENV !== 'production') {\n  HashLink.displayName = 'HashLink';\n  NavHashLink.displayName = 'NavHashLink';\n\n  const propTypes = {\n    onClick: PropTypes.func,\n    children: PropTypes.node,\n    scroll: PropTypes.func,\n    timeout: PropTypes.number,\n    elementId: PropTypes.string,\n    to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  };\n\n  HashLink.propTypes = propTypes;\n  NavHashLink.propTypes = propTypes;\n}\n","import { useState, useEffect } from \"react\";\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\nimport logo from '../assets/img/logo.svg';\r\nimport navIcon1 from '../assets/img/nav-icon1.svg';\r\nimport navIcon2 from '../assets/img/nav-icon2.svg';\r\nimport navIcon3 from '../assets/img/nav-icon3.svg';\r\nimport { HashLink } from 'react-router-hash-link';\r\nimport {\r\n  BrowserRouter as Router\r\n} from \"react-router-dom\";\r\n\r\nexport const NavBar = () => {\r\n\r\n  const [activeLink, setActiveLink] = useState('home');\r\n  const [scrolled, setScrolled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const onScroll = () => {\r\n      if (window.scrollY > 50) {\r\n        setScrolled(true);\r\n      } else {\r\n        setScrolled(false);\r\n      }\r\n    }\r\n\r\n    window.addEventListener(\"scroll\", onScroll);\r\n\r\n    return () => window.removeEventListener(\"scroll\", onScroll);\r\n  }, [])\r\n\r\n  const onUpdateActiveLink = (value) => {\r\n    setActiveLink(value);\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <Navbar expand=\"md\" className={scrolled ? \"scrolled\" : \"\"}>\r\n        <Container>\r\n          <Navbar.Brand href=\"/\">\r\n            <img src={logo} alt=\"Logo\" />\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </Navbar.Toggle>\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ms-auto\">\r\n              <Nav.Link href=\"#home\" className={activeLink === 'home' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('home')}>Home</Nav.Link>\r\n              <Nav.Link href=\"#skills\" className={activeLink === 'skills' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('skills')}>Skills</Nav.Link>\r\n              <Nav.Link href=\"#projects\" className={activeLink === 'projects' ? 'active navbar-link' : 'navbar-link'} onClick={() => onUpdateActiveLink('projects')}>Projects</Nav.Link>\r\n            </Nav>\r\n            <span className=\"navbar-text\">\r\n              <div className=\"social-icon\">\r\n                <a href=\"https://www.linkedin.com/in/manavshah30\"><img src={navIcon1} alt=\"\" /></a>\r\n                <a href=\"https://github.com/Manavshahoff\"><img src={navIcon2} alt=\"\" /></a>\r\n                <a href=\"#\"><img src={navIcon3} alt=\"\" /></a>\r\n              </div>\r\n              <HashLink to='#connect'>\r\n                <button className=\"vvd\"><span>Let’s Connect</span></button>\r\n              </HashLink>\r\n            </span>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </Router>\r\n  )\r\n}","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26, _path27, _path28, _path29, _path30, _path31, _path32, _path33, _path34, _path35, _path36, _path37, _path38, _path39, _path40, _path41, _path42, _path43, _path44, _path45, _path46, _path47, _path48, _path49, _path50, _path51, _path52, _path53, _path54, _path55, _path56, _path57, _path58, _path59, _path60, _path61, _path62, _path63, _path64, _path65, _path66, _path67, _path68, _path69, _path70, _path71, _path72, _path73, _path74, _path75, _path76, _path77, _path78, _path79, _path80, _path81, _path82, _path83, _path84, _path85, _path86, _path87, _path88, _path89, _path90, _path91, _path92, _path93, _path94, _path95, _path96, _path97, _path98, _path99, _path100, _path101, _path102, _path103, _path104, _path105, _path106, _path107, _path108, _path109, _path110, _path111, _path112, _path113, _path114, _path115, _path116, _path117, _path118, _path119, _path120, _path121, _path122, _path123, _path124, _path125, _path126, _path127, _path128, _path129, _path130, _path131, _path132, _path133, _path134, _path135, _path136, _path137, _path138, _path139, _path140, _path141, _path142, _path143, _path144, _path145, _path146, _path147, _path148, _path149, _path150, _path151, _path152, _path153, _path154, _path155, _path156, _path157, _path158, _path159, _path160, _path161, _path162, _path163, _path164, _path165, _path166, _path167, _path168, _path169, _path170, _path171, _path172, _path173, _path174, _path175, _path176, _path177, _path178, _path179, _path180, _path181, _path182, _path183, _path184, _path185, _path186, _path187, _path188, _path189, _path190, _path191, _path192, _path193, _path194, _path195, _path196, _path197, _path198, _path199, _path200, _path201, _path202, _path203, _path204, _defs;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgHeaderImg(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 682,\n    height: 614,\n    viewBox: \"0 0 682 614\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_110_3490)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      mixBlendMode: \"screen\"\n    },\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M552.013 275.985C552.013 428.389 428.417 551.931 275.994 551.931C235.44 551.986 195.378 543.06 158.684 525.797C151.659 522.502 144.792 518.891 138.096 515.029C111.367 499.589 87.4184 479.774 67.2489 456.408C59.8968 447.945 53.0738 439.037 46.8186 429.734C38.2642 417.029 30.7951 403.627 24.4902 389.669C8.32142 353.953 -0.0154075 315.19 0.0398234 275.985C-0.0110492 236.709 8.35308 197.877 24.5693 162.104C29.5828 151.009 35.3474 140.27 41.8231 129.96C55.7137 107.689 72.7226 87.5224 92.3319 70.0737C142.818 24.8788 208.23 -0.0639014 275.994 0.0395048C298.055 0.0253765 320.04 2.65358 341.476 7.86794C370.272 14.8757 397.742 26.5057 422.815 42.3051C427.639 45.3495 432.358 48.5125 436.945 51.8469C440.794 54.6013 444.577 57.4876 448.267 60.4529C466.386 74.8798 482.608 91.5384 496.549 110.033C526.353 149.478 544.926 196.253 550.3 245.396C551.453 255.552 552.025 265.765 552.013 275.985Z\",\n    fill: \"url(#paint0_radial_110_3490)\"\n  }), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M532.044 275.985C532.044 417.372 417.371 531.978 275.993 531.978C238.359 532.034 201.18 523.747 167.133 507.715C160.622 504.671 154.255 501.323 148.034 497.738C123.241 483.408 101.023 465.028 82.3012 443.361C75.4827 435.51 69.157 427.244 63.3603 418.61C55.4198 406.822 48.4801 394.391 42.6137 381.445C27.6215 348.32 19.8914 312.371 19.9426 276.012C19.8906 239.576 27.6482 203.553 42.6928 170.367C47.3432 160.072 52.694 150.107 58.7075 140.543C71.5974 119.883 87.3815 101.176 105.579 84.9926C152.414 43.0691 213.092 19.9294 275.954 20.0192C296.422 20.0093 316.818 22.4516 336.704 27.2941C363.416 33.7868 388.896 44.5714 412.151 59.2273C416.633 62.0608 420.996 64.9997 425.253 68.0837C428.838 70.6404 432.344 73.3553 435.798 76.0703C452.591 89.4826 467.626 104.958 480.547 122.131C508.202 158.714 525.433 202.103 530.41 247.69C531.486 257.083 532.031 266.53 532.044 275.985Z\",\n    fill: \"url(#paint1_radial_110_3490)\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    opacity: 0.5\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    opacity: 0.5\n  }, _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M530.463 247.624C529.568 249.271 528.801 250.985 528.169 252.75C527.206 255.309 525.996 257.767 524.558 260.091C523.067 263.13 521.747 266.25 520.603 269.435C517.624 276.328 515.436 283.814 512.958 290.904C510.204 298.812 507.607 306.719 504.22 314.363C502.704 317.829 500.489 320.953 498.947 324.34C497.405 327.727 495.889 331.048 494.004 334.329C489.338 342.342 485.12 350.514 480.178 358.395C471.294 372.589 460.604 385.201 450.244 398.314C444.972 404.904 438.829 410.663 432.832 416.62C426.057 423.315 420.099 430.814 413.061 437.364C407.711 442.671 401.927 447.52 395.768 451.861C392.235 454.194 388.835 456.79 385.302 459.084C380.781 462.023 375.469 463.683 370.645 466.055C354.604 473.778 337.429 478.602 320.558 484.019C304.029 489.29 288.093 496.526 271.222 500.743C267.755 501.613 264.249 501.956 260.743 502.667C256.947 503.418 253.296 504.512 249.408 504.921C241.657 505.791 234.158 508.387 226.328 508.875C220.858 509.138 215.783 508.084 210.432 507.82C203.575 507.704 196.717 508.003 189.896 508.716C182.316 509.204 174.706 508.912 167.186 507.847C160.674 504.802 154.308 501.455 148.087 497.87L148.798 498.094C153.254 499.531 157.392 502.048 161.874 503.142C166.658 504.236 171.628 505.026 176.57 505.857C183.043 506.99 189.659 507.03 196.144 505.975C199.611 505.409 203.117 504.987 206.583 504.275C210.353 503.484 214.149 504.46 217.919 503.603C223.191 502.285 228.964 503.339 234.302 503.142C243.529 502.839 252.532 499.452 261.429 497.646C271.301 495.656 280.673 492.071 290.73 490.872C296.463 490.187 300.971 488.236 306.402 486.536C311.068 485.099 314.047 482.503 317.922 479.564C325.382 473.989 332.921 468.27 341.647 464.658C350.361 461.121 359.409 458.472 368.655 456.751C376.613 455.206 384.05 451.669 390.271 446.471C392.842 444.165 395.28 441.753 397.811 439.42C401.046 436.737 404.126 433.872 407.037 430.841C410.201 427.216 413.812 423.908 416.936 420.297C420.403 416.278 423.237 411.757 426.664 407.724C432.12 401.28 440.451 397.932 445.828 391.382C446.962 390.064 447.713 388.364 448.886 387.046C450.059 385.728 451.404 384.977 452.155 383.211C453.065 381.063 455.292 376.094 454.08 373.683C451.668 368.819 438.895 381.326 436.865 383.277C433.702 386.255 431.105 389.313 427.296 391.488C425.055 392.896 422.716 394.142 420.297 395.217C416.224 396.878 411.519 397.062 407.222 397.972C395.28 400.529 383.114 401.926 371.067 403.81C354.749 406.327 338.26 409.754 322.205 413.668C307.179 417.332 292.298 421.576 277.272 425.121C269.284 427.045 261.297 429.075 253.283 430.814C243.49 433.002 233.881 436.007 224.048 437.892C207.849 440.83 191.557 444.415 175.041 444.863C162.085 445.206 149.247 445.878 136.277 445.878C118.812 445.878 100.082 447.644 82.947 443.545C82.7275 443.5 82.5117 443.438 82.3012 443.361C75.4827 435.51 69.157 427.244 63.3603 418.61C69.6265 421.416 76.2004 423.478 82.947 424.752C87.8503 425.622 93.0436 426.742 97.1033 429.681C99.6436 431.734 102.508 433.351 105.579 434.465C116.73 438.05 126.668 437.826 137.832 434.544C142.006 433.305 146.149 432.014 150.262 430.669C153.306 429.641 156.101 427.836 159.145 427.006C167.779 424.752 176.702 423.131 185.402 421.141C189.54 420.192 193.877 419.401 197.95 418.162C202.537 416.726 206.834 414.393 211.236 412.588C219.672 409.121 227.514 405.55 236.556 403.995C242.237 403.059 248.828 402.347 254.034 399.711C255.721 398.881 258.252 397.708 257.988 395.455C257.685 392.661 254.034 393.412 252.031 393.754C246.192 394.769 240.247 395.296 234.447 396.838C224.203 399.503 213.714 401.119 203.143 401.662C187.247 402.716 171.048 403.665 155.112 402.835C142.458 402.189 129.726 401.056 117.072 401.174C104.827 401.293 92.925 400.239 81.2863 396.39C68.145 392.068 54.7664 388.114 42.6137 381.445C27.6215 348.32 19.8914 312.371 19.9426 276.012C19.8906 239.576 27.6482 203.553 42.6928 170.367C40.9924 175.046 39.5689 179.83 37.605 184.337C33.6583 193.039 31.545 202.46 31.3968 212.013C31.6342 215.749 31.6078 219.497 31.3177 223.229C30.6718 227.973 30.3028 231.031 31.6604 235.815C32.6753 239.321 32.9785 242.708 34.5206 246.095C35.016 247.153 35.7045 248.109 36.5505 248.915C37.3046 249.982 37.9744 251.105 38.554 252.276C40.6234 255.663 43.6023 260.183 47.1743 262.134C49.5626 263.32 52.0613 264.269 54.6346 264.967C57.6398 265.824 58.813 266.167 61.8314 265.073C64.2707 264.094 66.8274 263.439 69.4366 263.122C70.8724 263.281 72.2866 263.594 73.6545 264.058C75.4603 264.361 77.2397 264.203 79.085 264.585C86.6113 266.167 93.953 268.012 101.677 267.933C107.74 267.867 113.698 268.882 119.84 268.882C127.221 268.882 134.524 269.106 141.826 268.17C146.769 267.524 152.08 266.285 157.01 265.982C161.94 265.679 167.225 266.127 172.26 266.061C189.778 265.785 207.849 261.567 223.072 252.724C231.192 247.941 239.892 244.22 248.96 241.653C260.638 238.293 272.566 234.985 284.548 232.718C295.671 230.565 306.492 227.073 316.775 222.32C321.317 220.172 325.665 217.637 329.771 214.742C333.541 212.185 337.68 210.234 341.291 207.559C351.836 199.757 361.062 190.61 370.289 181.306C375.561 176.034 380.913 170.763 386.422 165.715C390.97 161.564 395.794 159.718 401.633 158.295C410.939 156.068 416.132 145.604 421.141 138.105C427.468 128.655 432.714 117.809 433.004 106.171C433.155 101.375 432.789 96.5764 431.909 91.8588C431.597 89.742 431.003 87.6765 430.143 85.7173C429.408 84.5236 428.79 83.2613 428.298 81.9481C428.034 80.8279 427.995 79.6549 427.771 78.6401C427.547 77.6253 427.019 76.5974 426.795 75.7803C426.268 73.5925 425.174 70.5745 425.319 68.1627V68.0177C428.904 70.5745 432.41 73.2894 435.864 76.0043C435.929 77.0062 435.903 78.012 435.785 79.0091C435.561 80.2216 435.139 81.2364 434.915 82.4357C434.612 84.2149 433.939 85.2297 433.979 87.1802C433.899 89.1285 434.049 91.0793 434.427 92.9923C435.666 97.7368 438.764 102.139 438.724 107.147C438.581 112.231 437.453 117.239 435.402 121.894C433.597 126.415 431.646 130.592 429.458 134.928C428.051 137.792 426.374 140.515 424.449 143.06C422.504 145.381 420.742 147.848 419.177 150.44C418.046 152.521 417.026 154.659 416.119 156.845C414.458 160.799 411.782 162.868 408.777 165.807C402.595 171.764 394.871 176.588 388.241 182.308C382.796 186.827 377.859 191.927 373.518 197.516C371.634 200.152 361.998 207.651 364.595 211.605C365.755 213.345 369.419 212.778 371.067 212.778C374.854 212.741 378.591 211.905 382.033 210.327C391.405 206.07 400.75 201.022 410.622 198.083C415.064 196.765 419.849 196.053 424.027 194.129C429.097 191.769 434.006 189.079 438.724 186.077C442.454 183.77 444.669 180.805 447.463 177.484C449.045 175.599 451.259 174.545 452.999 172.819C455.029 170.776 456.307 168.404 458.574 166.638C464.12 162.219 468.968 156.989 472.955 151.126C476.619 145.854 477.963 139.264 479.545 133.268C480.061 131.727 480.414 130.137 480.599 128.523C480.665 126.494 480.599 124.385 480.599 122.342V122.013C508.263 158.611 525.495 202.018 530.463 247.624Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    opacity: 0.5\n  }, _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M413.773 80.7884C412.797 86.5872 412.27 92.307 411.137 98.1058C410.003 103.905 409.713 110.349 407.367 115.7C403.413 124.925 402.174 135.166 395.926 143.297C393.29 146.763 391.207 150.493 387.82 153.392C386.528 154.242 385.17 154.987 383.76 155.62C382.442 156.49 381.045 157.808 379.806 158.743C373.097 163.646 365.979 168.694 360.035 174.558C353.668 180.818 347.605 186.96 340.079 191.889C337.812 193.352 335.439 194.406 333.106 195.698C331.295 196.898 329.406 197.976 327.451 198.927C325.081 199.659 322.827 200.724 320.756 202.09C318.925 203.443 316.938 204.572 314.837 205.45C311.226 206.874 307.72 208.574 304.108 209.971C302.447 210.643 300.708 211.025 299.02 211.618C294.236 213.437 290.73 213.279 284.522 213.766C282.571 212.91 284.232 212.831 285.84 212.119C286.831 211.668 287.705 210.996 288.397 210.155C289.733 208.713 291.193 207.39 292.76 206.202C295.475 204.238 299.06 203.263 301.986 201.497C305.716 199.164 309.407 196.33 313.019 193.813C316.076 191.704 318.37 188.383 320.927 185.747C323.642 182.888 326.924 180.331 329.89 177.655C333.357 174.571 336.335 171.066 339.841 168.008C343.469 164.923 346.464 161.163 348.659 156.938C349.635 155.132 351.217 153.814 352.232 151.969C353.295 150.301 354.25 148.567 355.092 146.777C355.962 144.628 357.095 142.625 358.031 140.556C359.085 138.144 359.046 135.284 359.573 132.767C361.155 125.229 362.671 117.624 364.055 110.046C365.029 103.604 365.509 97.0962 365.491 90.5805C365.715 84.3995 367.455 78.3766 367.482 72.1296C367.7 69.8415 367.394 67.5336 366.585 65.3819C365.267 62.4429 363.791 59.8862 362.737 56.8286C359.52 47.4212 353.55 39.1975 345.602 33.2247C344.402 32.3549 340.593 30.0617 336.823 27.3073C363.534 33.7999 389.015 44.5845 412.27 59.2404C414.326 66.2295 414.838 73.5817 413.773 80.7884Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    opacity: 0.5\n  }, _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M339.565 81.1969C339.011 84.439 337.047 86.8903 336.138 89.9743C335.097 93.479 334.317 97.0559 333.805 100.676C333.053 106.171 333.541 111.628 332.908 117.163C331.518 127.6 328.4 137.732 323.682 147.146C319.082 156.516 311.213 164.199 302.592 170.011C293.709 176.074 283.836 180.7 274.122 185.181C268.586 187.711 262.747 188.765 257.092 190.914C252.347 192.68 247.681 194.709 242.962 196.554C238.244 198.399 233.999 201.562 229.333 203.078C226.434 204.014 223.573 204.989 220.674 206.043C215.691 207.823 211.17 210.458 206.32 212.528C199.463 215.49 192.351 217.824 185.072 219.499C177.875 221.186 170.916 220.092 163.68 219.196C157.596 218.635 151.547 217.756 145.556 216.56C134.603 213.925 122.806 214.676 111.629 214.676C103.153 214.676 93.36 215.506 85.8601 210.906C83.7116 209.589 81.339 208.192 80.1396 205.938C78.6633 203.144 78.4788 199.612 77.8329 196.594C76.5148 190.386 70.6099 186.156 66.5765 181.609C61.3042 175.652 59.3007 168.127 58.2462 160.443C57.2346 153.825 57.3908 147.081 58.7076 140.516C71.5996 119.866 87.3835 101.168 105.579 84.9925C101.295 93.1241 98.0524 101.756 94.2826 110.152C88.6017 122.725 83.593 136.431 84.0807 150.48C84.2652 155.989 84.7133 162.157 87.6527 166.941C89.9198 170.631 93.65 173.306 97.2615 175.494C103.18 179.039 109.124 182.953 115.491 185.392C122.687 188.146 129.884 190.782 137.041 193.536C141.22 195.118 145.253 196.923 149.774 197.49C155.326 197.934 160.902 197.982 166.461 197.635C186.153 197.108 204.343 187.882 222.875 182.308C228.833 180.502 235.014 179.672 240.88 177.721C244.408 176.415 247.835 174.851 251.135 173.043C259.373 168.786 268.375 165.583 276.099 160.272C283.807 154.927 290.774 148.585 296.819 141.413C301.419 135.904 303.489 130.408 305.743 123.634C310.185 110.297 311.885 97.46 313.084 83.556C313.612 77.6517 315.655 72.38 317.039 66.6471C317.935 62.8515 317.408 58.476 314.402 55.7216C308.3 50.3445 299.297 46.9838 291.494 45.1782C286.749 44.0448 282.268 42.5424 277.338 42.5424C272.408 42.5424 267.729 42.5424 262.905 42.5424C258.081 42.5424 253.757 41.5276 249.118 41.5276C243.661 41.5276 238.573 43.0695 233.182 43.4913C227.538 43.8911 221.919 44.595 216.35 45.5999C209.76 46.7597 203.394 49.3956 196.988 51.3197C184.211 55.0926 172.222 61.1424 161.597 69.1775C158.961 71.2071 156.101 72.8282 153.346 74.6337C150.934 76.2547 150.064 78.0998 148.522 80.5116C145.378 85.2918 143.086 90.58 141.747 96.1421C140.91 100.166 140.617 104.284 140.877 108.386C140.811 113.931 140.268 119.46 139.256 124.912C137.938 132.596 130.556 144.009 138.689 150.15C139.82 150.965 141.101 151.548 142.458 151.865C143.816 152.181 145.223 152.226 146.597 151.995C150.75 151.33 154.85 150.374 158.869 149.136C170.138 145.973 181.922 142.203 193.6 140.727C197.146 140.279 200.494 140.543 204 139.647C206.188 139.04 208.257 138.329 210.472 137.907C215.599 136.971 220.726 133.65 224.746 130.303C226.592 128.761 228.108 126.876 230.019 125.334C232.576 123.225 235.66 121.828 238.112 119.562C241.618 116.333 244.966 112.827 248.248 109.361C254.983 102.284 259.847 93.4272 265.568 85.6383C269.192 80.6961 273.212 75.319 274.201 69.1775C274.952 64.433 269.153 61.9026 265.607 60.4002C261.759 58.7684 257.549 58.1819 253.402 58.7C247.642 59.728 242.369 63.1546 237.018 65.4478C225.234 70.614 212.08 71.8924 201.838 80.1689C198.108 83.1474 198.293 86.0073 197.133 90.1588C196.331 92.1444 195.361 94.0579 194.233 95.8785C192.691 98.7384 192.493 99.4501 193.284 102.468C194.075 105.486 194.8 109.506 198.227 110.824C201.192 111.997 205.977 110.982 208.547 109.361C209.993 108.219 211.573 107.258 213.253 106.501C214.347 106.079 217.023 104.84 218.077 105.183C219.962 105.895 218.565 107.054 217.774 108.082C217.094 108.978 216.523 109.951 216.073 110.982C215.871 112.02 215.487 113.015 214.94 113.921C211.935 117.347 205.951 119.074 201.759 120.51C198.108 121.828 195.366 123.291 191.373 123.331C185.982 123.331 188.17 119.377 187.418 115.423C186.364 110.415 180.591 108.544 179.958 103.338C179.325 98.1322 180.933 92.386 183.042 87.826C184.01 85.9132 185.134 84.0838 186.403 82.3567C188.394 79.3123 191.333 77.5067 194.378 75.464C203.341 69.5597 214.531 66.7262 224.694 63.2996C234.856 59.873 245.941 59.2799 255.998 55.6952C262.852 53.2438 270.049 52.4531 277.088 51.1747C283.599 50.015 289.333 52.5717 292.035 58.5155C294.908 64.8152 298.296 71.6288 296.292 78.6006C293.577 88.1951 290.387 97.7236 285.339 106.396C279.117 117.084 271.552 127.179 260.295 133.097C252.387 137.274 243.793 139.607 235.436 142.731C229.114 145.252 222.545 147.103 215.836 148.253C205.397 149.834 195.828 156.002 185.626 158.572C171.581 162.077 157.361 164.84 143.025 166.848C137.982 167.778 132.826 167.933 127.736 167.31C125.324 166.967 123.096 167.191 120.802 166.176C119.181 165.465 117.52 164.7 115.912 164.028C110.337 161.616 104.946 157.623 105.579 150.849C106.185 144.483 108.492 138.078 109.691 131.831C110.521 127.68 110.6 123.581 111.615 119.43C112.367 116.267 113.078 113.038 113.948 109.901C114.628 107.162 115.736 104.546 117.23 102.152C120.196 98.0004 122.503 93.1504 125.627 89.1967C126.968 87.748 128.176 86.1823 129.238 84.5181C129.957 82.9918 130.884 81.5725 131.993 80.3007C133.192 78.9828 134.023 77.2564 135.301 75.9384C137.81 73.6643 140.508 71.6095 143.368 69.7969C149.506 65.2811 156.091 61.408 163.021 58.2388C169.769 55.2998 176.808 53.3361 183.741 51.0034C189.962 48.8552 195.722 45.4681 201.904 43.0959C208.902 40.4885 216.185 38.719 223.6 37.8242C238.37 35.8501 253.25 34.8156 268.151 34.7271C286.841 34.8062 307.548 27.729 325.29 36.6513C329.816 38.7361 333.375 42.4695 335.241 47.0892C338.378 54.5976 339.917 62.6763 339.762 70.8117C339.723 74.2647 340.131 77.8494 339.565 81.1969Z\",\n    fill: \"#C4B0B8\"\n  })))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.63\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.63\n  }, _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M50.2326 161.629C51.5507 165.082 53.2377 168.1 54.3581 171.606C55.0469 174.107 56.0571 176.508 57.3634 178.749C58.7605 181.016 59.6041 183.599 60.9354 185.932C62.4343 188.505 63.6075 191.254 64.4283 194.116C64.9687 196.225 65.0609 198.452 65.6409 200.587C66.379 203.315 67.1172 206.056 67.8817 208.785C68.4219 210.484 69.2079 212.096 70.2147 213.569C71.2164 215.176 72.3764 217.694 73.9449 218.84C78.9931 222.412 86.2294 220.896 92.0553 220.264C97.3277 219.697 102.732 219.657 108.044 218.946C110.835 218.629 113.65 218.563 116.453 218.748C119.137 218.88 121.809 219.184 124.454 219.657C126.747 220.105 128.975 220.171 131.281 220.54C134.59 221.068 137.872 221.858 141.193 222.201C144.897 222.491 148.707 223.031 152.41 223.11C157.683 223.203 163.126 222.662 168.425 223.229C173.047 223.91 177.702 224.35 182.37 224.547C188.447 224.547 194.51 222.741 200.151 220.685C209.549 217.259 219.237 214.465 228.675 211.012C232.09 209.542 235.371 207.778 238.481 205.74C241.368 204.053 244.465 202.946 247.246 201.088C252.508 197.83 258.312 195.544 264.381 194.34C270.313 193.022 276.047 190.874 281.925 189.49C285.879 188.568 289.649 186.564 293.577 186.05C292.839 189.134 286.104 190.255 283.691 191.124C278.116 193.114 272.066 194.208 266.675 196.633C263.156 198.228 260.651 201.272 257.883 203.856C255.247 206.228 253.415 208.692 250.476 210.656C247.59 212.623 244.327 213.969 240.893 214.61C233.314 216.125 225.92 218.84 218.367 220.514C210.815 222.188 203.433 223.914 196.487 227.104C194.563 228 188.908 230.227 188.671 233.008C188.486 235.235 191.188 234.418 192.757 234.418C196.131 234.418 200.586 233.614 203.763 234.945C206.034 236.075 208.409 236.984 210.854 237.66C216.622 238.642 222.549 238.022 227.989 235.868C235.239 233.047 243.16 231.611 250.779 230.161C256.051 229.146 261.179 227.631 266.438 226.524C270.484 225.806 274.568 225.322 278.67 225.074C284.627 224.507 290.598 223.822 296.516 222.834C301.248 222.03 306.428 221.516 310.765 219.447C314.363 217.68 318.581 216.573 321.758 214.096C322.601 213.437 327.399 209.299 328.519 210.247C330.852 212.251 317.579 219.802 316.657 220.422C312.38 223.13 307.829 225.378 303.08 227.13C297.044 229.594 290.849 230.675 284.627 232.243C277.457 234.023 270.313 235.499 263.182 237.317C256.051 239.136 248.683 240.046 241.552 242.431C237.966 243.534 234.468 244.905 231.087 246.53C228.002 248.111 224.72 249.166 221.676 250.813C215.085 254.332 208.93 259.274 201.799 261.567C195.6 263.712 189.173 265.127 182.647 265.785C174.093 266.47 165.512 265.271 157.05 264.388C148.379 263.373 139.655 262.88 130.926 262.911C122.859 263.043 114.805 264.73 106.752 265.112C101.203 265.376 96.7477 263.399 91.6467 261.501C86.0959 259.347 80.7714 256.65 75.7507 253.449C71.2596 250.634 66.0357 249.213 60.7377 249.363C59.6058 249.52 58.4899 249.776 57.4029 250.128C56.121 250.225 54.8448 249.876 53.7913 249.139C49.0462 246.912 44.288 243.248 41.9286 238.345C39.63 233.067 38.1328 227.474 37.4867 221.753C37.2362 218.468 37.1966 215.171 37.3681 211.882C37.3681 207.519 36.5772 203.223 36.6168 198.834C36.6168 191.902 35.8259 184.548 38.0139 177.84C40.057 171.527 44.2616 165.636 48.0972 160.311C50.2852 157.293 52.0515 154.051 54.3318 151.086C55.1358 152.668 53.2246 155.699 52.8292 157.333C52.3415 159.666 51.4584 163.975 50.2326 161.629Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.63\n  }, _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M375.667 199.454C373.624 202.09 369.947 205.477 369.38 208.943C368.813 212.409 372.596 211.816 375.048 211.447C380.32 210.617 385.856 210.129 390.865 208.047C393.83 206.821 396.598 205.121 399.564 203.882C402.016 202.841 404.639 202.472 407.09 201.444C412.929 198.979 419.217 197.675 425.003 195.012C430.071 192.458 434.68 189.083 438.645 185.023C441.492 182.294 444.234 180.173 446.198 176.654C447.634 174.018 449.348 171.514 450.534 168.746C451.99 165.046 452.943 161.168 453.368 157.214C453.651 155.112 453.678 152.984 453.447 150.875C452.788 146.052 447.938 145.604 443.838 146.17C438.79 146.869 434.73 149.808 430.987 153.023C427.244 156.239 424.397 159.824 420.311 162.249C415.816 164.99 411.44 167.758 407.13 170.723C404.801 172.193 402.632 173.903 400.658 175.823C399.024 177.497 397.442 179.29 395.662 180.818C393.825 182.325 391.872 183.687 389.823 184.891C388.176 185.919 386.66 187.368 384.973 188.251C382.76 189.36 380.732 190.805 378.962 192.535C377.687 193.639 376.589 194.932 375.707 196.37C374.323 198.979 374.599 202.195 375.667 199.454Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.63\n  }, _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M434.19 129.525C435.06 126.81 435.64 125.795 438.144 124.49C439.7 123.673 440.78 123.462 441.901 125.189C443.931 128.523 442.467 132.582 441.149 135.798C440.2 138.144 436.417 140.503 434.691 137.551C433.531 135.548 433.57 129.644 436.338 128.813L434.19 129.525Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.63\n  }, _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M220.094 228.712C221.412 226.273 221.715 226.01 224.048 225.127C225.525 224.391 227.116 223.909 228.754 223.703C230.77 223.506 232.972 222.386 235.015 223.15C238.152 224.27 237.559 227.025 235.436 228.975C234.592 229.887 233.503 230.537 232.299 230.847C230.658 231.277 228.973 231.516 227.278 231.558C224.404 231.558 222.005 231.677 219.501 229.99C219.436 229.728 219.466 229.451 219.587 229.209C219.708 228.968 219.911 228.777 220.16 228.672L220.094 228.712Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.63\n  }, _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M100.188 409.201C108.377 412.053 116.982 413.527 125.653 413.563C135.913 413.855 146.181 413.547 156.404 412.64C163.205 411.995 169.954 412.166 176.729 411.204C180.011 410.729 183.135 410.874 186.417 410.716C188.302 410.637 190.279 409.517 192.124 410.097C199.255 412.271 186.588 416.37 185.151 417.082C179.998 419.638 174.238 420.521 168.768 422.116C166.659 422.722 164.51 423.329 162.441 424.04C160.538 424.889 158.584 425.616 156.589 426.215C148.192 428.047 139.796 428.851 131.426 430.656C128.275 431.482 124.991 431.674 121.765 431.223C118.417 430.604 115.293 428.587 112.314 427.098C108.588 425.451 105.008 423.494 101.611 421.246C99.867 420.076 98.2305 418.753 96.7212 417.293C96.0771 416.433 95.6274 415.444 95.4031 414.393C94.5595 412.232 94.5991 411.362 96.4576 409.78C97.132 409.171 97.9524 408.747 98.8393 408.548C99.7261 408.35 100.649 408.384 101.519 408.647C101.532 408.858 101.572 409.056 100.188 409.201Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.63\n  }, _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M317.382 493.455C313.122 494.646 309.075 496.496 305.387 498.938C303.779 500.071 301.802 502.008 304.175 503.458C307.378 505.409 312.584 504.367 316.037 504.064C321.995 503.524 327.9 502.43 333.805 501.652C337.838 501.112 341.793 500.69 345.773 499.886C350.952 498.737 356.054 497.267 361.05 495.485C364.756 494.297 368.298 492.65 371.595 490.582C375.109 488.615 378.486 486.414 381.704 483.992C385.803 480.553 391.208 477.864 392.789 472.368C394.107 467.795 384.222 469.443 382.245 469.733C374.905 470.781 367.693 472.578 360.72 475.096C357.702 476.164 354.473 476.981 351.494 478.273C347.54 480.025 343.757 482.108 339.723 483.663C337.812 484.414 336.138 485.613 334.2 486.299C332.5 486.931 330.787 487.498 329.099 488.183C327.412 488.869 325.33 489.804 323.405 490.424C319.056 491.913 314.68 493.112 317.382 493.455Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.63\n  }, _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M396.375 460.151C397.126 457.687 398.707 456.553 400.54 454.774C401.963 453.39 403.321 451.901 405.39 451.611C406.919 451.387 409.344 453.153 408.672 454.906C408.1 455.871 407.405 456.757 406.603 457.542C405.927 458.629 404.995 459.534 403.888 460.178C401.677 461.191 399.17 461.35 396.849 460.626L396.375 460.151Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.63\n  }, _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M422.064 400.212C420.332 401.253 418.51 402.135 416.62 402.848C415.185 403.178 413.733 403.429 412.271 403.599C407.908 404.285 403.4 404.588 398.997 405.023C393.369 405.576 387.781 406.341 382.152 406.802C372.214 407.553 361.762 408.41 352.258 411.467C344.261 414.019 336.521 417.315 329.139 421.312C322.593 424.695 316.368 428.665 310.541 433.173C308.645 434.78 306.853 436.505 305.176 438.34C303.955 439.479 302.935 440.815 302.158 442.293C301.117 444.639 302.066 446.247 304.122 447.565C307.325 449.608 311.213 449.792 314.877 450.293C320.321 451.044 325.738 451.73 331.156 452.573C336.76 453.492 342.409 454.107 348.08 454.418C353.893 454.682 359.943 454.563 365.479 452.455C369.404 451.05 373.213 449.335 376.867 447.328C380.426 445.285 383.971 443.269 387.346 440.936C389.851 439.459 392.232 437.78 394.463 435.915C395.399 435.032 396.348 434.267 397.323 433.45C398.839 432.132 399.96 430.538 401.475 429.259C404.909 426.386 408.004 423.132 410.702 419.559C412.785 416.818 415.315 414.485 417.372 411.744C418.584 410.11 419.85 409.253 420.574 407.25C421.348 404.971 421.848 402.609 422.064 400.212Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.63\n  }, _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M433.953 392.068C434.873 390.381 436.118 388.893 437.617 387.692C438.817 386.559 440.399 384.569 442.059 384.041C442.47 383.872 442.919 383.818 443.358 383.886C443.797 383.953 444.209 384.139 444.55 384.424C444.844 384.767 445.062 385.169 445.189 385.603C445.316 386.037 445.35 386.493 445.289 386.941C444.946 388.944 442.995 390.499 441.334 391.369C439.265 392.437 438.052 391.896 435.877 391.593L433.953 392.068Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.63\n  }, _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M509.611 321.243C508.519 322.084 507.529 323.048 506.658 324.116C505.34 326.027 504.233 328.069 502.704 329.822C501.162 331.77 499.79 333.846 498.605 336.03C497.049 338.745 495.217 341.301 493.767 344.029C490.63 349.986 488.139 356.26 485.332 362.375C483.921 365.432 482.695 368.569 481.377 371.6C479.808 374.85 478.678 378.293 478.016 381.84C477.608 384.397 476.949 388.786 480.389 389.247C484.659 389.827 488.956 386.15 492.067 383.699C500.203 377.157 507.181 369.293 512.708 360.437C518.244 351.686 523.609 341.169 522.225 330.508C521.718 325.681 521.824 320.81 522.541 316.01C523.2 310.91 524.769 305.81 524.861 300.644C524.861 296.98 525.533 293.395 524.729 289.784C524.619 288.604 524.063 287.51 523.174 286.726C522.225 286.173 521.566 286.726 520.709 287.372C518.144 289.234 516.079 291.702 514.698 294.555C513.011 298.06 512.919 301.843 511.496 305.441C511.1 306.72 510.638 307.978 510.112 309.21C509.584 310.198 508.938 311.147 508.398 312.149C507.587 313.957 506.994 315.855 506.632 317.803C506.315 319.002 506.131 320.122 505.801 321.322C505.538 322.257 505.129 323.259 504.945 324.208C504.76 325.157 505.09 325.921 509.611 321.243Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.63\n  }, _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M470.121 384.516C469.265 385.359 464.084 390.367 466.088 391.646C466.642 392.002 468.171 391.646 468.724 391.395C469.769 390.899 470.726 390.236 471.558 389.432C472.092 389.048 472.507 388.522 472.757 387.914C473.006 387.306 473.079 386.64 472.968 385.992C472.968 383.738 471.545 383.804 469.647 384.568L470.121 384.516Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.63\n  }, _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M482.485 396.403C483.592 394.927 483.908 394.295 485.464 393.689C486.599 393.025 487.801 392.482 489.049 392.068C490.696 391.804 491.461 392.423 491.593 394.084C491.83 396.917 488.337 400.581 486.768 402.598C484.869 405.213 482.655 407.585 480.178 409.662C476.606 412.456 474.009 407.948 475.341 404.601C476.145 402.571 476.474 400.173 477.74 398.367C479.717 395.534 482.669 395.547 485.833 394.967L482.485 396.403Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.63\n  }, _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M206.531 88.1292C205.023 88.9468 203.706 90.0741 202.666 91.4369C201.625 92.7998 200.885 94.3674 200.494 96.0367C199.993 97.6577 199.36 101.111 200.718 102.508C203.038 104.906 209.259 102.284 211.513 101.414C215.902 99.7268 220.371 97.2228 224.944 96.1421C233.578 94.152 243.055 93.3481 250.476 88.0369C254.664 84.8915 258.28 81.0486 261.165 76.6765C263.037 73.9484 265.502 71.7342 265.752 68.2154C266.24 61.0986 256.301 60.6242 251.622 61.7181C241.627 63.9227 231.903 67.2152 222.624 71.5366C217.168 74.1724 210.393 77.5199 206.544 82.4226C205.57 83.7894 204.79 85.284 204.224 86.864C203.749 87.9842 202.695 91.2131 206.531 88.1292Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.63\n  }, _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M225.089 108.109C223.916 105.473 223.336 105.249 225.287 103.654C226.933 102.39 228.699 101.291 230.559 100.373C232.776 99.269 235.227 98.7174 237.703 98.7648C242.686 99.3578 240.419 104.972 238.877 107.674C237.914 109.374 237.203 110.942 235.594 111.852C233.696 112.932 232.418 113.486 230.322 112.787C228.848 112.224 227.503 111.367 226.368 110.27C225.524 109.519 223.56 108.148 223.732 106.804L224.351 106.685L225.089 108.109Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.63\n  }, _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M190.108 169.484C190.226 167.125 190.029 166.598 191.505 165.109C193.693 162.868 196.909 161.155 199.493 159.494C205.385 155.755 211.739 152.795 218.394 150.691C224.309 148.792 230.371 147.386 236.517 146.487C241.104 145.775 245.441 144.259 250.054 143.614C257.159 142.638 265.871 139.199 271.552 145.933C276.113 151.389 267.677 158.611 263.644 161.577C260.222 164.045 256.32 165.764 252.189 166.624C247.273 167.863 242.422 169.339 237.506 170.578C228.372 172.845 219.883 177.168 211.144 180.608C205.121 182.953 200.824 182.729 195.406 179.145C192.467 177.128 187.472 171.975 190.108 169.484Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.63\n  }, _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M272.896 128.813C271.71 131.001 268.758 135.007 272.567 136.378C274.729 137.156 276.284 135.416 277.839 134.177C279.395 132.938 281.701 131.541 282.887 129.525C283.227 129.1 283.458 128.598 283.559 128.063C283.66 127.528 283.629 126.976 283.468 126.456C283.306 125.936 283.02 125.463 282.634 125.079C282.248 124.695 281.774 124.412 281.253 124.253C276.785 122.263 274.663 126.546 272.119 129.525L272.896 128.813Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.63\n  }, _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M342.847 85.2825C338.893 89.3944 336.507 94.1784 337.153 100.017C337.799 105.855 341.608 106.949 346.379 104.564C347.817 103.976 349.202 103.266 350.518 102.442C351.836 101.414 352.653 99.4896 353.655 98.1454C355.928 95.3077 357.136 91.7641 357.069 88.1292C357.069 84.5312 357.491 80.6829 356.529 77.2036C356.001 75.2794 355.211 72.6963 353.523 71.5102C351.52 70.1923 349.991 71.9451 348.528 73.1312C347.111 74.0158 345.89 75.1821 344.943 76.5578C343.358 79.5424 342.149 82.712 341.344 85.9941L342.847 85.2825Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.63\n  }, _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M262.194 208.02C262.365 205.305 262.286 205.121 264.25 203.618C265.687 202.42 267.197 201.311 268.771 200.297C271.799 198.653 275.123 197.627 278.551 197.279C281.259 196.935 284.009 197.393 286.459 198.597C288.002 199.467 288.291 201.233 287.909 203.065C287.369 205.635 284.812 207.269 282.901 208.785C280.989 210.3 278.353 212.33 275.941 212.91C273.036 213.783 269.957 213.905 266.991 213.266C265.199 212.791 261.416 212.04 261.455 209.496L262.194 208.02Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.63\n  }, _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M297.162 183.046C298.915 180.568 300.023 178.367 302.698 176.746C303.858 176.034 306.771 173.86 308.261 173.86C308.86 173.974 309.413 174.262 309.849 174.689C310.285 175.116 310.585 175.662 310.712 176.258C310.871 177.51 309.645 179.184 308.972 180.212C307.47 182.468 305.365 184.258 302.896 185.378C301.792 185.953 300.513 186.094 299.311 185.774C297.993 185.405 297.518 184.179 296.451 183.784L297.162 183.046Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.63\n  }, _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M157.999 77.4277C154.493 80.907 151.633 84.584 150.499 89.5657C150.23 90.2835 150.182 91.0658 150.363 91.8108C150.544 92.5559 150.945 93.2293 151.514 93.7435C153.373 95.3909 155.745 94.4947 157.92 93.7435C164.009 91.6744 169.783 88.0369 175.055 84.5181C179.906 81.3287 186.404 80.4325 190.121 75.7935C192.137 73.2894 194.246 70.5218 192.309 67.2006C190.622 64.3671 186.338 63.1546 183.319 63.1019C178.924 63.1581 174.614 64.3183 170.784 66.4758C165.847 69.2543 161.503 72.9753 157.999 77.4277Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.63\n  }, _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M138.017 62.4429C144.766 61.125 150.591 59.7411 156.47 56.1432C157.656 55.4315 158.843 55.0889 159.976 54.4431C161.11 53.7974 161.294 53.0461 162.138 52.2554C161.558 49.5141 154.163 51.1615 152.463 51.8864C150.196 52.8353 147.903 54.1664 145.701 55.2734C144.51 55.8025 143.364 56.4284 142.274 57.1449C140.073 58.7791 138.755 61.6126 137.279 63.8662L138.017 62.4429Z\",\n    fill: \"#C4B0B8\"\n  })))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    opacity: 0.47\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    opacity: 0.47\n  }, _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M347.842 212.831C345.903 214.05 343.896 215.159 341.832 216.152C338.444 217.536 335.36 219.486 331.999 220.936C328.045 222.649 323.774 223.782 319.701 225.179C313.943 227.047 308.406 229.535 303.186 232.599C297.913 235.815 292.878 240.507 290.176 246.095C288.634 249.324 288.001 253.686 289.886 256.941C290.986 259.003 292.675 260.691 294.737 261.791C298.203 263.346 301.577 262.358 305.057 261.541C309.46 260.581 313.725 259.071 317.75 257.047C319.899 255.927 321.942 254.622 324.09 253.488C326.239 252.355 328.835 251.432 331.195 250.47C333.027 249.719 334.899 249.06 336.784 248.467C339.098 247.697 341.264 246.538 343.189 245.041C347.023 242.289 350.226 238.754 352.587 234.668C355.527 229.397 357.056 224.02 356.041 218.115C355.25 213.542 351.889 211.302 347.842 212.831Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    opacity: 0.47\n  }, _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M283.125 245.607C281.807 243.854 280.963 244.026 278.854 244.144C277.224 244.32 275.608 244.606 274.017 245.001C266.108 246.662 258.042 247.505 250.186 249.521C245.834 250.478 241.619 251.974 237.638 253.976C233.684 256.111 229.558 258.022 225.67 260.355C216.805 265.864 207.079 269.846 196.896 272.137C190.529 273.455 184.163 274.773 177.77 275.959C173.922 276.67 170.02 277.277 166.184 278.068C162.349 278.858 158.553 279.978 154.704 280.835C147.814 282.242 141.035 284.145 134.419 286.529C127.683 289.072 120.816 291.431 115.544 296.532C112.842 299.167 109.375 302.976 109.388 306.983C109.53 309.809 110.441 312.544 112.024 314.89C117.297 323.615 127.433 328.794 136.238 333.262C148.443 339.456 162.955 340.26 176.307 341.802C193.741 343.683 211.362 342.793 228.517 339.166C236.227 337.598 243.991 336.069 251.728 334.619C261.06 332.867 270.498 331.628 279.803 329.677C287.461 328.056 295.172 326.264 302.698 324.076C306.837 322.934 310.893 321.512 314.838 319.819C318.267 318.171 321.598 316.327 324.816 314.297C327.562 312.784 330.204 311.089 332.724 309.223C334.81 307.413 336.677 305.365 338.287 303.121C341.028 299.589 342.794 295.688 344.982 291.853C346.42 289.15 348.004 286.528 349.727 283.998C351.507 281.56 353.603 279.267 355.54 276.947C359.6 272.058 364.582 267.84 368.378 262.766C370.593 259.814 372.754 256.098 373.058 252.368C373.268 249.825 373.282 247.215 370.619 246.055C368.015 245.048 365.191 244.748 362.434 245.185C359.676 245.724 356.968 246.495 354.341 247.492C349.667 248.837 345.134 250.628 340.804 252.843C329.943 258.668 319.253 265.903 307.022 268.499C301.973 269.58 296.925 270.134 292.075 268.13C288.436 266.738 284.972 264.924 281.754 262.727C277.536 259.683 278.815 256.071 280.66 251.907C281.451 250.062 283.744 246.068 283.125 245.607Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    opacity: 0.47\n  }, _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M517.69 188.989C517.658 193.433 517.301 197.869 516.623 202.261C516.346 204.225 516.016 206.215 515.713 208.139C515.305 210.775 514.053 213.094 513.433 215.69C512.326 220.343 510.112 224.375 508.161 228.685C506.21 232.995 504.892 237.713 502.888 242.141C497.432 254.688 494.176 267.985 488.851 280.572C486.215 286.805 483.816 293.25 480.942 299.352C478.306 304.848 475.182 310.106 472.454 315.536C471.426 317.566 468.618 321.308 470.754 323.443C472.454 325.13 475.551 323.575 477.344 322.613C484.514 318.778 487.559 309.698 491.975 303.332C494.215 300.116 497.656 297.691 499.989 294.502C503.033 290.337 506.645 285.369 508.648 280.664C512.814 270.924 515.371 260.829 518.982 250.892C521.974 242.681 522.422 234.721 522.422 226.102C522.422 222.491 522.831 218.867 521.737 215.414C520.735 212.158 519.944 206.768 517.69 188.989Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    opacity: 0.47\n  }, _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M504.378 201.352C501.347 204.264 495.152 211.42 498.104 216.178C499.725 218.814 504.444 217.654 506.105 215.414C507.528 213.49 507.225 210.274 507.225 208.02C507.225 206.781 507.634 204.923 507.225 203.803C506.817 202.683 505.643 202.485 505.393 201.352H504.378Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    opacity: 0.47\n  }, _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M446.33 339.351C442.454 341.647 438.733 344.196 435.192 346.981C431.801 349.265 428.215 351.246 424.476 352.899C415.046 357.383 405.031 360.516 394.727 362.203C381.546 364.51 367.996 366.263 355.184 370.493C345.457 373.696 335.822 377.083 326.186 380.522C317.092 383.738 306.758 386.045 298.665 391.488C296.675 392.805 293.999 394.901 294.711 397.59C295.844 401.886 304.662 402.057 307.799 402.189C317.263 402.584 326.859 402.189 336.336 402.189C340.883 402.189 345.444 401.939 349.978 402.387C355.623 402.947 361.31 402.947 366.955 402.387C374.059 401.754 381.454 401.899 388.334 399.751C401.515 395.52 414.603 390.525 427.508 385.478C439.08 380.905 455.873 371.455 454.858 356.998C454.423 350.738 450.548 341.987 446.33 339.351Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    opacity: 0.47\n  }, _path31 || (_path31 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M465.363 350.738C463.438 346.784 462.924 345.743 465.007 342.092C466.325 339.773 470.279 336.359 473.232 336.346C479.123 336.346 479.308 343.094 477.99 347.192C476.83 350.777 475.354 356.233 471.07 356.418C470.397 356.52 469.71 356.468 469.059 356.268C468.409 356.067 467.812 355.722 467.313 355.258C465.916 354.23 463.992 350.948 462.502 350.698L465.363 350.738Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    opacity: 0.47\n  }, _path32 || (_path32 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M50.5225 362.151C49.4549 366.632 48.809 370.717 50.997 375.027C54.0154 381.023 60.6849 385.043 66.814 386.98C70.6716 388.105 74.6596 388.721 78.6767 388.812C83.1714 389.023 87.6529 389.722 92.1476 389.801C98.8759 389.884 105.591 390.416 112.248 391.395C115.952 391.936 119.537 393.016 123.228 393.464C126.099 393.772 128.95 394.238 131.769 394.861C137.78 396.258 143.764 396.298 149.827 397.141C156.257 397.896 162.762 397.745 169.15 396.693C174.699 395.863 180.578 395.125 183.214 389.761C185.283 385.544 183.767 383.277 180.077 380.404C176.795 377.847 171.285 376.74 167.436 375.475C161.545 373.524 155.692 371.719 149.642 370.203C141.207 368.16 133.087 365.156 124.744 362.691C107.609 357.643 91.1722 350.606 73.2462 348.985C65.8254 348.299 57.047 348.22 50.193 351.621C47.9861 352.814 46.3036 354.788 45.4742 357.156C43.998 360.727 45.7774 362.876 50.5225 362.151Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    opacity: 0.47\n  }, _path33 || (_path33 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M49.5205 330.758C50.5091 333.895 50.3113 334.87 53.2111 335.753C55.0751 336.523 57.1264 336.72 59.103 336.319C61.5546 335.608 64.4808 333.802 64.7971 331.232C65.153 328.372 62.6222 326.251 60.2892 324.999C55.61 322.495 51.8403 322.692 49.5205 327.898V330.758Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    opacity: 0.47\n  }, _path34 || (_path34 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M250.304 120.484C250.189 118.779 250.54 117.076 251.319 115.555C252.254 113.429 253.346 111.376 254.588 109.414C255.498 108.096 256.077 106.633 256.934 105.262C258.147 103.325 259.386 101.559 260.427 99.516C261.922 96.9682 263.69 94.5908 265.7 92.4256C266.982 90.9647 268.096 89.3643 269.021 87.6547C269.772 86.2314 270.906 85.1243 271.657 83.701C272.659 81.9613 273.331 79.9185 274.293 78.0998C275.237 76.1333 276.302 74.2274 277.483 72.3932C278.243 70.9946 279.222 69.7265 280.383 68.6372C281.251 67.7597 282.2 66.9655 283.217 66.2649C285.51 65.2633 286.683 66.054 287.87 68.1759C289.708 71.9139 290.552 76.0625 290.321 80.2217C290.141 84.5341 289.347 88.7987 287.962 92.8869C286.838 95.7283 285.452 98.4593 283.823 101.045C281.016 105.987 277.655 110.56 274.373 115.199C272.435 117.941 269.166 120.207 266.464 122.276C264.81 123.577 262.935 124.568 260.928 125.202C259.795 125.571 258.213 126.349 256.974 126.098C255.823 125.742 254.699 125.302 253.613 124.78C250.871 123.766 249.553 121.407 250.304 120.484Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    opacity: 0.47\n  }, _path35 || (_path35 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M239.839 124.293C238.191 125.123 236.464 125.703 235.766 127.509C235.568 127.996 235.252 129.037 235.594 129.551C236.912 131.462 241.447 128.906 242.475 127.878C243.503 126.85 244.637 124.965 243.648 123.607C243.42 123.333 243.139 123.107 242.821 122.944C242.503 122.781 242.156 122.684 241.8 122.659C241.444 122.635 241.086 122.683 240.749 122.8C240.412 122.918 240.102 123.103 239.839 123.344V124.293Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    opacity: 0.47\n  }, _path36 || (_path36 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M324.051 56.2618C322.944 56.7435 321.931 57.4172 321.059 58.2519C320.651 59.0091 320.341 59.8151 320.136 60.6505C319.018 63.6628 318.275 66.8009 317.922 69.9945C317.606 73.1312 317.513 78.6796 321.178 79.9712C328.295 82.4752 338.695 77.3354 339.275 69.362C339.604 64.8283 337.14 60.611 334.49 57.158C333.195 55.3208 331.671 53.6557 329.956 52.2026C329.36 51.7321 328.678 51.3839 327.947 51.1781C327.216 50.9723 326.452 50.9129 325.699 51.0033C323.234 51.5041 321.362 53.9555 324.051 56.2618Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    opacity: 0.47\n  }, _path37 || (_path37 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M322.614 95.2723C322.614 93.7171 322.614 93.3349 323.642 92.3201C324.295 91.5949 325.083 91.004 325.962 90.5805C327.649 90.027 328.743 91.279 328.822 92.8737C328.888 94.0862 328.941 96.5507 327.847 97.3941C326.753 98.2376 322.324 97.4732 322.575 95.7467L322.614 95.2723Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    opacity: 0.47\n  }, _path38 || (_path38 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M374.481 62.9173C373.756 65.8826 373.862 68.9402 373.295 71.9714C372.389 76.938 371.843 81.9636 371.66 87.0089C371.568 89.6447 371.66 92.1883 371.529 94.7846C371.179 97.9612 371.074 101.16 371.212 104.353C371.634 108.478 372.095 112.814 374.837 116.108C376.788 118.454 379.516 117.598 382.086 116.649C384.135 115.651 386.064 114.421 387.833 112.985C389.273 112.042 390.632 110.98 391.893 109.809C397.574 104.537 402.688 98.7252 404.968 91.0944C406.616 85.546 408.237 79.2332 406.88 73.5134C406.149 69.8543 404.503 66.44 402.095 63.5895C400.198 61.5169 397.926 59.8221 395.399 58.5945C393.303 57.4743 391.036 57.382 388.809 56.8549C386.94 56.4363 385.03 56.233 383.115 56.2486C381.344 56.2566 379.579 56.4331 377.842 56.7758C374.112 57.4743 373.189 62.4297 374.481 62.9173Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    opacity: 0.47\n  }, _path39 || (_path39 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M380.188 124.767C380.847 122.698 382.337 120.563 384.775 121.696C385.642 122.089 386.322 122.805 386.669 123.691C387.016 124.577 387.003 125.564 386.633 126.441C386.293 127.087 385.74 127.597 385.068 127.885C384.396 128.173 383.646 128.222 382.943 128.022C382.022 127.638 381.224 127.009 380.636 126.204C379.779 125.057 380.478 124.161 380.636 122.856L380.188 124.767Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    opacity: 0.47\n  }, _path40 || (_path40 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M386.858 175.665C384.974 175.843 383.116 176.236 381.322 176.838C381.153 177.26 380.917 177.652 380.623 177.998C380.241 178.499 379.107 179.158 379.305 179.883C381.704 180.897 385.131 179.276 387.214 178.156C388.311 177.623 389.334 176.949 390.258 176.153C390.853 175.63 391.395 175.052 391.88 174.426C392.644 173.043 391.88 172.318 390.469 172.331C389.059 172.344 385.606 173.438 385.474 175.191L386.858 175.665Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    opacity: 0.47\n  }, _path41 || (_path41 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M465.837 167.586C465.887 169.203 465.519 170.805 464.77 172.239C464.098 173.939 463.149 175.955 463.452 177.853C464.111 182.347 470.319 181.451 473.482 181.042C477.199 180.555 480.732 179.724 483.513 177.089C485.559 175.392 486.868 172.969 487.164 170.328C487.823 165.557 488.93 157.491 481.892 157.583C478.964 157.78 476.155 158.814 473.799 160.562C472.179 161.705 470.751 163.097 469.568 164.687C467.933 166.598 466.127 168.193 465.837 167.586Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    opacity: 0.47\n  }, _path42 || (_path42 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M416.356 426.333C418.413 419.665 421.629 413.998 427.732 410.215C429.155 409.332 430.368 408.186 432.068 409.069C433.465 409.807 433.202 411.428 432.767 412.812C431.928 414.954 430.729 416.938 429.221 418.676C427.792 420.289 426.274 421.82 424.674 423.263C423.769 424.252 422.625 424.991 421.352 425.411C419.65 425.47 417.967 425.781 416.356 426.333Z\",\n    fill: \"#C4B0B8\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    opacity: 0.47\n  }, _path43 || (_path43 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M174.172 433.99C174.291 431.434 175.767 430.234 177.783 428.547C182.281 425.061 187.403 422.466 192.875 420.904C197.542 419.441 203.104 418.413 207.941 419.744C210.103 420.35 212.805 421.391 213.728 423.605C215.309 427.427 211.197 433.055 208.152 435.163C204.316 437.799 198.767 438.616 194.378 439.947C190.283 441.17 185.98 441.533 181.738 441.015C180.211 440.927 178.701 440.648 177.243 440.185C175.86 439.843 174.496 439.43 173.157 438.946C171.971 438.313 170.429 437.325 170.323 435.915C170.289 435.068 170.489 434.229 170.903 433.49C171.654 432.277 173.236 432.119 174.172 433.99Z\",\n    fill: \"#C4B0B8\"\n  })))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, _path44 || (_path44 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M458.943 150.401C457.388 151.442 454.435 152.918 454.989 155.264C455.337 156.309 455.742 157.334 456.202 158.335C456.495 159.26 456.685 160.215 456.769 161.181C456.937 162.77 457.544 164.28 458.522 165.544C459.233 166.321 459.985 165.544 460.472 164.793C461.077 164.033 461.46 163.121 461.58 162.157C461.598 160.915 461.744 159.679 462.014 158.467C462.146 157.992 462.502 157.57 462.608 157.149C462.719 156.478 462.746 155.796 462.687 155.119C462.644 154.037 462.259 152.997 461.586 152.149C460.913 151.3 459.987 150.688 458.943 150.401Z\",\n    fill: \"#C4B0FF\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, _path45 || (_path45 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M434.084 284.209C433.808 284.354 433.478 284.459 433.333 284.749C433.267 284.909 433.227 285.078 433.214 285.25C433.149 286.001 434.19 286.331 434.704 286.476C435.451 286.715 436.24 286.796 437.021 286.715C437.801 286.633 438.556 286.39 439.238 286.001C439.742 285.695 440.177 285.287 440.515 284.804C440.853 284.321 441.087 283.773 441.202 283.194C441.203 282.472 441.001 281.764 440.619 281.151C440.237 280.538 439.69 280.045 439.04 279.728C438.497 279.331 437.857 279.087 437.188 279.02C436.518 278.952 435.843 279.065 435.231 279.346C434.783 279.611 434.431 280.013 434.229 280.493C434.084 280.888 434.111 281.31 433.992 281.705C433.873 282.1 433.478 282.628 433.557 283.207C433.612 283.592 433.798 283.946 434.084 284.209Z\",\n    fill: \"#C4B0FF\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, _path46 || (_path46 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M442.56 286.753C442.552 286.596 442.585 286.441 442.657 286.302C442.729 286.163 442.836 286.046 442.968 285.962C443.076 285.838 443.225 285.757 443.387 285.735C443.55 285.713 443.715 285.752 443.851 285.843C443.973 285.933 444.075 286.046 444.153 286.175C444.231 286.305 444.282 286.448 444.304 286.598C444.326 286.747 444.319 286.9 444.282 287.046C444.245 287.192 444.179 287.33 444.089 287.451C443.949 287.594 443.776 287.7 443.585 287.76C443.394 287.82 443.191 287.831 442.995 287.794C442.786 287.734 442.604 287.605 442.48 287.427C442.355 287.25 442.295 287.035 442.309 286.819L442.56 286.753Z\",\n    fill: \"#C4B0FF\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, _path47 || (_path47 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M463.399 255.109C462.889 255.153 462.416 255.394 462.081 255.782C461.96 255.875 461.865 255.998 461.805 256.139C461.745 256.28 461.722 256.433 461.738 256.586C461.883 257.551 462.381 258.429 463.135 259.05C463.379 259.237 463.663 259.365 463.965 259.424C464.267 259.484 464.578 259.473 464.875 259.393C465.412 259.154 465.906 258.829 466.338 258.431C466.75 258.136 467.141 257.814 467.511 257.469C467.883 257.226 468.177 256.883 468.359 256.479C468.541 256.075 468.604 255.627 468.539 255.189C468.442 254.755 468.231 254.355 467.927 254.031C467.624 253.706 467.239 253.469 466.813 253.343C466.233 253.238 465.636 253.292 465.086 253.502C464.401 253.686 463.913 253.686 463.399 255.109Z\",\n    fill: \"#C4B0FF\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, _path48 || (_path48 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M459.51 257.89C459.929 258.045 460.308 258.292 460.617 258.615C460.538 258.826 460.749 259.01 460.617 259.235C460.485 259.459 459.892 259.314 459.655 259.235C459.33 259.116 459.065 258.875 458.917 258.562C458.917 258.444 458.627 257.93 458.917 257.983L459.51 257.89Z\",\n    fill: \"#C4B0FF\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, _path49 || (_path49 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M413.219 275.023C412.797 275.498 412.323 276.012 412.626 276.75C412.799 277.026 413.056 277.24 413.36 277.359C413.664 277.478 413.998 277.495 414.313 277.409C414.643 277.409 415.012 277.277 415.157 276.921C415.302 276.565 415.354 276.13 415.473 275.761C415.75 274.865 416.791 274.443 416.264 273.376C416.146 273.138 415.976 272.93 415.766 272.767C415.556 272.605 415.311 272.493 415.051 272.44C414.194 272.44 413.522 273.231 413.021 273.929L413.219 275.023Z\",\n    fill: \"#C4B0FF\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, _path50 || (_path50 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M287.646 364.483C287.909 363.917 288.225 362.876 289.201 362.52C289.79 362.314 290.431 362.314 291.02 362.52C292.483 362.757 293.933 363.218 292.971 364.668C292.287 365.455 291.358 365.989 290.334 366.184C289.464 366.329 287.856 366.052 287.935 365.314L287.646 364.483Z\",\n    fill: \"#C4B0FF\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, _path51 || (_path51 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M376.089 57.1844C375.759 58.5023 375.311 60.1497 376.813 61.1382C377.842 61.7708 379.45 61.1382 380.306 60.4397C381.782 59.0987 382.789 57.3205 383.18 55.3657C383.404 53.6392 381.321 51.7941 379.74 51.5965C376.51 51.2011 374.784 56.3278 374.599 58.7396L376.089 57.1844Z\",\n    fill: \"#C4B0FF\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, _path52 || (_path52 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M368.892 347.93C367.906 349.435 367.529 351.258 367.837 353.031C367.969 354.098 367.982 355.535 369.379 355.891C372.675 356.721 376.089 350.619 376.972 348.603C377.737 347.02 378.095 345.271 378.013 343.515C377.921 342.553 377.209 340.669 376.062 340.273C375.26 340.126 374.433 340.189 373.662 340.454C372.891 340.72 372.202 341.179 371.66 341.789C369.182 344.267 369.366 347.127 368.022 349.802L368.892 347.93Z\",\n    fill: \"#C4B0FF\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, _path53 || (_path53 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M367.165 347.706C366.305 347.833 365.46 348.054 364.648 348.365C364.239 348.603 363.593 348.972 363.448 349.354C363.303 349.736 363.607 350.329 364.002 350.672C364.171 350.794 364.367 350.875 364.573 350.907C364.779 350.939 364.99 350.922 365.188 350.856C365.51 350.666 365.795 350.421 366.032 350.131C366.41 349.727 366.746 349.286 367.034 348.813C367.202 348.608 367.343 348.382 367.455 348.141C367.574 347.772 367.297 347.68 367.218 347.403L367.165 347.706Z\",\n    fill: \"#C4B0FF\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, _path54 || (_path54 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M363.396 362.335L364.503 362.665C364.384 363.034 364.503 363.442 364.028 363.719C363.562 363.914 363.053 363.982 362.552 363.917C362.064 363.811 361.787 363.535 361.853 363.113C361.919 362.691 362.526 362.375 363.092 362.23L363.396 362.335Z\",\n    fill: \"#C4B0FF\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, _path55 || (_path55 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M307.614 374.645C307.614 375.04 307.614 375.317 308.062 375.488C308.441 375.606 308.844 375.624 309.232 375.541C309.62 375.458 309.98 375.276 310.277 375.014C311.081 374.262 311.793 372.879 311.292 372.127C311.008 371.838 310.632 371.655 310.229 371.609C309.826 371.563 309.419 371.658 309.077 371.877C308.677 372.16 308.306 372.482 307.97 372.839C307.789 373.082 307.662 373.36 307.596 373.655C307.53 373.95 307.527 374.256 307.588 374.552L307.614 374.645Z\",\n    fill: \"#C4B0FF\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, _path56 || (_path56 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M248.959 279.61C248.564 279.965 248.366 280.084 248.274 280.585C248.194 280.853 248.167 281.134 248.197 281.413C248.226 281.691 248.311 281.961 248.445 282.206C249.306 283.226 250.494 283.915 251.807 284.156C252.268 284.289 252.754 284.311 253.225 284.222C253.697 284.133 254.141 283.934 254.522 283.642C254.993 283.335 255.394 282.93 255.696 282.454C255.998 281.979 256.196 281.445 256.275 280.888C256.417 280.345 256.382 279.772 256.176 279.25C255.97 278.729 255.603 278.287 255.128 277.988C254.223 277.295 253.18 276.801 252.07 276.539C251.642 276.462 251.203 276.489 250.787 276.617C250.372 276.746 249.994 276.972 249.684 277.277C249.025 277.83 248.155 278.832 248.959 279.61Z\",\n    fill: \"#C4B0FF\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, _path57 || (_path57 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M257.606 283.471C257.606 283.155 257.606 282.773 257.923 282.68C258.213 282.676 258.501 282.729 258.771 282.838C259.04 282.947 259.285 283.108 259.491 283.313C259.781 283.65 259.94 284.081 259.939 284.525C259.844 284.82 259.648 285.072 259.386 285.237C259.206 285.394 258.98 285.488 258.742 285.505C258.504 285.521 258.267 285.46 258.068 285.329C257.791 285.158 257.119 284.802 257.224 284.394L257.606 283.471Z\",\n    fill: \"#C4B0FF\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, _path58 || (_path58 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M92.1473 249.732C89.6728 246.371 88.4596 242.247 88.7203 238.082C88.8125 236.303 88.6149 233.087 91.1456 233.337C94.5462 233.667 96.2861 238.939 97.2351 241.574C98.6455 245.528 100.016 249.482 99.5154 253.712C98.83 259.498 91.2115 247.979 90.4601 246.912L92.1473 249.732Z\",\n    fill: \"#C4B0FF\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, _path59 || (_path59 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M99.4759 230.609C98.8696 233.97 100.372 238.741 104.01 239.835C105.328 240.217 105.789 239.413 106.475 238.187C106.863 237.615 107.121 236.964 107.23 236.281C107.339 235.598 107.298 234.899 107.108 234.234C106.689 233.338 106.162 232.497 105.539 231.73C105.181 231.292 104.867 230.82 104.603 230.319C104.353 229.779 104.445 229.357 104.023 228.883C103.008 227.736 99.0804 226.801 99.4759 229.476V230.609Z\",\n    fill: \"#C4B0FF\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, _path60 || (_path60 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M136.541 468.955C137.34 466.825 138.794 465.003 140.692 463.749C142.862 462.287 145.271 461.217 147.81 460.586C150.214 460.032 152.729 460.225 155.02 461.14C157.248 462.326 159.225 464.092 161.334 465.462C163.245 466.714 165.169 467.413 166.843 469.074C168.341 470.611 169.495 472.448 170.231 474.464C171.391 477.521 172.234 482.213 170.929 485.323C169.743 488.157 168.069 488.197 165.235 488.144C161.281 488.078 157.419 484.836 154.915 481.936C153.793 480.416 152.526 479.008 151.132 477.732C149.326 476.309 147.441 474.991 145.543 473.699C143.682 472.671 141.882 471.535 140.152 470.299C139.427 469.667 137.081 467.874 136.541 468.955Z\",\n    fill: \"#C4B0FF\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, _path61 || (_path61 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M205.054 289.27C204.804 290.72 204.435 291.352 205.502 292.064C205.831 292.299 206.225 292.425 206.629 292.425C207.034 292.425 207.428 292.299 207.756 292.064C208.56 291.589 210.393 289.876 210.116 288.861C209.641 286.739 204.316 286.66 204.593 289.23L205.054 289.27Z\",\n    fill: \"#C4B0FF\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, _path62 || (_path62 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M304.82 357.34C303.963 353.387 307.996 347.627 312.557 344.398C319.055 339.786 328.928 338.784 336.203 339.759C342.306 340.563 347.315 343.792 348.541 348.168C348.87 349.341 348.646 350.566 348.923 351.739C349.147 352.635 349.384 353.149 348.066 353.901C344.784 355.759 339.591 356.905 335.9 357.512C331.788 358.327 327.61 358.769 323.418 358.83C319.885 358.751 316.511 358.237 312.979 358.105C311.295 358.111 309.614 357.965 307.957 357.67C307.126 357.512 305.057 357.802 304.82 357.34Z\",\n    fill: \"#C4B0FF\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, _path63 || (_path63 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M338.286 332.972C338.892 333.723 338.919 334.158 340.118 334.29C341.053 334.283 341.966 334.014 342.754 333.512C343.717 332.959 345.048 331.641 344.573 330.877C343.73 329.44 337.983 330.297 338.576 332.195L338.286 332.972Z\",\n    fill: \"#C4B0FF\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, _path64 || (_path64 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M428.575 256.533C428.754 255.445 429.153 254.404 429.748 253.475C430.027 253.292 430.34 253.166 430.668 253.105C430.996 253.044 431.333 253.049 431.659 253.119C432.261 253.156 432.846 253.332 433.367 253.634C433.889 253.936 434.333 254.355 434.664 254.859C435.239 255.401 435.689 256.063 435.982 256.796C436.892 260.948 429.576 259.155 428.614 256.533H428.575Z\",\n    fill: \"#C4B0FF\"\n  })))), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      mixBlendMode: \"screen\"\n    },\n    d: \"M454.916 528.005C513.733 490.351 546.665 436.794 528.472 408.382C510.278 379.97 447.849 387.462 389.031 425.116C330.214 462.77 297.282 516.327 315.475 544.739C333.669 573.151 396.098 565.659 454.916 528.005Z\",\n    fill: \"url(#paint2_radial_110_3490)\"\n  })), _path65 || (_path65 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M582.013 432.573C592.767 431.051 603.597 426.454 614.479 416.869C638.747 395.496 634.117 358.896 615.91 337.106C597.299 314.903 559.522 301.761 514.289 337.817C437.675 398.888 405.796 376.632 405.485 376.386L399.921 383.576C401.398 384.747 436.935 411.107 520.013 344.913C560.095 313.022 592.256 322.944 608.993 342.928C624.459 361.436 628.679 392.313 608.531 410.04C583.525 432.041 558.609 423.591 532.232 414.659C521.621 411.055 510.65 407.337 499.594 405.66C460.111 399.672 435.489 423.22 434.458 424.221L440.814 430.718C448.669 424.072 457.863 419.197 467.772 416.425C477.68 413.653 488.069 413.05 498.232 414.656C508.482 416.199 519.077 419.791 529.324 423.266C546.505 429.127 564.157 435.1 582.013 432.573Z\",\n    fill: \"#CAB3DA\"\n  })), _path66 || (_path66 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M525.546 517.354C525.546 517.354 548.173 537.608 565.317 527.716L525.546 517.354Z\",\n    fill: \"#CAB3DA\"\n  })), _path67 || (_path67 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M212.762 349.467C221.744 366.134 264.83 381.877 286.738 375.52C287.716 375.241 288.678 374.906 289.618 374.519C302.545 369.046 310.458 353.783 314.352 343.862C315.541 340.931 316.554 337.931 317.385 334.878L311.77 290.138C311.77 290.138 311.203 290.329 310.238 290.728C304.498 293.065 299.055 296.078 294.026 299.701C285.701 305.902 255.65 316.545 239.113 315.229C222.576 313.913 216.105 309.627 212.33 310.741C208.555 311.855 206.431 318.779 206.431 318.779C206.431 318.779 203.294 331.904 212.762 349.467Z\",\n    fill: \"url(#paint3_radial_110_3490)\"\n  })), _path68 || (_path68 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M206.431 318.779C206.431 318.779 212.84 315.319 216.141 319.143C219.442 322.967 226.63 348.015 212.773 349.452C198.916 350.889 206.444 318.777 206.444 318.777L206.431 318.779Z\",\n    fill: \"#684D73\"\n  })), _path69 || (_path69 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M210.151 319.812C210.151 319.812 214.241 333.21 208.05 345.912C208.05 345.912 198.966 329.991 210.151 319.812Z\",\n    fill: \"#53345F\"\n  })), _path70 || (_path70 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M177.826 323.256C182.858 330.524 189.889 336.176 198.068 339.529C201.652 341.122 205.411 342.29 209.267 343.008C211.914 337.458 212.582 331.17 211.16 325.188C211.16 325.188 210.22 323.61 208.669 321.332C205.198 316.304 199.043 307.82 194.214 305.289L194.784 311.652C194.784 311.652 188.405 303.434 174.662 305.973C174.676 305.971 168.171 308.658 177.826 323.256Z\",\n    fill: \"#D9D9D9\"\n  })), _path71 || (_path71 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.825 313.632C256.825 313.632 266.401 323.867 270.651 347.551C274.9 371.234 258.878 375.117 258.878 375.117C258.878 375.117 268.962 377.539 275.919 376.968C275.919 376.968 313.16 361.955 271.456 309.767L256.825 313.632Z\",\n    fill: \"url(#paint4_linear_110_3490)\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M314.352 343.862C315.414 347.272 316.712 350.786 318.089 354.469L328.305 328.186L314.352 289.469L310.326 290.274C310.278 290.419 310.256 290.56 310.21 290.718C304.469 293.056 299.027 296.068 293.998 299.691C293.998 299.691 328.114 324.887 289.605 374.424C302.546 369.046 310.458 353.783 314.352 343.862Z\",\n    fill: \"url(#paint5_linear_110_3490)\"\n  }), _path72 || (_path72 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M364.587 554.764C364.587 554.764 370.341 539.172 408.128 537.562C408.133 537.603 396.103 557.892 364.587 554.764Z\",\n    fill: \"#311745\"\n  })), _path73 || (_path73 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M528.776 477.199C528.776 477.199 504.806 480.592 496.299 509.393C496.299 509.393 507.31 512.222 519.242 502.737C531.173 493.252 528.776 477.199 528.776 477.199Z\",\n    fill: \"#311745\"\n  })), _path74 || (_path74 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M392.296 559.853L408.717 550.988C408.717 550.988 407.813 546.548 406.628 539.445C403.59 521.495 398.702 486.67 401.71 464.25L332.806 434.458C332.806 434.458 333.125 438.759 333.711 445.534C335.516 465.203 333.93 505.567 340.374 520.578C349.059 540.695 392.296 559.853 392.296 559.853Z\",\n    fill: \"url(#paint6_radial_110_3490)\"\n  })), _path75 || (_path75 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M332.802 434.431C351.132 451.197 374.198 461.884 398.84 465.029L401.71 464.25L417.039 460.052C417.035 460.002 417.028 459.952 417.018 459.903L416.974 459.592C416.956 459.511 416.944 459.43 416.939 459.348C416.918 459.245 416.903 459.142 416.895 459.037C416.046 452.065 412.02 408.121 438.469 365.218C434.664 361.887 431.087 358.304 427.762 354.494C427.104 353.746 426.398 352.949 425.645 352.117C422.232 348.281 418.098 343.444 413.202 337.321C402.499 324.099 384.643 302.645 372.346 287.911C368.656 283.479 365.452 279.656 363.088 276.803C362.207 275.741 361.425 274.803 360.783 274.066L358.821 271.708C358.821 271.708 329.132 291.627 310.814 288.356C310.814 288.356 310.612 288.978 310.315 290.193C310.268 290.351 310.247 290.492 310.198 290.637C308.726 296.999 305.691 316.112 314.308 343.744C315.384 347.152 316.668 350.668 318.056 354.335C318.572 355.642 319.089 356.949 319.659 358.248C319.726 380.505 322.948 402.641 329.228 423.994C330.342 427.576 331.518 431.011 332.802 434.431Z\",\n    fill: \"#CAB3DA\"\n  })), _path76 || (_path76 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M375.717 315.913C376.459 316.871 377.258 317.834 378.076 318.836C390.968 334.369 409.533 348.741 427.8 354.572C438.996 358.12 450.037 358.434 459.586 353.853C480.912 343.576 487.791 323.74 489.377 317.983C489.414 317.799 489.462 317.617 489.52 317.438C489.545 317.278 489.583 317.121 489.633 316.967C489.73 316.58 489.771 316.382 489.771 316.382C489.771 316.382 496.295 310.422 492.304 302.597C488.313 294.773 479.172 284.104 479.172 284.104L474.776 284.533C474.776 284.533 471.287 279.383 465.285 280.357C459.282 281.331 447.18 288.439 428.154 286.993C411.42 285.746 385.683 279.386 376.967 276.301C376.051 276.023 375.163 275.659 374.316 275.214C371.356 273.667 368.133 272.686 364.813 272.323L362.422 273.461L360.844 274.209L355.998 276.523C355.998 276.523 354.648 289.505 375.717 315.913Z\",\n    fill: \"url(#paint7_radial_110_3490)\"\n  })), _path77 || (_path77 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M417.038 460.052C417.038 460.052 456.896 486.035 466.592 493.218C476.287 500.4 503.049 509.32 516.196 509.294C516.516 509.305 516.838 509.296 517.158 509.269C529.512 508.817 533.407 500.069 533.407 500.069C533.407 500.069 532.734 497.653 531.657 493.846C530.208 488.78 528.044 481.29 525.693 473.841C522.606 463.929 519.209 454.061 516.93 450.244C513.053 443.714 472.075 400.462 450.947 378.312C443.466 370.499 438.482 365.312 438.482 365.312C407.72 396.27 415.571 451.345 416.906 459.118C416.914 459.223 416.929 459.327 416.95 459.429C416.956 459.511 416.968 459.593 416.985 459.673L417.023 459.943C417.03 459.979 417.035 460.015 417.038 460.052Z\",\n    fill: \"url(#paint8_radial_110_3490)\"\n  })), _path78 || (_path78 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M353.272 277.64C353.272 277.64 338.871 292.097 332.63 294.995C326.39 297.893 310.86 288.487 310.86 288.487C310.86 288.487 326.499 288.329 353.272 277.64Z\",\n    fill: \"#53345F\"\n  })), _path79 || (_path79 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M364.798 272.311C364.798 272.311 371.961 324.959 418.325 351.774C418.325 351.774 377.206 334.234 353.272 277.64L364.798 272.311Z\",\n    fill: \"#53345F\"\n  })), _path80 || (_path80 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M314.346 289.525C314.346 289.525 312.561 330.138 319.695 358.408C319.695 358.408 304.036 328.199 306.427 292.454L310.86 288.487L314.346 289.525Z\",\n    fill: \"#53345F\"\n  })), _path81 || (_path81 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M446.146 373.252C446.146 373.252 424.72 393.836 423.511 464.254L417.079 460.046C417.079 460.046 404.132 393.632 438.505 365.282L446.146 373.252Z\",\n    fill: \"#53345F\"\n  })), _path82 || (_path82 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M329.299 424.205C329.299 424.205 365.794 462.504 401.695 464.238L401.223 468.61C401.223 468.61 365.193 471.806 333.451 442.328L329.299 424.205Z\",\n    fill: \"#53345F\"\n  })), _path83 || (_path83 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M489.781 316.352C489.781 316.352 496.306 310.392 492.314 302.568C488.323 294.744 479.182 284.075 479.182 284.075L474.786 284.504C474.786 284.504 463.112 307.116 489.781 316.352Z\",\n    fill: \"#684D73\"\n  })), _path84 || (_path84 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M490.823 308.699C490.823 308.699 474.542 297.205 479.136 284.136C479.182 284.075 495.456 302.441 490.823 308.699Z\",\n    fill: \"#53345F\"\n  })), _path85 || (_path85 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M479.245 293.297C479.245 293.297 476.758 281.478 485.365 274.244L488.018 279.14C488.018 279.14 497.753 264.377 511.298 268.145C511.298 268.145 516.356 291.589 488.624 307.009C484.046 303.621 480.743 298.791 479.245 293.297Z\",\n    fill: \"#D9D9D9\"\n  })), _path86 || (_path86 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M504.774 435.724C504.774 435.724 512.775 451.012 495.066 470.077C477.357 489.141 457.828 487.063 457.828 487.063C457.828 487.063 468.554 495.286 475.637 498.34C482.72 501.394 513.796 483.666 521.641 461.402C521.641 461.402 519.17 452.714 515.85 448.658C512.53 444.603 504.774 435.724 504.774 435.724Z\",\n    fill: \"url(#paint9_linear_110_3490)\"\n  })), _path87 || (_path87 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M401.07 491.702C401.07 491.702 390.046 508.082 374.495 518.411C365.197 524.57 353.959 527.094 342.921 525.502C342.921 525.502 350.355 535.419 358.388 540.216C358.388 540.216 378.406 536.002 387.843 528.002C397.28 520.001 402.262 507.333 402.262 507.333L401.07 491.702Z\",\n    fill: \"url(#paint10_linear_110_3490)\"\n  })), _path88 || (_path88 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M423.203 286.521C423.203 286.521 400.964 327.973 444.94 357.223C439.526 357.44 434.119 356.653 428.992 354.9C416.957 351.084 380.356 305.211 409.789 284.266L423.203 286.521Z\",\n    fill: \"url(#paint11_linear_110_3490)\"\n  })), _path89 || (_path89 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M401.449 464.549L401.948 463.982C401.649 463.72 372.158 437.373 359.929 414.736C349.339 395.096 347.049 383.885 343.884 368.355C342.694 362.48 341.338 355.828 339.343 347.969C335.067 331.067 332.034 313.875 330.268 296.53L329.51 296.638C331.291 314.022 334.335 331.253 338.616 348.196C340.594 356.029 341.95 362.682 343.152 368.541C346.326 384.139 348.618 395.364 359.268 415.133C371.56 437.83 401.078 464.27 401.449 464.549Z\",\n    fill: \"#53345F\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M405.296 540.171L406.574 539.452C403.536 521.503 398.648 486.678 401.656 464.257L417.039 460.052C417.039 460.052 456.896 486.035 466.606 493.216C476.315 500.396 503.05 509.32 516.196 509.294C516.517 509.3 516.837 509.286 517.156 509.255L531.648 493.778C530.215 488.724 528.037 481.236 525.699 473.785L524.128 473.607C524.128 473.607 510.159 496.282 490.111 497.947C470.064 499.612 429.865 458.057 429.086 449.433C426.192 417.195 441.889 390.647 450.944 378.285L438.477 365.272C434.672 361.941 431.095 358.358 427.769 354.549C438.965 358.097 450.007 358.41 459.567 353.814C480.88 343.539 487.76 323.717 489.344 317.946C487.452 324.078 478.545 346.74 445.727 353.717C439.03 355.096 432.078 354.539 425.686 352.111C397.188 341.947 375.807 301.15 373.178 292.126C372.775 290.767 372.513 289.371 372.395 287.959C371.777 279.892 376.936 276.277 376.936 276.277C376.035 275.996 375.158 275.64 374.316 275.213C371.356 273.667 368.133 272.686 364.814 272.322L362.422 273.461C362.614 274.331 362.839 275.527 363.15 276.946C366.075 290.32 370.289 303.378 375.734 315.938C379.926 325.815 385.442 335.075 392.132 343.463C414.566 370.547 421.159 374.623 421.159 374.623C421.159 374.623 414.629 425.966 402.948 440.148C391.268 454.331 351.047 440.596 340.184 432.378C335.014 428.515 331.544 425.833 329.274 424.126C330.34 427.563 331.503 430.999 332.8 434.417C332.8 434.417 333.119 438.718 333.706 445.493C344.598 454.203 381.604 484.509 389.746 497.776C399.3 513.409 405.296 540.171 405.296 540.171Z\",\n    fill: \"url(#paint12_linear_110_3490)\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    opacity: 0.5\n  }, _path90 || (_path90 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M364.796 272.297C364.796 272.297 362.09 301.919 338.194 322.895C314.298 343.87 299.139 296.245 299.139 296.245L306.426 292.454L310.361 290.324L364.796 272.297Z\",\n    fill: \"#53345F\"\n  }))), _path91 || (_path91 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M224.484 267.93C224.719 268.227 224.939 268.514 225.199 268.794C228.5 272.618 234.214 276.528 241.442 279.921C241.442 279.921 241.873 280.136 242.691 280.461C258.519 287.381 275.693 290.678 292.959 290.111C322.974 288.966 365.895 278.406 390.347 253.654C414.799 228.902 415.384 168.7 404.508 151.529C400.774 145.546 396.675 139.799 392.234 134.321C377.834 116.614 354.348 95.9437 320.465 94.034C294.857 92.5813 262.289 101.427 238.395 113.254C231.596 116.536 225.124 120.456 219.065 124.96C215.823 127.367 212.863 130.133 210.242 133.204L209.334 134.395C208.73 135.173 208.182 135.993 207.695 136.849C182.507 181.064 208.429 247.214 224.484 267.93Z\",\n    fill: \"url(#paint13_linear_110_3490)\"\n  })), _path92 || (_path92 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M227.891 262.949C228.122 263.22 228.313 263.496 228.556 263.752C235.963 269.188 260.665 282.567 296.626 268.356C340.848 250.892 340.986 210.54 340.986 210.54L349.706 207.705C348.625 201.924 347.896 196.577 347.433 191.648C344.792 164.025 350.433 149.676 349.568 145.811C348.556 141.194 333.727 116.566 298.852 110.671C275.742 106.781 255.196 112.049 240.934 117.931C234.556 121.004 228.487 124.682 222.812 128.913C219.764 131.159 216.986 133.752 214.537 136.639L213.687 137.753C213.117 138.484 212.604 139.258 212.152 140.068C202.336 157.284 200.801 178.019 203.418 197.78C207.097 225.615 219.077 251.571 227.891 262.949Z\",\n    fill: \"url(#paint14_linear_110_3490)\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M242.692 280.461C258.52 287.381 275.694 290.678 292.959 290.111C322.974 288.966 365.896 278.406 390.347 253.654C414.799 228.902 415.384 168.7 404.509 151.529C400.775 145.546 396.676 139.799 392.235 134.321C387.629 131.027 382.431 129.5 376.601 131.594C355.213 139.286 361.827 211.84 361.827 211.84L350.924 212.803C350.924 212.803 351.151 255.049 309.927 276.242C273.916 294.779 248.441 282.766 242.692 280.461Z\",\n    fill: \"url(#paint15_linear_110_3490)\"\n  }), _path93 || (_path93 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M400.449 238.95C391.399 250.069 371.576 249.426 363.227 213.159C354.879 176.892 369.526 137.757 369.526 137.757C339.691 146.119 354.356 209.075 354.356 209.075C355.389 211.688 356.379 214.101 357.402 216.357L357.506 216.604C378.893 264.465 398.75 241.081 400.449 238.95Z\",\n    fill: \"url(#paint16_linear_110_3490)\"\n  })), _path94 || (_path94 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M406.915 156.542C401.7 144.558 392.488 137.376 385.372 138.77C378.256 140.164 364.495 175.324 374.607 210.886C384.718 246.448 405.804 230.962 408.135 216.433L409.606 208.498C409.606 208.498 395.828 234.278 383.027 213.64C368.41 190.114 383.858 154.397 395.367 156.935C406.875 159.473 411.03 179.858 411.03 179.858C411.03 179.858 410.387 164.495 406.915 156.542Z\",\n    fill: \"#53345F\"\n  })), _path95 || (_path95 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M413.506 554.504L410.144 550.247L408.201 537.593C408.201 537.593 383.835 553.985 364.646 554.798C372.464 559.778 381.487 562.54 390.753 562.789C390.753 562.789 376.998 572.16 380.278 587.922L413.506 554.504Z\",\n    fill: \"#D9D9D9\"\n  })), _path96 || (_path96 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M496.387 509.339L522.975 512.64L525.556 517.421C525.556 517.421 543.269 531.72 565.325 527.77C565.325 527.77 558.823 509.718 536.142 503.794L528.795 477.237C527.563 485.077 524.332 492.468 519.414 498.697C511.6 508.51 497.622 509.288 496.387 509.339Z\",\n    fill: \"#D9D9D9\"\n  })), _path97 || (_path97 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M413.506 554.504L416.441 556.324L382.093 590.122L380.231 587.888L413.506 554.504Z\",\n    fill: \"#CAB3DA\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M364.587 554.765C372.404 559.745 381.427 562.507 390.693 562.756C390.693 562.756 406.223 555.494 413.506 554.504L410.144 550.247L408.201 537.593C408.201 537.593 383.779 553.98 364.587 554.765Z\",\n    fill: \"url(#paint17_linear_110_3490)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M496.388 509.339L522.975 512.64C528.007 510.783 532.521 507.75 536.142 503.794L528.795 477.237C527.563 485.077 524.332 492.468 519.415 498.697C511.6 508.51 497.622 509.288 496.388 509.339Z\",\n    fill: \"url(#paint18_linear_110_3490)\"\n  }), _path98 || (_path98 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M333.909 147.973C333.909 147.973 331.999 137.204 330.351 134.14C325.131 131.09 319.363 129.093 313.375 128.264L310.126 148.4C310.126 148.4 328.603 147.234 333.909 147.973Z\",\n    fill: \"white\"\n  })), _path99 || (_path99 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M227.967 263.587C228.185 263.859 228.389 264.134 228.633 264.389C236.026 269.828 260.697 283.183 296.62 268.992C340.787 251.535 340.879 211.245 340.879 211.245L349.571 208.414C348.504 202.632 347.777 197.298 347.3 192.371C347.3 192.371 261.2 131.165 203.524 198.428C207.192 226.292 219.156 252.222 227.967 263.587Z\",\n    fill: \"url(#paint19_linear_110_3490)\"\n  })), _path100 || (_path100 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M334.393 219.035C334.393 219.035 333.542 228.621 330.222 234.803L324.398 232.647C324.398 232.647 327.134 223.705 328.108 218.406L334.393 219.035Z\",\n    fill: \"white\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M508.768 286.137C508.768 286.137 501.21 297.28 491.986 299.082C482.762 300.885 479.01 291.633 479.01 291.633C479.01 291.633 479.065 299.628 488.57 307.017C488.57 307.017 504.327 298.632 508.768 286.137Z\",\n    fill: \"url(#paint20_linear_110_3490)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M198.081 339.527C201.666 341.12 205.425 342.288 209.281 343.006C211.928 337.456 212.596 331.168 211.174 325.186C211.174 325.186 210.233 323.608 208.683 321.33C208.683 321.33 210.504 331.27 198.081 339.527Z\",\n    fill: \"url(#paint21_linear_110_3490)\"\n  }), _path101 || (_path101 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M347.918 335.151C348.845 336.872 350.103 338.393 351.62 339.627C353.136 340.861 354.881 341.783 356.755 342.341C358.629 342.898 360.594 343.081 362.539 342.877C364.483 342.674 366.368 342.088 368.085 341.154C369.808 340.229 371.33 338.971 372.565 337.455C373.8 335.939 374.723 334.193 375.281 332.319C375.839 330.445 376.021 328.479 375.816 326.534C375.612 324.589 375.025 322.704 374.089 320.987C373.162 319.266 371.904 317.745 370.388 316.511C368.871 315.277 367.126 314.355 365.252 313.797C363.378 313.239 361.413 313.057 359.469 313.26C357.524 313.464 355.639 314.049 353.922 314.983C352.201 315.91 350.68 317.168 349.446 318.685C348.212 320.201 347.29 321.946 346.732 323.82C346.174 325.694 345.992 327.659 346.195 329.604C346.399 331.548 346.984 333.433 347.918 335.151Z\",\n    fill: \"#684D73\"\n  })), _path102 || (_path102 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M352.777 332.531C353.958 334.7 355.952 336.311 358.32 337.01C360.688 337.71 363.237 337.441 365.406 336.263C366.482 335.679 367.431 334.889 368.2 333.939C368.97 332.988 369.545 331.895 369.891 330.722C370.238 329.549 370.35 328.319 370.22 327.103C370.091 325.886 369.723 324.707 369.138 323.633C367.957 321.465 365.964 319.854 363.596 319.154C361.227 318.454 358.679 318.723 356.509 319.902C354.34 321.083 352.729 323.076 352.029 325.444C351.33 327.812 351.599 330.361 352.777 332.531Z\",\n    fill: \"url(#paint22_linear_110_3490)\"\n  })), _path103 || (_path103 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M403.726 283.248C403.726 283.248 392.186 300.667 379.488 277.144C379.488 277.144 397.02 281.783 403.726 283.248Z\",\n    fill: \"#684D73\"\n  })), _path104 || (_path104 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M371.19 487.074C381.231 485.583 391.157 483.404 400.899 480.55L400.672 479.823C400.183 479.975 351.772 494.458 335.466 483.369L335.044 483.994C342.901 489.395 357.663 488.988 371.19 487.074Z\",\n    fill: \"#53345F\"\n  })), _path105 || (_path105 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M437.51 474.829L438.267 474.722C436.444 465.867 436.005 456.782 436.966 447.793C439.529 424.856 464.777 393.354 465.023 393.043L464.43 392.561C464.185 392.872 438.795 424.546 436.209 447.707C435.246 456.761 435.685 465.909 437.51 474.829Z\",\n    fill: \"#53345F\"\n  })), _path106 || (_path106 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M477.805 339.559L478.401 339.088C446.557 298.558 465.364 280.815 465.548 280.651L465.054 280.086C464.845 280.267 460.009 284.705 459.147 294.306C458.297 303.12 460.961 318.141 477.805 339.559Z\",\n    fill: \"#53345F\"\n  })), _path107 || (_path107 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M241.459 369.911C255.993 340.795 223.863 312.765 223.548 312.493L223.049 313.06C223.365 313.346 255.055 340.997 240.789 369.564L241.459 369.911Z\",\n    fill: \"#53345F\"\n  })), _path108 || (_path108 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M378.113 368.808C379.779 371.75 381.814 374.467 384.17 376.892L390.008 372.906C388.298 369.867 385.731 367.399 382.628 365.809L378.113 368.808Z\",\n    fill: \"white\"\n  })), _path109 || (_path109 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M452.532 287.254C450.297 288.31 447.841 288.814 445.371 288.722L443.226 292.283C443.226 292.283 448.977 294.601 452.324 291.146L452.532 287.254Z\",\n    fill: \"white\"\n  })), _path110 || (_path110 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M491.641 441.198C494.578 442.966 497.042 445.42 498.821 448.351L495.098 452.755L488.606 445.395L491.641 441.198Z\",\n    fill: \"white\"\n  })), _path111 || (_path111 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M213.422 311.042C215.836 311.878 217.924 313.457 219.386 315.552L224.263 315.786C223.244 314.663 222.093 313.668 220.835 312.822C218.878 311.567 213.422 311.042 213.422 311.042Z\",\n    fill: \"white\"\n  })), _path112 || (_path112 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M343.913 496.84C343.913 496.84 342.868 508.952 344.905 514.376L339.871 514.978C337.962 509.542 337.385 503.728 338.189 498.023L343.913 496.84Z\",\n    fill: \"white\"\n  })), _path113 || (_path113 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M316.974 107.292C316.974 107.292 287.405 100.963 269.533 104.155C269.533 104.155 331.854 86.6679 316.974 107.292Z\",\n    fill: \"white\"\n  })), _path114 || (_path114 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M362.711 164.869L351.667 163.562L350.767 175.529L361.289 175.874L362.711 164.869Z\",\n    fill: \"white\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip1_110_3490)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      mixBlendMode: \"screen\"\n    },\n    d: \"M624.797 111.23L664.56 131.181L671.863 114.231L634.457 93.6686C634.457 93.6686 626.525 105.997 624.797 111.23Z\",\n    fill: \"url(#paint23_linear_110_3490)\"\n  }), _path115 || (_path115 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M618.133 76.4162L620.55 68.9694C620.55 68.9694 633.603 74.5939 643.142 90.2453L642.796 90.8868L624.403 80.3206L623.628 81.6526L618.133 76.4162Z\",\n    fill: \"url(#paint24_linear_110_3490)\"\n  })), _path116 || (_path116 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M601.491 107.401L596.469 113.682C596.469 113.682 608.352 121.479 626.668 120.829L627.014 120.187L608.075 110.669L608.76 109.288L601.491 107.401Z\",\n    fill: \"url(#paint25_linear_110_3490)\"\n  })), _path117 || (_path117 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M537.364 52.9408C532.637 61.7205 546.146 86.7264 566.211 96.0968C586.275 105.467 619.726 111.788 619.726 111.788L625.892 100.6L631.837 89.2945C631.837 89.2945 608.127 64.8473 589.275 53.2578C570.423 41.6683 542.059 44.2204 537.364 52.9408Z\",\n    fill: \"url(#paint26_radial_110_3490)\"\n  })), _path118 || (_path118 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M619.73 111.794C619.73 111.794 625.492 98.3843 631.841 89.3004C631.841 89.3004 626.309 102.527 619.73 111.794Z\",\n    fill: \"#31165F\"\n  })), _path119 || (_path119 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M539.821 69.4778C539.821 69.4778 542.619 54.9463 553.903 45.7533C553.903 45.7533 540.85 46.6018 537.364 52.9407C534.227 58.6441 539.821 69.4778 539.821 69.4778Z\",\n    fill: \"url(#paint27_radial_110_3490)\"\n  })), _path120 || (_path120 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M554.014 45.893C543.412 54.36 540.037 69.3493 539.996 69.5132L539.649 69.4396C539.679 69.2883 543.089 54.1607 553.796 45.615L554.014 45.893Z\",\n    fill: \"#53345F\"\n  })), _path121 || (_path121 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M536.459 56.2662L540.327 49.8671C540.327 49.8671 536.182 51.9329 536.459 56.2662Z\",\n    fill: \"#53345F\"\n  })), _path122 || (_path122 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M536.641 55.1834C537.105 53.8551 537.742 52.594 538.537 51.4327C538.537 51.4327 535.056 50.4917 534.341 51.5614C533.627 52.631 536.641 55.1834 536.641 55.1834Z\",\n    fill: \"url(#paint28_linear_110_3490)\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    opacity: 0.5,\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M598.036 106.824C598.036 106.824 602.101 84.5365 614.161 72.4951C621.281 78.7414 631.839 89.3032 631.839 89.3032C631.839 89.3032 626.016 97.2557 619.729 111.796C619.731 111.794 608.466 110.234 598.036 106.824Z\",\n    fill: \"url(#paint29_radial_110_3490)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    opacity: 0.5,\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M551.035 61.249C547.385 69.4899 553.676 80.1666 561.623 84.9115C569.569 89.6564 578.598 84.8077 582.696 76.655C586.794 68.5024 584.922 58.8999 575.504 55.0323C566.998 51.5241 555.091 52.09 551.035 61.249Z\",\n    fill: \"url(#paint30_radial_110_3490)\"\n  }), _path123 || (_path123 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M549.738 60.5507C546.088 68.7916 552.379 79.4684 560.325 84.2132C568.272 88.9581 577.301 84.1094 581.402 75.9583C585.502 67.8072 583.627 58.2031 574.207 54.3341C565.704 50.8273 553.797 51.3933 549.738 60.5507Z\",\n    fill: \"#31165F\"\n  })), _path124 || (_path124 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M548.834 60.0638C545.184 68.3046 551.475 78.9814 559.421 83.7263C567.367 88.4712 576.397 83.6224 580.497 75.4713C584.598 67.3203 582.723 57.7162 573.303 53.8471C564.799 50.3404 552.893 50.9063 548.834 60.0638Z\",\n    fill: \"url(#paint31_radial_110_3490)\"\n  })), _path125 || (_path125 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M552.022 61.1023C548.629 68.4319 554.045 75.9405 560.258 79.6536C566.471 83.3667 573.528 79.5338 576.75 73.1295C579.972 66.7252 578.524 59.206 571.176 56.1794C564.512 53.4334 555.553 53.4394 552.022 61.1023Z\",\n    fill: \"#A6345F\"\n  })), _path126 || (_path126 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M578.027 65.2476C578.355 67.9396 577.858 70.6678 576.6 73.0704C573.534 79.1649 566.137 83.147 560.233 79.6184C558.212 78.4138 556.436 76.8392 554.998 74.977C552.168 71.3031 550.904 66.5364 553.073 61.628C556.256 54.361 564.974 54.3347 571.3 56.9384C575.36 58.6321 577.521 61.7531 578.027 65.2476Z\",\n    fill: \"url(#paint32_linear_110_3490)\"\n  })), _path127 || (_path127 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M581.415 75.94L581.33 76.0983L603.942 88.2725L604.027 88.1143L581.415 75.94Z\",\n    fill: \"#53345F\"\n  })), _path128 || (_path128 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M598.111 106.835L597.937 106.799C603.409 81.7417 613.983 72.52 614.087 72.4298L614.203 72.5654C614.107 72.663 603.582 81.8532 598.111 106.835Z\",\n    fill: \"#53345F\"\n  })), _path129 || (_path129 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M589.665 104.486L589.488 104.503C589.478 104.414 588.788 95.3784 594.563 83.1282L594.718 83.2119C588.953 95.4093 589.658 104.398 589.665 104.486Z\",\n    fill: \"#53345F\"\n  })), _path130 || (_path130 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M621.659 94.3339L611.731 89.3969L612.509 86.3347L622.798 92.2173L621.659 94.3339Z\",\n    fill: \"#31165F\"\n  })), _path131 || (_path131 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M620.929 110.041C620.929 110.041 625.259 99.7715 631.256 90.6511L635.309 93.5953L625.016 111.563L620.929 110.041Z\",\n    fill: \"url(#paint33_radial_110_3490)\"\n  })), _path132 || (_path132 = /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.5,\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M622.997 110.804C623.138 107.788 623.982 104.846 625.461 102.213C627.913 97.876 634.375 92.9066 634.375 92.9066L631.256 90.6511C631.256 90.6511 624.631 100.545 620.929 110.041L622.997 110.804Z\",\n    fill: \"#31165F\"\n  })), _path133 || (_path133 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M558.091 58.7314C560.043 58.1324 562.08 57.8574 564.121 57.9174L564.069 55.9213C564.069 55.9213 560.65 55.5896 558.489 57.2473L558.091 58.7314Z\",\n    fill: \"white\"\n  })), _path134 || (_path134 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M563.405 78.4938L566.279 78.4156L566.335 80.0715L564.013 79.9912L563.405 78.4938Z\",\n    fill: \"white\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      mixBlendMode: \"multiply\"\n    },\n    opacity: 0.5,\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M542.403 74.148C542.403 74.148 542.753 58.299 557.797 45.4949L553.903 45.7533C553.903 45.7533 544.533 52.7729 539.821 69.4779L542.403 74.148Z\",\n    fill: \"url(#paint34_radial_110_3490)\"\n  }), _path135 || (_path135 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M595.797 84.5326C595.889 84.5824 595.97 84.6499 596.035 84.7311C596.101 84.8123 596.15 84.9057 596.179 85.0058C596.208 85.106 596.218 85.211 596.207 85.3147C596.195 85.4185 596.164 85.519 596.113 85.6105C596.014 85.7963 595.846 85.9352 595.644 85.997C595.443 86.0587 595.226 86.0381 595.039 85.9398C594.855 85.8385 594.718 85.6682 594.659 85.4662C594.599 85.2642 594.623 85.0469 594.723 84.8619C594.772 84.7696 594.838 84.6879 594.919 84.6213C594.999 84.5548 595.092 84.5048 595.192 84.4742C595.291 84.4436 595.396 84.433 595.5 84.443C595.604 84.453 595.705 84.4835 595.797 84.5326Z\",\n    fill: \"url(#paint35_linear_110_3490)\"\n  })), _path136 || (_path136 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M595.721 84.6739C595.866 84.7574 595.972 84.8939 596.018 85.0545C596.063 85.2152 596.044 85.3872 595.965 85.5342C595.886 85.6812 595.753 85.7916 595.594 85.8421C595.434 85.8925 595.262 85.8789 595.113 85.8042C594.968 85.7207 594.862 85.5841 594.816 85.4235C594.771 85.2629 594.79 85.0908 594.869 84.9439C594.948 84.7968 595.081 84.6864 595.24 84.636C595.399 84.5856 595.572 84.5992 595.721 84.6739Z\",\n    fill: \"url(#paint36_radial_110_3490)\"\n  })), _path137 || (_path137 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M592.364 82.6841C592.547 82.7866 592.683 82.9574 592.741 83.1592C592.798 83.3611 592.774 83.5777 592.673 83.7617C592.573 83.9474 592.404 84.086 592.202 84.1474C592.001 84.2088 591.783 84.188 591.596 84.0896C591.415 83.9869 591.28 83.8168 591.223 83.616C591.165 83.4152 591.189 83.1998 591.289 83.0163C591.337 82.9235 591.403 82.8413 591.484 82.7743C591.564 82.7074 591.657 82.657 591.757 82.6261C591.857 82.5953 591.962 82.5845 592.066 82.5944C592.171 82.6044 592.272 82.6348 592.364 82.6841Z\",\n    fill: \"url(#paint37_linear_110_3490)\"\n  })), _path138 || (_path138 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M592.288 82.8253C592.433 82.9088 592.539 83.0454 592.584 83.206C592.63 83.3666 592.611 83.5387 592.532 83.6856C592.453 83.8327 592.32 83.9431 592.16 83.9935C592.001 84.0439 591.829 84.0303 591.679 83.9556C591.606 83.9159 591.542 83.8619 591.49 83.7969C591.438 83.7319 591.4 83.6572 591.378 83.5771C591.355 83.4971 591.349 83.4133 591.359 83.3308C591.37 83.2484 591.397 83.1688 591.438 83.0968C591.475 83.0225 591.527 82.9563 591.59 82.9021C591.653 82.848 591.727 82.8071 591.806 82.7818C591.885 82.7565 591.969 82.7473 592.051 82.7548C592.134 82.7623 592.215 82.7862 592.288 82.8253Z\",\n    fill: \"url(#paint38_radial_110_3490)\"\n  })), _path139 || (_path139 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M563.052 82.7578C563.261 82.3692 563.119 81.8866 562.736 81.6799C562.352 81.4732 561.871 81.6207 561.662 82.0093C561.452 82.3979 561.594 82.8805 561.978 83.0872C562.362 83.2939 562.843 83.1464 563.052 82.7578Z\",\n    fill: \"#31165F\"\n  })), _path140 || (_path140 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M562.658 81.8169C562.803 81.9004 562.909 82.037 562.955 82.1976C563 82.3582 562.981 82.5302 562.902 82.6772C562.823 82.8242 562.69 82.9347 562.531 82.9851C562.371 83.0355 562.199 83.0219 562.05 82.9472C561.906 82.8633 561.8 82.7268 561.755 82.5665C561.71 82.4063 561.729 82.2349 561.808 82.0884C561.846 82.014 561.897 81.9478 561.96 81.8937C562.023 81.8396 562.097 81.7987 562.176 81.7734C562.255 81.7481 562.339 81.7389 562.421 81.7464C562.504 81.7539 562.585 81.7778 562.658 81.8169Z\",\n    fill: \"url(#paint39_radial_110_3490)\"\n  })), _path141 || (_path141 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M553.552 75.1429C553.737 75.2442 553.874 75.4145 553.933 75.6165C553.993 75.8186 553.969 76.0358 553.869 76.2208C553.82 76.3132 553.753 76.3951 553.673 76.4619C553.593 76.5286 553.5 76.5788 553.4 76.6097C553.3 76.6405 553.195 76.6514 553.091 76.6417C552.987 76.6319 552.886 76.6018 552.793 76.553C552.702 76.5027 552.621 76.4349 552.555 76.3533C552.49 76.2718 552.441 76.1782 552.412 76.0778C552.383 75.9775 552.374 75.8723 552.385 75.7684C552.396 75.6645 552.428 75.5639 552.479 75.4723C552.578 75.2865 552.746 75.1475 552.947 75.0858C553.149 75.0241 553.366 75.0446 553.552 75.1429Z\",\n    fill: \"#31165F\"\n  })), _path142 || (_path142 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M553.472 75.2928C553.616 75.3763 553.723 75.5129 553.768 75.6735C553.814 75.8341 553.795 76.0061 553.716 76.1531C553.637 76.3001 553.503 76.4106 553.344 76.461C553.185 76.5114 553.012 76.4978 552.863 76.4231C552.719 76.3396 552.612 76.203 552.567 76.0424C552.521 75.8818 552.54 75.7097 552.619 75.5628C552.698 75.4157 552.832 75.3053 552.991 75.2549C553.15 75.2045 553.322 75.2181 553.472 75.2928Z\",\n    fill: \"url(#paint40_radial_110_3490)\"\n  })), _path143 || (_path143 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M574.056 79.2784C574.148 79.3283 574.228 79.3957 574.294 79.4769C574.36 79.5582 574.408 79.6515 574.438 79.7517C574.467 79.8518 574.477 79.9568 574.465 80.0606C574.454 80.1643 574.422 80.2648 574.372 80.3563C574.273 80.5421 574.104 80.6811 573.903 80.7428C573.702 80.8045 573.484 80.784 573.298 80.6857C573.114 80.5844 572.977 80.4141 572.917 80.2121C572.858 80.01 572.881 79.7928 572.982 79.6078C573.031 79.5155 573.097 79.4337 573.177 79.3672C573.258 79.3007 573.351 79.2506 573.45 79.22C573.55 79.1894 573.655 79.1788 573.759 79.1889C573.863 79.1989 573.964 79.2293 574.056 79.2784Z\",\n    fill: \"#31165F\"\n  })), _path144 || (_path144 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M573.975 79.4281C574.12 79.5117 574.226 79.6482 574.272 79.8088C574.317 79.9695 574.298 80.1415 574.219 80.2885C574.14 80.4355 574.007 80.5459 573.848 80.5963C573.688 80.6468 573.516 80.6332 573.367 80.5585C573.222 80.4749 573.116 80.3384 573.07 80.1778C573.025 80.0172 573.043 79.8451 573.123 79.6981C573.202 79.5511 573.335 79.4407 573.494 79.3903C573.653 79.3399 573.826 79.3534 573.975 79.4281Z\",\n    fill: \"url(#paint41_radial_110_3490)\"\n  })), _path145 || (_path145 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M580.762 68.8268C580.854 68.8767 580.935 68.9442 581.001 69.0255C581.066 69.1068 581.115 69.2002 581.145 69.3004C581.175 69.4006 581.184 69.5057 581.173 69.6096C581.162 69.7136 581.131 69.8144 581.081 69.9062C580.981 70.0918 580.812 70.2304 580.61 70.2919C580.408 70.3533 580.191 70.3325 580.004 70.234C579.82 70.1327 579.683 69.9624 579.623 69.7604C579.564 69.5584 579.587 69.3411 579.688 69.1561C579.737 69.0638 579.803 68.9821 579.884 68.9155C579.964 68.849 580.057 68.799 580.157 68.7684C580.256 68.7378 580.361 68.7272 580.465 68.7372C580.569 68.7472 580.67 68.7777 580.762 68.8268Z\",\n    fill: \"#31165F\"\n  })), _path146 || (_path146 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M580.681 68.9766C580.826 69.0601 580.932 69.1966 580.977 69.3572C581.023 69.5179 581.004 69.6899 580.925 69.8369C580.846 69.9839 580.713 70.0943 580.553 70.1447C580.394 70.1951 580.222 70.1816 580.072 70.1069C579.999 70.0671 579.935 70.0132 579.883 69.9481C579.832 69.8831 579.793 69.8084 579.771 69.7283C579.748 69.6483 579.742 69.5646 579.752 69.4821C579.763 69.3996 579.79 69.32 579.831 69.2481C579.869 69.1737 579.92 69.1075 579.983 69.0534C580.046 68.9993 580.12 68.9584 580.199 68.9331C580.278 68.9078 580.362 68.8986 580.444 68.906C580.527 68.9135 580.608 68.9375 580.681 68.9766Z\",\n    fill: \"url(#paint42_radial_110_3490)\"\n  })), _path147 || (_path147 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M578.561 59.029C578.77 58.6404 578.629 58.1579 578.245 57.9512C577.861 57.7445 577.38 57.8919 577.171 58.2805C576.962 58.6691 577.103 59.1517 577.487 59.3584C577.871 59.5651 578.352 59.4176 578.561 59.029Z\",\n    fill: \"#31165F\"\n  })), _path148 || (_path148 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M578.168 58.0924C578.313 58.176 578.419 58.3125 578.465 58.4731C578.51 58.6338 578.492 58.8058 578.412 58.9528C578.333 59.0998 578.2 59.2102 578.041 59.2606C577.882 59.3111 577.709 59.2975 577.56 59.2228C577.415 59.1392 577.309 59.0027 577.264 58.8421C577.218 58.6815 577.237 58.5094 577.316 58.3625C577.395 58.2154 577.528 58.105 577.687 58.0546C577.847 58.0042 578.019 58.0178 578.168 58.0924Z\",\n    fill: \"url(#paint43_radial_110_3490)\"\n  })), _path149 || (_path149 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M565.307 52.4436C565.399 52.4935 565.48 52.5609 565.546 52.6421C565.611 52.7234 565.66 52.8167 565.689 52.9169C565.719 53.017 565.728 53.122 565.717 53.2257C565.706 53.3295 565.674 53.43 565.624 53.5215C565.525 53.7073 565.356 53.8463 565.155 53.908C564.953 53.9697 564.736 53.9492 564.55 53.8508C564.366 53.7498 564.229 53.5801 564.169 53.3788C564.11 53.1774 564.132 52.9607 564.232 52.7758C564.28 52.6831 564.347 52.6008 564.427 52.5339C564.508 52.4669 564.6 52.4166 564.7 52.3857C564.8 52.3548 564.905 52.344 565.01 52.354C565.114 52.3639 565.215 52.3944 565.307 52.4436Z\",\n    fill: \"#31165F\"\n  })), _path150 || (_path150 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M565.231 52.5849C565.376 52.6684 565.482 52.805 565.528 52.9656C565.573 53.1262 565.555 53.2982 565.475 53.4452C565.396 53.5922 565.263 53.7027 565.104 53.7531C564.945 53.8035 564.772 53.7899 564.623 53.7152C564.478 53.6317 564.372 53.4951 564.326 53.3345C564.281 53.1739 564.3 53.0018 564.379 52.8549C564.458 52.7079 564.591 52.5974 564.75 52.547C564.91 52.4966 565.082 52.5102 565.231 52.5849Z\",\n    fill: \"url(#paint44_radial_110_3490)\"\n  })), _path151 || (_path151 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M555.963 54.5675C556.054 54.6173 556.135 54.6848 556.201 54.766C556.266 54.8472 556.315 54.9406 556.345 55.0407C556.374 55.1409 556.383 55.2459 556.372 55.3496C556.361 55.4534 556.329 55.5539 556.279 55.6454C556.18 55.8312 556.011 55.9701 555.81 56.0319C555.609 56.0936 555.391 56.073 555.205 55.9747C555.02 55.8734 554.883 55.7031 554.824 55.5011C554.765 55.2991 554.788 55.0818 554.889 54.8969C554.937 54.8046 555.004 54.7228 555.084 54.6563C555.165 54.5897 555.257 54.5397 555.357 54.5091C555.457 54.4785 555.562 54.4679 555.666 54.4779C555.77 54.488 555.87 54.5184 555.963 54.5675Z\",\n    fill: \"#31165F\"\n  })), _path152 || (_path152 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M555.882 54.7172C556.027 54.8007 556.133 54.9373 556.179 55.0979C556.224 55.2585 556.205 55.4306 556.126 55.5775C556.047 55.7245 555.914 55.835 555.755 55.8854C555.596 55.9358 555.423 55.9222 555.274 55.8475C555.129 55.764 555.023 55.6275 554.977 55.4668C554.932 55.3062 554.951 55.1342 555.03 54.9872C555.109 54.8402 555.242 54.7298 555.401 54.6793C555.561 54.6289 555.733 54.6425 555.882 54.7172Z\",\n    fill: \"url(#paint45_radial_110_3490)\"\n  })), _path153 || (_path153 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M549.94 63.3713C550.125 63.4726 550.261 63.6429 550.321 63.8449C550.38 64.0469 550.357 64.2642 550.256 64.4491C550.208 64.5414 550.141 64.6232 550.061 64.6898C549.98 64.7563 549.888 64.8063 549.788 64.8369C549.688 64.8675 549.583 64.8781 549.479 64.8681C549.375 64.8581 549.274 64.8276 549.182 64.7785C549.091 64.7286 549.009 64.6611 548.944 64.5798C548.878 64.4986 548.829 64.4051 548.799 64.3049C548.77 64.2047 548.76 64.0996 548.771 63.9956C548.782 63.8917 548.813 63.7909 548.863 63.6991C548.963 63.5135 549.132 63.3748 549.334 63.3134C549.536 63.252 549.754 63.2728 549.94 63.3713Z\",\n    fill: \"#31165F\"\n  })), _path154 || (_path154 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M549.859 63.521C549.932 63.5608 549.997 63.6148 550.049 63.6798C550.1 63.7448 550.139 63.8195 550.161 63.8996C550.184 63.9796 550.19 64.0633 550.179 64.1458C550.169 64.2283 550.142 64.3079 550.1 64.3798C550.063 64.4542 550.012 64.5204 549.949 64.5745C549.885 64.6286 549.812 64.6695 549.733 64.6948C549.654 64.7201 549.57 64.7293 549.487 64.7219C549.405 64.7144 549.324 64.6904 549.251 64.6514C549.106 64.5678 549 64.4313 548.954 64.2706C548.909 64.11 548.928 63.938 549.007 63.791C549.086 63.644 549.219 63.5336 549.378 63.4832C549.538 63.4327 549.71 63.4463 549.859 63.521Z\",\n    fill: \"url(#paint46_radial_110_3490)\"\n  })), _path155 || (_path155 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M627.007 120.198L627.286 119.681L608.32 110.137L608.063 110.662L627.007 120.198Z\",\n    fill: \"#6F2561\"\n  })), _path156 || (_path156 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M624.405 80.3106L624.108 80.8143L642.606 91.2257L642.795 90.8753L624.405 80.3106Z\",\n    fill: \"#6F2561\"\n  })), _path157 || (_path157 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M608.251 84.7715L609.249 82.9178L637.58 100.562L636.885 101.854L608.251 84.7715Z\",\n    fill: \"url(#paint47_linear_110_3490)\"\n  })), _path158 || (_path158 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M608.251 84.7715L614.047 89.5575L636.885 101.854L608.251 84.7715Z\",\n    fill: \"#FF4C61\"\n  })), _path159 || (_path159 = /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.5,\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M610.12 83.4596L631.841 89.3004L629.185 93.6513L633.811 96.2151L633.005 97.7127L610.12 83.4596Z\",\n    fill: \"#31165F\"\n  })), _path160 || (_path160 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M547.243 78.5763C547.243 78.5763 545.126 77.6737 544.58 75.7101L545.198 74.6834C546.034 75.7623 546.812 76.8844 547.529 78.0451L547.243 78.5763Z\",\n    fill: \"white\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, _path161 || (_path161 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M609.205 69.8382L601.526 63.2031L601.816 62.6634L609.549 69.1995L609.205 69.8382Z\",\n    fill: \"white\"\n  }))), _path162 || (_path162 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M571.382 46.5765C571.382 46.5765 572.476 42.9408 574.988 47.3734L571.382 46.5765Z\",\n    fill: \"url(#paint48_linear_110_3490)\"\n  })), _path163 || (_path163 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M550.412 84.482C550.412 84.482 549.667 87.9989 552.94 86.9765L550.412 84.482Z\",\n    fill: \"url(#paint49_linear_110_3490)\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.5\n  }, _path164 || (_path164 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M621.121 108.446C621.121 108.446 590.727 102.987 569.657 95.911L569.616 96.9536C569.616 96.9536 601.361 108.92 619.933 111.323L621.121 108.446Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, _path165 || (_path165 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M599.705 61.8398L594.852 57.9697L595.129 57.4554L599.982 61.3255L599.705 61.8398Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, _path166 || (_path166 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M590.069 100.65C590.069 100.65 590.615 93.712 592.98 88.1003C592.98 88.1003 591.292 94.0513 590.069 100.65Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, _path167 || (_path167 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M583.615 76.8911L603.507 87.4294C603.507 87.4294 596.51 83.2101 583.615 76.8911Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, _path168 || (_path168 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M599.4 102.328C599.4 102.328 602.712 86.8884 612.086 75.4277C612.1 75.4353 604.683 83.667 599.4 102.328Z\",\n    fill: \"white\"\n  }))), _path169 || (_path169 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M548.96 71.3252C548.96 71.3252 550.663 69.8948 547.88 67.0221C548.063 68.495 548.426 69.9401 548.96 71.3252Z\",\n    fill: \"white\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, _path170 || (_path170 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M581.257 73.8245C581.257 73.8245 583.383 69.3341 581.484 61.6419C581.47 61.6343 584.07 67.0359 581.257 73.8245Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    }\n  }, _path171 || (_path171 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M576.569 73.4327C576.569 73.4327 580.649 70.7088 578.332 66.0969C578.34 66.1014 579.038 69.0906 576.569 73.4327Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.36\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.36\n  }, _path172 || (_path172 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M584.657 78.7462C584.688 79.0544 584.666 79.6036 585.047 79.7143C585.226 79.7446 585.406 79.7649 585.587 79.7751C585.745 79.8056 585.899 79.8521 586.048 79.914C586.292 80.0152 586.559 80.0443 586.819 79.9976C586.986 79.9524 586.935 79.7829 586.861 79.6557C586.799 79.5104 586.7 79.384 586.574 79.2895C586.395 79.1905 586.227 79.0733 586.073 78.9398C586.014 78.8863 585.981 78.7991 585.917 78.7426C585.828 78.6815 585.734 78.6305 585.634 78.5905C585.476 78.5104 585.296 78.4823 585.121 78.5102C584.945 78.5382 584.783 78.6207 584.657 78.7462Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.36\n  }, _path173 || (_path173 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M586.999 81.195C586.951 81.1894 586.906 81.1697 586.87 81.1384C586.833 81.1071 586.807 81.0656 586.794 81.0193C586.977 80.6802 587.708 80.9206 587.664 81.3055C587.616 81.7535 587.095 81.531 586.938 81.3008L586.999 81.195Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.36\n  }, _path174 || (_path174 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M587.874 89.6962C587.884 89.4754 587.847 89.266 587.997 89.0954C588.123 88.9559 588.291 88.8608 588.475 88.8241C588.702 88.7892 588.935 88.8036 589.156 88.8663C589.267 88.8703 589.374 88.9065 589.464 88.9704C589.801 89.2864 589.83 89.8961 589.753 90.3102C589.721 90.5518 589.662 90.789 589.576 91.017C589.496 91.1668 589.449 91.3348 589.395 91.4955C589.37 91.6345 589.316 91.7668 589.237 91.8841C589.143 91.9655 589.038 92.0316 588.924 92.08C588.777 92.1541 588.615 92.1911 588.451 92.1879C588.287 92.1847 588.126 92.1413 587.982 92.0616C587.481 91.7664 587.405 90.9269 587.422 90.3933C587.44 89.9616 587.523 89.2993 587.874 89.6962Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.36\n  }, _path175 || (_path175 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M588.052 87.6999C588.171 87.8256 588.193 87.8923 588.35 87.8238C588.4 87.792 588.442 87.7499 588.474 87.7003C588.505 87.6507 588.526 87.5948 588.534 87.5364C588.572 87.3236 588.424 86.9487 588.172 86.977C588.045 86.9961 587.792 87.0674 587.705 87.1667C587.651 87.2975 587.644 87.4433 587.687 87.5783C587.73 87.7134 587.819 87.829 587.939 87.9047L588.052 87.6999Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.36\n  }, _path176 || (_path176 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M596.699 83.6222C596.763 83.6864 596.837 83.7388 596.919 83.7767C597.117 83.8832 597.314 83.9897 597.515 84.0977C597.888 84.2986 598.233 84.5574 598.615 84.7628C598.891 84.9028 599.178 85.0195 599.473 85.1118C599.624 85.1669 599.777 85.2142 599.933 85.2535C599.949 85.2225 599.876 85.1757 599.853 85.1449C599.774 85.0405 599.673 84.9499 599.603 84.843C599.447 84.5984 599.279 84.3478 599.105 84.1157C599.066 84.0772 599.032 84.0343 599.003 83.9877C598.975 83.9251 598.959 83.847 598.935 83.7831C598.892 83.6619 598.83 83.5485 598.751 83.4473C598.55 83.229 598.304 83.0577 598.029 82.9459C597.942 82.8987 597.846 82.88 597.76 82.8372C597.666 82.7862 597.568 82.741 597.468 82.702C597.252 82.6354 597.024 82.612 596.798 82.633C596.538 82.6423 596.119 82.588 595.923 82.8175C595.827 82.9267 595.94 83.0492 596.031 83.1238C596.122 83.1983 596.276 83.2848 596.395 83.3746C596.515 83.4644 596.736 83.6635 596.699 83.6222Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.36\n  }, _path177 || (_path177 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M595.079 82.4001C595.016 82.2933 594.868 82.1151 594.994 81.9897C595.12 81.8642 595.3 81.9688 595.403 82.0423C595.642 82.2218 595.201 82.4181 595.032 82.2981L595.079 82.4001Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.36\n  }, _path178 || (_path178 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M598.097 80.7079C598.157 80.8141 598.251 80.897 598.364 80.9428C598.442 80.9688 598.528 80.9637 598.602 80.9285C598.677 80.8934 598.735 80.8308 598.765 80.7539C598.894 80.5137 598.933 80.3196 598.727 80.1468C598.641 80.0936 598.545 80.0593 598.444 80.0461C598.344 80.0329 598.242 80.0412 598.145 80.0703C598.068 80.1004 598.003 80.1549 597.959 80.2255C597.88 80.3725 597.944 80.4979 598.022 80.6237L598.097 80.7079Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.36\n  }, _path179 || (_path179 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M608.478 79.3132C608.492 78.8574 608.561 78.4049 608.682 77.9653C608.826 77.5952 608.99 77.2334 609.175 76.8818C609.358 76.364 609.504 75.8339 609.613 75.2954C609.711 74.8227 609.923 74.3813 610.232 74.0104C610.36 73.861 610.517 73.7392 610.693 73.6524C610.87 73.5657 611.062 73.5158 611.258 73.5058C611.496 73.5153 611.731 73.5651 611.952 73.6531C612.051 73.7064 612.152 73.7353 612.251 73.7742C612.316 73.7889 612.379 73.8106 612.439 73.8388C612.532 73.889 612.511 73.9285 612.463 74.0161C612.391 74.1752 612.271 74.308 612.12 74.3963C611.869 74.5662 611.65 74.7787 611.472 75.0243C611.29 75.2543 611.1 75.4653 610.933 75.7073L610.435 76.4087C610.289 76.6068 610.136 76.8017 609.991 77.0041C609.845 77.2065 609.728 77.4169 609.599 77.624C609.469 77.8312 609.407 77.9801 609.311 78.1581C609.25 78.2711 609.173 78.3679 609.112 78.4809C609.065 78.5682 609.012 78.6516 608.952 78.7302C608.903 78.8117 608.858 78.8956 608.817 78.9817C608.716 79.1045 608.603 79.2157 608.478 79.3132Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.36\n  }, _path180 || (_path180 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M608.165 76.1778C608.181 76.2559 608.181 76.3506 608.241 76.4013C608.275 76.4266 608.312 76.4466 608.351 76.4606C608.529 76.5091 608.682 76.2452 608.752 76.1152C608.971 75.7425 609.041 75.301 608.948 74.8791C608.914 74.7352 608.847 74.6012 608.753 74.4873C608.659 74.3734 608.54 74.2827 608.405 74.2222C608.033 74.1133 607.652 74.3746 607.414 74.6474C607.176 74.9202 606.958 75.3056 607.062 75.6534C607.091 75.776 607.161 75.8852 607.259 75.9638C607.35 76.0072 607.442 76.0451 607.537 76.077C607.656 76.1409 607.724 76.2578 607.874 76.2581C607.977 76.263 608.079 76.2349 608.165 76.1778Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.36\n  }, _path181 || (_path181 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M609.357 74.0241C609.318 74.02 609.282 74.0036 609.253 73.9775C609.223 73.9514 609.203 73.9167 609.195 73.8785C609.172 73.8411 609.162 73.7971 609.167 73.7535C609.172 73.7099 609.192 73.6693 609.222 73.6381C609.248 73.6094 609.28 73.5865 609.315 73.5711C609.351 73.5558 609.389 73.5482 609.428 73.549C609.467 73.5497 609.505 73.5588 609.54 73.5756C609.574 73.5923 609.605 73.6164 609.63 73.6461C609.657 73.6925 609.672 73.7449 609.674 73.7987C609.676 73.8524 609.664 73.9057 609.639 73.9537C609.614 74.0057 609.573 74.0477 609.521 74.0727C609.469 74.0978 609.41 74.1044 609.354 74.0915L609.357 74.0241Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.36\n  }, _path182 || (_path182 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M603.099 67.0573C603.069 67.1949 603.093 67.3389 603.168 67.4586C603.181 67.494 603.205 67.5248 603.235 67.5472C603.266 67.5695 603.303 67.5824 603.34 67.5844C603.596 67.5817 603.841 67.4878 604.033 67.3196C604.095 67.2611 604.145 67.1909 604.179 67.113C604.214 67.0352 604.232 66.9513 604.234 66.8662C604.213 66.7154 604.169 66.5687 604.103 66.4315C604.057 66.308 604.003 66.1915 603.935 66.0674C603.905 65.9619 603.842 65.8688 603.756 65.8018C603.669 65.7348 603.563 65.6975 603.454 65.6953C603.335 65.7072 603.221 65.748 603.122 65.814C603.023 65.8801 602.942 65.9696 602.885 66.0744C602.822 66.2238 602.796 66.3859 602.809 66.5474C602.82 66.7172 602.801 66.8602 603.099 67.0573Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.36\n  }, _path183 || (_path183 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M603.508 68.2212C603.574 68.1175 603.66 68.0275 603.76 67.956C603.808 67.9819 603.865 67.9362 603.91 67.9893C603.954 68.0423 603.878 68.1836 603.842 68.2442C603.795 68.3245 603.72 68.3843 603.631 68.4116C603.598 68.4192 603.459 68.461 603.488 68.3858L603.508 68.2212Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.36\n  }, _path184 || (_path184 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M604.507 81.3671C604.592 81.5003 604.687 81.6496 604.888 81.6011C604.972 81.5642 605.044 81.5029 605.093 81.4252C605.143 81.3474 605.168 81.2567 605.166 81.1644C605.175 81.0742 605.182 80.9725 605.106 80.9171C605.031 80.8617 604.934 80.8243 604.849 80.7786C604.649 80.6706 604.617 80.3839 604.326 80.4641C604.257 80.4861 604.194 80.5228 604.141 80.5715C604.088 80.6202 604.045 80.6798 604.017 80.7463C603.946 80.9739 604.102 81.1925 604.236 81.356L604.507 81.3671Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.36\n  }, _path185 || (_path185 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M603.087 101.761C603.014 102.018 603.015 102.289 603.088 102.545L603.176 102.593C603.231 102.666 603.302 102.726 603.383 102.77C603.464 102.813 603.553 102.839 603.645 102.845C604.229 102.85 604.434 102.341 604.667 101.901C604.9 101.462 605.292 100.863 604.533 100.735C604.197 100.682 603.635 100.555 603.304 100.73C603.126 100.823 603.134 100.923 603.109 101.091C603.05 101.322 603.036 101.562 603.068 101.798L603.087 101.761Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.36\n  }, _path186 || (_path186 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M606.699 96.7804C606.614 96.64 606.427 96.4046 606.506 96.2102C606.585 96.0159 606.685 96.0477 606.819 95.9814C607.113 95.8338 607.456 95.7264 607.629 96.1222C607.663 96.2281 607.672 96.3404 607.656 96.4505C607.64 96.5605 607.598 96.6654 607.535 96.7569C607.423 96.8971 607.095 97.0595 606.942 96.9112L606.699 96.7804Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.36\n  }, _path187 || (_path187 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M578.305 52.5927C578.565 52.9553 578.577 52.9801 578.987 53.0728C579.293 53.1803 579.621 53.2105 579.942 53.1606C580.377 53.0302 580.493 52.6374 580.749 52.3379C580.848 52.2528 580.923 52.1431 580.967 52.0199C581.01 51.8967 581.02 51.7643 580.996 51.636C580.932 51.2992 580.806 50.9771 580.626 50.6857C580.312 50.241 579.904 49.8708 579.431 49.6011C578.959 49.3315 578.432 49.1691 577.89 49.1254C577.227 49.078 576.42 49.1067 575.92 49.6287C575.705 49.8421 575.552 50.1096 575.476 50.4029C575.4 50.6963 575.405 51.0047 575.49 51.2956C575.598 51.5768 575.772 51.8278 575.997 52.0278C576.222 52.2277 576.492 52.3707 576.784 52.4448L577.201 52.5378C577.366 52.6068 577.524 52.6919 577.673 52.7919C577.853 52.8562 578.055 52.8407 578.305 52.5927Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.36\n  }, _path188 || (_path188 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M579.145 54.3025C579.612 54.1128 579.52 54.1402 579.894 54.2649C580.056 54.3229 580.121 54.2775 580.244 54.3875C580.32 54.4768 580.367 54.5869 580.38 54.7036C580.393 54.8203 580.37 54.938 580.314 55.0415C580.237 55.1856 579.834 55.2567 579.696 55.2554C579.611 55.2587 579.527 55.2368 579.454 55.1924C579.382 55.1481 579.324 55.0833 579.287 55.0061L579.145 54.3025Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.36\n  }, _path189 || (_path189 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M560.655 88.4548C560.9 88.6776 561.203 88.9682 561.588 88.753C561.844 88.6028 561.892 88.1878 561.848 87.9122C561.732 87.4397 561.468 87.0167 561.094 86.7048C560.749 86.4531 560.11 86.6922 559.882 87.0141C559.418 87.6721 560.317 88.637 560.805 88.9691L560.655 88.4548Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.36\n  }, _path190 || (_path190 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M563.604 90.6691C563.5 90.6645 563.172 90.7063 563.085 90.6233C563.037 90.5974 563.067 90.5222 563.039 90.4783C562.989 90.4061 562.954 90.3239 562.938 90.2372C562.922 90.1505 562.924 90.0613 562.945 89.9757C562.994 89.8021 563.098 89.6493 563.242 89.541C563.386 89.4327 563.562 89.3749 563.742 89.3766C563.859 89.3603 563.979 89.3874 564.078 89.4528C564.177 89.5181 564.248 89.6173 564.28 89.7318C564.322 89.885 564.306 90.0485 564.235 90.1906C564.164 90.3328 564.042 90.4435 563.894 90.5013L563.604 90.6691Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.36\n  }, _path191 || (_path191 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M617.6 79.6136C617.988 80.088 618.521 80.4223 619.117 80.5656C619.496 80.6819 619.971 80.8757 620.323 80.5877C621.146 79.9119 619.663 78.2531 619.161 77.7755C618.727 77.3575 618.21 77.0356 617.644 76.8307C617.305 76.7214 616.561 76.6343 616.239 76.8543C615.824 77.1375 615.827 77.7264 616.011 78.1167C616.413 79.0622 617.407 79.3967 618.071 80.0859L617.6 79.6136Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.36\n  }, _path192 || (_path192 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M617.238 79.9946C617.139 80.2157 617.072 80.4495 617.039 80.6893C617.049 80.8189 617.063 81.0232 617.169 81.1241C617.244 81.173 617.33 81.2022 617.42 81.2089C617.509 81.2156 617.599 81.1997 617.68 81.1625C617.742 81.1449 617.798 81.1123 617.844 81.0675C617.89 81.0228 617.923 80.9673 617.942 80.9062C617.954 80.8104 617.879 80.686 617.839 80.603C617.764 80.4508 617.671 80.3078 617.562 80.1768C617.519 80.1079 617.467 80.0447 617.409 79.9883C617.308 79.9049 617.227 79.9599 617.124 79.941L617.238 79.9946Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.36\n  }, _path193 || (_path193 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M621.47 82.9041L621.758 82.6945C621.86 82.7752 622.013 82.8028 622.027 82.9525C622.013 83.095 621.951 83.2286 621.852 83.332C621.802 83.3831 621.736 83.416 621.665 83.4253C621.594 83.4346 621.522 83.4198 621.46 83.3834C621.307 83.3012 621.323 83.1236 621.372 82.9715L621.47 82.9041Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.36\n  }, _path194 || (_path194 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M620.273 99.6494C620.314 99.712 620.375 99.7595 620.445 99.7849C620.515 99.8104 620.592 99.8123 620.664 99.7905C620.786 99.762 620.893 99.6883 620.964 99.5842C621.034 99.48 621.062 99.3531 621.043 99.229C620.985 98.8697 620.696 98.3498 620.317 98.2407C620.081 98.1718 619.682 98.3177 619.692 98.6037C619.692 98.7648 619.71 98.9254 619.748 99.0821C619.845 99.3128 620.016 99.5048 620.234 99.6281L620.273 99.6494Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.36\n  }, _path195 || (_path195 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M555.187 50.7274C555.227 50.8765 555.229 50.9469 555.343 51.0408C555.461 51.1574 555.62 51.2235 555.787 51.2251C556.175 51.1395 556.523 50.9223 556.77 50.6102C556.87 50.5075 556.945 50.383 556.989 50.2466C557.032 50.1101 557.044 49.9654 557.022 49.8237C557.009 49.658 556.96 49.4971 556.879 49.3518C556.798 49.2065 556.687 49.0801 556.554 48.9811C556.432 48.8696 556.277 48.7993 556.113 48.7802C555.949 48.761 555.783 48.794 555.638 48.8744C555.33 49.0174 555.054 49.2227 554.829 49.4774C554.748 49.5791 554.693 49.6983 554.668 49.8253C554.643 49.9523 554.648 50.0835 554.683 50.2082C554.734 50.4581 554.873 50.8241 555.187 50.7274Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.36\n  }, _path196 || (_path196 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M557.415 48.9927C557.33 48.947 557.231 48.8938 557.253 48.7997C557.291 48.7224 557.345 48.6536 557.411 48.5976C557.477 48.5416 557.553 48.4995 557.636 48.4738C557.766 48.4439 557.902 48.4628 558.019 48.5271C558.083 48.5925 558.121 48.6789 558.125 48.7701C558.139 48.8362 558.132 48.9051 558.105 48.9669C558.077 49.0288 558.031 49.0804 557.973 49.1144C557.889 49.1607 557.7 49.2885 557.611 49.2039L557.415 48.9927Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.36\n  }, _path197 || (_path197 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M543.041 50.2091C543.157 50.2937 543.299 50.3341 543.442 50.3232C543.703 50.3042 543.956 50.2259 544.181 50.0942C544.488 49.9395 544.737 49.6904 544.892 49.3834C544.927 49.2603 544.926 49.1295 544.889 49.007C544.851 48.8846 544.779 48.7756 544.68 48.6935C544.423 48.5196 544.112 48.4425 543.802 48.476C543.526 48.5138 543.262 48.6172 543.034 48.7777C542.805 48.9382 542.619 49.151 542.489 49.3983C542.241 49.9752 543.047 50.4347 543.041 50.2091Z\",\n    fill: \"white\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      mixBlendMode: \"soft-light\"\n    },\n    opacity: 0.36\n  }, _path198 || (_path198 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M546.254 48.8518C546.169 48.8821 546.077 48.8883 545.989 48.8696C545.996 48.7679 545.922 48.6953 545.936 48.5895C545.961 48.4865 546.025 48.3972 546.114 48.3393C546.169 48.299 546.234 48.2741 546.302 48.2671C546.37 48.2601 546.438 48.2712 546.5 48.2993C546.641 48.3753 546.647 48.4401 546.644 48.5879C546.641 48.7357 546.651 48.7231 546.539 48.7829C546.471 48.826 546.399 48.8618 546.324 48.8898L546.254 48.8518Z\",\n    fill: \"white\"\n  })))), _path199 || (_path199 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M599.482 100.855C599.925 101.094 600.146 101.552 599.971 101.877C599.796 102.202 599.293 102.27 598.849 102.031C598.405 101.792 598.188 101.336 598.363 101.011C598.538 100.686 599.038 100.617 599.482 100.855Z\",\n    fill: \"url(#paint50_linear_110_3490)\"\n  })), _path200 || (_path200 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M599.415 100.98C599.766 101.168 599.937 101.527 599.799 101.784C599.66 102.041 599.267 102.095 598.916 101.907C598.566 101.718 598.394 101.36 598.533 101.102C598.671 100.845 599.068 100.793 599.415 100.98Z\",\n    fill: \"white\"\n  })), _path201 || (_path201 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M610.455 76.4596C610.657 76.5448 610.818 76.7059 610.902 76.9082C610.987 77.1105 610.989 77.3379 610.908 77.5416C610.782 77.7216 610.592 77.8452 610.376 77.8859C610.161 77.9267 609.938 77.8813 609.755 77.7595C609.553 77.6742 609.392 77.513 609.307 77.3105C609.222 77.108 609.219 76.8803 609.3 76.676C609.426 76.4962 609.618 76.3728 609.834 76.3324C610.049 76.292 610.273 76.3377 610.455 76.4596Z\",\n    fill: \"url(#paint51_linear_110_3490)\"\n  })), _path202 || (_path202 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M610.38 76.5981C610.54 76.6653 610.666 76.7921 610.733 76.9514C610.8 77.1106 610.802 77.2897 610.738 77.4504C610.639 77.5918 610.488 77.6889 610.319 77.7208C610.149 77.7527 609.973 77.7169 609.83 77.621C609.671 77.5539 609.544 77.4271 609.477 77.2678C609.41 77.1085 609.409 76.9294 609.472 76.7688C609.571 76.6273 609.722 76.5302 609.891 76.4983C610.061 76.4664 610.237 76.5023 610.38 76.5981Z\",\n    fill: \"white\"\n  })), _path203 || (_path203 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M604.787 88.6255C605.029 88.1761 604.865 87.6176 604.42 87.3781C603.975 87.1386 603.418 87.3089 603.176 87.7583C602.934 88.2078 603.099 88.7663 603.544 89.0057C603.988 89.2452 604.545 89.075 604.787 88.6255Z\",\n    fill: \"url(#paint52_linear_110_3490)\"\n  })), _path204 || (_path204 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M604.327 87.5504C604.495 87.6429 604.62 87.7981 604.674 87.9822C604.728 88.1663 604.706 88.3642 604.615 88.5327C604.525 88.702 604.371 88.8287 604.188 88.885C604.004 88.9414 603.806 88.9228 603.636 88.8334C603.468 88.7409 603.344 88.5857 603.29 88.4016C603.236 88.2175 603.257 88.0196 603.349 87.8511C603.439 87.6818 603.593 87.5551 603.776 87.4988C603.959 87.4424 604.157 87.461 604.327 87.5504Z\",\n    fill: \"white\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      mixBlendMode: \"screen\"\n    },\n    d: \"M604.807 82.611C605.502 82.6966 606.173 82.9194 606.781 83.2663C607.389 83.6132 607.922 84.0774 608.349 84.6319C608.777 85.1865 609.09 85.8204 609.27 86.4969C609.451 87.1733 609.495 87.8789 609.401 88.5726C609.223 89.9811 608.496 91.2627 607.38 92.1393C606.263 93.0159 604.846 93.417 603.435 93.2556C602.74 93.1695 602.07 92.9466 601.462 92.5995C600.854 92.2525 600.321 91.7883 599.894 91.2338C599.466 90.6793 599.153 90.0456 598.973 89.3693C598.792 88.6931 598.747 87.9876 598.841 87.294C599.019 85.8854 599.745 84.6039 600.862 83.7273C601.979 82.8506 603.396 82.4496 604.807 82.611Z\",\n    fill: \"url(#paint53_radial_110_3490)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      mixBlendMode: \"screen\"\n    },\n    d: \"M573.391 42.1687C573.945 42.2371 574.481 42.4148 574.966 42.6916C575.451 42.9683 575.877 43.3386 576.218 43.7809C576.559 44.2233 576.809 44.7289 576.954 45.2686C577.098 45.8082 577.134 46.3712 577.059 46.9248C576.916 48.049 576.336 49.0714 575.444 49.7708C574.552 50.4703 573.421 50.7904 572.295 50.662C571.741 50.593 571.206 50.4148 570.721 50.1377C570.235 49.8605 569.81 49.49 569.469 49.0474C569.128 48.6049 568.878 48.0991 568.734 47.5594C568.59 47.0196 568.554 46.4567 568.628 45.903C568.772 44.7793 569.352 43.7573 570.243 43.0584C571.135 42.3594 572.265 42.0398 573.391 42.1687Z\",\n    fill: \"url(#paint54_radial_110_3490)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      mixBlendMode: \"screen\"\n    },\n    d: \"M537.221 48.6977C537.775 48.7661 538.311 48.9438 538.796 49.2205C539.281 49.4973 539.707 49.8675 540.048 50.3099C540.389 50.7522 540.639 51.2579 540.784 51.7976C540.928 52.3372 540.964 52.9002 540.889 53.4538C540.748 54.5786 540.168 55.6021 539.276 56.3018C538.384 57.0016 537.252 57.3211 536.125 57.1909C535.571 57.1225 535.036 56.9448 534.55 56.6681C534.065 56.3913 533.64 56.0211 533.298 55.5787C532.957 55.1363 532.707 54.6307 532.563 54.091C532.418 53.5514 532.382 52.9884 532.457 52.4348C532.6 51.3103 533.18 50.2874 534.071 49.5878C534.963 48.8882 536.095 48.5684 537.221 48.6977Z\",\n    fill: \"url(#paint55_radial_110_3490)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      mixBlendMode: \"screen\"\n    },\n    d: \"M551.478 83.7761C551.764 83.8114 552.041 83.9032 552.292 84.0461C552.542 84.1891 552.762 84.3803 552.939 84.6088C553.115 84.8373 553.244 85.0984 553.319 85.3772C553.394 85.656 553.412 85.9468 553.374 86.2328C553.3 86.8141 553 87.3429 552.539 87.7047C552.079 88.0666 551.494 88.2322 550.912 88.1657C550.625 88.1302 550.348 88.0382 550.098 87.895C549.847 87.7518 549.627 87.5603 549.451 87.3315C549.275 87.1027 549.146 86.8413 549.071 86.5623C548.997 86.2833 548.978 85.9923 549.017 85.7061C549.092 85.1257 549.391 84.5978 549.852 84.2366C550.312 83.8754 550.896 83.71 551.478 83.7761Z\",\n    fill: \"url(#paint56_radial_110_3490)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      mixBlendMode: \"screen\"\n    },\n    d: \"M610.17 75.4387C610.439 75.4709 610.699 75.5563 610.935 75.6898C611.17 75.8234 611.377 76.0023 611.543 76.2164C611.709 76.4305 611.83 76.6755 611.901 76.937C611.971 77.1985 611.989 77.4714 611.953 77.7398C611.885 78.2834 611.605 78.778 611.174 79.1159C610.742 79.4539 610.195 79.6077 609.651 79.544C609.383 79.5112 609.125 79.4255 608.891 79.2921C608.656 79.1586 608.451 78.9799 608.286 78.7665C608.121 78.553 608.001 78.3089 607.931 78.0484C607.861 77.788 607.844 77.5162 607.88 77.249C607.947 76.7069 608.225 76.2131 608.654 75.8743C609.082 75.5356 609.627 75.3791 610.17 75.4387Z\",\n    fill: \"url(#paint57_radial_110_3490)\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      mixBlendMode: \"screen\"\n    },\n    d: \"M599.228 99.7708C599.496 99.8038 599.754 99.8897 599.988 100.023C600.223 100.157 600.428 100.336 600.593 100.55C600.758 100.764 600.878 101.008 600.948 101.269C601.017 101.529 601.034 101.801 600.998 102.069C600.929 102.612 600.649 103.106 600.219 103.444C599.789 103.782 599.242 103.936 598.699 103.874C598.431 103.841 598.172 103.755 597.937 103.622C597.703 103.488 597.497 103.309 597.332 103.095C597.167 102.881 597.046 102.637 596.977 102.376C596.907 102.115 596.89 101.843 596.926 101.575C596.995 101.032 597.275 100.538 597.706 100.2C598.137 99.8622 598.684 99.708 599.228 99.7708Z\",\n    fill: \"url(#paint58_radial_110_3490)\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint0_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(276.007 275.972) scale(276.007 275.972)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.81,\n    stopColor: \"#008BC4\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.979167,\n    stopOpacity: 0\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint1_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(221.372 192.218) scale(352.047 352.003)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#7C83FF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.84,\n    stopColor: \"#482088\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.95,\n    stopColor: \"#403B77\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#4D79D1\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint2_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(425.22 481.752) rotate(-32.6268) scale(126.439 60.6876)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#2C6AFF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopOpacity: 0\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint3_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(269.268 332.713) rotate(151.643) scale(52.3805)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#F4DBEE\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#D1BDE5\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint4_linear_110_3490\",\n    x1: 291.577,\n    y1: 337.249,\n    x2: 250.117,\n    y2: 343.2,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#AA367C\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#4A2FBD\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint5_linear_110_3490\",\n    x1: 329.052,\n    y1: 316.685,\n    x2: 274.373,\n    y2: 346.197,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#9579A7\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"white\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint6_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(335.19 504.066) rotate(151.643) scale(55.8371)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#F4F1FF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#D1BDE5\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint7_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(429.565 303.374) rotate(151.643) scale(57.1759)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#F4DBEE\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#D1BDE5\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint8_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(462.568 446.789) rotate(151.643) scale(67.3269)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#F4F1FF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#D1BDE5\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint9_linear_110_3490\",\n    x1: 525.451,\n    y1: 459.275,\n    x2: 447.527,\n    y2: 470.638,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#AA367C\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#4A2FBD\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint10_linear_110_3490\",\n    x1: 407.466,\n    y1: 509.787,\n    x2: 334.769,\n    y2: 520.482,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#AA367C\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#4A2FBD\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint11_linear_110_3490\",\n    x1: 441.315,\n    y1: 314.65,\n    x2: 395.787,\n    y2: 321.181,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#AA367C\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#4A2FBD\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint12_linear_110_3490\",\n    x1: 508.892,\n    y1: 353.989,\n    x2: 335.02,\n    y2: 447.833,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"white\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9579A7\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint13_linear_110_3490\",\n    x1: 351.441,\n    y1: 279.093,\n    x2: 256.552,\n    y2: 103.285,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#D1BDE5\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"white\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint14_linear_110_3490\",\n    x1: 362.453,\n    y1: 170.661,\n    x2: 185.061,\n    y2: 196.392,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#AA367C\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#4A2FBD\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint15_linear_110_3490\",\n    x1: 417.902,\n    y1: 176.17,\n    x2: 238.643,\n    y2: 272.921,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"white\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9579A7\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint16_linear_110_3490\",\n    x1: 398.339,\n    y1: 241.982,\n    x2: 347.985,\n    y2: 148.685,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#D1BDE5\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#F4DBEE\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint17_linear_110_3490\",\n    x1: 410.965,\n    y1: 542.749,\n    x2: 370.063,\n    y2: 564.825,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"white\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9579A7\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint18_linear_110_3490\",\n    x1: 535.63,\n    y1: 489.793,\n    x2: 497.11,\n    y2: 510.584,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"white\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9579A7\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint19_linear_110_3490\",\n    x1: 357.554,\n    y1: 202.526,\n    x2: 190.46,\n    y2: 227.008,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#5A30B2\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#AA367C\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#4A2FBD\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint20_linear_110_3490\",\n    x1: 508.65,\n    y1: 285.856,\n    x2: 482.104,\n    y2: 300.184,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"white\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9579A7\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint21_linear_110_3490\",\n    x1: 213.606,\n    y1: 329.625,\n    x2: 197.472,\n    y2: 338.333,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#9579A7\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"white\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint22_linear_110_3490\",\n    x1: 371.166,\n    y1: 325.643,\n    x2: 349.432,\n    y2: 328.801,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#AA367C\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#4A2FBD\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint23_linear_110_3490\",\n    x1: 670.171,\n    y1: 121.012,\n    x2: 630.746,\n    y2: 99.7859,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopOpacity: 0\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#106D90\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint24_linear_110_3490\",\n    x1: 644.653,\n    y1: 87.425,\n    x2: 618.257,\n    y2: 73.2136,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#A43440\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#C73634\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint25_linear_110_3490\",\n    x1: 625.15,\n    y1: 123.649,\n    x2: 598.754,\n    y2: 109.437,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#A43440\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#C73634\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint26_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(564.324 61.5728) rotate(-61.702) scale(34.063 61.4731)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#F4BAB3\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.77,\n    stopColor: \"#8D6FC7\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.96,\n    stopColor: \"#B695E5\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint27_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(535.84 52.3714) rotate(-61.702) scale(9.15601 8.1686)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.02,\n    stopColor: \"#AB5E75\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.25,\n    stopColor: \"#9F577B\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.67,\n    stopColor: \"#7F458C\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.99,\n    stopColor: \"#61349C\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint28_linear_110_3490\",\n    x1: 537.636,\n    y1: 53.3353,\n    x2: 534.338,\n    y2: 51.5598,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#FFFF18\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#FF7400\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint29_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(607.061 91.0251) rotate(-61.702) scale(16.1744 29.336)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.02,\n    stopColor: \"#8881BC\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.29,\n    stopColor: \"#8375B7\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.77,\n    stopColor: \"#7555AA\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.99,\n    stopColor: \"#6D43A3\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint30_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(567.39 69.5773) rotate(-61.702) scale(17.199 17.0304)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.02,\n    stopColor: \"#8881BC\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.29,\n    stopColor: \"#8375B7\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.77,\n    stopColor: \"#7555AA\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.99,\n    stopColor: \"#6D43A3\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint31_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(552.714 62.4888) rotate(-61.702) scale(21.3977 35.3445)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.02,\n    stopColor: \"#725EB0\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.38,\n    stopColor: \"#6D52AA\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.99,\n    stopColor: \"#61349C\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint32_linear_110_3490\",\n    x1: 576.192,\n    y1: 73.8751,\n    x2: 553.134,\n    y2: 61.4604,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#FFFF29\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#FF7E59\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint33_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(628.83 102.43) rotate(-61.702) scale(6.35389 11.5242)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.02,\n    stopColor: \"#725EB0\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.38,\n    stopColor: \"#6D52AA\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.99,\n    stopColor: \"#61349C\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint34_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(548.011 58.98) rotate(-61.702) scale(11.7094 11.5945)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.02,\n    stopColor: \"#8881BC\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.29,\n    stopColor: \"#8375B7\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.77,\n    stopColor: \"#7555AA\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.99,\n    stopColor: \"#6D43A3\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint35_linear_110_3490\",\n    x1: 596.113,\n    y1: 85.6105,\n    x2: 594.723,\n    y2: 84.8619,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#8DC7FF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.32,\n    stopColor: \"#5C4D86\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint36_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(595.853 85.627) rotate(-61.702) scale(0.631788 0.625595)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.02,\n    stopColor: \"#8881BC\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.29,\n    stopColor: \"#8375B7\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.77,\n    stopColor: \"#7555AA\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#6D43A3\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint37_linear_110_3490\",\n    x1: 592.683,\n    y1: 83.7635,\n    x2: 591.29,\n    y2: 83.0134,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#8DC7FF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.32,\n    stopColor: \"#5C4D86\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint38_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(592.409 83.7722) rotate(-61.702) scale(0.631788 0.625593)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.02,\n    stopColor: \"#8881BC\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.29,\n    stopColor: \"#8375B7\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.77,\n    stopColor: \"#7555AA\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#6D43A3\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint39_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(562.695 82.7423) rotate(-61.702) scale(0.631788 0.625593)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#F4BAB3\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#8D6FC7\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint40_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(553.483 76.1876) rotate(-61.702) scale(0.631788 0.625595)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#F4BAB3\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#8D6FC7\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint41_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(574.047 80.3443) rotate(-61.702) scale(0.631788 0.625595)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#F4BAB3\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#8D6FC7\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint42_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(580.766 69.8823) rotate(-61.702) scale(0.631788 0.625593)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#F4BAB3\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#8D6FC7\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint43_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(578.232 58.9855) rotate(-61.702) scale(0.631788 0.625595)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#F4BAB3\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#8D6FC7\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint44_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(565.253 53.4585) rotate(-61.702) scale(0.631788 0.625595)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#F4BAB3\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#8D6FC7\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint45_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(555.886 55.5799) rotate(-61.702) scale(0.631788 0.625595)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#F4BAB3\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#8D6FC7\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint46_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(549.85 64.3909) rotate(-61.702) scale(0.631788 0.625593)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#F4BAB3\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#8D6FC7\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint47_linear_110_3490\",\n    x1: 637.732,\n    y1: 100.28,\n    x2: 608.403,\n    y2: 84.4889,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#A43411\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#C73634\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint48_linear_110_3490\",\n    x1: 572.922,\n    y1: 47.4057,\n    x2: 573.868,\n    y2: 45.648,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#FFFF18\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#FF7400\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint49_linear_110_3490\",\n    x1: 551.023,\n    y1: 86.9429,\n    x2: 551.913,\n    y2: 85.2898,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#FFFF18\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#FF7400\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint50_linear_110_3490\",\n    x1: 599.971,\n    y1: 101.877,\n    x2: 598.363,\n    y2: 101.011,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#8DC7FF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.32,\n    stopColor: \"#5C4D86\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint51_linear_110_3490\",\n    x1: 610.913,\n    y1: 77.5447,\n    x2: 609.306,\n    y2: 76.679,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#8DC7FF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.32,\n    stopColor: \"#5C4D86\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint52_linear_110_3490\",\n    x1: 604.787,\n    y1: 88.6255,\n    x2: 603.179,\n    y2: 87.7598,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#8DC7FF\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.32,\n    stopColor: \"#5C4D86\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint53_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(604.135 88.0346) rotate(-82.7944) scale(5.38395 5.317)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#003CEE\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.06,\n    stopColor: \"#0036D6\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.2,\n    stopColor: \"#00289E\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.34,\n    stopColor: \"#001C6D\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.48,\n    stopColor: \"#001246\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.62,\n    stopColor: \"#000A27\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.75,\n    stopColor: \"#000412\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.88,\n    stopColor: \"#000104\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint54_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(572.812 46.3761) rotate(-82.7943) scale(4.29561 4.24218)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#FF9A00\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.09,\n    stopColor: \"#D68100\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.23,\n    stopColor: \"#9E5F00\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.36,\n    stopColor: \"#6E4200\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.5,\n    stopColor: \"#462A00\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.63,\n    stopColor: \"#271800\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.76,\n    stopColor: \"#120B00\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.89,\n    stopColor: \"#040300\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint55_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(536.693 52.9221) rotate(-82.7943) scale(4.29561 4.24218)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#FF9A00\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.09,\n    stopColor: \"#D68100\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.23,\n    stopColor: \"#9E5F00\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.36,\n    stopColor: \"#6E4200\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.5,\n    stopColor: \"#462A00\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.63,\n    stopColor: \"#271800\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.76,\n    stopColor: \"#120B00\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.89,\n    stopColor: \"#040300\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint56_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(551.257 86.0537) rotate(-82.7944) scale(2.22003 2.19243)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#FF9A00\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.09,\n    stopColor: \"#D68100\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.23,\n    stopColor: \"#9E5F00\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.36,\n    stopColor: \"#6E4200\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.5,\n    stopColor: \"#462A00\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.63,\n    stopColor: \"#271800\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.76,\n    stopColor: \"#120B00\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.89,\n    stopColor: \"#040300\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint57_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(609.889 77.5569) rotate(-82.7944) scale(2.07556 2.04976)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#003CEE\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.06,\n    stopColor: \"#0036D6\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.2,\n    stopColor: \"#00289E\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.34,\n    stopColor: \"#001C6D\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.48,\n    stopColor: \"#001246\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.62,\n    stopColor: \"#000A27\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.75,\n    stopColor: \"#000412\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.88,\n    stopColor: \"#000104\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint58_radial_110_3490\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(599.009 101.965) rotate(-82.7944) scale(2.07556 2.04975)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#003CEE\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.06,\n    stopColor: \"#0036D6\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.2,\n    stopColor: \"#00289E\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.34,\n    stopColor: \"#001C6D\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.48,\n    stopColor: \"#001246\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.62,\n    stopColor: \"#000A27\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.75,\n    stopColor: \"#000412\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.88,\n    stopColor: \"#000104\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1\n  })), /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_110_3490\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 552,\n    height: 562,\n    fill: \"white\"\n  })), /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip1_110_3490\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 52.3698,\n    height: 153.935,\n    fill: \"white\",\n    transform: \"translate(521 73.1113) rotate(-61.702)\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgHeaderImg);\nexport default __webpack_public_path__ + \"static/media/header-img.84bf93eb20488a753440bf83d27db7bb.svg\";\nexport { ForwardRef as ReactComponent };","var _excluded = [\"color\", \"size\", \"title\", \"className\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ArrowRightCircle = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      title = _ref.title,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color,\n    className: ['bi', 'bi-arrow-right-circle', className].filter(Boolean).join(' ')\n  }, rest), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8m15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0M4.5 7.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5z\"\n  }));\n});\nArrowRightCircle.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  title: PropTypes.string,\n  className: PropTypes.string\n};\nArrowRightCircle.defaultProps = {\n  color: 'currentColor',\n  size: '1em',\n  title: null,\n  className: ''\n};\nexport default ArrowRightCircle;","import { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport headerImg from \"../assets/img/header-img.svg\";\r\nimport { ArrowRightCircle } from 'react-bootstrap-icons';\r\nimport 'animate.css';\r\nimport TrackVisibility from 'react-on-screen';\r\n\r\nexport const Banner = () => {\r\n  const [loopNum, setLoopNum] = useState(0);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [text, setText] = useState('');\r\n  const [delta, setDelta] = useState(300 - Math.random() * 100);\r\n  const [index, setIndex] = useState(1);\r\n  const toRotate = [ \"Web Developer\", \"Devops Engineer\", \"Software Developer\" ];\r\n  const period = 2000;\r\n\r\n  useEffect(() => {\r\n    let ticker = setInterval(() => {\r\n      tick();\r\n    }, delta);\r\n\r\n    return () => { clearInterval(ticker) };\r\n  }, [text])\r\n\r\n  const tick = () => {\r\n    let i = loopNum % toRotate.length;\r\n    let fullText = toRotate[i];\r\n    let updatedText = isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1);\r\n\r\n    setText(updatedText);\r\n\r\n    if (isDeleting) {\r\n      setDelta(prevDelta => prevDelta / 2);\r\n    }\r\n\r\n    if (!isDeleting && updatedText === fullText) {\r\n      setIsDeleting(true);\r\n      setIndex(prevIndex => prevIndex - 1);\r\n      setDelta(period);\r\n    } else if (isDeleting && updatedText === '') {\r\n      setIsDeleting(false);\r\n      setLoopNum(loopNum + 1);\r\n      setIndex(1);\r\n      setDelta(500);\r\n    } else {\r\n      setIndex(prevIndex => prevIndex + 1);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className=\"banner\" id=\"home\">\r\n      <Container>\r\n        <Row className=\"aligh-items-center\">\r\n          <Col xs={12} md={6} xl={7}>\r\n            <TrackVisibility>\r\n              {({ isVisible }) =>\r\n              <div className={isVisible ? \"animate__animated animate__fadeIn\" : \"\"}>\r\n                <span className=\"tagline\">Welcome to my Portfolio</span>\r\n                <h1>{`Hi! I'm Manav`} <span className=\"txt-rotate\" dataPeriod=\"1000\" data-rotate='[ \"Web Developer\", \"Devops Engineer\", \"Software Developer\" ]'><span className=\"wrap\">{text}</span></span></h1>\r\n                  <p>I am a passionate software developer currently in my third year of university, where I am honing my skills in various programming languages and technologies. With a strong foundation in software development and a commitment to continuous learning, I am eager to apply my knowledge in a real-world setting.</p>\r\n                  <button onClick={() => console.log('connect')}>Let’s Connect <ArrowRightCircle size={25} /></button>\r\n              </div>}\r\n            </TrackVisibility>\r\n          </Col>\r\n          <Col xs={12} md={6} xl={5}>\r\n            <TrackVisibility>\r\n              {({ isVisible }) =>\r\n                <div className={isVisible ? \"animate__animated animate__zoomIn\" : \"\"}>\r\n                  <img src={headerImg} alt=\"Header Img\"/>\r\n                </div>}\r\n            </TrackVisibility>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </section>\r\n  )\r\n}","var _path, _path2, _defs;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgMeter1(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 204,\n    height: 204,\n    viewBox: \"0 0 204 204\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M187.639 69.9021C193.092 67.8586 199.226 70.6143 200.696 76.2484C206.238 97.4863 204.802 120.051 196.436 140.546C186.737 164.31 168.435 183.543 145.182 194.409C121.928 205.275 95.4333 206.975 70.9821 199.169C46.5309 191.364 25.9211 174.628 13.2642 152.299C0.607328 129.97 -3.16618 103.69 2.6965 78.7016C8.55918 53.7134 23.627 31.854 44.8941 17.4842C66.1612 3.11439 92.0641 -2.7094 117.435 1.17464C139.317 4.52444 159.415 14.8827 174.791 30.5466C178.869 34.702 178.083 41.3805 173.529 45.009C168.975 48.6374 162.385 47.8272 158.195 43.7832C146.212 32.2155 130.877 24.5642 114.244 22.0179C94.1181 18.9368 73.5701 23.5566 56.6994 34.9558C39.8288 46.355 27.8758 63.6955 23.2251 83.518C18.5744 103.34 21.5679 124.188 31.6082 141.901C41.6486 159.614 57.9979 172.89 77.3943 179.082C96.7908 185.274 117.809 183.925 136.255 175.305C154.701 166.686 169.219 151.429 176.914 132.578C183.273 116.999 184.584 99.9117 180.815 83.688C179.497 78.0164 182.187 71.9457 187.639 69.9021Z\",\n    fill: \"url(#paint0_linear_16_339)\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M66.08 99.16C66.08 103.804 69.32 107.512 74.036 107.512C74.648 107.512 75.08 107.44 75.332 107.296L69.896 115H77.528L83.072 106.18C84.476 103.912 85.376 101.32 85.376 98.98C85.376 93.724 81.308 89.8 75.728 89.8C70.256 89.8 66.08 93.76 66.08 99.16ZM72.416 98.908C72.416 97.072 73.892 95.668 75.764 95.668C77.636 95.668 79.076 97.108 79.076 98.944C79.076 100.78 77.636 102.184 75.764 102.184C73.892 102.184 72.416 100.744 72.416 98.908ZM94.3971 104.92C94.9371 104.056 95.9811 103.372 97.3131 103.372C99.1491 103.372 100.481 104.668 100.481 106.432C100.481 108.196 99.1491 109.6 97.3131 109.6C95.4051 109.6 94.3611 108.34 94.2531 107.224H87.9171C88.0251 112.228 91.6971 115.504 97.4211 115.504C102.785 115.504 106.889 111.508 106.889 106.108C106.889 101.644 103.685 97.936 98.9691 97.936C97.4211 97.936 96.0531 98.332 94.8651 99.088L95.3331 95.92H105.161V90.304H90.3651L88.5291 103.696L94.3971 104.92ZM121.357 96.028C121.357 92.608 118.585 89.944 115.021 89.944C111.457 89.944 108.685 92.608 108.685 96.028C108.685 99.448 111.457 102.112 115.021 102.112C118.585 102.112 121.357 99.448 121.357 96.028ZM117.109 96.028C117.109 97.288 116.209 98.152 115.021 98.152C113.833 98.152 112.933 97.288 112.933 96.028C112.933 94.768 113.833 93.904 115.021 93.904C116.209 93.904 117.109 94.768 117.109 96.028ZM134.857 90.268H129.349L110.989 115H116.497L134.857 90.268ZM124.489 109.24C124.489 112.66 127.261 115.324 130.825 115.324C134.389 115.324 137.161 112.66 137.161 109.24C137.161 105.82 134.389 103.156 130.825 103.156C127.261 103.156 124.489 105.82 124.489 109.24ZM128.737 109.24C128.737 107.98 129.637 107.116 130.825 107.116C132.013 107.116 132.913 107.98 132.913 109.24C132.913 110.5 132.013 111.364 130.825 111.364C129.637 111.364 128.737 110.5 128.737 109.24Z\",\n    fill: \"white\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_16_339\",\n    x1: -12.4348,\n    y1: 91.2145,\n    x2: 228.124,\n    y2: 92.098,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#AA367C\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#4A2FBD\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgMeter1);\nexport default __webpack_public_path__ + \"static/media/meter1.c4085ff859afbd8488e9da47d4953850.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _defs;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgMeter2(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 204,\n    height: 204,\n    viewBox: \"0 0 204 204\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M187.639 69.9021C193.092 67.8586 199.226 70.6143 200.696 76.2484C206.238 97.4863 204.802 120.051 196.436 140.546C186.737 164.31 168.435 183.543 145.182 194.409C121.928 205.275 95.4333 206.975 70.9821 199.169C46.5309 191.364 25.9211 174.628 13.2642 152.299C0.607328 129.97 -3.16618 103.69 2.6965 78.7016C8.55918 53.7134 23.627 31.854 44.8941 17.4842C66.1612 3.11439 92.0641 -2.7094 117.435 1.17464C139.317 4.52444 159.415 14.8827 174.791 30.5466C178.869 34.702 178.083 41.3805 173.529 45.009C168.975 48.6374 162.385 47.8272 158.195 43.7832C146.212 32.2155 130.877 24.5642 114.244 22.0179C94.1181 18.9368 73.5701 23.5566 56.6994 34.9558C39.8288 46.355 27.8758 63.6955 23.2251 83.518C18.5744 103.34 21.5679 124.188 31.6082 141.901C41.6486 159.614 57.9979 172.89 77.3943 179.082C96.7908 185.274 117.809 183.925 136.255 175.305C154.701 166.686 169.219 151.429 176.914 132.578C183.273 116.999 184.584 99.9117 180.815 83.688C179.497 78.0164 182.187 71.9457 187.639 69.9021Z\",\n    fill: \"url(#paint0_linear_16_344)\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M75.656 89.8C71.048 89.8 67.16 92.644 67.16 96.964C67.16 99.016 68.276 100.636 69.968 101.644C68.06 102.616 66.08 104.668 66.08 107.548C66.08 112.552 70.652 115.504 75.656 115.504C80.66 115.504 85.232 112.552 85.232 107.548C85.232 104.668 83.252 102.616 81.344 101.644C83.036 100.636 84.152 99.016 84.152 96.964C84.152 92.644 80.264 89.8 75.656 89.8ZM78.752 107.188C78.752 108.88 77.492 110.104 75.656 110.104C73.82 110.104 72.56 108.88 72.56 107.188C72.56 105.568 73.82 104.308 75.656 104.308C77.492 104.308 78.752 105.568 78.752 107.188ZM75.656 95.056C77.096 95.056 78.212 96.028 78.212 97.432C78.212 98.836 77.132 99.808 75.656 99.808C74.18 99.808 73.1 98.836 73.1 97.432C73.1 96.028 74.216 95.056 75.656 95.056ZM109.525 102.652C109.525 95.848 105.637 89.8 98.5807 89.8C91.4887 89.8 87.6007 95.848 87.6007 102.652C87.6007 109.456 91.4887 115.504 98.5807 115.504C105.637 115.504 109.525 109.456 109.525 102.652ZM102.829 102.652C102.829 106 101.533 109.276 98.5807 109.276C95.5927 109.276 94.2967 106 94.2967 102.652C94.2967 99.304 95.5927 96.028 98.5807 96.028C101.533 96.028 102.829 99.304 102.829 102.652ZM124.381 96.028C124.381 92.608 121.609 89.944 118.045 89.944C114.481 89.944 111.709 92.608 111.709 96.028C111.709 99.448 114.481 102.112 118.045 102.112C121.609 102.112 124.381 99.448 124.381 96.028ZM120.133 96.028C120.133 97.288 119.233 98.152 118.045 98.152C116.857 98.152 115.957 97.288 115.957 96.028C115.957 94.768 116.857 93.904 118.045 93.904C119.233 93.904 120.133 94.768 120.133 96.028ZM137.881 90.268H132.373L114.013 115H119.521L137.881 90.268ZM127.513 109.24C127.513 112.66 130.285 115.324 133.849 115.324C137.413 115.324 140.185 112.66 140.185 109.24C140.185 105.82 137.413 103.156 133.849 103.156C130.285 103.156 127.513 105.82 127.513 109.24ZM131.761 109.24C131.761 107.98 132.661 107.116 133.849 107.116C135.037 107.116 135.937 107.98 135.937 109.24C135.937 110.5 135.037 111.364 133.849 111.364C132.661 111.364 131.761 110.5 131.761 109.24Z\",\n    fill: \"white\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_16_344\",\n    x1: -12.4348,\n    y1: 91.2145,\n    x2: 228.124,\n    y2: 92.098,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#AA367C\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#4A2FBD\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgMeter2);\nexport default __webpack_public_path__ + \"static/media/meter2.1b8f416eccd1ee162218b8528a1c5cdc.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _defs;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgMeter3(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 204,\n    height: 204,\n    viewBox: \"0 0 204 204\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M187.639 69.9021C193.092 67.8586 199.226 70.6143 200.696 76.2484C206.238 97.4863 204.802 120.051 196.436 140.546C186.737 164.31 168.435 183.543 145.182 194.409C121.928 205.275 95.4333 206.975 70.9821 199.169C46.5309 191.364 25.9211 174.628 13.2642 152.299C0.607328 129.97 -3.16618 103.69 2.6965 78.7016C8.55918 53.7134 23.627 31.854 44.8941 17.4842C66.1612 3.11439 92.0641 -2.7094 117.435 1.17464C139.317 4.52444 159.415 14.8827 174.791 30.5466C178.869 34.702 178.083 41.3805 173.529 45.009C168.975 48.6374 162.385 47.8272 158.195 43.7832C146.212 32.2155 130.877 24.5642 114.244 22.0179C94.1181 18.9368 73.5701 23.5566 56.6994 34.9558C39.8288 46.355 27.8758 63.6955 23.2251 83.518C18.5744 103.34 21.5679 124.188 31.6082 141.901C41.6486 159.614 57.9979 172.89 77.3943 179.082C96.7908 185.274 117.809 183.925 136.255 175.305C154.701 166.686 169.219 151.429 176.914 132.578C183.273 116.999 184.584 99.9117 180.815 83.688C179.497 78.0164 182.187 71.9457 187.639 69.9021Z\",\n    fill: \"url(#paint0_linear_16_349)\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M66.08 99.16C66.08 103.804 69.32 107.512 74.036 107.512C74.648 107.512 75.08 107.44 75.332 107.296L69.896 115H77.528L83.072 106.18C84.476 103.912 85.376 101.32 85.376 98.98C85.376 93.724 81.308 89.8 75.728 89.8C70.256 89.8 66.08 93.76 66.08 99.16ZM72.416 98.908C72.416 97.072 73.892 95.668 75.764 95.668C77.636 95.668 79.076 97.108 79.076 98.944C79.076 100.78 77.636 102.184 75.764 102.184C73.892 102.184 72.416 100.744 72.416 98.908ZM109.665 102.652C109.665 95.848 105.777 89.8 98.7213 89.8C91.6293 89.8 87.7413 95.848 87.7413 102.652C87.7413 109.456 91.6293 115.504 98.7213 115.504C105.777 115.504 109.665 109.456 109.665 102.652ZM102.969 102.652C102.969 106 101.673 109.276 98.7213 109.276C95.7333 109.276 94.4373 106 94.4373 102.652C94.4373 99.304 95.7333 96.028 98.7213 96.028C101.673 96.028 102.969 99.304 102.969 102.652ZM124.521 96.028C124.521 92.608 121.749 89.944 118.185 89.944C114.621 89.944 111.849 92.608 111.849 96.028C111.849 99.448 114.621 102.112 118.185 102.112C121.749 102.112 124.521 99.448 124.521 96.028ZM120.273 96.028C120.273 97.288 119.373 98.152 118.185 98.152C116.997 98.152 116.097 97.288 116.097 96.028C116.097 94.768 116.997 93.904 118.185 93.904C119.373 93.904 120.273 94.768 120.273 96.028ZM138.021 90.268H132.513L114.153 115H119.661L138.021 90.268ZM127.653 109.24C127.653 112.66 130.425 115.324 133.989 115.324C137.553 115.324 140.325 112.66 140.325 109.24C140.325 105.82 137.553 103.156 133.989 103.156C130.425 103.156 127.653 105.82 127.653 109.24ZM131.901 109.24C131.901 107.98 132.801 107.116 133.989 107.116C135.177 107.116 136.077 107.98 136.077 109.24C136.077 110.5 135.177 111.364 133.989 111.364C132.801 111.364 131.901 110.5 131.901 109.24Z\",\n    fill: \"white\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_16_349\",\n    x1: -12.4348,\n    y1: 91.2145,\n    x2: 228.124,\n    y2: 92.098,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#AA367C\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#4A2FBD\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgMeter3);\nexport default __webpack_public_path__ + \"static/media/meter3.2201f7e4df22bc4b08180210474f28cc.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgArrow1(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 28,\n    height: 46,\n    viewBox: \"0 0 28 46\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M26.6332 44.6528C28.4556 42.8565 28.4556 39.9437 26.6332 38.1474L11.2662 23.0001L26.6332 7.85272C28.4556 6.05628 28.4556 3.14374 26.6332 1.3473C24.8107 -0.449099 21.8559 -0.449099 20.0335 1.3473L1.36675 19.7473C-0.455587 21.5438 -0.455587 24.4564 1.36675 26.2527L20.0335 44.6528C21.8559 46.4491 24.8107 46.4491 26.6332 44.6528Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrow1);\nexport default __webpack_public_path__ + \"static/media/arrow1.0c89b5b635adf255c2822c630aaa6ccf.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgArrow2(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 28,\n    height: 46,\n    viewBox: \"0 0 28 46\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M1.36683 44.6528C-0.455609 42.8565 -0.455609 39.9437 1.36683 38.1474L16.7338 23.0001L1.36683 7.85272C-0.455609 6.05628 -0.455609 3.14374 1.36683 1.3473C3.18931 -0.449099 6.14407 -0.449099 7.96655 1.3473L26.6332 19.7473C28.4556 21.5438 28.4556 24.4564 26.6332 26.2527L7.96655 44.6528C6.14407 46.4491 3.18931 46.4491 1.36683 44.6528Z\",\n    fill: \"white\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrow2);\nexport default __webpack_public_path__ + \"static/media/arrow2.3d9522b6fd8f2464b7200ebf2c1bb09a.svg\";\nexport { ForwardRef as ReactComponent };","import meter1 from \"../assets/img/meter1.svg\";\r\nimport meter2 from \"../assets/img/meter2.svg\";\r\nimport meter3 from \"../assets/img/meter3.svg\";\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport arrow1 from \"../assets/img/arrow1.svg\";\r\nimport arrow2 from \"../assets/img/arrow2.svg\";\r\nimport colorSharp from \"../assets/img/color-sharp.png\"\r\n\r\nexport const Skills = () => {\r\n  const responsive = {\r\n    superLargeDesktop: {\r\n      // the naming can be any, depends on you.\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 5\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 3\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"skill\" id=\"skills\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"skill-bx wow zoomIn\">\r\n                        <h2>Skills</h2>\r\n                        <p>Experienced in building robust and scalable applications with Java. Skilled in developing dynamic and responsive web applications using React. Proficient in DevOps tools, enabling efficient and automated workflows for continuous integration and deployment.</p>\r\n                        <Carousel responsive={responsive} infinite={true} className=\"owl-carousel owl-theme skill-slider\">\r\n                            <div className=\"item\">\r\n                                <img src={meter1} alt=\"Image\" />\r\n                                <h5>Java</h5>\r\n                            </div>\r\n                            <div className=\"item\">\r\n                                <img src={meter2} alt=\"Image\" />\r\n                                <h5>DevOps Tools</h5>\r\n                            </div>\r\n                            <div className=\"item\">\r\n                                <img src={meter3} alt=\"Image\" />\r\n                                <h5>React</h5>\r\n                            </div>\r\n                            <div className=\"item\">\r\n                                <img src={meter1} alt=\"Image\" />\r\n                                <h5>MongoDB</h5>\r\n                            </div>\r\n                        </Carousel>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <img className=\"background-image-left\" src={colorSharp} alt=\"Image\" />\r\n    </section>\r\n  )\r\n}","function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { useCallback, useRef, useState } from 'react';\nexport function defaultKey(key) {\n  return 'default' + key.charAt(0).toUpperCase() + key.substr(1);\n}\nfunction useUncontrolledProp(propValue, defaultValue, handler) {\n  const wasPropRef = useRef(propValue !== undefined);\n  const [stateValue, setState] = useState(defaultValue);\n  const isProp = propValue !== undefined;\n  const wasProp = wasPropRef.current;\n  wasPropRef.current = isProp;\n\n  /**\n   * If a prop switches from controlled to Uncontrolled\n   * reset its value to the defaultValue\n   */\n  if (!isProp && wasProp && stateValue !== defaultValue) {\n    setState(defaultValue);\n  }\n  return [isProp ? propValue : stateValue, useCallback((...args) => {\n    const [value, ...rest] = args;\n    let returnValue = handler == null ? void 0 : handler(value, ...rest);\n    setState(value);\n    return returnValue;\n  }, [handler])];\n}\nexport { useUncontrolledProp };\nexport function useUncontrolled(props, config) {\n  return Object.keys(config).reduce((result, fieldName) => {\n    const _ref = result,\n      _defaultKey = defaultKey(fieldName),\n      {\n        [_defaultKey]: defaultValue,\n        [fieldName]: propsValue\n      } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, [_defaultKey, fieldName].map(_toPropertyKey));\n    const handlerName = config[fieldName];\n    const [value, handler] = useUncontrolledProp(propsValue, defaultValue, props[handlerName]);\n    return Object.assign({}, rest, {\n      [fieldName]: value,\n      [handlerName]: handler\n    });\n  }, props);\n}","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// We must avoid a circular dependency with @react-aria/utils, and this useLayoutEffect is\n// guarded by a check that it only runs on the client side.\n// eslint-disable-next-line rulesdir/useLayoutEffectRule\nimport React, {JSX, ReactNode, useContext, useLayoutEffect, useMemo, useRef, useState} from 'react';\n\n// To support SSR, the auto incrementing id counter is stored in a context. This allows\n// it to be reset on every request to ensure the client and server are consistent.\n// There is also a prefix string that is used to support async loading components\n// Each async boundary must be wrapped in an SSR provider, which appends to the prefix\n// and resets the current id counter. This ensures that async loaded components have\n// consistent ids regardless of the loading order.\ninterface SSRContextValue {\n  prefix: string,\n  current: number\n}\n\n// Default context value to use in case there is no SSRProvider. This is fine for\n// client-only apps. In order to support multiple copies of React Aria potentially\n// being on the page at once, the prefix is set to a random number. SSRProvider\n// will reset this to zero for consistency between server and client, so in the\n// SSR case multiple copies of React Aria is not supported.\nconst defaultContext: SSRContextValue = {\n  prefix: String(Math.round(Math.random() * 10000000000)),\n  current: 0\n};\n\nconst SSRContext = React.createContext<SSRContextValue>(defaultContext);\nconst IsSSRContext = React.createContext(false);\n\nexport interface SSRProviderProps {\n  /** Your application here. */\n  children: ReactNode\n}\n\n// This is only used in React < 18.\nfunction LegacySSRProvider(props: SSRProviderProps): JSX.Element {\n  let cur = useContext(SSRContext);\n  let counter = useCounter(cur === defaultContext);\n  let [isSSR, setIsSSR] = useState(true);\n  let value: SSRContextValue = useMemo(() => ({\n    // If this is the first SSRProvider, start with an empty string prefix, otherwise\n    // append and increment the counter.\n    prefix: cur === defaultContext ? '' : `${cur.prefix}-${counter}`,\n    current: 0\n  }), [cur, counter]);\n\n  // If on the client, and the component was initially server rendered,\n  // then schedule a layout effect to update the component after hydration.\n  if (typeof document !== 'undefined') {\n    // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useLayoutEffect(() => {\n      setIsSSR(false);\n    }, []);\n  }\n\n  return (\n    <SSRContext.Provider value={value}>\n      <IsSSRContext.Provider value={isSSR}>\n        {props.children}\n      </IsSSRContext.Provider>\n    </SSRContext.Provider>\n  );\n}\n\nlet warnedAboutSSRProvider = false;\n\n/**\n * When using SSR with React Aria in React 16 or 17, applications must be wrapped in an SSRProvider.\n * This ensures that auto generated ids are consistent between the client and server.\n */\nexport function SSRProvider(props: SSRProviderProps): JSX.Element {\n  if (typeof React['useId'] === 'function') {\n    if (process.env.NODE_ENV !== 'test' && !warnedAboutSSRProvider) {\n      console.warn('In React 18, SSRProvider is not necessary and is a noop. You can remove it from your app.');\n      warnedAboutSSRProvider = true;\n    }\n    return <>{props.children}</>;\n  }\n  return <LegacySSRProvider {...props} />;\n}\n\nlet canUseDOM = Boolean(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nlet componentIds = new WeakMap();\n\nfunction useCounter(isDisabled = false) {\n  let ctx = useContext(SSRContext);\n  let ref = useRef<number | null>(null);\n  // eslint-disable-next-line rulesdir/pure-render\n  if (ref.current === null && !isDisabled) {\n    // In strict mode, React renders components twice, and the ref will be reset to null on the second render.\n    // This means our id counter will be incremented twice instead of once. This is a problem because on the\n    // server, components are only rendered once and so ids generated on the server won't match the client.\n    // In React 18, useId was introduced to solve this, but it is not available in older versions. So to solve this\n    // we need to use some React internals to access the underlying Fiber instance, which is stable between renders.\n    // This is exposed as ReactCurrentOwner in development, which is all we need since StrictMode only runs in development.\n    // To ensure that we only increment the global counter once, we store the starting id for this component in\n    // a weak map associated with the Fiber. On the second render, we reset the global counter to this value.\n    // Since React runs the second render immediately after the first, this is safe.\n    // @ts-ignore\n    let currentOwner = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED?.ReactCurrentOwner?.current;\n    if (currentOwner) {\n      let prevComponentValue = componentIds.get(currentOwner);\n      if (prevComponentValue == null) {\n        // On the first render, and first call to useId, store the id and state in our weak map.\n        componentIds.set(currentOwner, {\n          id: ctx.current,\n          state: currentOwner.memoizedState\n        });\n      } else if (currentOwner.memoizedState !== prevComponentValue.state) {\n        // On the second render, the memoizedState gets reset by React.\n        // Reset the counter, and remove from the weak map so we don't\n        // do this for subsequent useId calls.\n        ctx.current = prevComponentValue.id;\n        componentIds.delete(currentOwner);\n      }\n    }\n\n    // eslint-disable-next-line rulesdir/pure-render\n    ref.current = ++ctx.current;\n  }\n\n  // eslint-disable-next-line rulesdir/pure-render\n  return ref.current;\n}\n\nfunction useLegacySSRSafeId(defaultId?: string): string {\n  let ctx = useContext(SSRContext);\n\n  // If we are rendering in a non-DOM environment, and there's no SSRProvider,\n  // provide a warning to hint to the developer to add one.\n  if (ctx === defaultContext && !canUseDOM) {\n    console.warn('When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.');\n  }\n\n  let counter = useCounter(!!defaultId);\n  let prefix = ctx === defaultContext && process.env.NODE_ENV === 'test' ? 'react-aria' : `react-aria${ctx.prefix}`;\n  return defaultId || `${prefix}-${counter}`;\n}\n\nfunction useModernSSRSafeId(defaultId?: string): string {\n  // @ts-ignore\n  let id = React.useId();\n  let [didSSR] = useState(useIsSSR());\n  let prefix = didSSR || process.env.NODE_ENV === 'test' ? 'react-aria' : `react-aria${defaultContext.prefix}`;\n  return defaultId || `${prefix}-${id}`;\n}\n\n// Use React.useId in React 18 if available, otherwise fall back to our old implementation.\n/** @private */\nexport const useSSRSafeId = typeof React['useId'] === 'function' ? useModernSSRSafeId : useLegacySSRSafeId;\n\nfunction getSnapshot() {\n  return false;\n}\n\nfunction getServerSnapshot() {\n  return true;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction subscribe(onStoreChange: () => void): () => void {\n  // noop\n  return () => {};\n}\n\n/**\n * Returns whether the component is currently being server side rendered or\n * hydrated on the client. Can be used to delay browser-specific rendering\n * until after hydration.\n */\nexport function useIsSSR(): boolean {\n  // In React 18, we can use useSyncExternalStore to detect if we're server rendering or hydrating.\n  if (typeof React['useSyncExternalStore'] === 'function') {\n    return React['useSyncExternalStore'](subscribe, getSnapshot, getServerSnapshot);\n  }\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return useContext(IsSSRContext);\n}\n","const _excluded = [\"active\", \"eventKey\", \"mountOnEnter\", \"transition\", \"unmountOnExit\", \"role\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\"],\n  _excluded2 = [\"activeKey\", \"getControlledId\", \"getControllerId\"],\n  _excluded3 = [\"as\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport NoopTransition from './NoopTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTabPanel(_ref) {\n  let {\n      active,\n      eventKey,\n      mountOnEnter,\n      transition,\n      unmountOnExit,\n      role = 'tabpanel',\n      onEnter,\n      onEntering,\n      onEntered,\n      onExit,\n      onExiting,\n      onExited\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const context = useContext(TabContext);\n  if (!context) return [Object.assign({}, props, {\n    role\n  }), {\n    eventKey,\n    isActive: active,\n    mountOnEnter,\n    transition,\n    unmountOnExit,\n    onEnter,\n    onEntering,\n    onEntered,\n    onExit,\n    onExiting,\n    onExited\n  }];\n  const {\n      activeKey,\n      getControlledId,\n      getControllerId\n    } = context,\n    rest = _objectWithoutPropertiesLoose(context, _excluded2);\n  const key = makeEventKey(eventKey);\n  return [Object.assign({}, props, {\n    role,\n    id: getControlledId(eventKey),\n    'aria-labelledby': getControllerId(eventKey)\n  }), {\n    eventKey,\n    isActive: active == null && key != null ? makeEventKey(activeKey) === key : active,\n    transition: transition || rest.transition,\n    mountOnEnter: mountOnEnter != null ? mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: unmountOnExit != null ? unmountOnExit : rest.unmountOnExit,\n    onEnter,\n    onEntering,\n    onEntered,\n    onExit,\n    onExiting,\n    onExited\n  }];\n}\nconst TabPanel = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(_ref2, ref) => {\n  let {\n      as: Component = 'div'\n    } = _ref2,\n    props = _objectWithoutPropertiesLoose(_ref2, _excluded3);\n  const [tabPanelProps, {\n    isActive,\n    onEnter,\n    onEntering,\n    onEntered,\n    onExit,\n    onExiting,\n    onExited,\n    mountOnEnter,\n    unmountOnExit,\n    transition: Transition = NoopTransition\n  }] = useTabPanel(props);\n  // We provide an empty the TabContext so `<Nav>`s in `<TabPanel>`s don't\n  // conflict with the top level one.\n  return /*#__PURE__*/_jsx(TabContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: null,\n      children: /*#__PURE__*/_jsx(Transition, {\n        in: isActive,\n        onEnter: onEnter,\n        onEntering: onEntering,\n        onEntered: onEntered,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: onExited,\n        mountOnEnter: mountOnEnter,\n        unmountOnExit: unmountOnExit,\n        children: /*#__PURE__*/_jsx(Component, Object.assign({}, tabPanelProps, {\n          ref: ref,\n          hidden: !isActive,\n          \"aria-hidden\": !isActive\n        }))\n      })\n    })\n  });\n});\nTabPanel.displayName = 'TabPanel';\nexport default TabPanel;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport { useSSRSafeId } from './ssr';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\nimport TabPanel from './TabPanel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Tabs = props => {\n  const {\n    id: userId,\n    generateChildId: generateCustomChildId,\n    onSelect: propsOnSelect,\n    activeKey: propsActiveKey,\n    defaultActiveKey,\n    transition,\n    mountOnEnter,\n    unmountOnExit,\n    children\n  } = props;\n  const [activeKey, onSelect] = useUncontrolledProp(propsActiveKey, defaultActiveKey, propsOnSelect);\n  const id = useSSRSafeId(userId);\n  const generateChildId = useMemo(() => generateCustomChildId || ((key, type) => id ? `${id}-${type}-${key}` : null), [id, generateCustomChildId]);\n  const tabContext = useMemo(() => ({\n    onSelect,\n    activeKey,\n    transition,\n    mountOnEnter: mountOnEnter || false,\n    unmountOnExit: unmountOnExit || false,\n    getControlledId: key => generateChildId(key, 'tabpane'),\n    getControllerId: key => generateChildId(key, 'tab')\n  }), [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/_jsx(TabContext.Provider, {\n    value: tabContext,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: onSelect || null,\n      children: children\n    })\n  });\n};\nTabs.Panel = TabPanel;\nexport default Tabs;","import NoopTransition from '@restart/ui/NoopTransition';\nimport Fade from './Fade';\nexport default function getTabTransitionComponent(transition) {\n  if (typeof transition === 'boolean') {\n    return transition ? Fade : NoopTransition;\n  }\n  return transition;\n}","import * as React from 'react';\nimport Tabs from '@restart/ui/Tabs';\nimport getTabTransitionComponent from './getTabTransitionComponent';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst TabContainer = ({\n  transition,\n  ...props\n}) => /*#__PURE__*/_jsx(Tabs, {\n  ...props,\n  transition: getTabTransitionComponent(transition)\n});\nTabContainer.displayName = 'TabContainer';\nexport default TabContainer;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst TabContent = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'tab-content');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nTabContent.displayName = 'TabContent';\nexport default TabContent;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport SelectableContext from '@restart/ui/SelectableContext';\nimport TabContext from '@restart/ui/TabContext';\nimport { useTabPanel } from '@restart/ui/TabPanel';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport getTabTransitionComponent from './getTabTransitionComponent';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst TabPane = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  transition,\n  ...props\n}, ref) => {\n  const [{\n    className,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    ...rest\n  }, {\n    isActive,\n    onEnter,\n    onEntering,\n    onEntered,\n    onExit,\n    onExiting,\n    onExited,\n    mountOnEnter,\n    unmountOnExit,\n    transition: Transition = Fade\n  }] = useTabPanel({\n    ...props,\n    transition: getTabTransitionComponent(transition)\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n\n  // We provide an empty the TabContext so `<Nav>`s in `<TabPanel>`s don't\n  // conflict with the top level one.\n  return /*#__PURE__*/_jsx(TabContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: null,\n      children: /*#__PURE__*/_jsx(Transition, {\n        in: isActive,\n        onEnter: onEnter,\n        onEntering: onEntering,\n        onEntered: onEntered,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: onExited,\n        mountOnEnter: mountOnEnter,\n        unmountOnExit: unmountOnExit,\n        children: /*#__PURE__*/_jsx(Component, {\n          ...rest,\n          ref: ref,\n          className: classNames(className, prefix, isActive && 'active')\n        })\n      })\n    })\n  });\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import PropTypes from 'prop-types';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n/* eslint-disable react/no-unused-prop-types */\nconst propTypes = {\n  eventKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /**\n   * Content for the tab title.\n   */\n  title: PropTypes.node.isRequired,\n  /**\n   * The disabled state of the tab.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Class to pass to the underlying nav link.\n   */\n  tabClassName: PropTypes.string,\n  /**\n   * Object containing attributes to pass to underlying nav link.\n   */\n  tabAttrs: PropTypes.object\n};\nconst Tab = () => {\n  throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n};\nTab.propTypes = propTypes;\nexport default Object.assign(Tab, {\n  Container: TabContainer,\n  Content: TabContent,\n  Pane: TabPane\n});","import { Col } from \"react-bootstrap\";\r\n\r\nexport const ProjectCard = ({ title, description, imgUrl }) => {\r\n  return (\r\n    <Col size={12} sm={6} md={4}>\r\n      <div className=\"proj-imgbx\">\r\n        <img src={imgUrl} />\r\n        <div className=\"proj-txtx\">\r\n          <h4>{title}</h4>\r\n          <span>{description}</span>\r\n        </div>\r\n      </div>\r\n    </Col>\r\n  )\r\n}","import { Container, Row, Col, Tab, Nav } from \"react-bootstrap\";\r\nimport { ProjectCard } from \"./ProjectCard\";\r\nimport projImg1 from \"../assets/img/project-img1.png\";\r\nimport projImg2 from \"../assets/img/project-img2.png\";\r\nimport projImg3 from \"../assets/img/project-img3.png\";\r\nimport colorSharp2 from \"../assets/img/color-sharp2.png\";\r\nimport 'animate.css';\r\nimport TrackVisibility from 'react-on-screen';\r\n\r\nexport const Projects = () => {\r\n\r\n  const projects = [\r\n    {\r\n      title: \"SplitQuick\",\r\n      description: \"Splitting Bills Application\",\r\n      imgUrl: projImg1,\r\n    }\r\n    // {\r\n    //   title: \"Business Startup\",\r\n    //   description: \"Design & Development\",\r\n    //   imgUrl: projImg2,\r\n    // },\r\n    // {\r\n    //   title: \"Business Startup\",\r\n    //   description: \"Design & Development\",\r\n    //   imgUrl: projImg3,\r\n    // },\r\n    // {\r\n    //   title: \"Business Startup\",\r\n    //   description: \"Design & Development\",\r\n    //   imgUrl: projImg1,\r\n    // },\r\n    // {\r\n    //   title: \"Business Startup\",\r\n    //   description: \"Design & Development\",\r\n    //   imgUrl: projImg2,\r\n    // },\r\n    // {\r\n    //   title: \"Business Startup\",\r\n    //   description: \"Design & Development\",\r\n    //   imgUrl: projImg3,\r\n    // },\r\n  ];\r\n\r\n  return (\r\n    <section className=\"project\" id=\"projects\">\r\n      <Container>\r\n        <Row>\r\n          <Col size={12}>\r\n            <TrackVisibility>\r\n              {({ isVisible }) =>\r\n              <div className={isVisible ? \"animate__animated animate__fadeIn\": \"\"}>\r\n                <h2>Projects</h2>\r\n                <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.</p>\r\n                <Tab.Container id=\"projects-tabs\" defaultActiveKey=\"first\">\r\n                  <Nav variant=\"pills\" className=\"nav-pills mb-5 justify-content-center align-items-center\" id=\"pills-tab\">\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"first\">WebApp</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"second\">App</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                      <Nav.Link eventKey=\"third\">Website</Nav.Link>\r\n                    </Nav.Item>\r\n                  </Nav>\r\n                  <Tab.Content id=\"slideInUp\" className={isVisible ? \"animate__animated animate__slideInUp\" : \"\"}>\r\n                    <Tab.Pane eventKey=\"first\">\r\n                      <Row>\r\n                        {\r\n                          projects.map((project, index) => {\r\n                            return (\r\n                              <ProjectCard\r\n                                key={index}\r\n                                {...project}\r\n                                />\r\n                            )\r\n                          })\r\n                        }\r\n                      </Row>\r\n                    </Tab.Pane>\r\n                    <Tab.Pane eventKey=\"section\">\r\n                      <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Cumque quam, quod neque provident velit, rem explicabo excepturi id illo molestiae blanditiis, eligendi dicta officiis asperiores delectus quasi inventore debitis quo.</p>\r\n                    </Tab.Pane>\r\n                    <Tab.Pane eventKey=\"third\">\r\n                      <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Cumque quam, quod neque provident velit, rem explicabo excepturi id illo molestiae blanditiis, eligendi dicta officiis asperiores delectus quasi inventore debitis quo.</p>\r\n                    </Tab.Pane>\r\n                  </Tab.Content>\r\n                </Tab.Container>\r\n              </div>}\r\n            </TrackVisibility>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <img className=\"background-image-right\" src={colorSharp2}></img>\r\n    </section>\r\n  )\r\n}","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26, _path27, _path28, _path29, _path30, _path31, _path32, _path33, _path34, _path35, _path36, _path37, _path38, _path39, _path40, _path41, _path42, _path43, _path44, _path45, _path46, _path47, _path48, _path49, _path50, _path51, _path52, _path53, _path54, _path55, _path56, _path57, _path58, _path59, _path60, _path61, _path62, _path63, _path64, _path65, _path66, _path67, _path68, _path69, _path70, _path71, _path72, _path73, _path74, _path75, _path76, _path77, _path78, _path79, _path80, _path81, _path82, _path83, _path84, _path85, _path86, _path87, _path88, _path89, _path90, _path91, _path92, _path93, _path94, _path95, _path96, _path97, _path98, _path99, _path100, _path101, _path102, _path103, _path104, _path105, _path106, _path107, _path108, _path109, _path110, _path111, _path112, _path113, _path114, _path115, _path116, _path117, _path118, _path119, _path120, _path121, _path122, _path123, _path124, _path125, _path126, _path127, _path128, _path129, _path130, _path131, _path132, _path133, _path134, _path135, _path136, _path137, _path138, _path139, _path140, _path141, _path142, _defs;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgContactImg(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 785,\n    height: 589,\n    viewBox: \"0 0 785 589\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M542.825 172.118C488.653 121.258 425.185 108.128 408.415 105.449C419.717 74.9198 437.173 29.5363 441.52 22.8209C444.332 22.4672 447.164 22.3049 449.997 22.3352C462.319 22.3352 488.703 24.8975 526.908 42.0963C582.083 66.9317 596.747 94.8651 599.656 101.698L542.825 172.118Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M449.997 25.6847C462.052 25.6847 487.901 28.2134 525.487 45.1443C575.329 67.6183 591.43 92.7384 595.71 101.229L542.508 167.228C516.192 143.508 485.466 125.218 452.087 113.404C439.364 108.817 426.291 105.272 412.996 102.803C425.486 69.1925 439.062 34.5939 443.627 25.9526C445.115 25.8187 447.255 25.6847 450.03 25.6847H449.997ZM450.03 18.986C446.633 18.9146 443.237 19.1501 439.882 19.6894C435.969 20.9956 403.867 108.179 403.867 108.179C403.867 108.179 480.059 115.966 543.177 177.041L603.368 102.317C603.368 102.317 593.336 68.3887 528.129 39.0485C489.957 21.8497 463.356 18.9525 449.897 18.9525L450.03 18.986Z\",\n    fill: \"#A0C6F4\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M415.019 114.961C415.019 114.961 489.941 122.531 536.087 164.984\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M479.691 111.294L507.647 56.8671L536.372 113.622L479.691 111.294Z\",\n    fill: \"#A0C6F4\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M485.125 110.523L513.081 56.0967L541.805 112.851L485.125 110.523Z\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M458.909 15.6701C458.909 15.6701 542.942 23.3066 595.108 85.4033\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M501.828 256.856C497.214 253.506 494.188 251.179 494.188 251.179C495.458 249.504 515.672 227.917 527.376 210.534C527.376 210.534 503.701 258.246 501.828 256.856Z\",\n    fill: \"white\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M215.435 99.6547C217.692 103.423 218.678 101.915 225.182 101.329C231.686 100.743 240.949 105.583 244.193 113.605C247.436 121.626 246.45 122.866 244.694 123.87C242.939 124.875 230.449 126.382 229.947 128.894\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M383.92 507.369L378.085 497.505L357.419 532.02L362.837 536.207L383.92 507.369Z\",\n    fill: \"#F9865F\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M246.667 421.878C246.667 421.878 235.95 404.444 240.548 395.887L274.723 399.554L246.667 421.878Z\",\n    fill: \"#F9865F\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M246.667 421.878L248.707 426.6L242.404 451.251C242.005 452.774 242.044 454.378 242.514 455.879C242.984 457.381 243.867 458.72 245.062 459.742L276.312 413.471C277.744 411.341 278.371 408.77 278.08 406.219C277.789 403.668 276.599 401.305 274.723 399.554L267.734 393.057L246.667 421.878Z\",\n    fill: \"black\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M229.948 128.961C239.729 128.727 252.135 128.107 249.644 120.588C247.152 113.069 237.94 94.5136 216.789 100.09C216.789 100.09 209.349 106.303 218.645 117.49C227.941 128.677 229.948 128.961 229.948 128.961Z\",\n    fill: \"#2A1E33\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M279.472 399.889C279.472 399.889 262.752 350.487 276.897 328.8C288.601 310.898 326.688 340.003 331.905 343.872L359.175 294.603C359.175 294.603 352.888 285.761 337.439 277.103C321.99 268.445 258.137 242.521 228.125 289.947C217.04 307.465 216.873 382.674 238.157 411.495L279.472 399.889Z\",\n    fill: \"#3B3B5F\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M279.472 399.889C279.472 399.889 262.752 350.487 276.897 328.8C288.601 310.897 326.688 340.003 331.905 343.872\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M359.175 294.603C346.769 307.682 310.002 371.386 301.726 401.782C290.674 442.51 294.837 476.288 355.63 542.454L385.007 499.582C385.007 499.582 364.341 468.165 368.287 438.541C373.872 395.686 404.318 354.137 419.717 327.778L359.175 294.603Z\",\n    fill: \"#3B3B5F\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M363.84 300.129L412.712 338.563L427.325 316.323L363.84 300.129Z\",\n    fill: \"#8C3C6C\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M644.599 259.736C652.223 261.377 658.03 264.286 662.021 268.461C666.017 272.648 664.211 274.825 662.757 276.098C661.302 277.37 655.667 275.913 650.768 271.559C645.87 267.205 644.599 259.736 644.599 259.736Z\",\n    fill: \"#FF8A66\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M494.188 251.179C495.458 249.504 515.672 227.917 527.376 210.534C527.376 210.534 562.739 250.224 566.584 251.514C568.005 251.982 576.616 251.865 587.451 251.765C605.642 251.564 629.835 251.38 635.186 254.076C643.713 258.329 648.829 260.473 650.952 266.452C653.076 272.43 653.929 276.332 648.829 276.684C642.86 277.119 639.031 269.432 639.031 269.432C633.409 272.457 627.555 275.027 621.526 277.119C621.526 277.119 576.198 294.737 545.902 286.213C537.659 283.885 494.188 251.179 494.188 251.179Z\",\n    fill: \"#F9865F\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M219.431 92.638C215.552 94.1285 213.178 95.9036 215.435 99.6549C217.692 103.406 218.678 101.916 225.182 101.33C231.686 100.743 240.949 105.583 244.193 113.605C247.436 121.627 246.45 122.866 244.694 123.871C242.939 124.875 230.449 126.383 229.948 128.895C229.446 131.407 234.964 138.792 246.517 138.306L249.259 137.804C249.259 137.804 273.452 161.467 276.964 164.967C280.475 168.467 306.19 185.934 320.435 189.484C331.203 192.18 353.039 188.714 366.147 186.135C372.517 184.879 376.848 183.857 376.848 183.857C376.848 183.857 367 166.089 364.993 138.792C364.993 138.792 341.452 142.577 325.802 146.026C325.802 146.026 289.286 125.629 271.53 116.603C271.53 116.603 256.014 97.5783 248.757 95.0663C241.501 92.5543 224.681 90.6452 219.431 92.638Z\",\n    fill: \"#F9865F\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M366.08 186.218C372.45 184.962 376.781 183.941 376.781 183.941C376.781 183.941 364.86 168.869 362.87 141.605C362.87 141.605 357.486 147.416 359.158 162.873C361.265 182.4 366.08 186.218 366.08 186.218Z\",\n    fill: \"white\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M362.368 138.541C362.368 138.541 362.703 171.917 371.631 185.833L374.825 184.544C374.825 184.544 332.774 233.829 319.164 266.033C316.941 271.308 406.492 328.599 419.717 327.795C419.717 327.795 463.356 261.093 478.237 241.315L494.288 253.775C494.288 253.775 525.738 221.855 527.426 210.535C527.426 210.535 497.046 173.508 472.251 162.656C447.455 151.804 425.068 133.249 398.366 133.835C375.259 134.187 362.368 138.541 362.368 138.541Z\",\n    fill: \"#471C36\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M494.221 253.774L478.187 241.315L480.745 234.348L494.221 253.774Z\",\n    fill: \"white\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M518.632 121.827C515.823 130.586 507.714 155.89 498.668 159.005C489.623 162.12 480.277 158.218 480.277 158.218L470.646 163.141C469.576 166.373 461.968 169.153 452.154 169.539C444.881 169.823 440.45 160.462 442.607 153.696C443.593 150.581 447.288 135.275 447.288 135.275C447.288 135.275 455.08 106.538 462.336 100.609C469.593 94.6809 476.247 88.786 495.391 96.5398C524.551 108.396 518.632 121.827 518.632 121.827Z\",\n    fill: \"#F9865F\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M460.497 123.083C459.21 128.442 453.642 139.194 449.98 137.251C446.319 135.309 445.048 130.385 447.623 120.923C450.198 111.461 452.354 89.992 459.644 86.1235C466.934 82.255 470.161 86.7599 470.161 86.7599C470.161 86.7599 466.934 71.085 476.381 68.9247C476.381 68.9247 479.591 67.4342 478.304 78.1689C479.554 75.2171 481.754 72.7685 484.553 71.212C487.352 69.6555 490.59 69.0803 493.753 69.5778C505.457 70.8673 509.62 87.413 509.62 87.413C509.959 86.0464 510.769 84.8434 511.907 84.0162C513.044 83.189 514.437 82.7907 515.84 82.8914C521.207 82.8914 529.366 90.8461 527.426 99.6381C527.426 99.6381 541.153 95.3342 548.443 106.337C555.733 117.339 554.88 129.33 537.291 134.053C518.899 138.993 519.067 117.507 516.274 114.71C513.482 111.913 510.489 108.698 500.19 112.567C489.89 116.435 479.156 105.047 479.156 105.047C479.156 105.047 477.484 118.796 475.729 120.119C473.973 121.442 470.579 123.134 471.432 116.686C472.284 110.239 473.371 110.875 472.719 109.167C472.067 107.459 469.175 102.016 463.072 106.806C456.217 112.064 460.497 123.083 460.497 123.083Z\",\n    fill: \"#2A1E33\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M463.423 125.461C459.327 122.112 456.484 115.949 460.079 109.887C463.674 103.825 469.576 103.004 471.365 105.298C473.154 107.593 473.856 111.461 472.167 116.05\",\n    stroke: \"#2A1E33\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M362.853 536.207L364.893 540.913L358.59 565.564C358.191 567.086 358.23 568.691 358.7 570.192C359.17 571.694 360.053 573.033 361.248 574.055L392.464 527.783C393.897 525.654 394.524 523.083 394.232 520.532C393.941 517.981 392.751 515.618 390.876 513.867L383.887 507.369L362.853 536.207Z\",\n    fill: \"black\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M470.161 86.7597C470.161 86.7597 467.753 78.9724 460.581 76.9126\",\n    stroke: \"#2A1E33\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M318.094 263.672L404.67 142.543\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M440.366 151.017C437.24 155.086 435.819 172.57 450.181 173.692C458.372 174.508 466.61 172.696 473.706 168.517\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M248.674 95.1499C248.674 95.1499 258.572 108.263 260.127 112.935\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path31 || (_path31 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M619.252 271.04C619.252 271.04 625.939 276.483 639.031 269.365C643.796 266.803 640.402 260.758 634.35 262.265C628.297 263.772 621.141 261.511 621.141 261.511\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path32 || (_path32 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M646.873 260.49C646.873 260.49 653.21 267.909 653.042 272.313\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path33 || (_path33 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M553.509 259.686C553.509 259.686 559.244 252.033 566.584 251.514\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path34 || (_path34 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M311.657 158.469C311.657 158.469 315.001 148.019 325.735 146.11\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path35 || (_path35 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M340.733 317.027L327.926 341.494C327.926 341.494 285.725 413.019 300.054 459.239\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path36 || (_path36 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M378.118 399.085L419.634 327.795C419.634 327.795 474.057 248.734 479.624 237.664L498.836 202.077\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path37 || (_path37 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M323.913 271.275C323.913 271.275 397.764 325.199 419.65 327.795\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path38 || (_path38 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M362.368 138.541C362.368 138.541 362.368 172.386 371.414 186.252\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path39 || (_path39 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M525.002 205.175C522.678 219.109 491.863 248.399 491.863 248.399\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path40 || (_path40 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M295.004 378.872C297.424 378.872 299.385 376.908 299.385 374.484C299.385 372.061 297.424 370.097 295.004 370.097C292.585 370.097 290.624 372.061 290.624 374.484C290.624 376.908 292.585 378.872 295.004 378.872Z\",\n    fill: \"white\"\n  })), _path41 || (_path41 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M706.379 468.852L703.954 452.055L718.25 461.584L710.776 463.208L706.379 468.852Z\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path42 || (_path42 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M231.954 182.099C204.851 158.134 160.059 217.87 323.913 408.011C418.463 517.702 492.783 527.532 502.815 489.367C520.872 420.906 455.665 403.607 479.942 430.418C515.221 469.405 615.556 477.644 690.344 441.27C764.129 405.365 718.768 349.616 714.187 346.35\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path43 || (_path43 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M691.582 445.306C694.001 445.306 695.962 443.342 695.962 440.919C695.962 438.495 694.001 436.531 691.582 436.531C689.162 436.531 687.201 438.495 687.201 440.919C687.201 443.342 689.162 445.306 691.582 445.306Z\",\n    fill: \"white\"\n  })), _path44 || (_path44 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M627.779 476.773L757.742 403.389\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path45 || (_path45 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M234.663 190.037C237.082 190.037 239.043 188.072 239.043 185.649C239.043 183.226 237.082 181.261 234.663 181.261C232.243 181.261 230.282 183.226 230.282 185.649C230.282 188.072 232.243 190.037 234.663 190.037Z\",\n    fill: \"white\"\n  })), _path46 || (_path46 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M346.468 104.394C351.667 104.394 355.881 100.173 355.881 94.9656C355.881 89.7585 351.667 85.5372 346.468 85.5372C341.269 85.5372 337.055 89.7585 337.055 94.9656C337.055 100.173 341.269 104.394 346.468 104.394Z\",\n    fill: \"#FF6D66\"\n  })), _path47 || (_path47 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M175.792 23.1059C174.971 23.1026 174.168 23.3433 173.484 23.7977C172.8 24.252 172.266 24.8995 171.949 25.6581C171.633 26.4166 171.548 27.2522 171.706 28.059C171.865 28.8657 172.258 29.6073 172.837 30.1898C173.417 30.7723 174.155 31.1695 174.96 31.3312C175.765 31.4928 176.6 31.4115 177.358 31.0977C178.117 30.7838 178.766 30.2515 179.222 29.5682C179.678 28.8848 179.922 28.0812 179.922 27.2591C179.922 26.1605 179.487 25.1066 178.713 24.3282C177.939 23.5498 176.889 23.1103 175.792 23.1059Z\",\n    fill: \"#A0C6F4\"\n  })), _path48 || (_path48 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M729.87 537.53C732.151 537.53 734 535.678 734 533.394C734 531.109 732.151 529.257 729.87 529.257C727.589 529.257 725.74 531.109 725.74 533.394C725.74 535.678 727.589 537.53 729.87 537.53Z\",\n    fill: \"#FAD8B0\"\n  })), _path49 || (_path49 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M655.985 346.333L611.494 325.45C610.709 325.062 610.051 324.459 609.594 323.712C609.138 322.964 608.902 322.103 608.915 321.227C608.927 320.35 609.187 319.496 609.664 318.761C610.141 318.027 610.816 317.443 611.611 317.077L694.307 280.636C694.886 280.379 695.513 280.247 696.146 280.247C696.779 280.247 697.406 280.379 697.985 280.636L754.833 305.053L655.985 346.333Z\",\n    fill: \"#2A1E33\"\n  })), _path50 || (_path50 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M653.293 277.672C653.393 296.093 656.035 346.334 656.035 346.334L754.883 304.986L752.659 235.069C752.63 234.077 752.356 233.108 751.863 232.248C751.369 231.388 750.671 230.664 749.83 230.14C748.989 229.616 748.031 229.309 747.043 229.245C746.055 229.182 745.066 229.364 744.165 229.777L659.078 268.629C657.342 269.412 655.871 270.684 654.844 272.289C653.817 273.895 653.278 275.765 653.293 277.672Z\",\n    fill: \"#121212\"\n  })), _path51 || (_path51 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M655.985 346.333L754.833 304.986L752.609 235.068C752.609 235.068 751.957 227.432 744.115 229.776\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path52 || (_path52 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M703.82 296.076L710.492 280.284\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path53 || (_path53 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M710.492 296.076L717.163 280.284\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path54 || (_path54 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M193.599 468.4C195.879 468.4 197.728 466.548 197.728 464.263C197.728 461.979 195.879 460.127 193.599 460.127C191.318 460.127 189.469 461.979 189.469 464.263C189.469 466.548 191.318 468.4 193.599 468.4Z\",\n    fill: \"#FF6D66\"\n  })), _path55 || (_path55 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M542.257 490.556C545.433 490.556 548.008 487.976 548.008 484.795C548.008 481.613 545.433 479.034 542.257 479.034C539.08 479.034 536.505 481.613 536.505 484.795C536.505 487.976 539.08 490.556 542.257 490.556Z\",\n    fill: \"#FF6D66\"\n  })), _path56 || (_path56 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M236.468 525.707C252.84 533.243 270.667 537.073 288.684 536.927C289.019 536.93 289.349 537.003 289.653 537.142C289.957 537.281 290.229 537.483 290.45 537.734C290.671 537.985 290.836 538.281 290.935 538.6C291.035 538.92 291.065 539.258 291.025 539.59L287.414 568.26C287.342 568.758 287.113 569.219 286.761 569.578C286.41 569.936 285.953 570.173 285.457 570.253C278.134 571.643 248.674 575.696 226.57 556.856C226.234 556.567 225.986 556.189 225.856 555.765C225.726 555.341 225.718 554.889 225.835 554.461L233.124 527.114C233.225 526.782 233.398 526.477 233.63 526.219C233.862 525.962 234.148 525.759 234.467 525.625C234.786 525.49 235.131 525.428 235.477 525.442C235.823 525.457 236.161 525.547 236.468 525.707Z\",\n    fill: \"#FFF7DC\"\n  })), _path57 || (_path57 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M239.06 534.08C239.06 534.08 251.8 552.016 256.348 554.595C260.896 557.174 285.441 542.504 285.441 542.504\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path58 || (_path58 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M268.37 552.117L281.762 565.899\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path59 || (_path59 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M249.761 549.454L234.094 553.724\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path60 || (_path60 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M646.505 186.402H631.541V201.391H646.505V186.402Z\",\n    fill: \"#FFE1C0\"\n  })), _path61 || (_path61 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M633.564 388.518L638.011 396.239L642.459 403.959H633.564H624.686L629.116 396.239L633.564 388.518Z\",\n    fill: \"#A0C6F4\"\n  })), _path62 || (_path62 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M274.004 46.7521L275.175 11.718C275.041 8.36868 276.378 7.41411 278.385 6.96195C287.882 4.86861 316.84 -1.57885 348.157 7.71556C352.219 8.92132 352.086 11.0649 352.019 13.0075L350.899 46.4004C350.817 47.0244 350.606 47.6244 350.279 48.1617C349.951 48.6989 349.515 49.1616 348.999 49.5197C348.482 49.8779 347.896 50.1236 347.279 50.2411C346.661 50.3586 346.026 50.3452 345.415 50.2019C334.032 48.8374 322.567 48.2778 311.106 48.5272C300.082 48.4801 289.074 49.3709 278.201 51.1899C275.091 51.776 273.921 49.4985 274.004 46.7521Z\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path63 || (_path63 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M284.571 41.728L302.863 20.2922L323.094 40.3045C316.105 37.9432 284.571 41.728 284.571 41.728Z\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path64 || (_path64 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M314.048 30.1393L328.829 18.2827L341.285 27.1919L341.753 41.1084L323.077 40.2041\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path65 || (_path65 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M292.472 18.6138C292.642 16.9298 291.178 15.4027 289.203 15.2028C287.228 15.0028 285.489 16.2058 285.319 17.8898C285.149 19.5738 286.613 21.101 288.588 21.3009C290.563 21.5009 292.302 20.2978 292.472 18.6138Z\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path66 || (_path66 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M627.461 501.776L639.717 524.451C641.004 526.477 640.553 527.633 639.432 528.671C634.182 533.544 618.182 548.382 594.774 554.176C591.748 554.93 591.029 553.506 590.36 552.25L578.656 530.631C578.479 530.202 578.393 529.742 578.403 529.279C578.412 528.816 578.518 528.359 578.713 527.939C578.908 527.519 579.188 527.144 579.535 526.837C579.882 526.531 580.288 526.3 580.729 526.159C588.468 522.794 595.956 518.877 603.134 514.436C610.204 510.402 616.917 505.769 623.197 500.587C624.869 498.912 626.541 500.001 627.461 501.776Z\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path67 || (_path67 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M622.646 508.96L618.984 529.375L598.72 524.2C603.986 523.061 622.646 508.96 622.646 508.96Z\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path68 || (_path68 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M608.183 527.248L603.184 540.276L591.982 539.255L586.514 530.58L598.703 524.2\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path69 || (_path69 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M629.443 527.599C630.77 526.992 631.429 525.585 630.915 524.458C630.4 523.331 628.908 522.91 627.581 523.517C626.254 524.124 625.595 525.53 626.109 526.658C626.624 527.785 628.116 528.206 629.443 527.599Z\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path70 || (_path70 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M567.771 114.626L617.58 152.809C617.839 153.009 618.135 153.155 618.451 153.239C618.767 153.323 619.096 153.343 619.42 153.298C619.744 153.252 620.056 153.143 620.337 152.975C620.618 152.808 620.863 152.586 621.057 152.323L628.581 142.107C628.951 141.598 629.11 140.966 629.026 140.342C628.942 139.718 628.621 139.151 628.13 138.758L579.024 99.3866C578.763 99.1785 578.464 99.0256 578.143 98.9371C577.821 98.8486 577.486 98.8264 577.156 98.8718C576.826 98.9172 576.509 99.0293 576.223 99.2013C575.938 99.3733 575.69 99.6016 575.496 99.8723L567.27 111.26C566.9 111.776 566.746 112.417 566.84 113.045C566.933 113.673 567.267 114.24 567.771 114.626Z\",\n    fill: \"white\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path71 || (_path71 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M571.45 112.918L583.521 121.409L590.661 112.885L578.572 102.786L571.45 112.918Z\",\n    fill: \"#FF6D66\"\n  })), _path72 || (_path72 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M588.069 124.725L600.174 134.337L606.662 126.349L594.473 116.452L588.069 124.725Z\",\n    fill: \"#FAD8B0\"\n  })), _path73 || (_path73 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M604.237 138.021L616.326 146.512L622.077 139.11L610.641 129.514L604.237 138.021Z\",\n    fill: \"#A0C6F4\"\n  })), _path74 || (_path74 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M667.171 61.2378L678.523 156.694C678.575 157.196 678.727 157.683 678.97 158.126C679.213 158.568 679.542 158.957 679.938 159.27C680.335 159.582 680.789 159.812 681.276 159.945C681.762 160.077 682.271 160.111 682.77 160.043L701.998 157.397C702.963 157.268 703.839 156.767 704.441 156.001C705.044 155.235 705.325 154.264 705.225 153.294L695.912 57.2689C695.861 56.7616 695.708 56.27 695.461 55.8237C695.215 55.3775 694.881 54.986 694.479 54.6728C694.078 54.3597 693.617 54.1315 693.124 54.002C692.632 53.8725 692.118 53.8445 691.615 53.9196L670.364 57.0344C669.388 57.1759 668.506 57.6957 667.909 58.4819C667.312 59.2681 667.046 60.2578 667.171 61.2378Z\",\n    fill: \"white\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path75 || (_path75 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M672.972 63.4652L676.567 85.8053L693.521 84.5493L691.665 60.4843L672.972 63.4652Z\",\n    fill: \"#FF6D66\"\n  })), _path76 || (_path76 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M677.788 94.3459L680.179 117.908L695.862 116.502L693.688 92.554L677.788 94.3459Z\",\n    fill: \"#91BA83\"\n  })), _path77 || (_path77 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M680.48 126.332L684.074 148.672L698.336 147.098L696.614 124.272L680.48 126.332Z\",\n    fill: \"#FAD8B0\"\n  })), _path78 || (_path78 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M642.392 81.5684L673.825 174.127C673.953 174.504 674.154 174.852 674.417 175.15C674.681 175.449 675.001 175.692 675.359 175.865C675.717 176.038 676.105 176.137 676.502 176.158C676.899 176.179 677.296 176.121 677.671 175.986L697.367 168.886C698.094 168.62 698.691 168.083 699.033 167.388C699.376 166.692 699.438 165.891 699.206 165.151L669.695 71.6879C669.571 71.2998 669.37 70.9409 669.104 70.6328C668.838 70.3248 668.512 70.0739 668.147 69.8955C667.781 69.717 667.383 69.6147 666.977 69.5947C666.57 69.5746 666.164 69.6372 665.783 69.7788L644.181 77.8004C643.447 78.0655 642.847 78.6102 642.512 79.3158C642.177 80.0214 642.134 80.831 642.392 81.5684Z\",\n    fill: \"white\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path79 || (_path79 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M648.762 83.2597L656.921 104.377L673.24 99.6045L666.435 76.4438L648.762 83.2597Z\",\n    fill: \"#A0C6F4\"\n  })), _path80 || (_path80 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M659.897 112.466L667.12 135.024L682.168 130.368L675.079 107.392L659.897 112.466Z\",\n    fill: \"#F9865F\"\n  })), _path81 || (_path81 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M669.16 143.196L677.319 164.297L690.946 159.775L684.526 137.804L669.16 143.196Z\",\n    fill: \"#FAD8B0\"\n  })), _path82 || (_path82 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M405.472 198.477H246.718C241.657 198.477 237.555 202.586 237.555 207.654V229.174C237.555 234.242 241.657 238.351 246.718 238.351H405.472C410.532 238.351 414.635 234.242 414.635 229.174V207.654C414.635 202.586 410.532 198.477 405.472 198.477Z\",\n    fill: \"#7595EC\"\n  })), _path83 || (_path83 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M345.983 210.216H259.441C257.77 210.216 256.415 211.573 256.415 213.247C256.415 214.922 257.77 216.279 259.441 216.279H345.983C347.654 216.279 349.009 214.922 349.009 213.247C349.009 211.573 347.654 210.216 345.983 210.216Z\",\n    fill: \"white\"\n  })), _path84 || (_path84 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M257.284 224.149H404.402\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path85 || (_path85 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M182.008 123.451L184.511 126.196C185.02 126.753 185.286 127.49 185.252 128.245C185.218 128.999 184.886 129.709 184.33 130.218L180.231 133.968C179.675 134.477 178.939 134.744 178.186 134.71C177.433 134.676 176.724 134.343 176.215 133.786L173.712 131.041L182.008 123.451Z\",\n    fill: \"#91BA83\"\n  })), _path86 || (_path86 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M159.465 118.115L171.272 131.061C171.882 131.73 172.918 131.777 173.587 131.166L181.746 123.7C182.415 123.089 182.462 122.051 181.851 121.382L170.045 108.436C169.435 107.767 168.398 107.72 167.73 108.331L159.57 115.797C158.902 116.408 158.855 117.446 159.465 118.115Z\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path87 || (_path87 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M147.134 176.941H132.304V190.505H147.134V176.941Z\",\n    fill: \"#FF6D66\"\n  })), _path88 || (_path88 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M132.304 168.215V176.94H123.442\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path89 || (_path89 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M635.771 23.7589H620.94V37.3237H635.771V23.7589Z\",\n    fill: \"#FAD8B0\"\n  })), _path90 || (_path90 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M620.94 15.0339V23.759H612.079\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path91 || (_path91 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M219.531 107.609C65.7089 43.7709 -52.6006 166.725 237.237 354.991C260.06 369.829 295.071 375.087 295.071 375.087\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path92 || (_path92 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M78.0982 116.284C80.5176 116.284 82.4788 114.32 82.4788 111.897C82.4788 109.474 80.5176 107.509 78.0982 107.509C75.6789 107.509 73.7177 109.474 73.7177 111.897C73.7177 114.32 75.6789 116.284 78.0982 116.284Z\",\n    fill: \"white\"\n  })), _path93 || (_path93 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M50.2096 87.7981L55.0082 83.176L66.0265 89.5063L71.5775 106.638L54.6403 99.5375L50.2096 87.7981Z\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path94 || (_path94 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55.0082 83.176L50.2096 87.798L47.5177 84.5324L52.1156 80.1113L55.0082 83.176Z\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path95 || (_path95 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M71.5776 106.638L60.5592 94.5303\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path96 || (_path96 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M98.1954 414.074L110.133 475.768C110.197 476.089 110.324 476.394 110.505 476.665C110.687 476.936 110.921 477.169 111.193 477.349C111.465 477.53 111.77 477.655 112.09 477.717C112.41 477.779 112.74 477.777 113.059 477.711L125.465 475.065C126.087 474.932 126.632 474.562 126.988 474.035C127.343 473.507 127.481 472.862 127.371 472.235L116.771 410.155C116.714 409.827 116.59 409.514 116.408 409.235C116.227 408.956 115.99 408.717 115.714 408.532C115.437 408.348 115.126 408.221 114.799 408.16C114.472 408.1 114.136 408.106 113.812 408.179L100.118 411.227C99.8051 411.287 99.507 411.408 99.2409 411.584C98.9748 411.76 98.7459 411.986 98.5674 412.251C98.3888 412.515 98.264 412.812 98.2002 413.125C98.1364 413.438 98.1347 413.76 98.1954 414.074Z\",\n    fill: \"white\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path97 || (_path97 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M102.125 415.246L105.535 429.631L116.504 428.007L114.163 412.416L102.125 415.246Z\",\n    fill: \"#FF6D66\"\n  })), _path98 || (_path98 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M106.739 435.141L109.414 450.364L119.563 448.706L117.005 433.198L106.739 435.141Z\",\n    fill: \"#FAD8B0\"\n  })), _path99 || (_path99 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M110.016 455.84L113.41 470.225L122.623 468.501L120.433 453.73L110.016 455.84Z\",\n    fill: \"#A0C6F4\"\n  })), _path100 || (_path100 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M440.467 568.662L490.961 555.131L492.9 560.607L441.821 573.887L440.467 568.662Z\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path101 || (_path101 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M433.444 561.595L434.916 566.184\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path102 || (_path102 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M432.023 564.592L436.287 563.119\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path103 || (_path103 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M431.003 579.129L433.745 587.804\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path104 || (_path104 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M428.663 584.622L436.253 582.21\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path105 || (_path105 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M419.45 564.827L423.045 576.315\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path106 || (_path106 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M415.889 571.978L426.522 568.578\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path107 || (_path107 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M72.1794 19.1032L40.2278 4.65078L41.5487 1L73.7009 15.8208L72.1794 19.1032Z\",\n    stroke: \"white\",\n    strokeWidth: 0.67,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path108 || (_path108 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M72.8315 25.7684L74.0186 22.754\",\n    stroke: \"white\",\n    strokeWidth: 0.67,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path109 || (_path109 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M74.8378 24.8139L71.9955 23.7589\",\n    stroke: \"white\",\n    strokeWidth: 0.67,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path110 || (_path110 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M81.5258 17.6964L83.7829 12.0361\",\n    stroke: \"white\",\n    strokeWidth: 0.67,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path111 || (_path111 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M85.0704 15.8377L80.1213 13.8616\",\n    stroke: \"white\",\n    strokeWidth: 0.67,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path112 || (_path112 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M81.4589 30.0389L84.4685 22.5532\",\n    stroke: \"white\",\n    strokeWidth: 0.67,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path113 || (_path113 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M86.3411 27.8449L79.3856 25.0817\",\n    stroke: \"white\",\n    strokeWidth: 0.67,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path114 || (_path114 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M191.643 289.478C169.104 273.234 146.967 247.98 156.681 222.039C156.681 222.039 172.214 211.673 196.809 224.635L221.421 237.664L191.643 289.478Z\",\n    fill: \"url(#paint0_linear_16_174)\"\n  })), _path115 || (_path115 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M181.427 397.712C171.278 392.906 128.007 370.331 120.299 331.764C113.611 298.471 139.092 253.54 151.833 233.678C151.013 260.021 177.431 282.328 190.171 291.505C201.012 299.489 212.974 305.821 225.667 310.295L181.427 397.712Z\",\n    fill: \"white\"\n  })), _path116 || (_path116 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M149.893 241.516C152.652 259.033 165.994 277.17 188.7 293.548C198.945 301.121 210.202 307.215 222.139 311.651L180.34 394.38C167.566 388.016 129.829 366.48 122.79 331.278C116.955 302.022 136.751 263.22 149.927 241.516H149.893ZM156.715 222.04C156.715 222.04 108.813 286.883 117.875 332.266C126.937 377.65 182.614 400.928 182.614 400.928L229.212 308.821C214.649 303.479 205.186 299.125 191.676 289.378C169.138 273.134 147.001 247.88 156.715 221.939V222.04Z\",\n    fill: \"url(#paint1_linear_16_174)\"\n  })), _path117 || (_path117 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M144.091 259.719C145.496 268.154 148.824 276.151 153.818 283.087C158.811 290.024 165.336 295.712 172.883 299.71\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path118 || (_path118 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M186.794 309.022L212.793 322.972\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path119 || (_path119 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M147.803 296.93C147.803 296.93 156.163 315.536 183.082 327.627\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path120 || (_path120 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M126.435 299.711C126.435 299.711 127.372 319.254 140.363 325.769\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path121 || (_path121 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M156.163 231.82C156.163 231.82 153.755 256.94 191.642 289.479\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path122 || (_path122 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M170.091 236.475C170.091 236.475 182.162 235.537 199.802 248.566\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path123 || (_path123 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M113.243 316.558C112.474 329.001 114.029 374.099 179.236 402.87\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path124 || (_path124 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M529.684 291.471L502.029 346.987C502.029 346.987 520.789 353.903 506.125 375.456C506.125 375.456 540.802 389.858 563.491 352.463C586.18 315.067 529.684 291.471 529.684 291.471Z\",\n    fill: \"url(#paint2_linear_16_174)\"\n  })), _path125 || (_path125 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M466.382 461.148C452.388 461.148 437.624 455.421 422.459 444.117L474.191 358.24L504.972 377.649L505.172 377.733C510.552 379.711 516.245 380.698 521.976 380.647C531.697 380.707 541.191 377.701 549.112 372.056L511.292 436.949C511.208 437.067 494.923 461.199 466.382 461.199V461.148Z\",\n    fill: \"white\"\n  })), _path126 || (_path126 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M475.027 361.757L503.45 379.693L503.818 379.927L504.203 380.078C509.89 382.184 515.912 383.239 521.976 383.193C528.943 383.219 535.838 381.77 542.207 378.939L509.202 435.493C508.132 437.067 492.816 458.637 466.399 458.637C453.508 458.637 439.865 453.529 425.787 443.447L475.027 361.757ZM563.491 352.446C550.667 373.58 534.031 378.169 521.976 378.169C516.572 378.214 511.204 377.289 506.125 375.439L473.371 354.79L419.216 444.754C437.307 458.72 453.14 463.744 466.399 463.744C496.679 463.744 513.465 438.256 513.465 438.256L563.491 352.53V352.446Z\",\n    fill: \"url(#paint3_linear_16_174)\"\n  })), _path127 || (_path127 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M502.029 346.986C502.029 346.986 522.661 354.288 506.125 375.456\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path128 || (_path128 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M472.719 352.848C472.719 352.848 500.825 378.637 516.375 378.453C531.924 378.269 550.182 374.585 560.933 355.996\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path129 || (_path129 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M476.18 386.207C476.18 386.207 495.458 403.355 517.027 397.846\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path130 || (_path130 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M496.428 411.83C496.428 411.83 506.543 419.416 520.688 412.231\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path131 || (_path131 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M449.88 422.414C449.88 422.414 473.288 445.675 509.988 430.335\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path132 || (_path132 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M462.587 399.722C462.587 399.722 472.117 406.554 478.086 408.732\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path133 || (_path133 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M534.432 307.581C534.432 307.581 555.75 314.565 558.308 342.749\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path134 || (_path134 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M545.149 342.398C545.149 342.398 554.964 357.62 538.378 372.826\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path135 || (_path135 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M421.122 440.567C421.122 440.567 474.625 507.687 513.499 429.196\",\n    stroke: \"white\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path136 || (_path136 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.7438 274.138H47.2168\",\n    stroke: \"#FF6D66\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path137 || (_path137 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M729.87 123.803H742.343\",\n    stroke: \"#FF6D66\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path138 || (_path138 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M395.223 38.0605H407.713\",\n    stroke: \"#FAD8B0\",\n    strokeMiterlimit: 10\n  })), _path139 || (_path139 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M753.696 188.63L765.968 190.84\",\n    stroke: \"#FAD8B0\",\n    strokeMiterlimit: 10\n  })), _path140 || (_path140 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M263.504 500.503H275.994\",\n    stroke: \"#A0C6F4\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path141 || (_path141 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M780.581 348.829C782.862 348.829 784.711 346.977 784.711 344.692C784.711 342.408 782.862 340.556 780.581 340.556C778.3 340.556 776.451 342.408 776.451 344.692C776.451 346.977 778.3 348.829 780.581 348.829Z\",\n    fill: \"#91BA83\"\n  })), _path142 || (_path142 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.12979 150.18C6.41061 150.18 8.25959 148.328 8.25959 146.043C8.25959 143.759 6.41061 141.907 4.12979 141.907C1.84897 141.907 0 143.759 0 146.043C0 148.328 1.84897 150.18 4.12979 150.18Z\",\n    fill: \"#91BA83\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_16_174\",\n    x1: 150.244,\n    y1: 250.024,\n    x2: 229.354,\n    y2: 250.297,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#AA367C\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#4A2FBD\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint1_linear_16_174\",\n    x1: 109.878,\n    y1: 301.97,\n    x2: 242.514,\n    y2: 302.276,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#AA367C\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#4A2FBD\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint2_linear_16_174\",\n    x1: 497.955,\n    y1: 330.243,\n    x2: 576.769,\n    y2: 330.466,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#AA367C\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#4A2FBD\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint3_linear_16_174\",\n    x1: 410.422,\n    y1: 402.211,\n    x2: 580.551,\n    y2: 403.021,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#AA367C\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#4A2FBD\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgContactImg);\nexport default __webpack_public_path__ + \"static/media/contact-img.87eac2b29352fa01abb2f9510ef6ac7e.svg\";\nexport { ForwardRef as ReactComponent };","import { useState } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport contactImg from \"../assets/img/contact-img.svg\";\r\nimport 'animate.css';\r\nimport TrackVisibility from 'react-on-screen';\r\n\r\nexport const Contact = () => {\r\n  const formInitialDetails = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n    message: ''\r\n  }\r\n  const [formDetails, setFormDetails] = useState(formInitialDetails);\r\n  const [buttonText, setButtonText] = useState('Send');\r\n  const [status, setStatus] = useState({});\r\n\r\n  const onFormUpdate = (category, value) => {\r\n      setFormDetails({\r\n        ...formDetails,\r\n        [category]: value\r\n      })\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setButtonText(\"Sending...\");\r\n    let response = await fetch(\"https://portfolio-backend-nine-pi.vercel.app/contact\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify(formDetails),\r\n    });\r\n    setButtonText(\"Send\");\r\n    let result = await response.json();\r\n    setFormDetails(formInitialDetails);\r\n    if (result.code == 200) {\r\n      setStatus({ succes: true, message: 'Message sent successfully'});\r\n    } else {\r\n      setStatus({ succes: false, message: 'Something went wrong, please try again later.'});\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"contact\" id=\"connect\">\r\n      <Container>\r\n        <Row className=\"align-items-center\">\r\n          <Col size={12} md={6}>\r\n            <TrackVisibility>\r\n              {({ isVisible }) =>\r\n                <img className={isVisible ? \"animate__animated animate__zoomIn\" : \"\"} src={contactImg} alt=\"Contact Us\"/>\r\n              }\r\n            </TrackVisibility>\r\n          </Col>\r\n          <Col size={12} md={6}>\r\n            <TrackVisibility>\r\n              {({ isVisible }) =>\r\n                <div className={isVisible ? \"animate__animated animate__fadeIn\" : \"\"}>\r\n                <h2>Get In Touch</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                  <Row>\r\n                    <Col size={12} sm={6} className=\"px-1\">\r\n                      <input type=\"text\" value={formDetails.firstName} placeholder=\"First Name\" onChange={(e) => onFormUpdate('firstName', e.target.value)} />\r\n                    </Col>\r\n                    <Col size={12} sm={6} className=\"px-1\">\r\n                      <input type=\"text\" value={formDetails.lasttName} placeholder=\"Last Name\" onChange={(e) => onFormUpdate('lastName', e.target.value)}/>\r\n                    </Col>\r\n                    <Col size={12} sm={6} className=\"px-1\">\r\n                      <input type=\"email\" value={formDetails.email} placeholder=\"Email Address\" onChange={(e) => onFormUpdate('email', e.target.value)} />\r\n                    </Col>\r\n                    <Col size={12} sm={6} className=\"px-1\">\r\n                      <input type=\"tel\" value={formDetails.phone} placeholder=\"Phone No.\" onChange={(e) => onFormUpdate('phone', e.target.value)}/>\r\n                    </Col>\r\n                    <Col size={12} className=\"px-1\">\r\n                      <textarea rows=\"6\" value={formDetails.message} placeholder=\"Message\" onChange={(e) => onFormUpdate('message', e.target.value)}></textarea>\r\n                      <button type=\"submit\"><span>{buttonText}</span></button>\r\n                    </Col>\r\n                    {\r\n                      status.message &&\r\n                      <Col>\r\n                        <p className={status.success === false ? \"danger\" : \"success\"}>{status.message}</p>\r\n                      </Col>\r\n                    }\r\n                  </Row>\r\n                </form>\r\n              </div>}\r\n            </TrackVisibility>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </section>\r\n  )\r\n}","import React from \"react\";\n\n// a basic form\nvar SimpleForm = function SimpleForm(_ref) {\n  var status = _ref.status,\n      message = _ref.message,\n      className = _ref.className,\n      style = _ref.style,\n      onSubmitted = _ref.onSubmitted;\n\n  var input = void 0;\n  var submit = function submit() {\n    return input && input.value.indexOf(\"@\") > -1 && onSubmitted({\n      EMAIL: input.value\n    });\n  };\n\n  return React.createElement(\n    \"div\",\n    { className: className, style: style },\n    status === \"sending\" && React.createElement(\n      \"div\",\n      { style: { color: \"blue\" } },\n      \"sending...\"\n    ),\n    status === \"error\" && React.createElement(\"div\", {\n      style: { color: \"red\" },\n      dangerouslySetInnerHTML: { __html: message }\n    }),\n    status === \"success\" && React.createElement(\"div\", {\n      style: { color: \"green\" },\n      dangerouslySetInnerHTML: { __html: message }\n    }),\n    React.createElement(\"input\", {\n      ref: function ref(node) {\n        return input = node;\n      },\n      type: \"email\",\n      placeholder: \"Your email\"\n    }),\n    React.createElement(\n      \"button\",\n      { onClick: submit },\n      \"Submit\"\n    )\n  );\n};\n\nexport default SimpleForm;","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport jsonp from \"jsonp\";\nimport toQueryString from \"to-querystring\";\nimport SimpleForm from \"./SimpleForm\";\n\nvar getAjaxUrl = function getAjaxUrl(url) {\n  return url.replace(\"/post?\", \"/post-json?\");\n};\n\nvar MailchimpSubscribe = function (_React$Component) {\n  _inherits(MailchimpSubscribe, _React$Component);\n\n  function MailchimpSubscribe() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, MailchimpSubscribe);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      status: null,\n      message: null\n    }, _this.subscribe = function (data) {\n      var params = toQueryString(data);\n      var url = getAjaxUrl(_this.props.url) + \"&\" + params;\n      _this.setState({\n        status: \"sending\",\n        message: null\n      }, function () {\n        return jsonp(url, {\n          param: \"c\"\n        }, function (err, data) {\n          if (err) {\n            _this.setState({\n              status: \"error\",\n              message: err\n            });\n          } else if (data.result !== \"success\") {\n            _this.setState({\n              status: \"error\",\n              message: data.msg\n            });\n          } else {\n            _this.setState({\n              status: \"success\",\n              message: data.msg\n            });\n          }\n        });\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  MailchimpSubscribe.prototype.render = function render() {\n    return this.props.render({\n      subscribe: this.subscribe,\n      status: this.state.status,\n      message: this.state.message\n    });\n  };\n\n  return MailchimpSubscribe;\n}(React.Component);\n\nMailchimpSubscribe.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  render: PropTypes.func,\n  url: PropTypes.string.isRequired\n} : {};\n\nMailchimpSubscribe.defaultProps = {\n  render: function render(_ref) {\n    var subscribe = _ref.subscribe,\n        status = _ref.status,\n        message = _ref.message;\n    return React.createElement(SimpleForm, {\n      status: status,\n      message: message,\n      onSubmitted: function onSubmitted(formData) {\n        return subscribe(formData);\n      }\n    });\n  }\n};\n\nexport default MailchimpSubscribe;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'alert-heading');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nAlertHeading.displayName = 'AlertHeading';\nexport default AlertHeading;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AlertLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = Anchor,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'alert-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nAlertLink.displayName = 'AlertLink';\nexport default AlertLink;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AlertHeading from './AlertHeading';\nimport AlertLink from './AlertLink';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    bsPrefix,\n    show = true,\n    closeLabel = 'Close alert',\n    closeVariant,\n    className,\n    children,\n    variant = 'primary',\n    onClose,\n    dismissible,\n    transition = Fade,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n  const alert = /*#__PURE__*/_jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && `${prefix}-${variant}`, dismissible && `${prefix}-dismissible`),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, {\n    unmountOnExit: true,\n    ...props,\n    ref: undefined,\n    in: show,\n    children: alert\n  });\n});\nAlert.displayName = 'Alert';\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});","import { useState, useEffect } from \"react\";\r\nimport { Col, Row, Alert } from \"react-bootstrap\";\r\n\r\nexport const Newsletter = ({ status, message, onValidated }) => {\r\n  const [email, setEmail] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (status === 'success') clearFields();\r\n  }, [status])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    email &&\r\n    email.indexOf(\"@\") > -1 &&\r\n    onValidated({\r\n      EMAIL: email\r\n    })\r\n  }\r\n\r\n  const clearFields = () => {\r\n    setEmail('');\r\n  }\r\n\r\n  return (\r\n      <Col lg={12}>\r\n        <div className=\"newsletter-bx wow slideInUp\">\r\n          <Row>\r\n            <Col lg={12} md={6} xl={5}>\r\n              <h3>Subscribe to our Newsletter<br></br> & Never miss latest updates</h3>\r\n              {status === 'sending' && <Alert>Sending...</Alert>}\r\n              {status === 'error' && <Alert variant=\"danger\">{message}</Alert>}\r\n              {status === 'success' && <Alert variant=\"success\">{message}</Alert>}\r\n            </Col>\r\n            <Col md={6} xl={7}>\r\n              <form onSubmit={handleSubmit}>\r\n                <div className=\"new-email-bx\">\r\n                  <input value={email} type=\"email\" onChange={(e) => setEmail(e.target.value)} placeholder=\"Email Address\" />\r\n                  <button type=\"submit\">Submit</button>\r\n                </div>\r\n              </form>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Col>\r\n  )\r\n}","import MailchimpSubscribe from \"react-mailchimp-subscribe\";\r\nimport { Newsletter } from \"./Newsletter\";\r\n\r\nexport const MailchimpForm = () => {\r\n  const postUrl = `${process.env.REACT_APP_MAILCHIMP_URL}?u=${process.env.REACT_APP_MAILCHIMP_U}&id=${process.env.REACT_APP_MAILCHIMP_ID}`;\r\n\r\n  return (\r\n    <>\r\n      <MailchimpSubscribe\r\n        url={postUrl}\r\n        render={({ subscribe, status, message }) => (\r\n          <Newsletter\r\n            status={status}\r\n            message={message}\r\n            onValidated={formData => subscribe(formData)}\r\n            />\r\n        )}\r\n        />\r\n    </>\r\n  )\r\n}","import { Container, Row, Col } from \"react-bootstrap\";\r\nimport { MailchimpForm } from \"./MailchimpForm\";\r\nimport logo from \"../assets/img/logo.svg\";\r\nimport navIcon1 from \"../assets/img/nav-icon1.svg\";\r\nimport navIcon2 from \"../assets/img/nav-icon2.svg\";\r\nimport navIcon3 from \"../assets/img/nav-icon3.svg\";\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <Container>\r\n        <Row className=\"align-items-center\">\r\n          <MailchimpForm />\r\n          <Col size={12} sm={6}>\r\n            <img src={logo} alt=\"Logo\" />\r\n          </Col>\r\n          <Col size={12} sm={6} className=\"text-center text-sm-end\">\r\n            <div className=\"social-icon\">\r\n              <a href=\"#\"><img src={navIcon1} alt=\"Icon\" /></a>\r\n              <a href=\"#\"><img src={navIcon2} alt=\"Icon\" /></a>\r\n              <a href=\"#\"><img src={navIcon3} alt=\"Icon\" /></a>\r\n            </div>\r\n            <p>Copyright 2024. All Rights Reserved</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { NavBar } from \"./Components/NavBar\";\nimport { Banner } from \"./Components/Banner\";\nimport { Skills } from \"./Components/Skills\";\nimport { Projects } from \"./Components/Projects\";\nimport { Contact } from \"./Components/Contact\";\nimport { Footer } from \"./Components/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Banner />\n      <Skills />\n      <Projects />\n      <Contact />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"names":["module","exports","condition","format","a","b","c","d","e","f","error","undefined","Error","args","argIndex","replace","name","framesToPop","debug","require","url","opts","fn","script","timer","prefix","id","count","param","timeout","enc","encodeURIComponent","target","document","getElementsByTagName","head","setTimeout","cleanup","parentNode","removeChild","window","noop","clearTimeout","data","indexOf","createElement","src","insertBefore","load","r","storage","process","DEBUG","log","console","Function","prototype","apply","call","arguments","formatArgs","useColors","this","namespace","humanize","diff","color","splice","index","lastC","match","save","namespaces","removeItem","type","documentElement","style","WebkitAppearance","firebug","exception","table","navigator","userAgent","toLowerCase","parseInt","RegExp","$1","chrome","local","localStorage","localstorage","colors","formatters","j","v","JSON","stringify","err","message","enable","prevTime","createDebug","enabled","self","curr","Date","ms","prev","Array","length","i","coerce","unshift","formatter","val","bind","hash","charCodeAt","Math","abs","selectColor","init","stack","disable","names","skips","split","len","push","substr","test","s","m","h","y","plural","n","floor","ceil","options","str","String","exec","parseFloat","parse","isNaN","long","round","fmtShort","FUNC_ERROR_TEXT","NAN","symbolTag","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","freeGlobal","global","Object","freeSelf","root","objectToString","toString","nativeMax","max","nativeMin","min","now","debounce","func","wait","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","thisArg","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","remainingWait","debounced","isInvoking","leadingEdge","toNumber","isObject","cancel","flush","value","isObjectLike","isSymbol","other","valueOf","isBinary","slice","defineProperty","_len","validators","_key","_createChainableTypeChecker2","default","_len2","_key2","forEach","validator","obj","_createChainableTypeChecker","__esModule","validate","checkType","isRequired","props","propName","componentName","location","propFullName","componentNameSafe","propFullNameSafe","concat","chainedCheckType","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","secret","getShim","ReactPropTypes","array","bigint","bool","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","aa","ca","p","da","Set","ea","fa","ha","add","ia","ja","hasOwnProperty","ka","la","ma","g","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","z","ra","sa","toUpperCase","ta","pa","qa","oa","removeAttribute","setAttribute","setAttributeNS","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","Symbol","for","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","iterator","Ka","La","A","assign","Ma","trim","Na","Oa","prepareStackTrace","set","Reflect","construct","l","k","displayName","includes","Pa","tag","render","Qa","$$typeof","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","constructor","get","configurable","enumerable","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","isArray","fb","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","children","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","firstChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","setProperty","keys","charAt","substring","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","source","track","wbr","ub","vb","is","wb","xb","srcElement","correspondingUseElement","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","addEventListener","removeEventListener","Nb","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","current","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","B","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","clz32","pc","qc","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","shift","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","key","fromCharCode","code","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","date","datetime","email","month","password","range","search","tel","text","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","offset","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","href","Ne","contentEditable","Oe","focusedElem","selectionRange","start","end","selectionStart","selectionEnd","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","nf","Ub","instance","listener","D","of","has","pf","qf","rf","random","sf","capture","passive","t","J","x","u","w","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","Gf","Hf","Promise","Jf","queueMicrotask","resolve","then","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","ref","_owner","_stringRef","refs","Mg","join","Ng","Og","Pg","Qg","Rg","implementation","Sg","Tg","q","next","done","Ug","Vg","Wg","Xg","Yg","Zg","$g","ah","_currentValue","bh","childLanes","ch","dependencies","firstContext","lanes","dh","eh","context","memoizedValue","fh","gh","hh","interleaved","ih","jh","kh","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","lh","mh","eventTime","lane","payload","callback","nh","K","oh","ph","qh","rh","sh","th","uh","vh","wh","xh","yh","tagName","zh","Ah","Bh","L","Ch","revealOrder","Dh","Eh","_workInProgressVersionPrimary","Fh","ReactCurrentDispatcher","Gh","Hh","M","N","O","Ih","Jh","Kh","Lh","P","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","baseQueue","queue","Uh","Vh","Wh","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","Xh","Yh","Zh","$h","ai","getSnapshot","bi","ci","Q","di","lastEffect","stores","ei","fi","gi","hi","ii","create","destroy","deps","ji","ki","li","mi","ni","oi","pi","qi","ri","si","ti","ui","vi","wi","xi","yi","zi","Ai","R","Bi","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ci","defaultProps","Di","Ei","isMounted","_reactInternals","enqueueSetState","enqueueReplaceState","enqueueForceUpdate","Fi","shouldComponentUpdate","isPureReactComponent","Gi","contextType","state","updater","Hi","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Ii","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Ji","digest","Ki","Li","Mi","WeakMap","Ni","Oi","Pi","Qi","getDerivedStateFromError","componentDidCatch","Ri","componentStack","Si","pingCache","Ti","Ui","Vi","Wi","ReactCurrentOwner","Xi","Yi","Zi","$i","aj","compare","bj","cj","dj","baseLanes","cachePool","transitions","ej","fj","gj","hj","ij","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","jj","kj","pendingContext","lj","zj","Aj","Bj","Cj","mj","nj","oj","fallback","pj","qj","sj","dataset","dgst","tj","uj","_reactRetry","rj","subtreeFlags","vj","wj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","xj","Dj","S","Ej","Fj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","size","createElementNS","autoFocus","createTextNode","T","Gj","Hj","Ij","Jj","U","Kj","WeakSet","V","Lj","W","Mj","Nj","Pj","Qj","Rj","Sj","Tj","Uj","Vj","_reactRootContainer","Wj","X","Xj","Yj","Zj","onCommitFiberUnmount","componentWillUnmount","ak","bk","ck","dk","ek","isHidden","fk","gk","display","hk","ik","jk","kk","__reactInternalSnapshotBeforeUpdate","Vk","lk","mk","nk","ok","Y","Z","pk","qk","rk","sk","tk","Infinity","uk","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Ek","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","finishedWork","finishedLanes","Pk","timeoutHandle","Qk","Rk","Sk","Tk","Uk","mutableReadLanes","Bc","Oj","onCommitFiberRoot","mc","onRecoverableError","Wk","onPostCommitFiberRoot","Xk","Yk","$k","isReactComponent","pendingChildren","al","mutableSourceEagerHydrationData","bl","cache","pendingSuspenseBoundaries","dl","el","fl","gl","hl","il","yj","Zk","kl","reportError","ll","_internalRoot","ml","nl","ol","pl","rl","ql","unmount","unstable_scheduleHydration","querySelectorAll","form","sl","usingClientEntryPoint","Events","tl","findFiberByHostInstance","bundleType","version","rendererPackageName","ul","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","vl","isDisabled","supportsFiber","inject","createPortal","cl","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","React","LeftArrow","_a","customLeftArrow","getState","previous","rtl","cloneElement","carouselState","rtlClassName","className","RightArrow","customRightArrow","__extends","extendStatics","setPrototypeOf","__proto__","__","utils_1","types_1","Dots_1","Arrows_1","CarouselItems_1","common_1","defaultTransitionDuration","defaultTransition","Carousel","_super","_this","containerRef","createRef","listRef","itemWidth","slidesToShow","currentSlide","totalItems","Children","deviceType","domLoaded","transform","containerWidth","onResize","handleDown","handleMove","handleOut","onKeyUp","handleEnter","setIsInThrottle","throttle","transitionDuration","goToSlide","onMove","initialX","lastX","isAnimationAllowed","direction","initialY","isInThrottle","transformPlaceHolder","resetTotalItems","notEnoughChildren","setState","setContainerAndItemWidth","setTransformDirectly","position","withAnimation","additionalTransfrom","currentTransform","getTransform","setAnimationDirectly","animationAllowed","customTransition","setItemsToShow","keyBoardControl","autoPlay","setInterval","autoPlaySpeed","setClones","forResizing","resetCurrentSlide","childrenArr","toArray","initialSlide","getInitialSlideInInfiniteMode","clones","getClones","correctItemsPosition","shouldCorrectItemPosition","responsive","item","breakpoint","items","widths","innerWidth","screen","screenWidth","offsetWidth","itemWidth_1","getItemClientSideWidth","infinite","setToDomDirectly","nextTransform","_b","itemsToShowTimeout","clearInterval","clonesTimeout","correctClonesPosition","rewind","isInRightEnd","rewindBuffer","isInThrottleTimeout","resetAutoplayInterval","rewindWithAnimation","checkClonesPosition","isReachingTheEnd","isReachingTheStart","nextSlide","nextPosition","transformTimeout","slidesHavePassed","afterChange","beforeChange","populateNextSlides","nextSlides","previousSlide","shouldResetAutoplay","afterChangeTimeout","populatePreviousSlides","afterChangeTimeout2","afterChangeTimeout3","resetMoveStatus","getCords","parsePosition","isMouseMoveEvent","swipeable","draggable","diffX","diffY","populateSlidesOnMouseTouchMove","canContinue","shouldDisableOnMobile","shouldDisableOnDesktop","minimumTouchDrag","isInViewport","getBoundingClientRect","_c","_d","bottom","_e","right","innerHeight","clientHeight","clientWidth","isChildOfCarousel","Element","HTMLInputElement","pauseOnHover","slide","skipCallbacks","skipBeforeChange","skipAfterChange","renderLeftArrow","disbaled","renderRightArrow","renderButtonGroups","customButtonGroup","slideIndex","renderDotsList","renderCarouselItems","arrows","renderArrowsWhenDisabled","removeArrowOnDeviceType","containerClass","sliderClass","renderDotsOutside","renderButtonGroupOutside","getInitialState","shouldRenderOnSSR","shouldRenderAtAll","isLeftEndReach","isInLeftEnd","isRightEndReach","shouldShowArrows","disableLeftArrow","disableRightArrow","Fragment","dir","onMouseMove","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","slidesToSlide","itemClass","showDots","dotListClass","focusOnSelect","centerMode","Component","itemAriaLabel","partialVisbile","partialVisible","flexBisis","domFullyLoaded","partialVisibilityGutter","warn","map","getIfSlideIsVisbile","ariaLabel","clones_1","dots_1","customDot","numberOfDotsToShow","getSlidesToSlide","nextSlidesTable","getLookupTableForNextSlides","lookupTable","getOriginalIndexLookupTableByClones","currentSlides","fill","_","isActive","cloneIndex","maximumNextSlide","possibileNextSlides","active","Carousel_1","getOriginalCounterPart","firstBeginningOfClones","firstEndOfClones","firstCount","secondBeginningOfClones","secondEndOfClones","secondCount","originalEnd","originalCounter","totalSlides","originalFirstSlide","elementWidth_1","getTransformForCenterMode","getTransformForPartialVsibile","shouldRemoveRightGutter","baseTransform","ssr","Boolean","getWidthFromDeviceType","getPartialVisibilityGutter","slidesToScroll","device","serverSideDeviceType","clientSideDeviceType","gutter","paritialVisibilityGutter","toFixed","throttle_1","throwError_1","throwError","next_1","previous_1","mouseOrTouchMove_1","slidesHavePassedRight","slidesHavePassedLeft","isMovingLeft","translateXLimit","nextTranslate","isLastSlide","nextMaximumSlides","common_2","additionalSlides","limit","inThrottle","_react","newObj","desc","_interopRequireWildcard","_propTypes","_interopRequireDefault","_lodash","_shallowequal","_extends","TrackVisibility","_PureComponent","subClass","superClass","isVisible","_ref","windowWidth","windowHeight","_this$props","partialVisibility","topThreshold","leftThreshold","widthCheck","heightCheck","isComponentVisible","nodeRef","html","once","boundingClientRect","removeListener","setNodeRef","ownProps","propTypes","throttleCb","throttleInterval","_proto","attachListener","prevProps","getChildProps","_this2","childProps","getChildren","_this3","_this$props2","Tag","PureComponent","component","currentProp","Number","isInteger","_default","__self","__source","jsx","jsxs","forceUpdate","escape","_status","_result","only","Profiler","StrictMode","Suspense","act","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","pop","sortIndex","performance","setImmediate","startTime","expirationTime","priorityLevel","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","objA","objB","compareContext","ret","keysA","keysB","bHasOwnProperty","idx","valueA","valueB","o","toStringTag","arrayPrefix","filter","hasOwn","classNames","classes","arg","appendClass","parseValue","newClass","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","leafPrototypes","getProto","getPrototypeOf","ns","def","getOwnPropertyNames","definition","chunkId","all","reduce","promises","miniCssF","globalThis","prop","inProgress","dataWebpackPrefix","needAttach","scripts","getAttribute","charset","nc","onScriptComplete","onerror","onload","doneFns","installedChunks","installedChunkData","promise","reject","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","makeEventKey","eventKey","defaultKey","_toPropertyKey","hint","prim","toPrimitive","res","_toPrimitive","useUncontrolled","config","fieldName","_extends2","Utils","propsValue","rest","_objectWithoutPropertiesLoose","handlerName","_useUncontrolledProp","propValue","handler","wasPropRef","_useState","stateValue","isProp","wasProp","useUncontrolledProp","nextProps","prevState","nextState","__reactInternalSnapshotFlag","__reactInternalSnapshot","__suppressDeprecationWarning","DEFAULT_BREAKPOINTS","DEFAULT_MIN_BREAKPOINT","ThemeContext","prefixes","breakpoints","minBreakpoint","useBootstrapPrefix","defaultPrefix","useBootstrapBreakpoints","useBootstrapMinBreakpoint","NavbarBrand","bsPrefix","as","_jsx","getComputedStyle","psuedoElement","doc","ownerWindow","rUpper","msPattern","hyphenateStyleName","hyphenate","supportedTransforms","property","css","transforms","getPropertyValue","isTransform","removeProperty","cssText","_setPrototypeOf","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","status","nextCallback","updateStatus","nextStatus","cancelNextCallback","getTimeouts","exit","mounting","ReactDOM","forceReflow","performEnter","performExit","appearing","_ref2","maybeNode","maybeAppearing","timeouts","enterTimeout","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","onExit","onExiting","onExited","setNextCallback","_this4","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","TransitionGroupContext","optionsSupported","onceSupported","canUseDOM","eventName","wrappedHandler","__once","onceHandler","emulateTransitionEnd","duration","padding","called","handle","createEvent","initEvent","triggerEvent","remove","listen","transitionEnd","mult","parseDuration","removeEmulate","transitionEndListener","funcs","acc","triggerBrowserReflow","offsetHeight","toFnRef","refA","refB","mergeRefs","childRef","mergedRef","useMergedRefs","attachRef","componentOrElement","normalize","handleEntering","handleEntered","handleExit","handleExiting","handleExited","handleAddEndListener","innerProps","MARGINS","getDefaultDimensionValue","dimension","elem","margins","collapseStyles","inProp","getDimensionValue","computedDimension","createChainedFunction","scroll","TransitionWrapper","role","NavbarCollapse","NavbarContext","Collapse","expanded","useEventCallback","useCommittedRef","NavbarToggle","label","onToggle","handleClick","isReactNative","product","matchersByWindow","getMatcher","query","targetWindow","matchers","mql","matchMedia","refCount","media","useMediaQuery","matches","setMatches","handleChange","addListener","breakpointValues","and","getMaxQuery","getNext","breakpointOrMap","breakpointMap","entries","getMinQuery","createBreakpointHook","xs","sm","xl","xxl","useWillUnmount","onUnmount","valueRef","useUpdatedRef","ATTRIBUTE_PREFIX","dataAttr","OPEN_DATA_ATTRIBUTE","handleContainerOverflow","isRTL","modals","getScrollbarWidth","getBodyScrollbarWidth","getElement","setModalAttributes","_modal","removeModalAttributes","setContainerStyle","containerState","paddingProp","container","scrollBarWidth","reset","removeContainerStyle","modal","modalIdx","isTopModal","Context","useWindow","resolveContainerRef","hasEnteredRef","combinedRef","_excluded","useRTGTransitionProps","major","parts","minor","patch","getReactVersion","transitionProps","ImperativeTransition","exited","setExited","onTransition","isInitialRef","handleTransition","useIsomorphicEffect","stale","initial","isStale","onFinish","renderTransition","runTransition","RTGTransition","NoopTransition","manager","useModalManager","provided","modalManager","ModalManager","getManager","dialog","backdrop","setDialogRef","setBackdropRef","Modal","show","keyboard","onBackdropClick","onEscapeKeyDown","backdropTransition","runBackdropTransition","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","onShow","onHide","onResolved","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","mounted","useMounted","prevShow","usePrevious","lastFocusRef","handleShow","removeKeydownListenerRef","handleDocumentKeyDown","removeFocusListenerRef","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","handleHide","_lastFocusRef$current","handleBackdropClick","isEscKey","dialogProps","tabIndex","backdropElement","_Fragment","_jsxs","Manager","fadeStyles","Fade","transitionClasses","isAppearing","OffcanvasBody","transitionStyles","OffcanvasToggling","variant","CloseButton","AbstractModalHeader","closeLabel","closeVariant","closeButton","ModalContext","OffcanvasHeader","DivStyledAsH5","divWithClassName","OffcanvasTitle","qsa","selector","replaceClassName","origClass","classToRemove","Selector","BootstrapModalManager","adjustAndStore","adjust","actual","restore","super","classList","baseVal","hasClass","marginProp","sharedManager","DialogTransition","BackdropTransition","Offcanvas","ariaLabelledby","placement","backdropClassName","propsManager","renderStaticNode","showOffcanvas","setShowOffcanvas","hideResponsiveOffcanvas","useBreakpoint","modalContext","backdropProps","BaseModal","visibility","getSharedManager","Body","Header","Title","NavbarOffcanvas","NavbarText","Navbar","initialBsPrefix","expand","fixed","sticky","onSelect","collapseOnSelect","controlledProps","handleCollapse","expandClass","navbarContext","SelectableContext","Brand","Text","Toggle","Container","fluid","suffix","NavContext","useButtonProps","rel","isTrivialHref","onKeyDown","Button","asProp","buttonProps","useNavItem","parentOnSelect","navContext","tabContext","TabContext","contextControllerId","getControllerId","contextControlledId","getControlledId","activeKey","NavItem","EVENT_KEY_ATTR","Nav","useForceUpdate","needsRefocusRef","listNode","getNextActiveTab","currentListNode","activeChild","querySelector","nextIndex","handleSelect","nextActiveChild","Item","Anchor","handleKeyDown","NavLink","navItemProps","uncontrolledProps","justify","navbar","navbarScroll","navbarBsPrefix","cardHeaderBsPrefix","isNavbar","cardHeaderContext","CardHeaderContext","BaseNav","Link","Action","PopStateEventType","invariant","warning","cond","getHistoryState","usr","createLocation","to","pathname","parsePath","createPath","path","parsedPath","hashIndex","searchIndex","getUrlBasedHistory","getLocation","createHref","validateLocation","v5Compat","globalHistory","history","Pop","getIndex","handlePop","delta","createURL","origin","URL","replaceState","encodeLocation","Push","historyState","pushState","DOMException","Replace","go","ResultType","matchPath","pattern","caseSensitive","matcher","compiledParams","endsWith","params","regexpSource","paramName","isOptional","compilePath","matchedPathname","pathnameBase","captureGroups","splatValue","stripBasename","basename","startsWith","startIndex","nextChar","getInvalidPathError","field","dest","getPathContributingMatches","route","getResolveToMatches","v7_relativeSplatPath","pathMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","toPathname","routePathnameIndex","toSegments","fromPathname","relativePath","segments","segment","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","joinPaths","paths","validMutationMethodsArr","validRequestMethodsArr","DataRouterContext","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","useInRouterContext","useLocation","UNSAFE_invariant","useIsomorphicLayoutEffect","static","useNavigate","router","useDataRouterContext","DataRouterHook","UseNavigateStable","useCurrentRouteId","DataRouterStateHook","activeRef","navigate","fromRouteId","useNavigateStable","dataRouterContext","future","routePathnamesJson","UNSAFE_getResolveToMatches","relative","useNavigateUnstable","useResolvedPath","_temp2","hookName","ctx","useRouteContext","thisRoute","Router","_ref5","basenameProp","locationProp","navigationType","staticProp","navigationContext","locationContext","trailingPathname","__reactRouterVersion","ViewTransitionContext","isTransitioning","startTransitionImpl","BrowserRouter","_ref4","historyRef","createBrowserHistory","setStateImpl","v7_startTransition","newState","isBrowser","ABSOLUTE_URL_REGEX","_ref7","absoluteHref","reloadDocument","preventScrollReset","unstable_viewTransition","UNSAFE_NavigationContext","isExternal","currentUrl","targetUrl","protocol","_temp","joinedPathname","useHref","internalOnClick","replaceProp","isModifiedEvent","shouldProcessLinkClick","useLinkClickHandler","_ref8","ariaCurrentProp","classNameProp","styleProp","_excluded2","routerState","UNSAFE_DataRouterStateContext","vtContext","useViewTransitionState","currentPath","currentLocation","nextPath","nextLocation","nextLocationPathname","navigation","endSlashPosition","isPending","renderProps","ariaCurrent","UNSAFE_DataRouterContext","__assign","hashFragment","observer","asyncTimerId","scrollFunction","disconnect","isInteractiveElement","hasAttribute","getElAndScroll","getElementById","originalTabIndex","preventScroll","blur","genericHashLink","As","linkHash","passDownProps","isExact","filteredProps","getOwnPropertySymbols","propertyIsEnumerable","__rest","elementId","smooth","scrollIntoView","behavior","MutationObserver","observe","attributes","childList","subtree","HashLink","NavBar","activeLink","setActiveLink","scrolled","setScrolled","onScroll","scrollY","onUpdateActiveLink","logo","alt","navIcon1","navIcon2","navIcon3","Row","decoratedBsPrefix","sizePrefix","brkPoint","cols","infix","Col","colProps","spans","span","useCol","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","ArrowRightCircle","title","xmlns","viewBox","fillRule","Banner","loopNum","setLoopNum","isDeleting","setIsDeleting","setText","setDelta","setIndex","toRotate","ticker","tick","fullText","updatedText","prevDelta","prevIndex","dataPeriod","headerImg","Skills","superLargeDesktop","desktop","tablet","mobile","meter1","meter2","meter3","colorSharp","$b5e257d569688ac6$var$defaultContext","$b5e257d569688ac6$var$SSRContext","$670gB$react","$b5e257d569688ac6$var$IsSSRContext","$b5e257d569688ac6$var$canUseDOM","$b5e257d569688ac6$var$componentIds","$b5e257d569688ac6$var$useCounter","$670gB$useContext","$670gB$useRef","_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner","_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","currentOwner","prevComponentValue","$b5e257d569688ac6$export$619500959fc48b26","defaultId","didSSR","$670gB$useState","$b5e257d569688ac6$var$subscribe","$b5e257d569688ac6$var$getSnapshot","$b5e257d569688ac6$var$getServerSnapshot","counter","onStoreChange","_excluded3","useTabPanel","TabPanel","tabPanelProps","hidden","Tabs","userId","generateChildId","generateCustomChildId","propsOnSelect","propsActiveKey","defaultActiveKey","useSSRSafeId","Panel","getTabTransitionComponent","TabContainer","TabContent","TabPane","tabClassName","tabAttrs","Tab","Content","Pane","ProjectCard","description","imgUrl","Projects","projects","projImg1","project","colorSharp2","Contact","formInitialDetails","firstName","lastName","phone","formDetails","setFormDetails","buttonText","setButtonText","setStatus","onFormUpdate","category","handleSubmit","async","response","fetch","method","headers","json","succes","contactImg","onSubmit","placeholder","onChange","lasttName","rows","success","onSubmitted","EMAIL","_possibleConstructorReturn","ReferenceError","MailchimpSubscribe","Constructor","_classCallCheck","subscribe","toQueryString","getAjaxUrl","jsonp","msg","writable","_inherits","SimpleForm","formData","DivStyledAsH4","AlertHeading","AlertLink","Alert","onClose","dismissible","handleClose","alert","Heading","Newsletter","onValidated","setEmail","clearFields","MailchimpForm","postUrl","REACT_APP_MAILCHIMP_URL","REACT_APP_MAILCHIMP_U","REACT_APP_MAILCHIMP_ID","Footer","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","App","reportWebVitals"],"sourceRoot":""}